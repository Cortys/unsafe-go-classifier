{
  "usage" : {
    "file" : "pointer_unsafe.go",
    "label1" : "pointer-arithmetic",
    "label2" : "serialization",
    "line" : "93",
    "module" : "github.com/gogo/protobuf",
    "pkg" : "github.com/gogo/protobuf/proto",
    "project" : "kubernetes/kubernetes",
    "snippet" : "return pointer{p: unsafe.Pointer(uintptr(unsafe.Pointer(i)) + ptrSize)}",
    "version" : "v1.3.1"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 1, 0, 3 ],
      "exit" : false,
      "out-vars" : [ 1, 0, 3 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3, 4 ],
      "in-vars" : [ 0, 3, 1 ],
      "exit" : false,
      "out-vars" : [ 0, 3 ],
      "decl-vars" : [ ],
      "line-start" : 90,
      "ast" : {
        "condition" : {
          "go-type" : 4,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "isptr",
            "variable" : 1
          }
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 94,
      "code" : "if isptr {\n\n\treturn pointer{p: unsafe.Pointer(uintptr(unsafe.Pointer(i)) + ptrSize)}\n}",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 0, 3 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 93,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "declared" : {
            "go-type" : 6,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 6,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "pointer"
            }
          },
          "go-type" : 6,
          "kind" : "literal",
          "type" : "composite",
          "values" : [ {
            "go-type" : -1,
            "key" : {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "p",
                "variable" : 4
              }
            },
            "kind" : "expression",
            "type" : "key-value",
            "value" : {
              "coerced-to" : {
                "go-type" : 8,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 1,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 8,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 8,
              "kind" : "expression",
              "target" : {
                "go-type" : 9,
                "kind" : "expression",
                "left" : {
                  "coerced-to" : {
                    "go-type" : 9,
                    "kind" : "type",
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 9,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "uintptr"
                    }
                  },
                  "go-type" : 9,
                  "kind" : "expression",
                  "target" : {
                    "coerced-to" : {
                      "go-type" : 8,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 1,
                        "value" : "unsafe"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 8,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Pointer"
                      }
                    },
                    "go-type" : 8,
                    "kind" : "expression",
                    "target" : {
                      "go-type" : 2,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "i",
                        "variable" : 0
                      }
                    },
                    "type" : "cast"
                  },
                  "type" : "cast"
                },
                "operator" : "+",
                "right" : {
                  "go-type" : 9,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "ptrSize",
                    "variable" : 3
                  }
                },
                "type" : "binary"
              },
              "type" : "cast"
            }
          } ]
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 93,
      "code" : "return pointer{p: unsafe.Pointer(uintptr(unsafe.Pointer(i)) + ptrSize)}",
      "entry" : false,
      "use-vars" : [ 3, 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 97,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "declared" : {
            "go-type" : 6,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 6,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "pointer"
            }
          },
          "go-type" : 6,
          "kind" : "literal",
          "type" : "composite",
          "values" : [ {
            "go-type" : -1,
            "key" : {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "p",
                "variable" : 4
              }
            },
            "kind" : "expression",
            "type" : "key-value",
            "value" : {
              "go-type" : 8,
              "index" : {
                "go-type" : 13,
                "kind" : "constant",
                "value" : {
                  "type" : "INT",
                  "value" : "1"
                }
              },
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "contained" : {
                    "element" : {
                      "go-type" : 8,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 1,
                        "value" : "unsafe"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 8,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Pointer"
                      }
                    },
                    "go-type" : 11,
                    "kind" : "type",
                    "length" : {
                      "go-type" : 12,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "2"
                      }
                    },
                    "type" : "array"
                  },
                  "go-type" : 10,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "go-type" : 10,
                "kind" : "expression",
                "target" : {
                  "coerced-to" : {
                    "go-type" : 8,
                    "kind" : "type",
                    "qualifier" : {
                      "ident-kind" : "PkgName",
                      "kind" : "ident",
                      "package" : 1,
                      "value" : "unsafe"
                    },
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 8,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "Pointer"
                    }
                  },
                  "go-type" : 8,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "i",
                      "variable" : 0
                    }
                  },
                  "type" : "cast"
                },
                "type" : "cast"
              },
              "type" : "index"
            }
          } ]
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 97,
      "code" : "return pointer{p: (*[2]unsafe.Pointer)(unsafe.Pointer(i))[1]}",
      "entry" : false,
      "use-vars" : [ 0 ]
    } ],
    "code" : "// toAddrPointer converts an interface to a pointer that points to\n// the interface data.\nfunc toAddrPointer(i *interface{}, isptr bool) pointer {\n\n\tif isptr {\n\n\t\treturn pointer{p: unsafe.Pointer(uintptr(unsafe.Pointer(i)) + ptrSize)}\n\t}\n\n\treturn pointer{p: (*[2]unsafe.Pointer)(unsafe.Pointer(i))[1]}\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "toAddrPointer",
      "package" : 0,
      "type" : 0,
      "exported" : false
    } ],
    "line-end" : 98,
    "line-start" : 88,
    "names" : [ "toAddrPointer" ],
    "package" : 0,
    "packages" : [ {
      "name" : "proto",
      "path" : "github.com/gogo/protobuf/proto"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 0, 1 ],
    "receivers" : [ ],
    "results" : [ 2 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(i *interface{}, isptr bool) github.com/gogo/protobuf/proto.pointer",
      "params" : 1,
      "recv" : -1,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 2
      }, {
        "name" : "isptr",
        "type" : 4
      } ],
      "name" : "(i *interface{}, isptr bool)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*interface{}",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 3
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 6
      } ],
      "name" : "(github.com/gogo/protobuf/proto.pointer)",
      "type" : "Tuple",
      "underlying" : 5
    }, {
      "local-name" : "pointer",
      "name" : "github.com/gogo/protobuf/proto.pointer",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "fields" : [ {
        "name" : "p",
        "type" : 8
      } ],
      "name" : "struct{p unsafe.Pointer}",
      "type" : "Struct",
      "underlying" : 7
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 8
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 9
    }, {
      "elem" : 11,
      "name" : "*[2]unsafe.Pointer",
      "type" : "Pointer",
      "underlying" : 10
    }, {
      "elem" : 8,
      "name" : "[2]unsafe.Pointer",
      "type" : "Array",
      "underlying" : 11
    }, {
      "name" : "untyped int",
      "type" : "Basic",
      "underlying" : 12
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 13
    } ],
    "variables" : [ {
      "name" : "i",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "isptr",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 6,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "ptrSize",
      "package" : 0,
      "type" : 9,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "p",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}