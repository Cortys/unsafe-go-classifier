{
  "usage" : {
    "file" : "fold_map_inline.generated.go",
    "label1" : "cast-struct",
    "label2" : "serialization",
    "line" : "110",
    "module" : "github.com/elastic/go-structform",
    "pkg" : "github.com/elastic/go-structform/gotype",
    "project" : "elastic/beats",
    "snippet" : "m := *((*map[string]uint)(unsafe.Pointer(&ptr)))",
    "version" : "v0.0.6"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 64, 65 ],
      "exit" : false,
      "out-vars" : [ 64, 65 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 64, 65 ],
      "exit" : false,
      "out-vars" : [ 67, 64 ],
      "decl-vars" : [ 67 ],
      "line-start" : 105,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "ptr"
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 174,
            "kind" : "type",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 3,
              "value" : "unsafe"
            },
            "type" : "identifier",
            "value" : {
              "go-type" : 174,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "Pointer"
            }
          },
          "go-type" : 174,
          "kind" : "expression",
          "target" : {
            "arguments" : [ ],
            "ellipsis" : false,
            "function" : {
              "field" : {
                "function" : 1,
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "Pointer"
              },
              "go-type" : 215,
              "kind" : "expression",
              "target" : {
                "go-type" : 165,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "v",
                  "variable" : 65
                }
              },
              "type" : "selector"
            },
            "go-type" : 170,
            "kind" : "expression",
            "type" : "call"
          },
          "type" : "cast"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 105,
      "code" : "ptr := unsafe.Pointer(v.Pointer())",
      "entry" : false,
      "use-vars" : [ 65 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4, 5 ],
      "in-vars" : [ 67, 64 ],
      "exit" : false,
      "out-vars" : [ 67, 64 ],
      "decl-vars" : [ ],
      "line-start" : 106,
      "ast" : {
        "condition" : {
          "go-type" : 233,
          "kind" : "expression",
          "left" : {
            "go-type" : 174,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "ptr",
              "variable" : 67
            }
          },
          "operator" : "==",
          "right" : {
            "go-type" : 174,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 108,
      "code" : "if ptr == nil {\n\treturn nil\n}",
      "entry" : false,
      "use-vars" : [ 67 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 107,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 234,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 107,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6 ],
      "in-vars" : [ 67, 64 ],
      "exit" : false,
      "out-vars" : [ 64, 68 ],
      "decl-vars" : [ 68 ],
      "line-start" : 110,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "m"
          }
        } ],
        "right" : [ {
          "go-type" : 156,
          "kind" : "expression",
          "target" : {
            "go-type" : 235,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "contained" : {
                  "go-type" : 156,
                  "key" : {
                    "go-type" : 14,
                    "kind" : "type",
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 14,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "string"
                    }
                  },
                  "kind" : "type",
                  "type" : "map",
                  "value" : {
                    "go-type" : 54,
                    "kind" : "type",
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 54,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "uint"
                    }
                  }
                },
                "go-type" : 235,
                "kind" : "type",
                "type" : "pointer"
              },
              "go-type" : 235,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 174,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 3,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 174,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 174,
                "kind" : "expression",
                "target" : {
                  "go-type" : 236,
                  "kind" : "expression",
                  "operator" : "&",
                  "target" : {
                    "go-type" : 174,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "ptr",
                      "variable" : 67
                    }
                  },
                  "type" : "unary"
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "paren"
          },
          "type" : "star"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 110,
      "code" : "m := *((*map[string]uint)(unsafe.Pointer(&ptr)))",
      "entry" : false,
      "use-vars" : [ 67 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 8, 13 ],
      "in-vars" : [ 64, 68 ],
      "exit" : false,
      "out-vars" : [ 64, 70, 68, 69 ],
      "decl-vars" : [ 69, 70 ],
      "line-start" : 111,
      "ast" : {
        "is-assign" : false,
        "key" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "k"
          }
        },
        "kind" : "statement",
        "target" : {
          "go-type" : 156,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "m",
            "variable" : 68
          }
        },
        "type" : "range",
        "value" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "v"
          }
        }
      },
      "assign-vars" : [ ],
      "line-end" : 118,
      "code" : "for k, v := range m {\n\tif err = C.OnKey(k); err != nil {\n\t\treturn err\n\t}\n\tif err = C.OnUint(v); err != nil {\n\t\treturn err\n\t}\n}",
      "entry" : false,
      "use-vars" : [ 68 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 9, 11 ],
      "in-vars" : [ 64, 70, 68, 66 ],
      "exit" : false,
      "out-vars" : [ 68, 66, 64, 70 ],
      "decl-vars" : [ ],
      "line-start" : 112,
      "ast" : {
        "condition" : {
          "go-type" : 233,
          "kind" : "expression",
          "left" : {
            "go-type" : 10,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 66
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 234,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 114,
      "code" : "if err = C.OnKey(k); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 66 ]
    }, {
      "update-vars" : [ 66 ],
      "successors" : [ 7 ],
      "in-vars" : [ 69, 64, 70, 68 ],
      "exit" : false,
      "out-vars" : [ 66, 64, 70, 68 ],
      "decl-vars" : [ ],
      "line-start" : 112,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 10,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 66
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 14,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "k",
              "variable" : 69
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "function" : 2,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "OnKey"
            },
            "go-type" : 50,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "C",
                "variable" : 64
              }
            },
            "type" : "selector"
          },
          "go-type" : 10,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 66 ],
      "line-end" : 112,
      "code" : "err = C.OnKey(k)",
      "entry" : false,
      "use-vars" : [ 64, 69 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 66 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 113,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 10,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 66
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 113,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 66 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 12, 6 ],
      "in-vars" : [ 66, 64, 68 ],
      "exit" : false,
      "out-vars" : [ 66, 64, 68 ],
      "decl-vars" : [ ],
      "line-start" : 115,
      "ast" : {
        "condition" : {
          "go-type" : 233,
          "kind" : "expression",
          "left" : {
            "go-type" : 10,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 66
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 234,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 117,
      "code" : "if err = C.OnUint(v); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 66 ]
    }, {
      "update-vars" : [ 66 ],
      "successors" : [ 10 ],
      "in-vars" : [ 64, 70, 68 ],
      "exit" : false,
      "out-vars" : [ 66, 64, 68 ],
      "decl-vars" : [ ],
      "line-start" : 115,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 10,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 66
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 54,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "v",
              "variable" : 70
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "function" : 3,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "OnUint"
            },
            "go-type" : 52,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "C",
                "variable" : 64
              }
            },
            "type" : "selector"
          },
          "go-type" : 10,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 66 ],
      "line-end" : 115,
      "code" : "err = C.OnUint(v)",
      "entry" : false,
      "use-vars" : [ 70, 64 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 66 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 116,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 10,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 66
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 116,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 66 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 119,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ ]
      },
      "assign-vars" : [ ],
      "line-end" : 119,
      "code" : "return",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func foldMapInlineUint(C *foldContext, v reflect.Value) (err error) {\n\tptr := unsafe.Pointer(v.Pointer())\n\tif ptr == nil {\n\t\treturn nil\n\t}\n\n\tm := *((*map[string]uint)(unsafe.Pointer(&ptr)))\n\tfor k, v := range m {\n\t\tif err = C.OnKey(k); err != nil {\n\t\t\treturn err\n\t\t}\n\t\tif err = C.OnUint(v); err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\treturn\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "foldMapInlineUint",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "Pointer",
      "package" : 2,
      "type" : 215,
      "exported" : true
    }, {
      "name" : "OnKey",
      "package" : 1,
      "type" : 50,
      "exported" : true
    }, {
      "name" : "OnUint",
      "package" : 1,
      "type" : 52,
      "exported" : true
    } ],
    "line-end" : 120,
    "line-start" : 104,
    "names" : [ "foldMapInlineUint" ],
    "package" : 0,
    "packages" : [ {
      "name" : "gotype",
      "path" : "github.com/elastic/go-structform/gotype"
    }, {
      "name" : "structform",
      "path" : "github.com/elastic/go-structform"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 64, 65 ],
    "receivers" : [ ],
    "results" : [ 66 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(C *github.com/elastic/go-structform/gotype.foldContext, v reflect.Value) (err error)",
      "params" : 1,
      "recv" : -1,
      "results" : 232,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "C",
        "type" : 2
      }, {
        "name" : "v",
        "type" : 165
      } ],
      "name" : "(C *github.com/elastic/go-structform/gotype.foldContext, v reflect.Value)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*github.com/elastic/go-structform/gotype.foldContext",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "foldContext",
      "name" : "github.com/elastic/go-structform/gotype.foldContext",
      "package" : 0,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "visitor",
        "type" : 5
      }, {
        "name" : "userReg",
        "type" : 161
      }, {
        "name" : "reg",
        "type" : 224
      }, {
        "name" : "opts",
        "type" : 230
      } ],
      "name" : "struct{github.com/elastic/go-structform/gotype.visitor; userReg map[reflect.Type]github.com/elastic/go-structform/gotype.reFoldFn; reg *github.com/elastic/go-structform/gotype.typeFoldRegistry; opts github.com/elastic/go-structform/gotype.options}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "local-name" : "visitor",
      "name" : "github.com/elastic/go-structform/gotype.visitor",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "methods" : [ {
        "name" : "OnArrayFinished",
        "type" : 7
      }, {
        "name" : "OnArrayStart",
        "type" : 17
      }, {
        "name" : "OnBool",
        "type" : 22
      }, {
        "name" : "OnBoolArray",
        "type" : 66
      }, {
        "name" : "OnBoolObject",
        "type" : 113
      }, {
        "name" : "OnByte",
        "type" : 27
      }, {
        "name" : "OnBytes",
        "type" : 71
      }, {
        "name" : "OnFloat32",
        "type" : 30
      }, {
        "name" : "OnFloat32Array",
        "type" : 74
      }, {
        "name" : "OnFloat32Object",
        "type" : 118
      }, {
        "name" : "OnFloat64",
        "type" : 33
      }, {
        "name" : "OnFloat64Array",
        "type" : 77
      }, {
        "name" : "OnFloat64Object",
        "type" : 121
      }, {
        "name" : "OnInt",
        "type" : 36
      }, {
        "name" : "OnInt16",
        "type" : 38
      }, {
        "name" : "OnInt16Array",
        "type" : 80
      }, {
        "name" : "OnInt16Object",
        "type" : 124
      }, {
        "name" : "OnInt32",
        "type" : 41
      }, {
        "name" : "OnInt32Array",
        "type" : 83
      }, {
        "name" : "OnInt32Object",
        "type" : 127
      }, {
        "name" : "OnInt64",
        "type" : 44
      }, {
        "name" : "OnInt64Array",
        "type" : 86
      }, {
        "name" : "OnInt64Object",
        "type" : 130
      }, {
        "name" : "OnInt8",
        "type" : 47
      }, {
        "name" : "OnInt8Array",
        "type" : 89
      }, {
        "name" : "OnInt8Object",
        "type" : 133
      }, {
        "name" : "OnIntArray",
        "type" : 92
      }, {
        "name" : "OnIntObject",
        "type" : 136
      }, {
        "name" : "OnKey",
        "type" : 50
      }, {
        "name" : "OnKeyRef",
        "type" : 157
      }, {
        "name" : "OnNil",
        "type" : 7
      }, {
        "name" : "OnObjectFinished",
        "type" : 7
      }, {
        "name" : "OnObjectStart",
        "type" : 17
      }, {
        "name" : "OnString",
        "type" : 50
      }, {
        "name" : "OnStringArray",
        "type" : 95
      }, {
        "name" : "OnStringObject",
        "type" : 139
      }, {
        "name" : "OnStringRef",
        "type" : 157
      }, {
        "name" : "OnUint",
        "type" : 52
      }, {
        "name" : "OnUint16",
        "type" : 55
      }, {
        "name" : "OnUint16Array",
        "type" : 98
      }, {
        "name" : "OnUint16Object",
        "type" : 142
      }, {
        "name" : "OnUint32",
        "type" : 58
      }, {
        "name" : "OnUint32Array",
        "type" : 101
      }, {
        "name" : "OnUint32Object",
        "type" : 145
      }, {
        "name" : "OnUint64",
        "type" : 61
      }, {
        "name" : "OnUint64Array",
        "type" : 104
      }, {
        "name" : "OnUint64Object",
        "type" : 148
      }, {
        "name" : "OnUint8",
        "type" : 64
      }, {
        "name" : "OnUint8Array",
        "type" : 107
      }, {
        "name" : "OnUint8Object",
        "type" : 151
      }, {
        "name" : "OnUintArray",
        "type" : 110
      }, {
        "name" : "OnUintObject",
        "type" : 154
      } ],
      "name" : "interface{github.com/elastic/go-structform.ExtVisitor}",
      "type" : "Interface",
      "underlying" : 6
    }, {
      "name" : "func() error",
      "params" : 8,
      "recv" : 2,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 7,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 8
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 10
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 9
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 11
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 12
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 11
    }, {
      "name" : "func() string",
      "params" : 8,
      "recv" : 0,
      "results" : 13,
      "type" : "Signature",
      "underlying" : 12,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 14
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 13
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 14
    }, {
      "local-name" : "ArrayVisitor",
      "name" : "github.com/elastic/go-structform.ArrayVisitor",
      "package" : 1,
      "type" : "Named",
      "underlying" : 16
    }, {
      "methods" : [ {
        "name" : "OnArrayFinished",
        "type" : 7
      }, {
        "name" : "OnArrayStart",
        "type" : 17
      } ],
      "name" : "interface{OnArrayFinished() error; OnArrayStart(len int, baseType github.com/elastic/go-structform.BaseType) error}",
      "type" : "Interface",
      "underlying" : 16
    }, {
      "name" : "func(len int, baseType github.com/elastic/go-structform.BaseType) error",
      "params" : 18,
      "recv" : 1,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 17,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "len",
        "type" : 19
      }, {
        "name" : "baseType",
        "type" : 20
      } ],
      "name" : "(len int, baseType github.com/elastic/go-structform.BaseType)",
      "type" : "Tuple",
      "underlying" : 18
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 19
    }, {
      "local-name" : "BaseType",
      "name" : "github.com/elastic/go-structform.BaseType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 21
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 21
    }, {
      "name" : "func(b bool) error",
      "params" : 23,
      "recv" : 17,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 22,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "b",
        "type" : 24
      } ],
      "name" : "(b bool)",
      "type" : "Tuple",
      "underlying" : 23
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 24
    }, {
      "local-name" : "ValueVisitor",
      "name" : "github.com/elastic/go-structform.ValueVisitor",
      "package" : 1,
      "type" : "Named",
      "underlying" : 26
    }, {
      "methods" : [ {
        "name" : "OnBool",
        "type" : 22
      }, {
        "name" : "OnByte",
        "type" : 27
      }, {
        "name" : "OnFloat32",
        "type" : 30
      }, {
        "name" : "OnFloat64",
        "type" : 33
      }, {
        "name" : "OnInt",
        "type" : 36
      }, {
        "name" : "OnInt16",
        "type" : 38
      }, {
        "name" : "OnInt32",
        "type" : 41
      }, {
        "name" : "OnInt64",
        "type" : 44
      }, {
        "name" : "OnInt8",
        "type" : 47
      }, {
        "name" : "OnNil",
        "type" : 7
      }, {
        "name" : "OnString",
        "type" : 50
      }, {
        "name" : "OnUint",
        "type" : 52
      }, {
        "name" : "OnUint16",
        "type" : 55
      }, {
        "name" : "OnUint32",
        "type" : 58
      }, {
        "name" : "OnUint64",
        "type" : 61
      }, {
        "name" : "OnUint8",
        "type" : 64
      } ],
      "name" : "interface{OnBool(b bool) error; OnByte(b byte) error; OnFloat32(f float32) error; OnFloat64(f float64) error; OnInt(i int) error; OnInt16(i int16) error; OnInt32(i int32) error; OnInt64(i int64) error; OnInt8(i int8) error; OnNil() error; OnString(s string) error; OnUint(u uint) error; OnUint16(u uint16) error; OnUint32(u uint32) error; OnUint64(u uint64) error; OnUint8(u uint8) error}",
      "type" : "Interface",
      "underlying" : 26
    }, {
      "name" : "func(b byte) error",
      "params" : 28,
      "recv" : 3,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 27,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "b",
        "type" : 29
      } ],
      "name" : "(b byte)",
      "type" : "Tuple",
      "underlying" : 28
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 29
    }, {
      "name" : "func(f float32) error",
      "params" : 31,
      "recv" : 4,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 30,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "f",
        "type" : 32
      } ],
      "name" : "(f float32)",
      "type" : "Tuple",
      "underlying" : 31
    }, {
      "name" : "float32",
      "type" : "Basic",
      "underlying" : 32
    }, {
      "name" : "func(f float64) error",
      "params" : 34,
      "recv" : 5,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 33,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "f",
        "type" : 35
      } ],
      "name" : "(f float64)",
      "type" : "Tuple",
      "underlying" : 34
    }, {
      "name" : "float64",
      "type" : "Basic",
      "underlying" : 35
    }, {
      "name" : "func(i int) error",
      "params" : 37,
      "recv" : 6,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 36,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 19
      } ],
      "name" : "(i int)",
      "type" : "Tuple",
      "underlying" : 37
    }, {
      "name" : "func(i int16) error",
      "params" : 39,
      "recv" : 7,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 38,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 40
      } ],
      "name" : "(i int16)",
      "type" : "Tuple",
      "underlying" : 39
    }, {
      "name" : "int16",
      "type" : "Basic",
      "underlying" : 40
    }, {
      "name" : "func(i int32) error",
      "params" : 42,
      "recv" : 8,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 41,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 43
      } ],
      "name" : "(i int32)",
      "type" : "Tuple",
      "underlying" : 42
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 43
    }, {
      "name" : "func(i int64) error",
      "params" : 45,
      "recv" : 9,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 44,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 46
      } ],
      "name" : "(i int64)",
      "type" : "Tuple",
      "underlying" : 45
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 46
    }, {
      "name" : "func(i int8) error",
      "params" : 48,
      "recv" : 10,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 47,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 49
      } ],
      "name" : "(i int8)",
      "type" : "Tuple",
      "underlying" : 48
    }, {
      "name" : "int8",
      "type" : "Basic",
      "underlying" : 49
    }, {
      "name" : "func(s string) error",
      "params" : 51,
      "recv" : 11,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 50,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "s",
        "type" : 14
      } ],
      "name" : "(s string)",
      "type" : "Tuple",
      "underlying" : 51
    }, {
      "name" : "func(u uint) error",
      "params" : 53,
      "recv" : 12,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 52,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "u",
        "type" : 54
      } ],
      "name" : "(u uint)",
      "type" : "Tuple",
      "underlying" : 53
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 54
    }, {
      "name" : "func(u uint16) error",
      "params" : 56,
      "recv" : 13,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 55,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "u",
        "type" : 57
      } ],
      "name" : "(u uint16)",
      "type" : "Tuple",
      "underlying" : 56
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 57
    }, {
      "name" : "func(u uint32) error",
      "params" : 59,
      "recv" : 14,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 58,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "u",
        "type" : 60
      } ],
      "name" : "(u uint32)",
      "type" : "Tuple",
      "underlying" : 59
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 60
    }, {
      "name" : "func(u uint64) error",
      "params" : 62,
      "recv" : 15,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 61,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "u",
        "type" : 63
      } ],
      "name" : "(u uint64)",
      "type" : "Tuple",
      "underlying" : 62
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 63
    }, {
      "name" : "func(u uint8) error",
      "params" : 65,
      "recv" : 16,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 64,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "u",
        "type" : 21
      } ],
      "name" : "(u uint8)",
      "type" : "Tuple",
      "underlying" : 65
    }, {
      "name" : "func([]bool) error",
      "params" : 67,
      "recv" : 32,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 66,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 68
      } ],
      "name" : "([]bool)",
      "type" : "Tuple",
      "underlying" : 67
    }, {
      "elem" : 24,
      "name" : "[]bool",
      "type" : "Slice",
      "underlying" : 68
    }, {
      "local-name" : "ArrayValueVisitor",
      "name" : "github.com/elastic/go-structform.ArrayValueVisitor",
      "package" : 1,
      "type" : "Named",
      "underlying" : 70
    }, {
      "methods" : [ {
        "name" : "OnBoolArray",
        "type" : 66
      }, {
        "name" : "OnBytes",
        "type" : 71
      }, {
        "name" : "OnFloat32Array",
        "type" : 74
      }, {
        "name" : "OnFloat64Array",
        "type" : 77
      }, {
        "name" : "OnInt16Array",
        "type" : 80
      }, {
        "name" : "OnInt32Array",
        "type" : 83
      }, {
        "name" : "OnInt64Array",
        "type" : 86
      }, {
        "name" : "OnInt8Array",
        "type" : 89
      }, {
        "name" : "OnIntArray",
        "type" : 92
      }, {
        "name" : "OnStringArray",
        "type" : 95
      }, {
        "name" : "OnUint16Array",
        "type" : 98
      }, {
        "name" : "OnUint32Array",
        "type" : 101
      }, {
        "name" : "OnUint64Array",
        "type" : 104
      }, {
        "name" : "OnUint8Array",
        "type" : 107
      }, {
        "name" : "OnUintArray",
        "type" : 110
      } ],
      "name" : "interface{OnBoolArray([]bool) error; OnBytes([]byte) error; OnFloat32Array([]float32) error; OnFloat64Array([]float64) error; OnInt16Array([]int16) error; OnInt32Array([]int32) error; OnInt64Array([]int64) error; OnInt8Array([]int8) error; OnIntArray([]int) error; OnStringArray([]string) error; OnUint16Array([]uint16) error; OnUint32Array([]uint32) error; OnUint64Array([]uint64) error; OnUint8Array([]uint8) error; OnUintArray([]uint) error}",
      "type" : "Interface",
      "underlying" : 70
    }, {
      "name" : "func([]byte) error",
      "params" : 72,
      "recv" : 18,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 71,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 73
      } ],
      "name" : "([]byte)",
      "type" : "Tuple",
      "underlying" : 72
    }, {
      "elem" : 29,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 73
    }, {
      "name" : "func([]float32) error",
      "params" : 75,
      "recv" : 19,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 74,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 76
      } ],
      "name" : "([]float32)",
      "type" : "Tuple",
      "underlying" : 75
    }, {
      "elem" : 32,
      "name" : "[]float32",
      "type" : "Slice",
      "underlying" : 76
    }, {
      "name" : "func([]float64) error",
      "params" : 78,
      "recv" : 20,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 77,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 79
      } ],
      "name" : "([]float64)",
      "type" : "Tuple",
      "underlying" : 78
    }, {
      "elem" : 35,
      "name" : "[]float64",
      "type" : "Slice",
      "underlying" : 79
    }, {
      "name" : "func([]int16) error",
      "params" : 81,
      "recv" : 21,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 80,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 82
      } ],
      "name" : "([]int16)",
      "type" : "Tuple",
      "underlying" : 81
    }, {
      "elem" : 40,
      "name" : "[]int16",
      "type" : "Slice",
      "underlying" : 82
    }, {
      "name" : "func([]int32) error",
      "params" : 84,
      "recv" : 22,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 83,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 85
      } ],
      "name" : "([]int32)",
      "type" : "Tuple",
      "underlying" : 84
    }, {
      "elem" : 43,
      "name" : "[]int32",
      "type" : "Slice",
      "underlying" : 85
    }, {
      "name" : "func([]int64) error",
      "params" : 87,
      "recv" : 23,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 86,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 88
      } ],
      "name" : "([]int64)",
      "type" : "Tuple",
      "underlying" : 87
    }, {
      "elem" : 46,
      "name" : "[]int64",
      "type" : "Slice",
      "underlying" : 88
    }, {
      "name" : "func([]int8) error",
      "params" : 90,
      "recv" : 24,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 89,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 91
      } ],
      "name" : "([]int8)",
      "type" : "Tuple",
      "underlying" : 90
    }, {
      "elem" : 49,
      "name" : "[]int8",
      "type" : "Slice",
      "underlying" : 91
    }, {
      "name" : "func([]int) error",
      "params" : 93,
      "recv" : 25,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 92,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 94
      } ],
      "name" : "([]int)",
      "type" : "Tuple",
      "underlying" : 93
    }, {
      "elem" : 19,
      "name" : "[]int",
      "type" : "Slice",
      "underlying" : 94
    }, {
      "name" : "func([]string) error",
      "params" : 96,
      "recv" : 26,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 95,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 97
      } ],
      "name" : "([]string)",
      "type" : "Tuple",
      "underlying" : 96
    }, {
      "elem" : 14,
      "name" : "[]string",
      "type" : "Slice",
      "underlying" : 97
    }, {
      "name" : "func([]uint16) error",
      "params" : 99,
      "recv" : 27,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 98,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 100
      } ],
      "name" : "([]uint16)",
      "type" : "Tuple",
      "underlying" : 99
    }, {
      "elem" : 57,
      "name" : "[]uint16",
      "type" : "Slice",
      "underlying" : 100
    }, {
      "name" : "func([]uint32) error",
      "params" : 102,
      "recv" : 28,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 101,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 103
      } ],
      "name" : "([]uint32)",
      "type" : "Tuple",
      "underlying" : 102
    }, {
      "elem" : 60,
      "name" : "[]uint32",
      "type" : "Slice",
      "underlying" : 103
    }, {
      "name" : "func([]uint64) error",
      "params" : 105,
      "recv" : 29,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 104,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 106
      } ],
      "name" : "([]uint64)",
      "type" : "Tuple",
      "underlying" : 105
    }, {
      "elem" : 63,
      "name" : "[]uint64",
      "type" : "Slice",
      "underlying" : 106
    }, {
      "name" : "func([]uint8) error",
      "params" : 108,
      "recv" : 30,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 107,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 109
      } ],
      "name" : "([]uint8)",
      "type" : "Tuple",
      "underlying" : 108
    }, {
      "elem" : 21,
      "name" : "[]uint8",
      "type" : "Slice",
      "underlying" : 109
    }, {
      "name" : "func([]uint) error",
      "params" : 111,
      "recv" : 31,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 110,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 112
      } ],
      "name" : "([]uint)",
      "type" : "Tuple",
      "underlying" : 111
    }, {
      "elem" : 54,
      "name" : "[]uint",
      "type" : "Slice",
      "underlying" : 112
    }, {
      "name" : "func(map[string]bool) error",
      "params" : 114,
      "recv" : 46,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 113,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 115
      } ],
      "name" : "(map[string]bool)",
      "type" : "Tuple",
      "underlying" : 114
    }, {
      "elem" : 24,
      "key" : 14,
      "name" : "map[string]bool",
      "type" : "Map",
      "underlying" : 115
    }, {
      "local-name" : "ObjectValueVisitor",
      "name" : "github.com/elastic/go-structform.ObjectValueVisitor",
      "package" : 1,
      "type" : "Named",
      "underlying" : 117
    }, {
      "methods" : [ {
        "name" : "OnBoolObject",
        "type" : 113
      }, {
        "name" : "OnFloat32Object",
        "type" : 118
      }, {
        "name" : "OnFloat64Object",
        "type" : 121
      }, {
        "name" : "OnInt16Object",
        "type" : 124
      }, {
        "name" : "OnInt32Object",
        "type" : 127
      }, {
        "name" : "OnInt64Object",
        "type" : 130
      }, {
        "name" : "OnInt8Object",
        "type" : 133
      }, {
        "name" : "OnIntObject",
        "type" : 136
      }, {
        "name" : "OnStringObject",
        "type" : 139
      }, {
        "name" : "OnUint16Object",
        "type" : 142
      }, {
        "name" : "OnUint32Object",
        "type" : 145
      }, {
        "name" : "OnUint64Object",
        "type" : 148
      }, {
        "name" : "OnUint8Object",
        "type" : 151
      }, {
        "name" : "OnUintObject",
        "type" : 154
      } ],
      "name" : "interface{OnBoolObject(map[string]bool) error; OnFloat32Object(map[string]float32) error; OnFloat64Object(map[string]float64) error; OnInt16Object(map[string]int16) error; OnInt32Object(map[string]int32) error; OnInt64Object(map[string]int64) error; OnInt8Object(map[string]int8) error; OnIntObject(map[string]int) error; OnStringObject(map[string]string) error; OnUint16Object(map[string]uint16) error; OnUint32Object(map[string]uint32) error; OnUint64Object(map[string]uint64) error; OnUint8Object(map[string]uint8) error; OnUintObject(map[string]uint) error}",
      "type" : "Interface",
      "underlying" : 117
    }, {
      "name" : "func(map[string]float32) error",
      "params" : 119,
      "recv" : 33,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 118,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 120
      } ],
      "name" : "(map[string]float32)",
      "type" : "Tuple",
      "underlying" : 119
    }, {
      "elem" : 32,
      "key" : 14,
      "name" : "map[string]float32",
      "type" : "Map",
      "underlying" : 120
    }, {
      "name" : "func(map[string]float64) error",
      "params" : 122,
      "recv" : 34,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 121,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 123
      } ],
      "name" : "(map[string]float64)",
      "type" : "Tuple",
      "underlying" : 122
    }, {
      "elem" : 35,
      "key" : 14,
      "name" : "map[string]float64",
      "type" : "Map",
      "underlying" : 123
    }, {
      "name" : "func(map[string]int16) error",
      "params" : 125,
      "recv" : 35,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 124,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 126
      } ],
      "name" : "(map[string]int16)",
      "type" : "Tuple",
      "underlying" : 125
    }, {
      "elem" : 40,
      "key" : 14,
      "name" : "map[string]int16",
      "type" : "Map",
      "underlying" : 126
    }, {
      "name" : "func(map[string]int32) error",
      "params" : 128,
      "recv" : 36,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 127,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 129
      } ],
      "name" : "(map[string]int32)",
      "type" : "Tuple",
      "underlying" : 128
    }, {
      "elem" : 43,
      "key" : 14,
      "name" : "map[string]int32",
      "type" : "Map",
      "underlying" : 129
    }, {
      "name" : "func(map[string]int64) error",
      "params" : 131,
      "recv" : 37,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 130,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 132
      } ],
      "name" : "(map[string]int64)",
      "type" : "Tuple",
      "underlying" : 131
    }, {
      "elem" : 46,
      "key" : 14,
      "name" : "map[string]int64",
      "type" : "Map",
      "underlying" : 132
    }, {
      "name" : "func(map[string]int8) error",
      "params" : 134,
      "recv" : 38,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 133,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 135
      } ],
      "name" : "(map[string]int8)",
      "type" : "Tuple",
      "underlying" : 134
    }, {
      "elem" : 49,
      "key" : 14,
      "name" : "map[string]int8",
      "type" : "Map",
      "underlying" : 135
    }, {
      "name" : "func(map[string]int) error",
      "params" : 137,
      "recv" : 39,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 136,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 138
      } ],
      "name" : "(map[string]int)",
      "type" : "Tuple",
      "underlying" : 137
    }, {
      "elem" : 19,
      "key" : 14,
      "name" : "map[string]int",
      "type" : "Map",
      "underlying" : 138
    }, {
      "name" : "func(map[string]string) error",
      "params" : 140,
      "recv" : 40,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 139,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 141
      } ],
      "name" : "(map[string]string)",
      "type" : "Tuple",
      "underlying" : 140
    }, {
      "elem" : 14,
      "key" : 14,
      "name" : "map[string]string",
      "type" : "Map",
      "underlying" : 141
    }, {
      "name" : "func(map[string]uint16) error",
      "params" : 143,
      "recv" : 41,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 142,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 144
      } ],
      "name" : "(map[string]uint16)",
      "type" : "Tuple",
      "underlying" : 143
    }, {
      "elem" : 57,
      "key" : 14,
      "name" : "map[string]uint16",
      "type" : "Map",
      "underlying" : 144
    }, {
      "name" : "func(map[string]uint32) error",
      "params" : 146,
      "recv" : 42,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 145,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 147
      } ],
      "name" : "(map[string]uint32)",
      "type" : "Tuple",
      "underlying" : 146
    }, {
      "elem" : 60,
      "key" : 14,
      "name" : "map[string]uint32",
      "type" : "Map",
      "underlying" : 147
    }, {
      "name" : "func(map[string]uint64) error",
      "params" : 149,
      "recv" : 43,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 148,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 150
      } ],
      "name" : "(map[string]uint64)",
      "type" : "Tuple",
      "underlying" : 149
    }, {
      "elem" : 63,
      "key" : 14,
      "name" : "map[string]uint64",
      "type" : "Map",
      "underlying" : 150
    }, {
      "name" : "func(map[string]uint8) error",
      "params" : 152,
      "recv" : 44,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 151,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 153
      } ],
      "name" : "(map[string]uint8)",
      "type" : "Tuple",
      "underlying" : 152
    }, {
      "elem" : 21,
      "key" : 14,
      "name" : "map[string]uint8",
      "type" : "Map",
      "underlying" : 153
    }, {
      "name" : "func(map[string]uint) error",
      "params" : 155,
      "recv" : 45,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 154,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 156
      } ],
      "name" : "(map[string]uint)",
      "type" : "Tuple",
      "underlying" : 155
    }, {
      "elem" : 54,
      "key" : 14,
      "name" : "map[string]uint",
      "type" : "Map",
      "underlying" : 156
    }, {
      "name" : "func(s []byte) error",
      "params" : 158,
      "recv" : 47,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 157,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "s",
        "type" : 73
      } ],
      "name" : "(s []byte)",
      "type" : "Tuple",
      "underlying" : 158
    }, {
      "local-name" : "StringRefVisitor",
      "name" : "github.com/elastic/go-structform.StringRefVisitor",
      "package" : 1,
      "type" : "Named",
      "underlying" : 160
    }, {
      "methods" : [ {
        "name" : "OnKeyRef",
        "type" : 157
      }, {
        "name" : "OnStringRef",
        "type" : 157
      } ],
      "name" : "interface{OnKeyRef(s []byte) error; OnStringRef(s []byte) error}",
      "type" : "Interface",
      "underlying" : 160
    }, {
      "elem" : 162,
      "key" : 180,
      "name" : "map[reflect.Type]github.com/elastic/go-structform/gotype.reFoldFn",
      "type" : "Map",
      "underlying" : 161
    }, {
      "local-name" : "reFoldFn",
      "name" : "github.com/elastic/go-structform/gotype.reFoldFn",
      "package" : 0,
      "type" : "Named",
      "underlying" : 163
    }, {
      "name" : "func(c *github.com/elastic/go-structform/gotype.foldContext, v reflect.Value) error",
      "params" : 164,
      "recv" : -1,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 163,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "c",
        "type" : 2
      }, {
        "name" : "v",
        "type" : 165
      } ],
      "name" : "(c *github.com/elastic/go-structform/gotype.foldContext, v reflect.Value)",
      "type" : "Tuple",
      "underlying" : 164
    }, {
      "local-name" : "Value",
      "name" : "reflect.Value",
      "package" : 2,
      "type" : "Named",
      "underlying" : 166
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 167
      }, {
        "name" : "ptr",
        "type" : 174
      }, {
        "name" : "flag",
        "type" : 179
      } ],
      "name" : "struct{typ *reflect.rtype; ptr unsafe.Pointer; reflect.flag}",
      "type" : "Struct",
      "underlying" : 166
    }, {
      "elem" : 168,
      "name" : "*reflect.rtype",
      "type" : "Pointer",
      "underlying" : 167
    }, {
      "local-name" : "rtype",
      "name" : "reflect.rtype",
      "package" : 2,
      "type" : "Named",
      "underlying" : 169
    }, {
      "fields" : [ {
        "name" : "size",
        "type" : 170
      }, {
        "name" : "ptrdata",
        "type" : 170
      }, {
        "name" : "hash",
        "type" : 60
      }, {
        "name" : "tflag",
        "type" : 171
      }, {
        "name" : "align",
        "type" : 21
      }, {
        "name" : "fieldAlign",
        "type" : 21
      }, {
        "name" : "kind",
        "type" : 21
      }, {
        "name" : "equal",
        "type" : 172
      }, {
        "name" : "gcdata",
        "type" : 176
      }, {
        "name" : "str",
        "type" : 177
      }, {
        "name" : "ptrToThis",
        "type" : 178
      } ],
      "name" : "struct{size uintptr; ptrdata uintptr; hash uint32; tflag reflect.tflag; align uint8; fieldAlign uint8; kind uint8; equal func(unsafe.Pointer, unsafe.Pointer) bool; gcdata *byte; str reflect.nameOff; ptrToThis reflect.typeOff}",
      "type" : "Struct",
      "underlying" : 169
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 170
    }, {
      "local-name" : "tflag",
      "name" : "reflect.tflag",
      "package" : 2,
      "type" : "Named",
      "underlying" : 21
    }, {
      "name" : "func(unsafe.Pointer, unsafe.Pointer) bool",
      "params" : 173,
      "recv" : -1,
      "results" : 175,
      "type" : "Signature",
      "underlying" : 172,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 174
      }, {
        "name" : "",
        "type" : 174
      } ],
      "name" : "(unsafe.Pointer, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 173
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 3,
      "type" : "Basic",
      "underlying" : 174
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 24
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 175
    }, {
      "elem" : 29,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 176
    }, {
      "local-name" : "nameOff",
      "name" : "reflect.nameOff",
      "package" : 2,
      "type" : "Named",
      "underlying" : 43
    }, {
      "local-name" : "typeOff",
      "name" : "reflect.typeOff",
      "package" : 2,
      "type" : "Named",
      "underlying" : 43
    }, {
      "local-name" : "flag",
      "name" : "reflect.flag",
      "package" : 2,
      "type" : "Named",
      "underlying" : 170
    }, {
      "local-name" : "Type",
      "name" : "reflect.Type",
      "package" : 2,
      "type" : "Named",
      "underlying" : 181
    }, {
      "methods" : [ {
        "name" : "Align",
        "type" : 182
      }, {
        "name" : "AssignableTo",
        "type" : 184
      }, {
        "name" : "Bits",
        "type" : 182
      }, {
        "name" : "ChanDir",
        "type" : 186
      }, {
        "name" : "Comparable",
        "type" : 189
      }, {
        "name" : "ConvertibleTo",
        "type" : 184
      }, {
        "name" : "Elem",
        "type" : 190
      }, {
        "name" : "Field",
        "type" : 192
      }, {
        "name" : "FieldAlign",
        "type" : 182
      }, {
        "name" : "FieldByIndex",
        "type" : 197
      }, {
        "name" : "FieldByName",
        "type" : 199
      }, {
        "name" : "FieldByNameFunc",
        "type" : 202
      }, {
        "name" : "Implements",
        "type" : 184
      }, {
        "name" : "In",
        "type" : 205
      }, {
        "name" : "IsVariadic",
        "type" : 189
      }, {
        "name" : "Key",
        "type" : 190
      }, {
        "name" : "Kind",
        "type" : 206
      }, {
        "name" : "Len",
        "type" : 182
      }, {
        "name" : "Method",
        "type" : 209
      }, {
        "name" : "MethodByName",
        "type" : 213
      }, {
        "name" : "Name",
        "type" : 12
      }, {
        "name" : "NumField",
        "type" : 182
      }, {
        "name" : "NumIn",
        "type" : 182
      }, {
        "name" : "NumMethod",
        "type" : 182
      }, {
        "name" : "NumOut",
        "type" : 182
      }, {
        "name" : "Out",
        "type" : 205
      }, {
        "name" : "PkgPath",
        "type" : 12
      }, {
        "name" : "Size",
        "type" : 215
      }, {
        "name" : "String",
        "type" : 12
      }, {
        "name" : "common",
        "type" : 217
      }, {
        "name" : "uncommon",
        "type" : 219
      } ],
      "name" : "interface{Align() int; AssignableTo(u reflect.Type) bool; Bits() int; ChanDir() reflect.ChanDir; Comparable() bool; ConvertibleTo(u reflect.Type) bool; Elem() reflect.Type; Field(i int) reflect.StructField; FieldAlign() int; FieldByIndex(index []int) reflect.StructField; FieldByName(name string) (reflect.StructField, bool); FieldByNameFunc(match func(string) bool) (reflect.StructField, bool); Implements(u reflect.Type) bool; In(i int) reflect.Type; IsVariadic() bool; Key() reflect.Type; Kind() reflect.Kind; Len() int; Method(int) reflect.Method; MethodByName(string) (reflect.Method, bool); Name() string; NumField() int; NumIn() int; NumMethod() int; NumOut() int; Out(i int) reflect.Type; PkgPath() string; Size() uintptr; String() string; common() *reflect.rtype; uncommon() *reflect.uncommonType}",
      "type" : "Interface",
      "underlying" : 181
    }, {
      "name" : "func() int",
      "params" : 8,
      "recv" : 48,
      "results" : 183,
      "type" : "Signature",
      "underlying" : 182,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 19
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 183
    }, {
      "name" : "func(u reflect.Type) bool",
      "params" : 185,
      "recv" : 49,
      "results" : 175,
      "type" : "Signature",
      "underlying" : 184,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "u",
        "type" : 180
      } ],
      "name" : "(u reflect.Type)",
      "type" : "Tuple",
      "underlying" : 185
    }, {
      "name" : "func() reflect.ChanDir",
      "params" : 8,
      "recv" : 50,
      "results" : 187,
      "type" : "Signature",
      "underlying" : 186,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 188
      } ],
      "name" : "(reflect.ChanDir)",
      "type" : "Tuple",
      "underlying" : 187
    }, {
      "local-name" : "ChanDir",
      "name" : "reflect.ChanDir",
      "package" : 2,
      "type" : "Named",
      "underlying" : 19
    }, {
      "name" : "func() bool",
      "params" : 8,
      "recv" : 51,
      "results" : 175,
      "type" : "Signature",
      "underlying" : 189,
      "variadic" : false
    }, {
      "name" : "func() reflect.Type",
      "params" : 8,
      "recv" : 52,
      "results" : 191,
      "type" : "Signature",
      "underlying" : 190,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 180
      } ],
      "name" : "(reflect.Type)",
      "type" : "Tuple",
      "underlying" : 191
    }, {
      "name" : "func(i int) reflect.StructField",
      "params" : 37,
      "recv" : 53,
      "results" : 193,
      "type" : "Signature",
      "underlying" : 192,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 194
      } ],
      "name" : "(reflect.StructField)",
      "type" : "Tuple",
      "underlying" : 193
    }, {
      "local-name" : "StructField",
      "name" : "reflect.StructField",
      "package" : 2,
      "type" : "Named",
      "underlying" : 195
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 14
      }, {
        "name" : "PkgPath",
        "type" : 14
      }, {
        "name" : "Type",
        "type" : 180
      }, {
        "name" : "Tag",
        "type" : 196
      }, {
        "name" : "Offset",
        "type" : 170
      }, {
        "name" : "Index",
        "type" : 94
      }, {
        "name" : "Anonymous",
        "type" : 24
      } ],
      "name" : "struct{Name string; PkgPath string; Type reflect.Type; Tag reflect.StructTag; Offset uintptr; Index []int; Anonymous bool}",
      "type" : "Struct",
      "underlying" : 195
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 2,
      "type" : "Named",
      "underlying" : 14
    }, {
      "name" : "func(index []int) reflect.StructField",
      "params" : 198,
      "recv" : 54,
      "results" : 193,
      "type" : "Signature",
      "underlying" : 197,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "index",
        "type" : 94
      } ],
      "name" : "(index []int)",
      "type" : "Tuple",
      "underlying" : 198
    }, {
      "name" : "func(name string) (reflect.StructField, bool)",
      "params" : 200,
      "recv" : 55,
      "results" : 201,
      "type" : "Signature",
      "underlying" : 199,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 14
      } ],
      "name" : "(name string)",
      "type" : "Tuple",
      "underlying" : 200
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 194
      }, {
        "name" : "",
        "type" : 24
      } ],
      "name" : "(reflect.StructField, bool)",
      "type" : "Tuple",
      "underlying" : 201
    }, {
      "name" : "func(match func(string) bool) (reflect.StructField, bool)",
      "params" : 203,
      "recv" : 56,
      "results" : 201,
      "type" : "Signature",
      "underlying" : 202,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "match",
        "type" : 204
      } ],
      "name" : "(match func(string) bool)",
      "type" : "Tuple",
      "underlying" : 203
    }, {
      "name" : "func(string) bool",
      "params" : 13,
      "recv" : -1,
      "results" : 175,
      "type" : "Signature",
      "underlying" : 204,
      "variadic" : false
    }, {
      "name" : "func(i int) reflect.Type",
      "params" : 37,
      "recv" : 57,
      "results" : 191,
      "type" : "Signature",
      "underlying" : 205,
      "variadic" : false
    }, {
      "name" : "func() reflect.Kind",
      "params" : 8,
      "recv" : 58,
      "results" : 207,
      "type" : "Signature",
      "underlying" : 206,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 208
      } ],
      "name" : "(reflect.Kind)",
      "type" : "Tuple",
      "underlying" : 207
    }, {
      "local-name" : "Kind",
      "name" : "reflect.Kind",
      "package" : 2,
      "type" : "Named",
      "underlying" : 54
    }, {
      "name" : "func(int) reflect.Method",
      "params" : 183,
      "recv" : 59,
      "results" : 210,
      "type" : "Signature",
      "underlying" : 209,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 211
      } ],
      "name" : "(reflect.Method)",
      "type" : "Tuple",
      "underlying" : 210
    }, {
      "local-name" : "Method",
      "name" : "reflect.Method",
      "package" : 2,
      "type" : "Named",
      "underlying" : 212
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 14
      }, {
        "name" : "PkgPath",
        "type" : 14
      }, {
        "name" : "Type",
        "type" : 180
      }, {
        "name" : "Func",
        "type" : 165
      }, {
        "name" : "Index",
        "type" : 19
      } ],
      "name" : "struct{Name string; PkgPath string; Type reflect.Type; Func reflect.Value; Index int}",
      "type" : "Struct",
      "underlying" : 212
    }, {
      "name" : "func(string) (reflect.Method, bool)",
      "params" : 13,
      "recv" : 60,
      "results" : 214,
      "type" : "Signature",
      "underlying" : 213,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 211
      }, {
        "name" : "",
        "type" : 24
      } ],
      "name" : "(reflect.Method, bool)",
      "type" : "Tuple",
      "underlying" : 214
    }, {
      "name" : "func() uintptr",
      "params" : 8,
      "recv" : 61,
      "results" : 216,
      "type" : "Signature",
      "underlying" : 215,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 170
      } ],
      "name" : "(uintptr)",
      "type" : "Tuple",
      "underlying" : 216
    }, {
      "name" : "func() *reflect.rtype",
      "params" : 8,
      "recv" : 62,
      "results" : 218,
      "type" : "Signature",
      "underlying" : 217,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 167
      } ],
      "name" : "(*reflect.rtype)",
      "type" : "Tuple",
      "underlying" : 218
    }, {
      "name" : "func() *reflect.uncommonType",
      "params" : 8,
      "recv" : 63,
      "results" : 220,
      "type" : "Signature",
      "underlying" : 219,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 221
      } ],
      "name" : "(*reflect.uncommonType)",
      "type" : "Tuple",
      "underlying" : 220
    }, {
      "elem" : 222,
      "name" : "*reflect.uncommonType",
      "type" : "Pointer",
      "underlying" : 221
    }, {
      "local-name" : "uncommonType",
      "name" : "reflect.uncommonType",
      "package" : 2,
      "type" : "Named",
      "underlying" : 223
    }, {
      "fields" : [ {
        "name" : "pkgPath",
        "type" : 177
      }, {
        "name" : "mcount",
        "type" : 57
      }, {
        "name" : "xcount",
        "type" : 57
      }, {
        "name" : "moff",
        "type" : 60
      }, {
        "name" : "_",
        "type" : 60
      } ],
      "name" : "struct{pkgPath reflect.nameOff; mcount uint16; xcount uint16; moff uint32; _ uint32}",
      "type" : "Struct",
      "underlying" : 223
    }, {
      "elem" : 225,
      "name" : "*github.com/elastic/go-structform/gotype.typeFoldRegistry",
      "type" : "Pointer",
      "underlying" : 224
    }, {
      "local-name" : "typeFoldRegistry",
      "name" : "github.com/elastic/go-structform/gotype.typeFoldRegistry",
      "package" : 0,
      "type" : "Named",
      "underlying" : 226
    }, {
      "fields" : [ {
        "name" : "m",
        "type" : 227
      } ],
      "name" : "struct{m map[github.com/elastic/go-structform/gotype.typeFoldKey]github.com/elastic/go-structform/gotype.reFoldFn}",
      "type" : "Struct",
      "underlying" : 226
    }, {
      "elem" : 162,
      "key" : 228,
      "name" : "map[github.com/elastic/go-structform/gotype.typeFoldKey]github.com/elastic/go-structform/gotype.reFoldFn",
      "type" : "Map",
      "underlying" : 227
    }, {
      "local-name" : "typeFoldKey",
      "name" : "github.com/elastic/go-structform/gotype.typeFoldKey",
      "package" : 0,
      "type" : "Named",
      "underlying" : 229
    }, {
      "fields" : [ {
        "name" : "ty",
        "type" : 180
      }, {
        "name" : "inline",
        "type" : 24
      } ],
      "name" : "struct{ty reflect.Type; inline bool}",
      "type" : "Struct",
      "underlying" : 229
    }, {
      "local-name" : "options",
      "name" : "github.com/elastic/go-structform/gotype.options",
      "package" : 0,
      "type" : "Named",
      "underlying" : 231
    }, {
      "fields" : [ {
        "name" : "tag",
        "type" : 14
      } ],
      "name" : "struct{tag string}",
      "type" : "Struct",
      "underlying" : 231
    }, {
      "fields" : [ {
        "name" : "err",
        "type" : 10
      } ],
      "name" : "(err error)",
      "type" : "Tuple",
      "underlying" : 232
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 233
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 234
    }, {
      "elem" : 156,
      "name" : "*map[string]uint",
      "type" : "Pointer",
      "underlying" : 235
    }, {
      "elem" : 174,
      "name" : "*unsafe.Pointer",
      "type" : "Pointer",
      "underlying" : 236
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 15,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 15,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 69,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 69,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 69,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 69,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 69,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 69,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 69,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 69,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 69,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 69,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 69,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 69,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 69,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 69,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 69,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 116,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 116,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 116,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 116,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 116,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 116,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 116,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 116,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 116,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 116,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 116,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 116,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 116,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 116,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 159,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 180,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 180,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 180,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 180,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 180,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 180,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 180,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 180,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 180,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 180,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 180,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 180,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 180,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 180,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 180,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 180,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "C",
      "package" : 0,
      "type" : 2,
      "exported" : true,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "v",
      "package" : 0,
      "type" : 165,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "ptr",
      "package" : 0,
      "type" : 174,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "m",
      "package" : 0,
      "type" : 156,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "k",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "v",
      "package" : 0,
      "type" : 54,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}