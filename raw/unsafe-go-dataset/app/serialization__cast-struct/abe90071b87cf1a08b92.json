{
  "usage" : {
    "file" : "helper_unsafe.go",
    "label1" : "cast-struct",
    "label2" : "serialization",
    "line" : "194",
    "module" : "github.com/ugorji/go",
    "pkg" : "github.com/ugorji/go/codec",
    "project" : "weaveworks/scope",
    "snippet" : "urv := (*unsafeReflectValue)(unsafe.Pointer(&rv))",
    "version" : "v0.0.0-20170918222552-54210f4e076c"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 66, 65 ],
      "exit" : false,
      "out-vars" : [ 66, 65 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 66, 65 ],
      "exit" : false,
      "out-vars" : [ 65 ],
      "decl-vars" : [ 67 ],
      "line-start" : 194,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "urv"
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 337,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 337,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "unsafeReflectValue"
              }
            },
            "go-type" : 336,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 336,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 13,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 2,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 13,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 13,
            "kind" : "expression",
            "target" : {
              "go-type" : 339,
              "kind" : "expression",
              "operator" : "&",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "rv",
                  "variable" : 66
                }
              },
              "type" : "unary"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 194,
      "code" : "urv := (*unsafeReflectValue)(unsafe.Pointer(&rv))",
      "entry" : false,
      "use-vars" : [ 66 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 65 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 195,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 230,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "go-type" : 230,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 230,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "int16"
                }
              },
              "go-type" : 340,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 340,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ptr",
                "variable" : 68
              },
              "go-type" : 13,
              "kind" : "expression",
              "target" : {
                "go-type" : 336,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "urv",
                  "variable" : 67
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 230,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 230,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "int16"
            }
          },
          "go-type" : 230,
          "kind" : "expression",
          "target" : {
            "arguments" : [ {
              "go-type" : 10,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "16"
              }
            } ],
            "ellipsis" : false,
            "function" : {
              "field" : {
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "DecodeInt"
              },
              "go-type" : 67,
              "kind" : "expression",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "d",
                  "variable" : 70
                },
                "go-type" : 29,
                "kind" : "expression",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "d",
                    "variable" : 69
                  },
                  "go-type" : 26,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 23,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "f",
                      "variable" : 65
                    }
                  },
                  "type" : "selector"
                },
                "type" : "selector"
              },
              "type" : "selector"
            },
            "go-type" : 70,
            "kind" : "expression",
            "type" : "call"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 195,
      "code" : "*(*int16)(urv.ptr) = int16(f.d.d.DecodeInt(16))",
      "entry" : false,
      "use-vars" : [ 65 ]
    } ],
    "code" : "func (f *decFnInfo) kInt16(rv reflect.Value) {\n\turv := (*unsafeReflectValue)(unsafe.Pointer(&rv))\n\t*(*int16)(urv.ptr) = int16(f.d.d.DecodeInt(16))\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "kInt16",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "DecodeInt",
      "package" : 0,
      "type" : 67,
      "exported" : true
    } ],
    "line-end" : 196,
    "line-start" : 193,
    "names" : [ "kInt16" ],
    "package" : 0,
    "packages" : [ {
      "name" : "codec",
      "path" : "github.com/ugorji/go/codec"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "sync",
      "path" : "sync"
    }, {
      "name" : "io",
      "path" : "io"
    }, {
      "name" : "time",
      "path" : "time"
    } ],
    "params" : [ 66 ],
    "receivers" : [ 65 ],
    "results" : [ ],
    "type" : "function",
    "types" : [ {
      "name" : "func(rv reflect.Value)",
      "params" : 1,
      "recv" : 65,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "rv",
        "type" : 2
      } ],
      "name" : "(rv reflect.Value)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "local-name" : "Value",
      "name" : "reflect.Value",
      "package" : 1,
      "type" : "Named",
      "underlying" : 3
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 4
      }, {
        "name" : "ptr",
        "type" : 13
      }, {
        "name" : "flag",
        "type" : 21
      } ],
      "name" : "struct{typ *reflect.rtype; ptr unsafe.Pointer; reflect.flag}",
      "type" : "Struct",
      "underlying" : 3
    }, {
      "elem" : 5,
      "name" : "*reflect.rtype",
      "type" : "Pointer",
      "underlying" : 4
    }, {
      "local-name" : "rtype",
      "name" : "reflect.rtype",
      "package" : 1,
      "type" : "Named",
      "underlying" : 6
    }, {
      "fields" : [ {
        "name" : "size",
        "type" : 7
      }, {
        "name" : "ptrdata",
        "type" : 7
      }, {
        "name" : "hash",
        "type" : 8
      }, {
        "name" : "tflag",
        "type" : 9
      }, {
        "name" : "align",
        "type" : 10
      }, {
        "name" : "fieldAlign",
        "type" : 10
      }, {
        "name" : "kind",
        "type" : 10
      }, {
        "name" : "equal",
        "type" : 11
      }, {
        "name" : "gcdata",
        "type" : 16
      }, {
        "name" : "str",
        "type" : 18
      }, {
        "name" : "ptrToThis",
        "type" : 20
      } ],
      "name" : "struct{size uintptr; ptrdata uintptr; hash uint32; tflag reflect.tflag; align uint8; fieldAlign uint8; kind uint8; equal func(unsafe.Pointer, unsafe.Pointer) bool; gcdata *byte; str reflect.nameOff; ptrToThis reflect.typeOff}",
      "type" : "Struct",
      "underlying" : 6
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 7
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 8
    }, {
      "local-name" : "tflag",
      "name" : "reflect.tflag",
      "package" : 1,
      "type" : "Named",
      "underlying" : 10
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 10
    }, {
      "name" : "func(unsafe.Pointer, unsafe.Pointer) bool",
      "params" : 12,
      "recv" : -1,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 11,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 13
      }, {
        "name" : "",
        "type" : 13
      } ],
      "name" : "(unsafe.Pointer, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 12
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 2,
      "type" : "Basic",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 15
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 14
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 15
    }, {
      "elem" : 17,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 16
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 17
    }, {
      "local-name" : "nameOff",
      "name" : "reflect.nameOff",
      "package" : 1,
      "type" : "Named",
      "underlying" : 19
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 19
    }, {
      "local-name" : "typeOff",
      "name" : "reflect.typeOff",
      "package" : 1,
      "type" : "Named",
      "underlying" : 19
    }, {
      "local-name" : "flag",
      "name" : "reflect.flag",
      "package" : 1,
      "type" : "Named",
      "underlying" : 7
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 22
    }, {
      "elem" : 24,
      "name" : "*github.com/ugorji/go/codec.decFnInfo",
      "type" : "Pointer",
      "underlying" : 23
    }, {
      "local-name" : "decFnInfo",
      "name" : "github.com/ugorji/go/codec.decFnInfo",
      "package" : 0,
      "type" : "Named",
      "underlying" : 25
    }, {
      "fields" : [ {
        "name" : "d",
        "type" : 26
      }, {
        "name" : "ti",
        "type" : 223
      }, {
        "name" : "xfFn",
        "type" : 47
      }, {
        "name" : "xfTag",
        "type" : 46
      }, {
        "name" : "seq",
        "type" : 232
      } ],
      "name" : "struct{d *github.com/ugorji/go/codec.Decoder; ti *github.com/ugorji/go/codec.typeInfo; xfFn github.com/ugorji/go/codec.Ext; xfTag uint64; seq github.com/ugorji/go/codec.seqType}",
      "type" : "Struct",
      "underlying" : 25
    }, {
      "elem" : 27,
      "name" : "*github.com/ugorji/go/codec.Decoder",
      "type" : "Pointer",
      "underlying" : 26
    }, {
      "local-name" : "Decoder",
      "name" : "github.com/ugorji/go/codec.Decoder",
      "package" : 0,
      "type" : "Named",
      "underlying" : 28
    }, {
      "fields" : [ {
        "name" : "d",
        "type" : 29
      }, {
        "name" : "r",
        "type" : 84
      }, {
        "name" : "h",
        "type" : 104
      }, {
        "name" : "hh",
        "type" : 171
      }, {
        "name" : "be",
        "type" : 15
      }, {
        "name" : "bytes",
        "type" : 15
      }, {
        "name" : "js",
        "type" : 15
      }, {
        "name" : "rb",
        "type" : 275
      }, {
        "name" : "ri",
        "type" : 277
      }, {
        "name" : "cr",
        "type" : 263
      }, {
        "name" : "s",
        "type" : 293
      }, {
        "name" : "f",
        "type" : 300
      }, {
        "name" : "mtid",
        "type" : 7
      }, {
        "name" : "stid",
        "type" : 7
      }, {
        "name" : "n",
        "type" : 302
      }, {
        "name" : "np",
        "type" : 326
      }, {
        "name" : "b",
        "type" : 273
      }, {
        "name" : "is",
        "type" : 332
      }, {
        "name" : "zc",
        "type" : 333
      } ],
      "name" : "struct{d github.com/ugorji/go/codec.decDriver; r github.com/ugorji/go/codec.decReader; h *github.com/ugorji/go/codec.BasicHandle; hh github.com/ugorji/go/codec.Handle; be bool; bytes bool; js bool; rb github.com/ugorji/go/codec.bytesDecReader; ri github.com/ugorji/go/codec.ioDecReader; cr github.com/ugorji/go/codec.containerStateRecv; s []github.com/ugorji/go/codec.decRtidFn; f map[uintptr]*github.com/ugorji/go/codec.decFn; mtid uintptr; stid uintptr; n github.com/ugorji/go/codec.decNaked; np github.com/ugorji/go/codec.ptrToRvMap; b [32]byte; is map[string]string; zc []github.com/ugorji/go/codec.rtid2rv}",
      "type" : "Struct",
      "underlying" : 28
    }, {
      "local-name" : "decDriver",
      "name" : "github.com/ugorji/go/codec.decDriver",
      "package" : 0,
      "type" : "Named",
      "underlying" : 30
    }, {
      "methods" : [ {
        "name" : "CheckBreak",
        "type" : 31
      }, {
        "name" : "ContainerType",
        "type" : 32
      }, {
        "name" : "DecodeBool",
        "type" : 35
      }, {
        "name" : "DecodeBuiltin",
        "type" : 37
      }, {
        "name" : "DecodeBytes",
        "type" : 40
      }, {
        "name" : "DecodeExt",
        "type" : 44
      }, {
        "name" : "DecodeFloat",
        "type" : 63
      }, {
        "name" : "DecodeInt",
        "type" : 67
      }, {
        "name" : "DecodeNaked",
        "type" : 71
      }, {
        "name" : "DecodeString",
        "type" : 72
      }, {
        "name" : "DecodeStringAsBytes",
        "type" : 75
      }, {
        "name" : "DecodeUint",
        "type" : 77
      }, {
        "name" : "IsBuiltinType",
        "type" : 79
      }, {
        "name" : "ReadArrayStart",
        "type" : 81
      }, {
        "name" : "ReadMapStart",
        "type" : 81
      }, {
        "name" : "TryDecodeAsNil",
        "type" : 31
      }, {
        "name" : "reset",
        "type" : 71
      }, {
        "name" : "uncacheRead",
        "type" : 71
      } ],
      "name" : "interface{CheckBreak() bool; ContainerType() (vt github.com/ugorji/go/codec.valueType); DecodeBool() (b bool); DecodeBuiltin(rt uintptr, v interface{}); DecodeBytes(bs []byte, zerocopy bool) (bsOut []byte); DecodeExt(v interface{}, xtag uint64, ext github.com/ugorji/go/codec.Ext) (realxtag uint64); DecodeFloat(chkOverflow32 bool) (f float64); DecodeInt(bitsize uint8) (i int64); DecodeNaked(); DecodeString() (s string); DecodeStringAsBytes() (v []byte); DecodeUint(bitsize uint8) (ui uint64); IsBuiltinType(rt uintptr) bool; ReadArrayStart() int; ReadMapStart() int; TryDecodeAsNil() bool; reset(); uncacheRead()}",
      "type" : "Interface",
      "underlying" : 30
    }, {
      "name" : "func() bool",
      "params" : 22,
      "recv" : 0,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 31,
      "variadic" : false
    }, {
      "name" : "func() (vt github.com/ugorji/go/codec.valueType)",
      "params" : 22,
      "recv" : 1,
      "results" : 33,
      "type" : "Signature",
      "underlying" : 32,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "vt",
        "type" : 34
      } ],
      "name" : "(vt github.com/ugorji/go/codec.valueType)",
      "type" : "Tuple",
      "underlying" : 33
    }, {
      "local-name" : "valueType",
      "name" : "github.com/ugorji/go/codec.valueType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 10
    }, {
      "name" : "func() (b bool)",
      "params" : 22,
      "recv" : 2,
      "results" : 36,
      "type" : "Signature",
      "underlying" : 35,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "b",
        "type" : 15
      } ],
      "name" : "(b bool)",
      "type" : "Tuple",
      "underlying" : 36
    }, {
      "name" : "func(rt uintptr, v interface{})",
      "params" : 38,
      "recv" : 3,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 37,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "rt",
        "type" : 7
      }, {
        "name" : "v",
        "type" : 39
      } ],
      "name" : "(rt uintptr, v interface{})",
      "type" : "Tuple",
      "underlying" : 38
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 39
    }, {
      "name" : "func(bs []byte, zerocopy bool) (bsOut []byte)",
      "params" : 41,
      "recv" : 4,
      "results" : 43,
      "type" : "Signature",
      "underlying" : 40,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "bs",
        "type" : 42
      }, {
        "name" : "zerocopy",
        "type" : 15
      } ],
      "name" : "(bs []byte, zerocopy bool)",
      "type" : "Tuple",
      "underlying" : 41
    }, {
      "elem" : 17,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 42
    }, {
      "fields" : [ {
        "name" : "bsOut",
        "type" : 42
      } ],
      "name" : "(bsOut []byte)",
      "type" : "Tuple",
      "underlying" : 43
    }, {
      "name" : "func(v interface{}, xtag uint64, ext github.com/ugorji/go/codec.Ext) (realxtag uint64)",
      "params" : 45,
      "recv" : 9,
      "results" : 62,
      "type" : "Signature",
      "underlying" : 44,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "v",
        "type" : 39
      }, {
        "name" : "xtag",
        "type" : 46
      }, {
        "name" : "ext",
        "type" : 47
      } ],
      "name" : "(v interface{}, xtag uint64, ext github.com/ugorji/go/codec.Ext)",
      "type" : "Tuple",
      "underlying" : 45
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 46
    }, {
      "local-name" : "Ext",
      "name" : "github.com/ugorji/go/codec.Ext",
      "package" : 0,
      "type" : "Named",
      "underlying" : 48
    }, {
      "methods" : [ {
        "name" : "ConvertExt",
        "type" : 49
      }, {
        "name" : "ReadExt",
        "type" : 56
      }, {
        "name" : "UpdateExt",
        "type" : 54
      }, {
        "name" : "WriteExt",
        "type" : 60
      } ],
      "name" : "interface{github.com/ugorji/go/codec.BytesExt; github.com/ugorji/go/codec.InterfaceExt}",
      "type" : "Interface",
      "underlying" : 48
    }, {
      "name" : "func(v interface{}) interface{}",
      "params" : 50,
      "recv" : 6,
      "results" : 51,
      "type" : "Signature",
      "underlying" : 49,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "v",
        "type" : 39
      } ],
      "name" : "(v interface{})",
      "type" : "Tuple",
      "underlying" : 50
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 39
      } ],
      "name" : "(interface{})",
      "type" : "Tuple",
      "underlying" : 51
    }, {
      "local-name" : "InterfaceExt",
      "name" : "github.com/ugorji/go/codec.InterfaceExt",
      "package" : 0,
      "type" : "Named",
      "underlying" : 53
    }, {
      "methods" : [ {
        "name" : "ConvertExt",
        "type" : 49
      }, {
        "name" : "UpdateExt",
        "type" : 54
      } ],
      "name" : "interface{ConvertExt(v interface{}) interface{}; UpdateExt(dst interface{}, src interface{})}",
      "type" : "Interface",
      "underlying" : 53
    }, {
      "name" : "func(dst interface{}, src interface{})",
      "params" : 55,
      "recv" : 5,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 54,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dst",
        "type" : 39
      }, {
        "name" : "src",
        "type" : 39
      } ],
      "name" : "(dst interface{}, src interface{})",
      "type" : "Tuple",
      "underlying" : 55
    }, {
      "name" : "func(dst interface{}, src []byte)",
      "params" : 57,
      "recv" : 8,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 56,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dst",
        "type" : 39
      }, {
        "name" : "src",
        "type" : 42
      } ],
      "name" : "(dst interface{}, src []byte)",
      "type" : "Tuple",
      "underlying" : 57
    }, {
      "local-name" : "BytesExt",
      "name" : "github.com/ugorji/go/codec.BytesExt",
      "package" : 0,
      "type" : "Named",
      "underlying" : 59
    }, {
      "methods" : [ {
        "name" : "ReadExt",
        "type" : 56
      }, {
        "name" : "WriteExt",
        "type" : 60
      } ],
      "name" : "interface{ReadExt(dst interface{}, src []byte); WriteExt(v interface{}) []byte}",
      "type" : "Interface",
      "underlying" : 59
    }, {
      "name" : "func(v interface{}) []byte",
      "params" : 50,
      "recv" : 7,
      "results" : 61,
      "type" : "Signature",
      "underlying" : 60,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 42
      } ],
      "name" : "([]byte)",
      "type" : "Tuple",
      "underlying" : 61
    }, {
      "fields" : [ {
        "name" : "realxtag",
        "type" : 46
      } ],
      "name" : "(realxtag uint64)",
      "type" : "Tuple",
      "underlying" : 62
    }, {
      "name" : "func(chkOverflow32 bool) (f float64)",
      "params" : 64,
      "recv" : 10,
      "results" : 65,
      "type" : "Signature",
      "underlying" : 63,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "chkOverflow32",
        "type" : 15
      } ],
      "name" : "(chkOverflow32 bool)",
      "type" : "Tuple",
      "underlying" : 64
    }, {
      "fields" : [ {
        "name" : "f",
        "type" : 66
      } ],
      "name" : "(f float64)",
      "type" : "Tuple",
      "underlying" : 65
    }, {
      "name" : "float64",
      "type" : "Basic",
      "underlying" : 66
    }, {
      "name" : "func(bitsize uint8) (i int64)",
      "params" : 68,
      "recv" : 11,
      "results" : 69,
      "type" : "Signature",
      "underlying" : 67,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "bitsize",
        "type" : 10
      } ],
      "name" : "(bitsize uint8)",
      "type" : "Tuple",
      "underlying" : 68
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 70
      } ],
      "name" : "(i int64)",
      "type" : "Tuple",
      "underlying" : 69
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 70
    }, {
      "name" : "func()",
      "params" : 22,
      "recv" : 12,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 71,
      "variadic" : false
    }, {
      "name" : "func() (s string)",
      "params" : 22,
      "recv" : 13,
      "results" : 73,
      "type" : "Signature",
      "underlying" : 72,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "s",
        "type" : 74
      } ],
      "name" : "(s string)",
      "type" : "Tuple",
      "underlying" : 73
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 74
    }, {
      "name" : "func() (v []byte)",
      "params" : 22,
      "recv" : 14,
      "results" : 76,
      "type" : "Signature",
      "underlying" : 75,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "v",
        "type" : 42
      } ],
      "name" : "(v []byte)",
      "type" : "Tuple",
      "underlying" : 76
    }, {
      "name" : "func(bitsize uint8) (ui uint64)",
      "params" : 68,
      "recv" : 15,
      "results" : 78,
      "type" : "Signature",
      "underlying" : 77,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ui",
        "type" : 46
      } ],
      "name" : "(ui uint64)",
      "type" : "Tuple",
      "underlying" : 78
    }, {
      "name" : "func(rt uintptr) bool",
      "params" : 80,
      "recv" : 16,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 79,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "rt",
        "type" : 7
      } ],
      "name" : "(rt uintptr)",
      "type" : "Tuple",
      "underlying" : 80
    }, {
      "name" : "func() int",
      "params" : 22,
      "recv" : 17,
      "results" : 82,
      "type" : "Signature",
      "underlying" : 81,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 83
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 82
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 83
    }, {
      "local-name" : "decReader",
      "name" : "github.com/ugorji/go/codec.decReader",
      "package" : 0,
      "type" : "Named",
      "underlying" : 85
    }, {
      "methods" : [ {
        "name" : "numread",
        "type" : 81
      }, {
        "name" : "readTo",
        "type" : 86
      }, {
        "name" : "readUntil",
        "type" : 91
      }, {
        "name" : "readb",
        "type" : 93
      }, {
        "name" : "readn1",
        "type" : 94
      }, {
        "name" : "readn1eof",
        "type" : 96
      }, {
        "name" : "readx",
        "type" : 98
      }, {
        "name" : "skip",
        "type" : 100
      }, {
        "name" : "stopTrack",
        "type" : 103
      }, {
        "name" : "track",
        "type" : 71
      }, {
        "name" : "unreadn1",
        "type" : 71
      } ],
      "name" : "interface{numread() int; readTo(in []byte, accept *[256]bool) (out []byte); readUntil(in []byte, stop byte) (out []byte); readb([]byte); readn1() uint8; readn1eof() (v uint8, eof bool); readx(n int) []byte; skip(accept *[256]bool) (token byte); stopTrack() []byte; track(); unreadn1()}",
      "type" : "Interface",
      "underlying" : 85
    }, {
      "name" : "func(in []byte, accept *[256]bool) (out []byte)",
      "params" : 87,
      "recv" : 18,
      "results" : 90,
      "type" : "Signature",
      "underlying" : 86,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 42
      }, {
        "name" : "accept",
        "type" : 88
      } ],
      "name" : "(in []byte, accept *[256]bool)",
      "type" : "Tuple",
      "underlying" : 87
    }, {
      "elem" : 89,
      "name" : "*[256]bool",
      "type" : "Pointer",
      "underlying" : 88
    }, {
      "elem" : 15,
      "name" : "[256]bool",
      "type" : "Array",
      "underlying" : 89
    }, {
      "fields" : [ {
        "name" : "out",
        "type" : 42
      } ],
      "name" : "(out []byte)",
      "type" : "Tuple",
      "underlying" : 90
    }, {
      "name" : "func(in []byte, stop byte) (out []byte)",
      "params" : 92,
      "recv" : 19,
      "results" : 90,
      "type" : "Signature",
      "underlying" : 91,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 42
      }, {
        "name" : "stop",
        "type" : 17
      } ],
      "name" : "(in []byte, stop byte)",
      "type" : "Tuple",
      "underlying" : 92
    }, {
      "name" : "func([]byte)",
      "params" : 61,
      "recv" : 20,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 93,
      "variadic" : false
    }, {
      "name" : "func() uint8",
      "params" : 22,
      "recv" : 21,
      "results" : 95,
      "type" : "Signature",
      "underlying" : 94,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 10
      } ],
      "name" : "(uint8)",
      "type" : "Tuple",
      "underlying" : 95
    }, {
      "name" : "func() (v uint8, eof bool)",
      "params" : 22,
      "recv" : 22,
      "results" : 97,
      "type" : "Signature",
      "underlying" : 96,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "v",
        "type" : 10
      }, {
        "name" : "eof",
        "type" : 15
      } ],
      "name" : "(v uint8, eof bool)",
      "type" : "Tuple",
      "underlying" : 97
    }, {
      "name" : "func(n int) []byte",
      "params" : 99,
      "recv" : 23,
      "results" : 61,
      "type" : "Signature",
      "underlying" : 98,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "n",
        "type" : 83
      } ],
      "name" : "(n int)",
      "type" : "Tuple",
      "underlying" : 99
    }, {
      "name" : "func(accept *[256]bool) (token byte)",
      "params" : 101,
      "recv" : 24,
      "results" : 102,
      "type" : "Signature",
      "underlying" : 100,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "accept",
        "type" : 88
      } ],
      "name" : "(accept *[256]bool)",
      "type" : "Tuple",
      "underlying" : 101
    }, {
      "fields" : [ {
        "name" : "token",
        "type" : 17
      } ],
      "name" : "(token byte)",
      "type" : "Tuple",
      "underlying" : 102
    }, {
      "name" : "func() []byte",
      "params" : 22,
      "recv" : 25,
      "results" : 61,
      "type" : "Signature",
      "underlying" : 103,
      "variadic" : false
    }, {
      "elem" : 105,
      "name" : "*github.com/ugorji/go/codec.BasicHandle",
      "type" : "Pointer",
      "underlying" : 104
    }, {
      "local-name" : "BasicHandle",
      "name" : "github.com/ugorji/go/codec.BasicHandle",
      "package" : 0,
      "type" : "Named",
      "underlying" : 106
    }, {
      "fields" : [ {
        "name" : "TypeInfos",
        "type" : 107
      }, {
        "name" : "extHandle",
        "type" : 115
      }, {
        "name" : "EncodeOptions",
        "type" : 166
      }, {
        "name" : "DecodeOptions",
        "type" : 169
      } ],
      "name" : "struct{TypeInfos *github.com/ugorji/go/codec.TypeInfos; github.com/ugorji/go/codec.extHandle; github.com/ugorji/go/codec.EncodeOptions; github.com/ugorji/go/codec.DecodeOptions}",
      "type" : "Struct",
      "underlying" : 106
    }, {
      "elem" : 108,
      "name" : "*github.com/ugorji/go/codec.TypeInfos",
      "type" : "Pointer",
      "underlying" : 107
    }, {
      "local-name" : "TypeInfos",
      "name" : "github.com/ugorji/go/codec.TypeInfos",
      "package" : 0,
      "type" : "Named",
      "underlying" : 109
    }, {
      "fields" : [ {
        "name" : "infos",
        "type" : 110
      }, {
        "name" : "mu",
        "type" : 112
      }, {
        "name" : "tags",
        "type" : 114
      } ],
      "name" : "struct{infos github.com/ugorji/go/codec.atomicTypeInfoSlice; mu sync.Mutex; tags []string}",
      "type" : "Struct",
      "underlying" : 109
    }, {
      "local-name" : "atomicTypeInfoSlice",
      "name" : "github.com/ugorji/go/codec.atomicTypeInfoSlice",
      "package" : 0,
      "type" : "Named",
      "underlying" : 111
    }, {
      "fields" : [ {
        "name" : "v",
        "type" : 13
      } ],
      "name" : "struct{v unsafe.Pointer}",
      "type" : "Struct",
      "underlying" : 111
    }, {
      "local-name" : "Mutex",
      "name" : "sync.Mutex",
      "package" : 3,
      "type" : "Named",
      "underlying" : 113
    }, {
      "fields" : [ {
        "name" : "state",
        "type" : 19
      }, {
        "name" : "sema",
        "type" : 8
      } ],
      "name" : "struct{state int32; sema uint32}",
      "type" : "Struct",
      "underlying" : 113
    }, {
      "elem" : 74,
      "name" : "[]string",
      "type" : "Slice",
      "underlying" : 114
    }, {
      "local-name" : "extHandle",
      "name" : "github.com/ugorji/go/codec.extHandle",
      "package" : 0,
      "type" : "Named",
      "underlying" : 116
    }, {
      "elem" : 117,
      "name" : "[]github.com/ugorji/go/codec.extTypeTagFn",
      "type" : "Slice",
      "underlying" : 116
    }, {
      "local-name" : "extTypeTagFn",
      "name" : "github.com/ugorji/go/codec.extTypeTagFn",
      "package" : 0,
      "type" : "Named",
      "underlying" : 118
    }, {
      "fields" : [ {
        "name" : "rtid",
        "type" : 7
      }, {
        "name" : "rt",
        "type" : 119
      }, {
        "name" : "tag",
        "type" : 46
      }, {
        "name" : "ext",
        "type" : 47
      } ],
      "name" : "struct{rtid uintptr; rt reflect.Type; tag uint64; ext github.com/ugorji/go/codec.Ext}",
      "type" : "Struct",
      "underlying" : 118
    }, {
      "local-name" : "Type",
      "name" : "reflect.Type",
      "package" : 1,
      "type" : "Named",
      "underlying" : 120
    }, {
      "methods" : [ {
        "name" : "Align",
        "type" : 81
      }, {
        "name" : "AssignableTo",
        "type" : 121
      }, {
        "name" : "Bits",
        "type" : 81
      }, {
        "name" : "ChanDir",
        "type" : 123
      }, {
        "name" : "Comparable",
        "type" : 31
      }, {
        "name" : "ConvertibleTo",
        "type" : 121
      }, {
        "name" : "Elem",
        "type" : 126
      }, {
        "name" : "Field",
        "type" : 128
      }, {
        "name" : "FieldAlign",
        "type" : 81
      }, {
        "name" : "FieldByIndex",
        "type" : 135
      }, {
        "name" : "FieldByName",
        "type" : 137
      }, {
        "name" : "FieldByNameFunc",
        "type" : 140
      }, {
        "name" : "Implements",
        "type" : 121
      }, {
        "name" : "In",
        "type" : 144
      }, {
        "name" : "IsVariadic",
        "type" : 31
      }, {
        "name" : "Key",
        "type" : 126
      }, {
        "name" : "Kind",
        "type" : 145
      }, {
        "name" : "Len",
        "type" : 81
      }, {
        "name" : "Method",
        "type" : 149
      }, {
        "name" : "MethodByName",
        "type" : 153
      }, {
        "name" : "Name",
        "type" : 155
      }, {
        "name" : "NumField",
        "type" : 81
      }, {
        "name" : "NumIn",
        "type" : 81
      }, {
        "name" : "NumMethod",
        "type" : 81
      }, {
        "name" : "NumOut",
        "type" : 81
      }, {
        "name" : "Out",
        "type" : 144
      }, {
        "name" : "PkgPath",
        "type" : 155
      }, {
        "name" : "Size",
        "type" : 156
      }, {
        "name" : "String",
        "type" : 155
      }, {
        "name" : "common",
        "type" : 158
      }, {
        "name" : "uncommon",
        "type" : 160
      } ],
      "name" : "interface{Align() int; AssignableTo(u reflect.Type) bool; Bits() int; ChanDir() reflect.ChanDir; Comparable() bool; ConvertibleTo(u reflect.Type) bool; Elem() reflect.Type; Field(i int) reflect.StructField; FieldAlign() int; FieldByIndex(index []int) reflect.StructField; FieldByName(name string) (reflect.StructField, bool); FieldByNameFunc(match func(string) bool) (reflect.StructField, bool); Implements(u reflect.Type) bool; In(i int) reflect.Type; IsVariadic() bool; Key() reflect.Type; Kind() reflect.Kind; Len() int; Method(int) reflect.Method; MethodByName(string) (reflect.Method, bool); Name() string; NumField() int; NumIn() int; NumMethod() int; NumOut() int; Out(i int) reflect.Type; PkgPath() string; Size() uintptr; String() string; common() *reflect.rtype; uncommon() *reflect.uncommonType}",
      "type" : "Interface",
      "underlying" : 120
    }, {
      "name" : "func(u reflect.Type) bool",
      "params" : 122,
      "recv" : 26,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 121,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "u",
        "type" : 119
      } ],
      "name" : "(u reflect.Type)",
      "type" : "Tuple",
      "underlying" : 122
    }, {
      "name" : "func() reflect.ChanDir",
      "params" : 22,
      "recv" : 27,
      "results" : 124,
      "type" : "Signature",
      "underlying" : 123,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 125
      } ],
      "name" : "(reflect.ChanDir)",
      "type" : "Tuple",
      "underlying" : 124
    }, {
      "local-name" : "ChanDir",
      "name" : "reflect.ChanDir",
      "package" : 1,
      "type" : "Named",
      "underlying" : 83
    }, {
      "name" : "func() reflect.Type",
      "params" : 22,
      "recv" : 28,
      "results" : 127,
      "type" : "Signature",
      "underlying" : 126,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 119
      } ],
      "name" : "(reflect.Type)",
      "type" : "Tuple",
      "underlying" : 127
    }, {
      "name" : "func(i int) reflect.StructField",
      "params" : 129,
      "recv" : 29,
      "results" : 130,
      "type" : "Signature",
      "underlying" : 128,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 83
      } ],
      "name" : "(i int)",
      "type" : "Tuple",
      "underlying" : 129
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 131
      } ],
      "name" : "(reflect.StructField)",
      "type" : "Tuple",
      "underlying" : 130
    }, {
      "local-name" : "StructField",
      "name" : "reflect.StructField",
      "package" : 1,
      "type" : "Named",
      "underlying" : 132
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 74
      }, {
        "name" : "PkgPath",
        "type" : 74
      }, {
        "name" : "Type",
        "type" : 119
      }, {
        "name" : "Tag",
        "type" : 133
      }, {
        "name" : "Offset",
        "type" : 7
      }, {
        "name" : "Index",
        "type" : 134
      }, {
        "name" : "Anonymous",
        "type" : 15
      } ],
      "name" : "struct{Name string; PkgPath string; Type reflect.Type; Tag reflect.StructTag; Offset uintptr; Index []int; Anonymous bool}",
      "type" : "Struct",
      "underlying" : 132
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 1,
      "type" : "Named",
      "underlying" : 74
    }, {
      "elem" : 83,
      "name" : "[]int",
      "type" : "Slice",
      "underlying" : 134
    }, {
      "name" : "func(index []int) reflect.StructField",
      "params" : 136,
      "recv" : 30,
      "results" : 130,
      "type" : "Signature",
      "underlying" : 135,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "index",
        "type" : 134
      } ],
      "name" : "(index []int)",
      "type" : "Tuple",
      "underlying" : 136
    }, {
      "name" : "func(name string) (reflect.StructField, bool)",
      "params" : 138,
      "recv" : 31,
      "results" : 139,
      "type" : "Signature",
      "underlying" : 137,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 74
      } ],
      "name" : "(name string)",
      "type" : "Tuple",
      "underlying" : 138
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 131
      }, {
        "name" : "",
        "type" : 15
      } ],
      "name" : "(reflect.StructField, bool)",
      "type" : "Tuple",
      "underlying" : 139
    }, {
      "name" : "func(match func(string) bool) (reflect.StructField, bool)",
      "params" : 141,
      "recv" : 32,
      "results" : 139,
      "type" : "Signature",
      "underlying" : 140,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "match",
        "type" : 142
      } ],
      "name" : "(match func(string) bool)",
      "type" : "Tuple",
      "underlying" : 141
    }, {
      "name" : "func(string) bool",
      "params" : 143,
      "recv" : -1,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 142,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 74
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 143
    }, {
      "name" : "func(i int) reflect.Type",
      "params" : 129,
      "recv" : 33,
      "results" : 127,
      "type" : "Signature",
      "underlying" : 144,
      "variadic" : false
    }, {
      "name" : "func() reflect.Kind",
      "params" : 22,
      "recv" : 34,
      "results" : 146,
      "type" : "Signature",
      "underlying" : 145,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 147
      } ],
      "name" : "(reflect.Kind)",
      "type" : "Tuple",
      "underlying" : 146
    }, {
      "local-name" : "Kind",
      "name" : "reflect.Kind",
      "package" : 1,
      "type" : "Named",
      "underlying" : 148
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 148
    }, {
      "name" : "func(int) reflect.Method",
      "params" : 82,
      "recv" : 35,
      "results" : 150,
      "type" : "Signature",
      "underlying" : 149,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 151
      } ],
      "name" : "(reflect.Method)",
      "type" : "Tuple",
      "underlying" : 150
    }, {
      "local-name" : "Method",
      "name" : "reflect.Method",
      "package" : 1,
      "type" : "Named",
      "underlying" : 152
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 74
      }, {
        "name" : "PkgPath",
        "type" : 74
      }, {
        "name" : "Type",
        "type" : 119
      }, {
        "name" : "Func",
        "type" : 2
      }, {
        "name" : "Index",
        "type" : 83
      } ],
      "name" : "struct{Name string; PkgPath string; Type reflect.Type; Func reflect.Value; Index int}",
      "type" : "Struct",
      "underlying" : 152
    }, {
      "name" : "func(string) (reflect.Method, bool)",
      "params" : 143,
      "recv" : 36,
      "results" : 154,
      "type" : "Signature",
      "underlying" : 153,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 151
      }, {
        "name" : "",
        "type" : 15
      } ],
      "name" : "(reflect.Method, bool)",
      "type" : "Tuple",
      "underlying" : 154
    }, {
      "name" : "func() string",
      "params" : 22,
      "recv" : 37,
      "results" : 143,
      "type" : "Signature",
      "underlying" : 155,
      "variadic" : false
    }, {
      "name" : "func() uintptr",
      "params" : 22,
      "recv" : 38,
      "results" : 157,
      "type" : "Signature",
      "underlying" : 156,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 7
      } ],
      "name" : "(uintptr)",
      "type" : "Tuple",
      "underlying" : 157
    }, {
      "name" : "func() *reflect.rtype",
      "params" : 22,
      "recv" : 39,
      "results" : 159,
      "type" : "Signature",
      "underlying" : 158,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 4
      } ],
      "name" : "(*reflect.rtype)",
      "type" : "Tuple",
      "underlying" : 159
    }, {
      "name" : "func() *reflect.uncommonType",
      "params" : 22,
      "recv" : 40,
      "results" : 161,
      "type" : "Signature",
      "underlying" : 160,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 162
      } ],
      "name" : "(*reflect.uncommonType)",
      "type" : "Tuple",
      "underlying" : 161
    }, {
      "elem" : 163,
      "name" : "*reflect.uncommonType",
      "type" : "Pointer",
      "underlying" : 162
    }, {
      "local-name" : "uncommonType",
      "name" : "reflect.uncommonType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 164
    }, {
      "fields" : [ {
        "name" : "pkgPath",
        "type" : 18
      }, {
        "name" : "mcount",
        "type" : 165
      }, {
        "name" : "xcount",
        "type" : 165
      }, {
        "name" : "moff",
        "type" : 8
      }, {
        "name" : "_",
        "type" : 8
      } ],
      "name" : "struct{pkgPath reflect.nameOff; mcount uint16; xcount uint16; moff uint32; _ uint32}",
      "type" : "Struct",
      "underlying" : 164
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 165
    }, {
      "local-name" : "EncodeOptions",
      "name" : "github.com/ugorji/go/codec.EncodeOptions",
      "package" : 0,
      "type" : "Named",
      "underlying" : 167
    }, {
      "fields" : [ {
        "name" : "StructToArray",
        "type" : 15
      }, {
        "name" : "Canonical",
        "type" : 15
      }, {
        "name" : "CheckCircularRef",
        "type" : 15
      }, {
        "name" : "RecursiveEmptyCheck",
        "type" : 15
      }, {
        "name" : "Raw",
        "type" : 15
      }, {
        "name" : "AsSymbols",
        "type" : 168
      } ],
      "name" : "struct{StructToArray bool; Canonical bool; CheckCircularRef bool; RecursiveEmptyCheck bool; Raw bool; AsSymbols github.com/ugorji/go/codec.AsSymbolFlag}",
      "type" : "Struct",
      "underlying" : 167
    }, {
      "local-name" : "AsSymbolFlag",
      "name" : "github.com/ugorji/go/codec.AsSymbolFlag",
      "package" : 0,
      "type" : "Named",
      "underlying" : 10
    }, {
      "local-name" : "DecodeOptions",
      "name" : "github.com/ugorji/go/codec.DecodeOptions",
      "package" : 0,
      "type" : "Named",
      "underlying" : 170
    }, {
      "fields" : [ {
        "name" : "MapType",
        "type" : 119
      }, {
        "name" : "SliceType",
        "type" : 119
      }, {
        "name" : "MaxInitLen",
        "type" : 83
      }, {
        "name" : "ErrorIfNoField",
        "type" : 15
      }, {
        "name" : "ErrorIfNoArrayExpand",
        "type" : 15
      }, {
        "name" : "SignedInteger",
        "type" : 15
      }, {
        "name" : "MapValueReset",
        "type" : 15
      }, {
        "name" : "InterfaceReset",
        "type" : 15
      }, {
        "name" : "InternString",
        "type" : 15
      }, {
        "name" : "PreferArrayOverSlice",
        "type" : 15
      } ],
      "name" : "struct{MapType reflect.Type; SliceType reflect.Type; MaxInitLen int; ErrorIfNoField bool; ErrorIfNoArrayExpand bool; SignedInteger bool; MapValueReset bool; InterfaceReset bool; InternString bool; PreferArrayOverSlice bool}",
      "type" : "Struct",
      "underlying" : 170
    }, {
      "local-name" : "Handle",
      "name" : "github.com/ugorji/go/codec.Handle",
      "package" : 0,
      "type" : "Named",
      "underlying" : 172
    }, {
      "methods" : [ {
        "name" : "getBasicHandle",
        "type" : 173
      }, {
        "name" : "isBinary",
        "type" : 31
      }, {
        "name" : "newDecDriver",
        "type" : 175
      }, {
        "name" : "newEncDriver",
        "type" : 178
      } ],
      "name" : "interface{getBasicHandle() *github.com/ugorji/go/codec.BasicHandle; isBinary() bool; newDecDriver(r *github.com/ugorji/go/codec.Decoder) github.com/ugorji/go/codec.decDriver; newEncDriver(w *github.com/ugorji/go/codec.Encoder) github.com/ugorji/go/codec.encDriver}",
      "type" : "Interface",
      "underlying" : 172
    }, {
      "name" : "func() *github.com/ugorji/go/codec.BasicHandle",
      "params" : 22,
      "recv" : 41,
      "results" : 174,
      "type" : "Signature",
      "underlying" : 173,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 104
      } ],
      "name" : "(*github.com/ugorji/go/codec.BasicHandle)",
      "type" : "Tuple",
      "underlying" : 174
    }, {
      "name" : "func(r *github.com/ugorji/go/codec.Decoder) github.com/ugorji/go/codec.decDriver",
      "params" : 176,
      "recv" : 42,
      "results" : 177,
      "type" : "Signature",
      "underlying" : 175,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "r",
        "type" : 26
      } ],
      "name" : "(r *github.com/ugorji/go/codec.Decoder)",
      "type" : "Tuple",
      "underlying" : 176
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 29
      } ],
      "name" : "(github.com/ugorji/go/codec.decDriver)",
      "type" : "Tuple",
      "underlying" : 177
    }, {
      "name" : "func(w *github.com/ugorji/go/codec.Encoder) github.com/ugorji/go/codec.encDriver",
      "params" : 179,
      "recv" : 62,
      "results" : 274,
      "type" : "Signature",
      "underlying" : 178,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "w",
        "type" : 180
      } ],
      "name" : "(w *github.com/ugorji/go/codec.Encoder)",
      "type" : "Tuple",
      "underlying" : 179
    }, {
      "elem" : 181,
      "name" : "*github.com/ugorji/go/codec.Encoder",
      "type" : "Pointer",
      "underlying" : 180
    }, {
      "local-name" : "Encoder",
      "name" : "github.com/ugorji/go/codec.Encoder",
      "package" : 0,
      "type" : "Named",
      "underlying" : 182
    }, {
      "fields" : [ {
        "name" : "e",
        "type" : 183
      }, {
        "name" : "w",
        "type" : 209
      }, {
        "name" : "s",
        "type" : 216
      }, {
        "name" : "ci",
        "type" : 236
      }, {
        "name" : "be",
        "type" : 15
      }, {
        "name" : "js",
        "type" : 15
      }, {
        "name" : "wi",
        "type" : 238
      }, {
        "name" : "wb",
        "type" : 260
      }, {
        "name" : "h",
        "type" : 104
      }, {
        "name" : "hh",
        "type" : 171
      }, {
        "name" : "cr",
        "type" : 263
      }, {
        "name" : "as",
        "type" : 268
      }, {
        "name" : "f",
        "type" : 271
      }, {
        "name" : "b",
        "type" : 273
      } ],
      "name" : "struct{e github.com/ugorji/go/codec.encDriver; w github.com/ugorji/go/codec.encWriter; s []github.com/ugorji/go/codec.encRtidFn; ci github.com/ugorji/go/codec.set; be bool; js bool; wi github.com/ugorji/go/codec.ioEncWriter; wb github.com/ugorji/go/codec.bytesEncWriter; h *github.com/ugorji/go/codec.BasicHandle; hh github.com/ugorji/go/codec.Handle; cr github.com/ugorji/go/codec.containerStateRecv; as github.com/ugorji/go/codec.encDriverAsis; f map[uintptr]*github.com/ugorji/go/codec.encFn; b [32]byte}",
      "type" : "Struct",
      "underlying" : 182
    }, {
      "local-name" : "encDriver",
      "name" : "github.com/ugorji/go/codec.encDriver",
      "package" : 0,
      "type" : "Named",
      "underlying" : 184
    }, {
      "methods" : [ {
        "name" : "EncodeArrayStart",
        "type" : 185
      }, {
        "name" : "EncodeBool",
        "type" : 187
      }, {
        "name" : "EncodeBuiltin",
        "type" : 37
      }, {
        "name" : "EncodeExt",
        "type" : 188
      }, {
        "name" : "EncodeFloat32",
        "type" : 190
      }, {
        "name" : "EncodeFloat64",
        "type" : 193
      }, {
        "name" : "EncodeInt",
        "type" : 194
      }, {
        "name" : "EncodeMapStart",
        "type" : 185
      }, {
        "name" : "EncodeNil",
        "type" : 71
      }, {
        "name" : "EncodeRawExt",
        "type" : 195
      }, {
        "name" : "EncodeString",
        "type" : 200
      }, {
        "name" : "EncodeStringBytes",
        "type" : 203
      }, {
        "name" : "EncodeSymbol",
        "type" : 205
      }, {
        "name" : "EncodeUint",
        "type" : 207
      }, {
        "name" : "IsBuiltinType",
        "type" : 79
      }, {
        "name" : "reset",
        "type" : 71
      } ],
      "name" : "interface{EncodeArrayStart(length int); EncodeBool(b bool); EncodeBuiltin(rt uintptr, v interface{}); EncodeExt(v interface{}, xtag uint64, ext github.com/ugorji/go/codec.Ext, e *github.com/ugorji/go/codec.Encoder); EncodeFloat32(f float32); EncodeFloat64(f float64); EncodeInt(i int64); EncodeMapStart(length int); EncodeNil(); EncodeRawExt(re *github.com/ugorji/go/codec.RawExt, e *github.com/ugorji/go/codec.Encoder); EncodeString(c github.com/ugorji/go/codec.charEncoding, v string); EncodeStringBytes(c github.com/ugorji/go/codec.charEncoding, v []byte); EncodeSymbol(v string); EncodeUint(i uint64); IsBuiltinType(rt uintptr) bool; reset()}",
      "type" : "Interface",
      "underlying" : 184
    }, {
      "name" : "func(length int)",
      "params" : 186,
      "recv" : 43,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 185,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "length",
        "type" : 83
      } ],
      "name" : "(length int)",
      "type" : "Tuple",
      "underlying" : 186
    }, {
      "name" : "func(b bool)",
      "params" : 36,
      "recv" : 44,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 187,
      "variadic" : false
    }, {
      "name" : "func(v interface{}, xtag uint64, ext github.com/ugorji/go/codec.Ext, e *github.com/ugorji/go/codec.Encoder)",
      "params" : 189,
      "recv" : 45,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 188,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "v",
        "type" : 39
      }, {
        "name" : "xtag",
        "type" : 46
      }, {
        "name" : "ext",
        "type" : 47
      }, {
        "name" : "e",
        "type" : 180
      } ],
      "name" : "(v interface{}, xtag uint64, ext github.com/ugorji/go/codec.Ext, e *github.com/ugorji/go/codec.Encoder)",
      "type" : "Tuple",
      "underlying" : 189
    }, {
      "name" : "func(f float32)",
      "params" : 191,
      "recv" : 46,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 190,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "f",
        "type" : 192
      } ],
      "name" : "(f float32)",
      "type" : "Tuple",
      "underlying" : 191
    }, {
      "name" : "float32",
      "type" : "Basic",
      "underlying" : 192
    }, {
      "name" : "func(f float64)",
      "params" : 65,
      "recv" : 47,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 193,
      "variadic" : false
    }, {
      "name" : "func(i int64)",
      "params" : 69,
      "recv" : 48,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 194,
      "variadic" : false
    }, {
      "name" : "func(re *github.com/ugorji/go/codec.RawExt, e *github.com/ugorji/go/codec.Encoder)",
      "params" : 196,
      "recv" : 49,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 195,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "re",
        "type" : 197
      }, {
        "name" : "e",
        "type" : 180
      } ],
      "name" : "(re *github.com/ugorji/go/codec.RawExt, e *github.com/ugorji/go/codec.Encoder)",
      "type" : "Tuple",
      "underlying" : 196
    }, {
      "elem" : 198,
      "name" : "*github.com/ugorji/go/codec.RawExt",
      "type" : "Pointer",
      "underlying" : 197
    }, {
      "local-name" : "RawExt",
      "name" : "github.com/ugorji/go/codec.RawExt",
      "package" : 0,
      "type" : "Named",
      "underlying" : 199
    }, {
      "fields" : [ {
        "name" : "Tag",
        "type" : 46
      }, {
        "name" : "Data",
        "type" : 42
      }, {
        "name" : "Value",
        "type" : 39
      } ],
      "name" : "struct{Tag uint64; Data []byte; Value interface{}}",
      "type" : "Struct",
      "underlying" : 199
    }, {
      "name" : "func(c github.com/ugorji/go/codec.charEncoding, v string)",
      "params" : 201,
      "recv" : 50,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 200,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "c",
        "type" : 202
      }, {
        "name" : "v",
        "type" : 74
      } ],
      "name" : "(c github.com/ugorji/go/codec.charEncoding, v string)",
      "type" : "Tuple",
      "underlying" : 201
    }, {
      "local-name" : "charEncoding",
      "name" : "github.com/ugorji/go/codec.charEncoding",
      "package" : 0,
      "type" : "Named",
      "underlying" : 10
    }, {
      "name" : "func(c github.com/ugorji/go/codec.charEncoding, v []byte)",
      "params" : 204,
      "recv" : 51,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 203,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "c",
        "type" : 202
      }, {
        "name" : "v",
        "type" : 42
      } ],
      "name" : "(c github.com/ugorji/go/codec.charEncoding, v []byte)",
      "type" : "Tuple",
      "underlying" : 204
    }, {
      "name" : "func(v string)",
      "params" : 206,
      "recv" : 52,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 205,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "v",
        "type" : 74
      } ],
      "name" : "(v string)",
      "type" : "Tuple",
      "underlying" : 206
    }, {
      "name" : "func(i uint64)",
      "params" : 208,
      "recv" : 53,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 207,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 46
      } ],
      "name" : "(i uint64)",
      "type" : "Tuple",
      "underlying" : 208
    }, {
      "local-name" : "encWriter",
      "name" : "github.com/ugorji/go/codec.encWriter",
      "package" : 0,
      "type" : "Named",
      "underlying" : 210
    }, {
      "methods" : [ {
        "name" : "atEndOfEncode",
        "type" : 71
      }, {
        "name" : "writeb",
        "type" : 93
      }, {
        "name" : "writen1",
        "type" : 211
      }, {
        "name" : "writen2",
        "type" : 213
      }, {
        "name" : "writestr",
        "type" : 215
      } ],
      "name" : "interface{atEndOfEncode(); writeb([]byte); writen1(byte); writen2(byte, byte); writestr(string)}",
      "type" : "Interface",
      "underlying" : 210
    }, {
      "name" : "func(byte)",
      "params" : 212,
      "recv" : 54,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 211,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 17
      } ],
      "name" : "(byte)",
      "type" : "Tuple",
      "underlying" : 212
    }, {
      "name" : "func(byte, byte)",
      "params" : 214,
      "recv" : 55,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 213,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 17
      }, {
        "name" : "",
        "type" : 17
      } ],
      "name" : "(byte, byte)",
      "type" : "Tuple",
      "underlying" : 214
    }, {
      "name" : "func(string)",
      "params" : 143,
      "recv" : 56,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 215,
      "variadic" : false
    }, {
      "elem" : 217,
      "name" : "[]github.com/ugorji/go/codec.encRtidFn",
      "type" : "Slice",
      "underlying" : 216
    }, {
      "local-name" : "encRtidFn",
      "name" : "github.com/ugorji/go/codec.encRtidFn",
      "package" : 0,
      "type" : "Named",
      "underlying" : 218
    }, {
      "fields" : [ {
        "name" : "rtid",
        "type" : 7
      }, {
        "name" : "fn",
        "type" : 219
      } ],
      "name" : "struct{rtid uintptr; fn github.com/ugorji/go/codec.encFn}",
      "type" : "Struct",
      "underlying" : 218
    }, {
      "local-name" : "encFn",
      "name" : "github.com/ugorji/go/codec.encFn",
      "package" : 0,
      "type" : "Named",
      "underlying" : 220
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 221
      }, {
        "name" : "f",
        "type" : 233
      } ],
      "name" : "struct{i github.com/ugorji/go/codec.encFnInfo; f func(*github.com/ugorji/go/codec.encFnInfo, reflect.Value)}",
      "type" : "Struct",
      "underlying" : 220
    }, {
      "local-name" : "encFnInfo",
      "name" : "github.com/ugorji/go/codec.encFnInfo",
      "package" : 0,
      "type" : "Named",
      "underlying" : 222
    }, {
      "fields" : [ {
        "name" : "e",
        "type" : 180
      }, {
        "name" : "ti",
        "type" : 223
      }, {
        "name" : "xfFn",
        "type" : 47
      }, {
        "name" : "xfTag",
        "type" : 46
      }, {
        "name" : "seq",
        "type" : 232
      } ],
      "name" : "struct{e *github.com/ugorji/go/codec.Encoder; ti *github.com/ugorji/go/codec.typeInfo; xfFn github.com/ugorji/go/codec.Ext; xfTag uint64; seq github.com/ugorji/go/codec.seqType}",
      "type" : "Struct",
      "underlying" : 222
    }, {
      "elem" : 224,
      "name" : "*github.com/ugorji/go/codec.typeInfo",
      "type" : "Pointer",
      "underlying" : 223
    }, {
      "local-name" : "typeInfo",
      "name" : "github.com/ugorji/go/codec.typeInfo",
      "package" : 0,
      "type" : "Named",
      "underlying" : 225
    }, {
      "fields" : [ {
        "name" : "sfi",
        "type" : 226
      }, {
        "name" : "sfip",
        "type" : 226
      }, {
        "name" : "rt",
        "type" : 119
      }, {
        "name" : "rtid",
        "type" : 7
      }, {
        "name" : "numMeth",
        "type" : 165
      }, {
        "name" : "base",
        "type" : 119
      }, {
        "name" : "baseId",
        "type" : 7
      }, {
        "name" : "baseIndir",
        "type" : 231
      }, {
        "name" : "mbs",
        "type" : 15
      }, {
        "name" : "bm",
        "type" : 15
      }, {
        "name" : "bunm",
        "type" : 15
      }, {
        "name" : "bmIndir",
        "type" : 231
      }, {
        "name" : "bunmIndir",
        "type" : 231
      }, {
        "name" : "tm",
        "type" : 15
      }, {
        "name" : "tunm",
        "type" : 15
      }, {
        "name" : "tmIndir",
        "type" : 231
      }, {
        "name" : "tunmIndir",
        "type" : 231
      }, {
        "name" : "jm",
        "type" : 15
      }, {
        "name" : "junm",
        "type" : 15
      }, {
        "name" : "jmIndir",
        "type" : 231
      }, {
        "name" : "junmIndir",
        "type" : 231
      }, {
        "name" : "cs",
        "type" : 15
      }, {
        "name" : "csIndir",
        "type" : 231
      }, {
        "name" : "toArray",
        "type" : 15
      } ],
      "name" : "struct{sfi []*github.com/ugorji/go/codec.structFieldInfo; sfip []*github.com/ugorji/go/codec.structFieldInfo; rt reflect.Type; rtid uintptr; numMeth uint16; base reflect.Type; baseId uintptr; baseIndir int8; mbs bool; bm bool; bunm bool; bmIndir int8; bunmIndir int8; tm bool; tunm bool; tmIndir int8; tunmIndir int8; jm bool; junm bool; jmIndir int8; junmIndir int8; cs bool; csIndir int8; toArray bool}",
      "type" : "Struct",
      "underlying" : 225
    }, {
      "elem" : 227,
      "name" : "[]*github.com/ugorji/go/codec.structFieldInfo",
      "type" : "Slice",
      "underlying" : 226
    }, {
      "elem" : 228,
      "name" : "*github.com/ugorji/go/codec.structFieldInfo",
      "type" : "Pointer",
      "underlying" : 227
    }, {
      "local-name" : "structFieldInfo",
      "name" : "github.com/ugorji/go/codec.structFieldInfo",
      "package" : 0,
      "type" : "Named",
      "underlying" : 229
    }, {
      "fields" : [ {
        "name" : "encName",
        "type" : 74
      }, {
        "name" : "fieldName",
        "type" : 74
      }, {
        "name" : "is",
        "type" : 134
      }, {
        "name" : "i",
        "type" : 230
      }, {
        "name" : "omitEmpty",
        "type" : 15
      }, {
        "name" : "toArray",
        "type" : 15
      } ],
      "name" : "struct{encName string; fieldName string; is []int; i int16; omitEmpty bool; toArray bool}",
      "type" : "Struct",
      "underlying" : 229
    }, {
      "name" : "int16",
      "type" : "Basic",
      "underlying" : 230
    }, {
      "name" : "int8",
      "type" : "Basic",
      "underlying" : 231
    }, {
      "local-name" : "seqType",
      "name" : "github.com/ugorji/go/codec.seqType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 10
    }, {
      "name" : "func(*github.com/ugorji/go/codec.encFnInfo, reflect.Value)",
      "params" : 234,
      "recv" : -1,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 233,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 235
      }, {
        "name" : "",
        "type" : 2
      } ],
      "name" : "(*github.com/ugorji/go/codec.encFnInfo, reflect.Value)",
      "type" : "Tuple",
      "underlying" : 234
    }, {
      "elem" : 221,
      "name" : "*github.com/ugorji/go/codec.encFnInfo",
      "type" : "Pointer",
      "underlying" : 235
    }, {
      "local-name" : "set",
      "name" : "github.com/ugorji/go/codec.set",
      "package" : 0,
      "type" : "Named",
      "underlying" : 237
    }, {
      "elem" : 7,
      "name" : "[]uintptr",
      "type" : "Slice",
      "underlying" : 237
    }, {
      "local-name" : "ioEncWriter",
      "name" : "github.com/ugorji/go/codec.ioEncWriter",
      "package" : 0,
      "type" : "Named",
      "underlying" : 239
    }, {
      "fields" : [ {
        "name" : "w",
        "type" : 240
      }, {
        "name" : "s",
        "type" : 251
      } ],
      "name" : "struct{w github.com/ugorji/go/codec.ioEncWriterWriter; s github.com/ugorji/go/codec.simpleIoEncWriterWriter}",
      "type" : "Struct",
      "underlying" : 239
    }, {
      "local-name" : "ioEncWriterWriter",
      "name" : "github.com/ugorji/go/codec.ioEncWriterWriter",
      "package" : 0,
      "type" : "Named",
      "underlying" : 241
    }, {
      "methods" : [ {
        "name" : "Write",
        "type" : 242
      }, {
        "name" : "WriteByte",
        "type" : 247
      }, {
        "name" : "WriteString",
        "type" : 250
      } ],
      "name" : "interface{Write(p []byte) (n int, err error); WriteByte(c byte) error; WriteString(s string) (n int, err error)}",
      "type" : "Interface",
      "underlying" : 241
    }, {
      "name" : "func(p []byte) (n int, err error)",
      "params" : 243,
      "recv" : 57,
      "results" : 244,
      "type" : "Signature",
      "underlying" : 242,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "p",
        "type" : 42
      } ],
      "name" : "(p []byte)",
      "type" : "Tuple",
      "underlying" : 243
    }, {
      "fields" : [ {
        "name" : "n",
        "type" : 83
      }, {
        "name" : "err",
        "type" : 245
      } ],
      "name" : "(n int, err error)",
      "type" : "Tuple",
      "underlying" : 244
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 246
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 155
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 246
    }, {
      "name" : "func(c byte) error",
      "params" : 248,
      "recv" : 58,
      "results" : 249,
      "type" : "Signature",
      "underlying" : 247,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "c",
        "type" : 17
      } ],
      "name" : "(c byte)",
      "type" : "Tuple",
      "underlying" : 248
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 245
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 249
    }, {
      "name" : "func(s string) (n int, err error)",
      "params" : 73,
      "recv" : 59,
      "results" : 244,
      "type" : "Signature",
      "underlying" : 250,
      "variadic" : false
    }, {
      "local-name" : "simpleIoEncWriterWriter",
      "name" : "github.com/ugorji/go/codec.simpleIoEncWriterWriter",
      "package" : 0,
      "type" : "Named",
      "underlying" : 252
    }, {
      "fields" : [ {
        "name" : "w",
        "type" : 253
      }, {
        "name" : "bw",
        "type" : 255
      }, {
        "name" : "sw",
        "type" : 257
      }, {
        "name" : "bs",
        "type" : 259
      } ],
      "name" : "struct{w io.Writer; bw io.ByteWriter; sw github.com/ugorji/go/codec.ioEncStringWriter; bs [1]byte}",
      "type" : "Struct",
      "underlying" : 252
    }, {
      "local-name" : "Writer",
      "name" : "io.Writer",
      "package" : 4,
      "type" : "Named",
      "underlying" : 254
    }, {
      "methods" : [ {
        "name" : "Write",
        "type" : 242
      } ],
      "name" : "interface{Write(p []byte) (n int, err error)}",
      "type" : "Interface",
      "underlying" : 254
    }, {
      "local-name" : "ByteWriter",
      "name" : "io.ByteWriter",
      "package" : 4,
      "type" : "Named",
      "underlying" : 256
    }, {
      "methods" : [ {
        "name" : "WriteByte",
        "type" : 247
      } ],
      "name" : "interface{WriteByte(c byte) error}",
      "type" : "Interface",
      "underlying" : 256
    }, {
      "local-name" : "ioEncStringWriter",
      "name" : "github.com/ugorji/go/codec.ioEncStringWriter",
      "package" : 0,
      "type" : "Named",
      "underlying" : 258
    }, {
      "methods" : [ {
        "name" : "WriteString",
        "type" : 250
      } ],
      "name" : "interface{WriteString(s string) (n int, err error)}",
      "type" : "Interface",
      "underlying" : 258
    }, {
      "elem" : 17,
      "name" : "[1]byte",
      "type" : "Array",
      "underlying" : 259
    }, {
      "local-name" : "bytesEncWriter",
      "name" : "github.com/ugorji/go/codec.bytesEncWriter",
      "package" : 0,
      "type" : "Named",
      "underlying" : 261
    }, {
      "fields" : [ {
        "name" : "b",
        "type" : 42
      }, {
        "name" : "c",
        "type" : 83
      }, {
        "name" : "out",
        "type" : 262
      } ],
      "name" : "struct{b []byte; c int; out *[]byte}",
      "type" : "Struct",
      "underlying" : 261
    }, {
      "elem" : 42,
      "name" : "*[]byte",
      "type" : "Pointer",
      "underlying" : 262
    }, {
      "local-name" : "containerStateRecv",
      "name" : "github.com/ugorji/go/codec.containerStateRecv",
      "package" : 0,
      "type" : "Named",
      "underlying" : 264
    }, {
      "methods" : [ {
        "name" : "sendContainerState",
        "type" : 265
      } ],
      "name" : "interface{sendContainerState(github.com/ugorji/go/codec.containerState)}",
      "type" : "Interface",
      "underlying" : 264
    }, {
      "name" : "func(github.com/ugorji/go/codec.containerState)",
      "params" : 266,
      "recv" : 60,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 265,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 267
      } ],
      "name" : "(github.com/ugorji/go/codec.containerState)",
      "type" : "Tuple",
      "underlying" : 266
    }, {
      "local-name" : "containerState",
      "name" : "github.com/ugorji/go/codec.containerState",
      "package" : 0,
      "type" : "Named",
      "underlying" : 10
    }, {
      "local-name" : "encDriverAsis",
      "name" : "github.com/ugorji/go/codec.encDriverAsis",
      "package" : 0,
      "type" : "Named",
      "underlying" : 269
    }, {
      "methods" : [ {
        "name" : "EncodeAsis",
        "type" : 270
      } ],
      "name" : "interface{EncodeAsis(v []byte)}",
      "type" : "Interface",
      "underlying" : 269
    }, {
      "name" : "func(v []byte)",
      "params" : 76,
      "recv" : 61,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 270,
      "variadic" : false
    }, {
      "elem" : 272,
      "key" : 7,
      "name" : "map[uintptr]*github.com/ugorji/go/codec.encFn",
      "type" : "Map",
      "underlying" : 271
    }, {
      "elem" : 219,
      "name" : "*github.com/ugorji/go/codec.encFn",
      "type" : "Pointer",
      "underlying" : 272
    }, {
      "elem" : 17,
      "name" : "[32]byte",
      "type" : "Array",
      "underlying" : 273
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 183
      } ],
      "name" : "(github.com/ugorji/go/codec.encDriver)",
      "type" : "Tuple",
      "underlying" : 274
    }, {
      "local-name" : "bytesDecReader",
      "name" : "github.com/ugorji/go/codec.bytesDecReader",
      "package" : 0,
      "type" : "Named",
      "underlying" : 276
    }, {
      "fields" : [ {
        "name" : "b",
        "type" : 42
      }, {
        "name" : "c",
        "type" : 83
      }, {
        "name" : "a",
        "type" : 83
      }, {
        "name" : "t",
        "type" : 83
      } ],
      "name" : "struct{b []byte; c int; a int; t int}",
      "type" : "Struct",
      "underlying" : 276
    }, {
      "local-name" : "ioDecReader",
      "name" : "github.com/ugorji/go/codec.ioDecReader",
      "package" : 0,
      "type" : "Named",
      "underlying" : 278
    }, {
      "fields" : [ {
        "name" : "br",
        "type" : 279
      }, {
        "name" : "x",
        "type" : 288
      }, {
        "name" : "bs",
        "type" : 289
      }, {
        "name" : "n",
        "type" : 83
      }, {
        "name" : "tr",
        "type" : 42
      }, {
        "name" : "trb",
        "type" : 15
      } ],
      "name" : "struct{br github.com/ugorji/go/codec.decReaderByteScanner; x *[32]byte; bs github.com/ugorji/go/codec.ioDecByteScanner; n int; tr []byte; trb bool}",
      "type" : "Struct",
      "underlying" : 278
    }, {
      "local-name" : "decReaderByteScanner",
      "name" : "github.com/ugorji/go/codec.decReaderByteScanner",
      "package" : 0,
      "type" : "Named",
      "underlying" : 280
    }, {
      "methods" : [ {
        "name" : "Read",
        "type" : 242
      }, {
        "name" : "ReadByte",
        "type" : 281
      }, {
        "name" : "UnreadByte",
        "type" : 285
      } ],
      "name" : "interface{io.ByteScanner; io.Reader}",
      "type" : "Interface",
      "underlying" : 280
    }, {
      "name" : "func() (byte, error)",
      "params" : 22,
      "recv" : 63,
      "results" : 282,
      "type" : "Signature",
      "underlying" : 281,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 17
      }, {
        "name" : "",
        "type" : 245
      } ],
      "name" : "(byte, error)",
      "type" : "Tuple",
      "underlying" : 282
    }, {
      "local-name" : "ByteReader",
      "name" : "io.ByteReader",
      "package" : 4,
      "type" : "Named",
      "underlying" : 284
    }, {
      "methods" : [ {
        "name" : "ReadByte",
        "type" : 281
      } ],
      "name" : "interface{ReadByte() (byte, error)}",
      "type" : "Interface",
      "underlying" : 284
    }, {
      "name" : "func() error",
      "params" : 22,
      "recv" : 64,
      "results" : 249,
      "type" : "Signature",
      "underlying" : 285,
      "variadic" : false
    }, {
      "local-name" : "ByteScanner",
      "name" : "io.ByteScanner",
      "package" : 4,
      "type" : "Named",
      "underlying" : 287
    }, {
      "methods" : [ {
        "name" : "ReadByte",
        "type" : 281
      }, {
        "name" : "UnreadByte",
        "type" : 285
      } ],
      "name" : "interface{UnreadByte() error; io.ByteReader}",
      "type" : "Interface",
      "underlying" : 287
    }, {
      "elem" : 273,
      "name" : "*[32]byte",
      "type" : "Pointer",
      "underlying" : 288
    }, {
      "local-name" : "ioDecByteScanner",
      "name" : "github.com/ugorji/go/codec.ioDecByteScanner",
      "package" : 0,
      "type" : "Named",
      "underlying" : 290
    }, {
      "fields" : [ {
        "name" : "r",
        "type" : 291
      }, {
        "name" : "l",
        "type" : 17
      }, {
        "name" : "ls",
        "type" : 17
      }, {
        "name" : "b",
        "type" : 259
      } ],
      "name" : "struct{r io.Reader; l byte; ls byte; b [1]byte}",
      "type" : "Struct",
      "underlying" : 290
    }, {
      "local-name" : "Reader",
      "name" : "io.Reader",
      "package" : 4,
      "type" : "Named",
      "underlying" : 292
    }, {
      "methods" : [ {
        "name" : "Read",
        "type" : 242
      } ],
      "name" : "interface{Read(p []byte) (n int, err error)}",
      "type" : "Interface",
      "underlying" : 292
    }, {
      "elem" : 294,
      "name" : "[]github.com/ugorji/go/codec.decRtidFn",
      "type" : "Slice",
      "underlying" : 293
    }, {
      "local-name" : "decRtidFn",
      "name" : "github.com/ugorji/go/codec.decRtidFn",
      "package" : 0,
      "type" : "Named",
      "underlying" : 295
    }, {
      "fields" : [ {
        "name" : "rtid",
        "type" : 7
      }, {
        "name" : "fn",
        "type" : 296
      } ],
      "name" : "struct{rtid uintptr; fn github.com/ugorji/go/codec.decFn}",
      "type" : "Struct",
      "underlying" : 295
    }, {
      "local-name" : "decFn",
      "name" : "github.com/ugorji/go/codec.decFn",
      "package" : 0,
      "type" : "Named",
      "underlying" : 297
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 24
      }, {
        "name" : "f",
        "type" : 298
      } ],
      "name" : "struct{i github.com/ugorji/go/codec.decFnInfo; f func(*github.com/ugorji/go/codec.decFnInfo, reflect.Value)}",
      "type" : "Struct",
      "underlying" : 297
    }, {
      "name" : "func(*github.com/ugorji/go/codec.decFnInfo, reflect.Value)",
      "params" : 299,
      "recv" : -1,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 298,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 23
      }, {
        "name" : "",
        "type" : 2
      } ],
      "name" : "(*github.com/ugorji/go/codec.decFnInfo, reflect.Value)",
      "type" : "Tuple",
      "underlying" : 299
    }, {
      "elem" : 301,
      "key" : 7,
      "name" : "map[uintptr]*github.com/ugorji/go/codec.decFn",
      "type" : "Map",
      "underlying" : 300
    }, {
      "elem" : 296,
      "name" : "*github.com/ugorji/go/codec.decFn",
      "type" : "Pointer",
      "underlying" : 301
    }, {
      "local-name" : "decNaked",
      "name" : "github.com/ugorji/go/codec.decNaked",
      "package" : 0,
      "type" : "Named",
      "underlying" : 303
    }, {
      "fields" : [ {
        "name" : "u",
        "type" : 46
      }, {
        "name" : "i",
        "type" : 70
      }, {
        "name" : "f",
        "type" : 66
      }, {
        "name" : "l",
        "type" : 42
      }, {
        "name" : "s",
        "type" : 74
      }, {
        "name" : "t",
        "type" : 304
      }, {
        "name" : "b",
        "type" : 15
      }, {
        "name" : "v",
        "type" : 34
      }, {
        "name" : "is",
        "type" : 316
      }, {
        "name" : "ms",
        "type" : 317
      }, {
        "name" : "ns",
        "type" : 319
      }, {
        "name" : "ss",
        "type" : 321
      }, {
        "name" : "ia",
        "type" : 322
      }, {
        "name" : "ma",
        "type" : 323
      }, {
        "name" : "na",
        "type" : 324
      }, {
        "name" : "sa",
        "type" : 325
      } ],
      "name" : "struct{u uint64; i int64; f float64; l []byte; s string; t time.Time; b bool; v github.com/ugorji/go/codec.valueType; is []interface{}; ms []map[interface{}]interface{}; ns []map[string]interface{}; ss [][]interface{}; ia [4]interface{}; ma [4]map[interface{}]interface{}; na [4]map[string]interface{}; sa [4][]interface{}}",
      "type" : "Struct",
      "underlying" : 303
    }, {
      "local-name" : "Time",
      "name" : "time.Time",
      "package" : 5,
      "type" : "Named",
      "underlying" : 305
    }, {
      "fields" : [ {
        "name" : "wall",
        "type" : 46
      }, {
        "name" : "ext",
        "type" : 70
      }, {
        "name" : "loc",
        "type" : 306
      } ],
      "name" : "struct{wall uint64; ext int64; loc *time.Location}",
      "type" : "Struct",
      "underlying" : 305
    }, {
      "elem" : 307,
      "name" : "*time.Location",
      "type" : "Pointer",
      "underlying" : 306
    }, {
      "local-name" : "Location",
      "name" : "time.Location",
      "package" : 5,
      "type" : "Named",
      "underlying" : 308
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 74
      }, {
        "name" : "zone",
        "type" : 309
      }, {
        "name" : "tx",
        "type" : 312
      }, {
        "name" : "cacheStart",
        "type" : 70
      }, {
        "name" : "cacheEnd",
        "type" : 70
      }, {
        "name" : "cacheZone",
        "type" : 315
      } ],
      "name" : "struct{name string; zone []time.zone; tx []time.zoneTrans; cacheStart int64; cacheEnd int64; cacheZone *time.zone}",
      "type" : "Struct",
      "underlying" : 308
    }, {
      "elem" : 310,
      "name" : "[]time.zone",
      "type" : "Slice",
      "underlying" : 309
    }, {
      "local-name" : "zone",
      "name" : "time.zone",
      "package" : 5,
      "type" : "Named",
      "underlying" : 311
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 74
      }, {
        "name" : "offset",
        "type" : 83
      }, {
        "name" : "isDST",
        "type" : 15
      } ],
      "name" : "struct{name string; offset int; isDST bool}",
      "type" : "Struct",
      "underlying" : 311
    }, {
      "elem" : 313,
      "name" : "[]time.zoneTrans",
      "type" : "Slice",
      "underlying" : 312
    }, {
      "local-name" : "zoneTrans",
      "name" : "time.zoneTrans",
      "package" : 5,
      "type" : "Named",
      "underlying" : 314
    }, {
      "fields" : [ {
        "name" : "when",
        "type" : 70
      }, {
        "name" : "index",
        "type" : 10
      }, {
        "name" : "isstd",
        "type" : 15
      }, {
        "name" : "isutc",
        "type" : 15
      } ],
      "name" : "struct{when int64; index uint8; isstd bool; isutc bool}",
      "type" : "Struct",
      "underlying" : 314
    }, {
      "elem" : 310,
      "name" : "*time.zone",
      "type" : "Pointer",
      "underlying" : 315
    }, {
      "elem" : 39,
      "name" : "[]interface{}",
      "type" : "Slice",
      "underlying" : 316
    }, {
      "elem" : 318,
      "name" : "[]map[interface{}]interface{}",
      "type" : "Slice",
      "underlying" : 317
    }, {
      "elem" : 39,
      "key" : 39,
      "name" : "map[interface{}]interface{}",
      "type" : "Map",
      "underlying" : 318
    }, {
      "elem" : 320,
      "name" : "[]map[string]interface{}",
      "type" : "Slice",
      "underlying" : 319
    }, {
      "elem" : 39,
      "key" : 74,
      "name" : "map[string]interface{}",
      "type" : "Map",
      "underlying" : 320
    }, {
      "elem" : 316,
      "name" : "[][]interface{}",
      "type" : "Slice",
      "underlying" : 321
    }, {
      "elem" : 39,
      "name" : "[4]interface{}",
      "type" : "Array",
      "underlying" : 322
    }, {
      "elem" : 318,
      "name" : "[4]map[interface{}]interface{}",
      "type" : "Array",
      "underlying" : 323
    }, {
      "elem" : 320,
      "name" : "[4]map[string]interface{}",
      "type" : "Array",
      "underlying" : 324
    }, {
      "elem" : 316,
      "name" : "[4][]interface{}",
      "type" : "Array",
      "underlying" : 325
    }, {
      "local-name" : "ptrToRvMap",
      "name" : "github.com/ugorji/go/codec.ptrToRvMap",
      "package" : 0,
      "type" : "Named",
      "underlying" : 327
    }, {
      "fields" : [ {
        "name" : "a",
        "type" : 328
      }, {
        "name" : "v",
        "type" : 331
      } ],
      "name" : "struct{a [4]github.com/ugorji/go/codec.ptrToRVKV; v []github.com/ugorji/go/codec.ptrToRVKV}",
      "type" : "Struct",
      "underlying" : 327
    }, {
      "elem" : 329,
      "name" : "[4]github.com/ugorji/go/codec.ptrToRVKV",
      "type" : "Array",
      "underlying" : 328
    }, {
      "local-name" : "ptrToRVKV",
      "name" : "github.com/ugorji/go/codec.ptrToRVKV",
      "package" : 0,
      "type" : "Named",
      "underlying" : 330
    }, {
      "fields" : [ {
        "name" : "k",
        "type" : 7
      }, {
        "name" : "v",
        "type" : 2
      } ],
      "name" : "struct{k uintptr; v reflect.Value}",
      "type" : "Struct",
      "underlying" : 330
    }, {
      "elem" : 329,
      "name" : "[]github.com/ugorji/go/codec.ptrToRVKV",
      "type" : "Slice",
      "underlying" : 331
    }, {
      "elem" : 74,
      "key" : 74,
      "name" : "map[string]string",
      "type" : "Map",
      "underlying" : 332
    }, {
      "elem" : 334,
      "name" : "[]github.com/ugorji/go/codec.rtid2rv",
      "type" : "Slice",
      "underlying" : 333
    }, {
      "local-name" : "rtid2rv",
      "name" : "github.com/ugorji/go/codec.rtid2rv",
      "package" : 0,
      "type" : "Named",
      "underlying" : 335
    }, {
      "fields" : [ {
        "name" : "rtid",
        "type" : 7
      }, {
        "name" : "rv",
        "type" : 2
      } ],
      "name" : "struct{rtid uintptr; rv reflect.Value}",
      "type" : "Struct",
      "underlying" : 335
    }, {
      "elem" : 337,
      "name" : "*github.com/ugorji/go/codec.unsafeReflectValue",
      "type" : "Pointer",
      "underlying" : 336
    }, {
      "local-name" : "unsafeReflectValue",
      "name" : "github.com/ugorji/go/codec.unsafeReflectValue",
      "package" : 0,
      "type" : "Named",
      "underlying" : 338
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 13
      }, {
        "name" : "ptr",
        "type" : 13
      }, {
        "name" : "flag",
        "type" : 7
      } ],
      "name" : "struct{typ unsafe.Pointer; ptr unsafe.Pointer; flag uintptr}",
      "type" : "Struct",
      "underlying" : 338
    }, {
      "elem" : 2,
      "name" : "*reflect.Value",
      "type" : "Pointer",
      "underlying" : 339
    }, {
      "elem" : 230,
      "name" : "*int16",
      "type" : "Pointer",
      "underlying" : 340
    } ],
    "variables" : [ {
      "name" : "",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 52,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 52,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 58,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 58,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 84,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 84,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 84,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 84,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 84,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 84,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 84,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 84,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 119,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 119,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 119,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 119,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 119,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 119,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 119,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 119,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 119,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 119,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 119,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 119,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 119,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 119,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 119,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 171,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 171,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 183,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 183,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 183,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 183,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 183,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 183,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 183,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 183,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 183,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 183,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 183,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 209,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 209,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 209,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 240,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 240,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 240,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 263,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 268,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 171,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 283,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 286,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "f",
      "package" : 0,
      "type" : 23,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "rv",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "urv",
      "package" : 0,
      "type" : 336,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "ptr",
      "package" : 0,
      "type" : 13,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "d",
      "package" : 0,
      "type" : 26,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "d",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}