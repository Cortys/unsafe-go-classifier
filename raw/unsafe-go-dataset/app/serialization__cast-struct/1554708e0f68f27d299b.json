{
  "usage" : {
    "file" : "any.go",
    "label1" : "cast-struct",
    "label2" : "serialization",
    "line" : "322",
    "module" : "github.com/json-iterator/go",
    "pkg" : "github.com/json-iterator/go",
    "project" : "kubernetes/kubernetes",
    "snippet" : "func (codec *directAnyCodec) IsEmpty(ptr unsafe.Pointer) bool {",
    "version" : "v1.1.9"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 1 ],
      "exit" : false,
      "out-vars" : [ 1 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 1 ],
      "exit" : false,
      "out-vars" : [ 57 ],
      "decl-vars" : [ 57 ],
      "line-start" : 323,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "any"
          }
        } ],
        "right" : [ {
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "go-type" : 8,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 8,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Any"
                }
              },
              "go-type" : 215,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 215,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ptr",
                "variable" : 1
              }
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 323,
      "code" : "any := *(*Any)(ptr)",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 57 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 324,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 4,
          "kind" : "expression",
          "left" : {
            "arguments" : [ ],
            "ellipsis" : false,
            "function" : {
              "field" : {
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "Size"
              },
              "go-type" : 29,
              "kind" : "expression",
              "target" : {
                "go-type" : 8,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "any",
                  "variable" : 57
                }
              },
              "type" : "selector"
            },
            "go-type" : 31,
            "kind" : "expression",
            "type" : "call"
          },
          "operator" : "==",
          "right" : {
            "go-type" : 31,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 324,
      "code" : "return any.Size() == 0",
      "entry" : false,
      "use-vars" : [ 57 ]
    } ],
    "code" : "func (codec *directAnyCodec) IsEmpty(ptr unsafe.Pointer) bool {\n\tany := *(*Any)(ptr)\n\treturn any.Size() == 0\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "IsEmpty",
      "package" : 0,
      "type" : 0,
      "exported" : true
    }, {
      "name" : "Size",
      "package" : 0,
      "type" : 29,
      "exported" : true
    } ],
    "line-end" : 325,
    "line-start" : 322,
    "names" : [ "IsEmpty" ],
    "package" : 0,
    "packages" : [ {
      "name" : "jsoniter",
      "path" : "github.com/json-iterator/go"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "concurrent",
      "path" : "github.com/modern-go/concurrent"
    }, {
      "name" : "sync",
      "path" : "sync"
    }, {
      "name" : "atomic",
      "path" : "sync/atomic"
    }, {
      "name" : "reflect2",
      "path" : "github.com/modern-go/reflect2"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "io",
      "path" : "io"
    } ],
    "params" : [ 1 ],
    "receivers" : [ 0 ],
    "results" : [ 2 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(ptr unsafe.Pointer) bool",
      "params" : 1,
      "recv" : 0,
      "results" : 3,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ptr",
        "type" : 2
      } ],
      "name" : "(ptr unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 2
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 4
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 3
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 4
    }, {
      "elem" : 6,
      "name" : "*github.com/json-iterator/go.directAnyCodec",
      "type" : "Pointer",
      "underlying" : 5
    }, {
      "local-name" : "directAnyCodec",
      "name" : "github.com/json-iterator/go.directAnyCodec",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "fields" : [ ],
      "name" : "struct{}",
      "type" : "Struct",
      "underlying" : 7
    }, {
      "local-name" : "Any",
      "name" : "github.com/json-iterator/go.Any",
      "package" : 0,
      "type" : "Named",
      "underlying" : 9
    }, {
      "methods" : [ {
        "name" : "Get",
        "type" : 10
      }, {
        "name" : "GetInterface",
        "type" : 15
      }, {
        "name" : "Keys",
        "type" : 18
      }, {
        "name" : "LastError",
        "type" : 22
      }, {
        "name" : "MustBeValid",
        "type" : 28
      }, {
        "name" : "Size",
        "type" : 29
      }, {
        "name" : "ToBool",
        "type" : 32
      }, {
        "name" : "ToFloat32",
        "type" : 33
      }, {
        "name" : "ToFloat64",
        "type" : 36
      }, {
        "name" : "ToInt",
        "type" : 29
      }, {
        "name" : "ToInt32",
        "type" : 39
      }, {
        "name" : "ToInt64",
        "type" : 42
      }, {
        "name" : "ToString",
        "type" : 26
      }, {
        "name" : "ToUint",
        "type" : 45
      }, {
        "name" : "ToUint32",
        "type" : 48
      }, {
        "name" : "ToUint64",
        "type" : 51
      }, {
        "name" : "ToVal",
        "type" : 54
      }, {
        "name" : "ValueType",
        "type" : 56
      }, {
        "name" : "WriteTo",
        "type" : 59
      } ],
      "name" : "interface{Get(path ...interface{}) github.com/json-iterator/go.Any; GetInterface() interface{}; Keys() []string; LastError() error; MustBeValid() github.com/json-iterator/go.Any; Size() int; ToBool() bool; ToFloat32() float32; ToFloat64() float64; ToInt() int; ToInt32() int32; ToInt64() int64; ToString() string; ToUint() uint; ToUint32() uint32; ToUint64() uint64; ToVal(val interface{}); ValueType() github.com/json-iterator/go.ValueType; WriteTo(stream *github.com/json-iterator/go.Stream)}",
      "type" : "Interface",
      "underlying" : 9
    }, {
      "name" : "func(path ...interface{}) github.com/json-iterator/go.Any",
      "params" : 11,
      "recv" : 3,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 10,
      "variadic" : true
    }, {
      "fields" : [ {
        "name" : "path",
        "type" : 12
      } ],
      "name" : "(path []interface{})",
      "type" : "Tuple",
      "underlying" : 11
    }, {
      "elem" : 13,
      "name" : "[]interface{}",
      "type" : "Slice",
      "underlying" : 12
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 8
      } ],
      "name" : "(github.com/json-iterator/go.Any)",
      "type" : "Tuple",
      "underlying" : 14
    }, {
      "name" : "func() interface{}",
      "params" : 16,
      "recv" : 4,
      "results" : 17,
      "type" : "Signature",
      "underlying" : 15,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 16
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 13
      } ],
      "name" : "(interface{})",
      "type" : "Tuple",
      "underlying" : 17
    }, {
      "name" : "func() []string",
      "params" : 16,
      "recv" : 5,
      "results" : 19,
      "type" : "Signature",
      "underlying" : 18,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 20
      } ],
      "name" : "([]string)",
      "type" : "Tuple",
      "underlying" : 19
    }, {
      "elem" : 21,
      "name" : "[]string",
      "type" : "Slice",
      "underlying" : 20
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 21
    }, {
      "name" : "func() error",
      "params" : 16,
      "recv" : 7,
      "results" : 23,
      "type" : "Signature",
      "underlying" : 22,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 24
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 23
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 25
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 26
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 25
    }, {
      "name" : "func() string",
      "params" : 16,
      "recv" : 6,
      "results" : 27,
      "type" : "Signature",
      "underlying" : 26,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 21
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 27
    }, {
      "name" : "func() github.com/json-iterator/go.Any",
      "params" : 16,
      "recv" : 8,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 28,
      "variadic" : false
    }, {
      "name" : "func() int",
      "params" : 16,
      "recv" : 9,
      "results" : 30,
      "type" : "Signature",
      "underlying" : 29,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 31
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 30
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 31
    }, {
      "name" : "func() bool",
      "params" : 16,
      "recv" : 10,
      "results" : 3,
      "type" : "Signature",
      "underlying" : 32,
      "variadic" : false
    }, {
      "name" : "func() float32",
      "params" : 16,
      "recv" : 11,
      "results" : 34,
      "type" : "Signature",
      "underlying" : 33,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 35
      } ],
      "name" : "(float32)",
      "type" : "Tuple",
      "underlying" : 34
    }, {
      "name" : "float32",
      "type" : "Basic",
      "underlying" : 35
    }, {
      "name" : "func() float64",
      "params" : 16,
      "recv" : 12,
      "results" : 37,
      "type" : "Signature",
      "underlying" : 36,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 38
      } ],
      "name" : "(float64)",
      "type" : "Tuple",
      "underlying" : 37
    }, {
      "name" : "float64",
      "type" : "Basic",
      "underlying" : 38
    }, {
      "name" : "func() int32",
      "params" : 16,
      "recv" : 13,
      "results" : 40,
      "type" : "Signature",
      "underlying" : 39,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 41
      } ],
      "name" : "(int32)",
      "type" : "Tuple",
      "underlying" : 40
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 41
    }, {
      "name" : "func() int64",
      "params" : 16,
      "recv" : 14,
      "results" : 43,
      "type" : "Signature",
      "underlying" : 42,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 44
      } ],
      "name" : "(int64)",
      "type" : "Tuple",
      "underlying" : 43
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 44
    }, {
      "name" : "func() uint",
      "params" : 16,
      "recv" : 15,
      "results" : 46,
      "type" : "Signature",
      "underlying" : 45,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 47
      } ],
      "name" : "(uint)",
      "type" : "Tuple",
      "underlying" : 46
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 47
    }, {
      "name" : "func() uint32",
      "params" : 16,
      "recv" : 16,
      "results" : 49,
      "type" : "Signature",
      "underlying" : 48,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 50
      } ],
      "name" : "(uint32)",
      "type" : "Tuple",
      "underlying" : 49
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 50
    }, {
      "name" : "func() uint64",
      "params" : 16,
      "recv" : 17,
      "results" : 52,
      "type" : "Signature",
      "underlying" : 51,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 53
      } ],
      "name" : "(uint64)",
      "type" : "Tuple",
      "underlying" : 52
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 53
    }, {
      "name" : "func(val interface{})",
      "params" : 55,
      "recv" : 18,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 54,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "val",
        "type" : 13
      } ],
      "name" : "(val interface{})",
      "type" : "Tuple",
      "underlying" : 55
    }, {
      "name" : "func() github.com/json-iterator/go.ValueType",
      "params" : 16,
      "recv" : 19,
      "results" : 57,
      "type" : "Signature",
      "underlying" : 56,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 58
      } ],
      "name" : "(github.com/json-iterator/go.ValueType)",
      "type" : "Tuple",
      "underlying" : 57
    }, {
      "local-name" : "ValueType",
      "name" : "github.com/json-iterator/go.ValueType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 31
    }, {
      "name" : "func(stream *github.com/json-iterator/go.Stream)",
      "params" : 60,
      "recv" : 56,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 59,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "stream",
        "type" : 61
      } ],
      "name" : "(stream *github.com/json-iterator/go.Stream)",
      "type" : "Tuple",
      "underlying" : 60
    }, {
      "elem" : 62,
      "name" : "*github.com/json-iterator/go.Stream",
      "type" : "Pointer",
      "underlying" : 61
    }, {
      "local-name" : "Stream",
      "name" : "github.com/json-iterator/go.Stream",
      "package" : 0,
      "type" : "Named",
      "underlying" : 63
    }, {
      "fields" : [ {
        "name" : "cfg",
        "type" : 64
      }, {
        "name" : "out",
        "type" : 213
      }, {
        "name" : "buf",
        "type" : 173
      }, {
        "name" : "Error",
        "type" : 24
      }, {
        "name" : "indention",
        "type" : 31
      }, {
        "name" : "Attachment",
        "type" : 13
      } ],
      "name" : "struct{cfg *github.com/json-iterator/go.frozenConfig; out io.Writer; buf []byte; Error error; indention int; Attachment interface{}}",
      "type" : "Struct",
      "underlying" : 63
    }, {
      "elem" : 65,
      "name" : "*github.com/json-iterator/go.frozenConfig",
      "type" : "Pointer",
      "underlying" : 64
    }, {
      "local-name" : "frozenConfig",
      "name" : "github.com/json-iterator/go.frozenConfig",
      "package" : 0,
      "type" : "Named",
      "underlying" : 66
    }, {
      "fields" : [ {
        "name" : "configBeforeFrozen",
        "type" : 67
      }, {
        "name" : "sortMapKeys",
        "type" : 4
      }, {
        "name" : "indentionStep",
        "type" : 31
      }, {
        "name" : "objectFieldMustBeSimpleString",
        "type" : 4
      }, {
        "name" : "onlyTaggedField",
        "type" : 4
      }, {
        "name" : "disallowUnknownFields",
        "type" : 4
      }, {
        "name" : "decoderCache",
        "type" : 69
      }, {
        "name" : "encoderCache",
        "type" : 69
      }, {
        "name" : "encoderExtension",
        "type" : 82
      }, {
        "name" : "decoderExtension",
        "type" : 82
      }, {
        "name" : "extraExtensions",
        "type" : 208
      }, {
        "name" : "streamPool",
        "type" : 209
      }, {
        "name" : "iteratorPool",
        "type" : 209
      }, {
        "name" : "caseSensitive",
        "type" : 4
      } ],
      "name" : "struct{configBeforeFrozen github.com/json-iterator/go.Config; sortMapKeys bool; indentionStep int; objectFieldMustBeSimpleString bool; onlyTaggedField bool; disallowUnknownFields bool; decoderCache *github.com/modern-go/concurrent.Map; encoderCache *github.com/modern-go/concurrent.Map; encoderExtension github.com/json-iterator/go.Extension; decoderExtension github.com/json-iterator/go.Extension; extraExtensions []github.com/json-iterator/go.Extension; streamPool *sync.Pool; iteratorPool *sync.Pool; caseSensitive bool}",
      "type" : "Struct",
      "underlying" : 66
    }, {
      "local-name" : "Config",
      "name" : "github.com/json-iterator/go.Config",
      "package" : 0,
      "type" : "Named",
      "underlying" : 68
    }, {
      "fields" : [ {
        "name" : "IndentionStep",
        "type" : 31
      }, {
        "name" : "MarshalFloatWith6Digits",
        "type" : 4
      }, {
        "name" : "EscapeHTML",
        "type" : 4
      }, {
        "name" : "SortMapKeys",
        "type" : 4
      }, {
        "name" : "UseNumber",
        "type" : 4
      }, {
        "name" : "DisallowUnknownFields",
        "type" : 4
      }, {
        "name" : "TagKey",
        "type" : 21
      }, {
        "name" : "OnlyTaggedField",
        "type" : 4
      }, {
        "name" : "ValidateJsonRawMessage",
        "type" : 4
      }, {
        "name" : "ObjectFieldMustBeSimpleString",
        "type" : 4
      }, {
        "name" : "CaseSensitive",
        "type" : 4
      } ],
      "name" : "struct{IndentionStep int; MarshalFloatWith6Digits bool; EscapeHTML bool; SortMapKeys bool; UseNumber bool; DisallowUnknownFields bool; TagKey string; OnlyTaggedField bool; ValidateJsonRawMessage bool; ObjectFieldMustBeSimpleString bool; CaseSensitive bool}",
      "type" : "Struct",
      "underlying" : 68
    }, {
      "elem" : 70,
      "name" : "*github.com/modern-go/concurrent.Map",
      "type" : "Pointer",
      "underlying" : 69
    }, {
      "local-name" : "Map",
      "name" : "github.com/modern-go/concurrent.Map",
      "package" : 2,
      "type" : "Named",
      "underlying" : 71
    }, {
      "fields" : [ {
        "name" : "Map",
        "type" : 72
      } ],
      "name" : "struct{sync.Map}",
      "type" : "Struct",
      "underlying" : 71
    }, {
      "local-name" : "Map",
      "name" : "sync.Map",
      "package" : 3,
      "type" : "Named",
      "underlying" : 73
    }, {
      "fields" : [ {
        "name" : "mu",
        "type" : 74
      }, {
        "name" : "read",
        "type" : 76
      }, {
        "name" : "dirty",
        "type" : 78
      }, {
        "name" : "misses",
        "type" : 31
      } ],
      "name" : "struct{mu sync.Mutex; read sync/atomic.Value; dirty map[interface{}]*sync.entry; misses int}",
      "type" : "Struct",
      "underlying" : 73
    }, {
      "local-name" : "Mutex",
      "name" : "sync.Mutex",
      "package" : 3,
      "type" : "Named",
      "underlying" : 75
    }, {
      "fields" : [ {
        "name" : "state",
        "type" : 41
      }, {
        "name" : "sema",
        "type" : 50
      } ],
      "name" : "struct{state int32; sema uint32}",
      "type" : "Struct",
      "underlying" : 75
    }, {
      "local-name" : "Value",
      "name" : "sync/atomic.Value",
      "package" : 4,
      "type" : "Named",
      "underlying" : 77
    }, {
      "fields" : [ {
        "name" : "v",
        "type" : 13
      } ],
      "name" : "struct{v interface{}}",
      "type" : "Struct",
      "underlying" : 77
    }, {
      "elem" : 79,
      "key" : 13,
      "name" : "map[interface{}]*sync.entry",
      "type" : "Map",
      "underlying" : 78
    }, {
      "elem" : 80,
      "name" : "*sync.entry",
      "type" : "Pointer",
      "underlying" : 79
    }, {
      "local-name" : "entry",
      "name" : "sync.entry",
      "package" : 3,
      "type" : "Named",
      "underlying" : 81
    }, {
      "fields" : [ {
        "name" : "p",
        "type" : 2
      } ],
      "name" : "struct{p unsafe.Pointer}",
      "type" : "Struct",
      "underlying" : 81
    }, {
      "local-name" : "Extension",
      "name" : "github.com/json-iterator/go.Extension",
      "package" : 0,
      "type" : "Named",
      "underlying" : 83
    }, {
      "methods" : [ {
        "name" : "CreateDecoder",
        "type" : 84
      }, {
        "name" : "CreateEncoder",
        "type" : 175
      }, {
        "name" : "CreateMapKeyDecoder",
        "type" : 84
      }, {
        "name" : "CreateMapKeyEncoder",
        "type" : 175
      }, {
        "name" : "DecorateDecoder",
        "type" : 181
      }, {
        "name" : "DecorateEncoder",
        "type" : 183
      }, {
        "name" : "UpdateStructDescriptor",
        "type" : 185
      } ],
      "name" : "interface{CreateDecoder(typ github.com/modern-go/reflect2.Type) github.com/json-iterator/go.ValDecoder; CreateEncoder(typ github.com/modern-go/reflect2.Type) github.com/json-iterator/go.ValEncoder; CreateMapKeyDecoder(typ github.com/modern-go/reflect2.Type) github.com/json-iterator/go.ValDecoder; CreateMapKeyEncoder(typ github.com/modern-go/reflect2.Type) github.com/json-iterator/go.ValEncoder; DecorateDecoder(typ github.com/modern-go/reflect2.Type, decoder github.com/json-iterator/go.ValDecoder) github.com/json-iterator/go.ValDecoder; DecorateEncoder(typ github.com/modern-go/reflect2.Type, encoder github.com/json-iterator/go.ValEncoder) github.com/json-iterator/go.ValEncoder; UpdateStructDescriptor(structDescriptor *github.com/json-iterator/go.StructDescriptor)}",
      "type" : "Interface",
      "underlying" : 83
    }, {
      "name" : "func(typ github.com/modern-go/reflect2.Type) github.com/json-iterator/go.ValDecoder",
      "params" : 85,
      "recv" : 44,
      "results" : 161,
      "type" : "Signature",
      "underlying" : 84,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 86
      } ],
      "name" : "(typ github.com/modern-go/reflect2.Type)",
      "type" : "Tuple",
      "underlying" : 85
    }, {
      "local-name" : "Type",
      "name" : "github.com/modern-go/reflect2.Type",
      "package" : 5,
      "type" : "Named",
      "underlying" : 87
    }, {
      "methods" : [ {
        "name" : "AssignableTo",
        "type" : 88
      }, {
        "name" : "Implements",
        "type" : 90
      }, {
        "name" : "Indirect",
        "type" : 92
      }, {
        "name" : "IsNil",
        "type" : 94
      }, {
        "name" : "IsNullable",
        "type" : 32
      }, {
        "name" : "Kind",
        "type" : 95
      }, {
        "name" : "LikePtr",
        "type" : 32
      }, {
        "name" : "New",
        "type" : 15
      }, {
        "name" : "PackEFace",
        "type" : 98
      }, {
        "name" : "RType",
        "type" : 99
      }, {
        "name" : "Set",
        "type" : 102
      }, {
        "name" : "String",
        "type" : 26
      }, {
        "name" : "Type1",
        "type" : 104
      }, {
        "name" : "UnsafeIndirect",
        "type" : 98
      }, {
        "name" : "UnsafeIsNil",
        "type" : 0
      }, {
        "name" : "UnsafeNew",
        "type" : 157
      }, {
        "name" : "UnsafeSet",
        "type" : 159
      } ],
      "name" : "interface{AssignableTo(anotherType github.com/modern-go/reflect2.Type) bool; Implements(thatType github.com/modern-go/reflect2.Type) bool; Indirect(obj interface{}) interface{}; IsNil(obj interface{}) bool; IsNullable() bool; Kind() reflect.Kind; LikePtr() bool; New() interface{}; PackEFace(ptr unsafe.Pointer) interface{}; RType() uintptr; Set(obj interface{}, val interface{}); String() string; Type1() reflect.Type; UnsafeIndirect(ptr unsafe.Pointer) interface{}; UnsafeIsNil(ptr unsafe.Pointer) bool; UnsafeNew() unsafe.Pointer; UnsafeSet(ptr unsafe.Pointer, val unsafe.Pointer)}",
      "type" : "Interface",
      "underlying" : 87
    }, {
      "name" : "func(anotherType github.com/modern-go/reflect2.Type) bool",
      "params" : 89,
      "recv" : 20,
      "results" : 3,
      "type" : "Signature",
      "underlying" : 88,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "anotherType",
        "type" : 86
      } ],
      "name" : "(anotherType github.com/modern-go/reflect2.Type)",
      "type" : "Tuple",
      "underlying" : 89
    }, {
      "name" : "func(thatType github.com/modern-go/reflect2.Type) bool",
      "params" : 91,
      "recv" : 21,
      "results" : 3,
      "type" : "Signature",
      "underlying" : 90,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "thatType",
        "type" : 86
      } ],
      "name" : "(thatType github.com/modern-go/reflect2.Type)",
      "type" : "Tuple",
      "underlying" : 91
    }, {
      "name" : "func(obj interface{}) interface{}",
      "params" : 93,
      "recv" : 22,
      "results" : 17,
      "type" : "Signature",
      "underlying" : 92,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "obj",
        "type" : 13
      } ],
      "name" : "(obj interface{})",
      "type" : "Tuple",
      "underlying" : 93
    }, {
      "name" : "func(obj interface{}) bool",
      "params" : 93,
      "recv" : 23,
      "results" : 3,
      "type" : "Signature",
      "underlying" : 94,
      "variadic" : false
    }, {
      "name" : "func() reflect.Kind",
      "params" : 16,
      "recv" : 24,
      "results" : 96,
      "type" : "Signature",
      "underlying" : 95,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 97
      } ],
      "name" : "(reflect.Kind)",
      "type" : "Tuple",
      "underlying" : 96
    }, {
      "local-name" : "Kind",
      "name" : "reflect.Kind",
      "package" : 6,
      "type" : "Named",
      "underlying" : 47
    }, {
      "name" : "func(ptr unsafe.Pointer) interface{}",
      "params" : 1,
      "recv" : 25,
      "results" : 17,
      "type" : "Signature",
      "underlying" : 98,
      "variadic" : false
    }, {
      "name" : "func() uintptr",
      "params" : 16,
      "recv" : 26,
      "results" : 100,
      "type" : "Signature",
      "underlying" : 99,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 101
      } ],
      "name" : "(uintptr)",
      "type" : "Tuple",
      "underlying" : 100
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 101
    }, {
      "name" : "func(obj interface{}, val interface{})",
      "params" : 103,
      "recv" : 27,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 102,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "obj",
        "type" : 13
      }, {
        "name" : "val",
        "type" : 13
      } ],
      "name" : "(obj interface{}, val interface{})",
      "type" : "Tuple",
      "underlying" : 103
    }, {
      "name" : "func() reflect.Type",
      "params" : 16,
      "recv" : 39,
      "results" : 105,
      "type" : "Signature",
      "underlying" : 104,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 106
      } ],
      "name" : "(reflect.Type)",
      "type" : "Tuple",
      "underlying" : 105
    }, {
      "local-name" : "Type",
      "name" : "reflect.Type",
      "package" : 6,
      "type" : "Named",
      "underlying" : 107
    }, {
      "methods" : [ {
        "name" : "Align",
        "type" : 29
      }, {
        "name" : "AssignableTo",
        "type" : 108
      }, {
        "name" : "Bits",
        "type" : 29
      }, {
        "name" : "ChanDir",
        "type" : 110
      }, {
        "name" : "Comparable",
        "type" : 32
      }, {
        "name" : "ConvertibleTo",
        "type" : 108
      }, {
        "name" : "Elem",
        "type" : 104
      }, {
        "name" : "Field",
        "type" : 113
      }, {
        "name" : "FieldAlign",
        "type" : 29
      }, {
        "name" : "FieldByIndex",
        "type" : 120
      }, {
        "name" : "FieldByName",
        "type" : 122
      }, {
        "name" : "FieldByNameFunc",
        "type" : 125
      }, {
        "name" : "Implements",
        "type" : 108
      }, {
        "name" : "In",
        "type" : 128
      }, {
        "name" : "IsVariadic",
        "type" : 32
      }, {
        "name" : "Key",
        "type" : 104
      }, {
        "name" : "Kind",
        "type" : 95
      }, {
        "name" : "Len",
        "type" : 29
      }, {
        "name" : "Method",
        "type" : 129
      }, {
        "name" : "MethodByName",
        "type" : 147
      }, {
        "name" : "Name",
        "type" : 26
      }, {
        "name" : "NumField",
        "type" : 29
      }, {
        "name" : "NumIn",
        "type" : 29
      }, {
        "name" : "NumMethod",
        "type" : 29
      }, {
        "name" : "NumOut",
        "type" : 29
      }, {
        "name" : "Out",
        "type" : 128
      }, {
        "name" : "PkgPath",
        "type" : 26
      }, {
        "name" : "Size",
        "type" : 99
      }, {
        "name" : "String",
        "type" : 26
      }, {
        "name" : "common",
        "type" : 149
      }, {
        "name" : "uncommon",
        "type" : 151
      } ],
      "name" : "interface{Align() int; AssignableTo(u reflect.Type) bool; Bits() int; ChanDir() reflect.ChanDir; Comparable() bool; ConvertibleTo(u reflect.Type) bool; Elem() reflect.Type; Field(i int) reflect.StructField; FieldAlign() int; FieldByIndex(index []int) reflect.StructField; FieldByName(name string) (reflect.StructField, bool); FieldByNameFunc(match func(string) bool) (reflect.StructField, bool); Implements(u reflect.Type) bool; In(i int) reflect.Type; IsVariadic() bool; Key() reflect.Type; Kind() reflect.Kind; Len() int; Method(int) reflect.Method; MethodByName(string) (reflect.Method, bool); Name() string; NumField() int; NumIn() int; NumMethod() int; NumOut() int; Out(i int) reflect.Type; PkgPath() string; Size() uintptr; String() string; common() *reflect.rtype; uncommon() *reflect.uncommonType}",
      "type" : "Interface",
      "underlying" : 107
    }, {
      "name" : "func(u reflect.Type) bool",
      "params" : 109,
      "recv" : 28,
      "results" : 3,
      "type" : "Signature",
      "underlying" : 108,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "u",
        "type" : 106
      } ],
      "name" : "(u reflect.Type)",
      "type" : "Tuple",
      "underlying" : 109
    }, {
      "name" : "func() reflect.ChanDir",
      "params" : 16,
      "recv" : 29,
      "results" : 111,
      "type" : "Signature",
      "underlying" : 110,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 112
      } ],
      "name" : "(reflect.ChanDir)",
      "type" : "Tuple",
      "underlying" : 111
    }, {
      "local-name" : "ChanDir",
      "name" : "reflect.ChanDir",
      "package" : 6,
      "type" : "Named",
      "underlying" : 31
    }, {
      "name" : "func(i int) reflect.StructField",
      "params" : 114,
      "recv" : 30,
      "results" : 115,
      "type" : "Signature",
      "underlying" : 113,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 31
      } ],
      "name" : "(i int)",
      "type" : "Tuple",
      "underlying" : 114
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 116
      } ],
      "name" : "(reflect.StructField)",
      "type" : "Tuple",
      "underlying" : 115
    }, {
      "local-name" : "StructField",
      "name" : "reflect.StructField",
      "package" : 6,
      "type" : "Named",
      "underlying" : 117
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 21
      }, {
        "name" : "PkgPath",
        "type" : 21
      }, {
        "name" : "Type",
        "type" : 106
      }, {
        "name" : "Tag",
        "type" : 118
      }, {
        "name" : "Offset",
        "type" : 101
      }, {
        "name" : "Index",
        "type" : 119
      }, {
        "name" : "Anonymous",
        "type" : 4
      } ],
      "name" : "struct{Name string; PkgPath string; Type reflect.Type; Tag reflect.StructTag; Offset uintptr; Index []int; Anonymous bool}",
      "type" : "Struct",
      "underlying" : 117
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 6,
      "type" : "Named",
      "underlying" : 21
    }, {
      "elem" : 31,
      "name" : "[]int",
      "type" : "Slice",
      "underlying" : 119
    }, {
      "name" : "func(index []int) reflect.StructField",
      "params" : 121,
      "recv" : 31,
      "results" : 115,
      "type" : "Signature",
      "underlying" : 120,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "index",
        "type" : 119
      } ],
      "name" : "(index []int)",
      "type" : "Tuple",
      "underlying" : 121
    }, {
      "name" : "func(name string) (reflect.StructField, bool)",
      "params" : 123,
      "recv" : 32,
      "results" : 124,
      "type" : "Signature",
      "underlying" : 122,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 21
      } ],
      "name" : "(name string)",
      "type" : "Tuple",
      "underlying" : 123
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 116
      }, {
        "name" : "",
        "type" : 4
      } ],
      "name" : "(reflect.StructField, bool)",
      "type" : "Tuple",
      "underlying" : 124
    }, {
      "name" : "func(match func(string) bool) (reflect.StructField, bool)",
      "params" : 126,
      "recv" : 33,
      "results" : 124,
      "type" : "Signature",
      "underlying" : 125,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "match",
        "type" : 127
      } ],
      "name" : "(match func(string) bool)",
      "type" : "Tuple",
      "underlying" : 126
    }, {
      "name" : "func(string) bool",
      "params" : 27,
      "recv" : -1,
      "results" : 3,
      "type" : "Signature",
      "underlying" : 127,
      "variadic" : false
    }, {
      "name" : "func(i int) reflect.Type",
      "params" : 114,
      "recv" : 34,
      "results" : 105,
      "type" : "Signature",
      "underlying" : 128,
      "variadic" : false
    }, {
      "name" : "func(int) reflect.Method",
      "params" : 30,
      "recv" : 35,
      "results" : 130,
      "type" : "Signature",
      "underlying" : 129,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 131
      } ],
      "name" : "(reflect.Method)",
      "type" : "Tuple",
      "underlying" : 130
    }, {
      "local-name" : "Method",
      "name" : "reflect.Method",
      "package" : 6,
      "type" : "Named",
      "underlying" : 132
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 21
      }, {
        "name" : "PkgPath",
        "type" : 21
      }, {
        "name" : "Type",
        "type" : 106
      }, {
        "name" : "Func",
        "type" : 133
      }, {
        "name" : "Index",
        "type" : 31
      } ],
      "name" : "struct{Name string; PkgPath string; Type reflect.Type; Func reflect.Value; Index int}",
      "type" : "Struct",
      "underlying" : 132
    }, {
      "local-name" : "Value",
      "name" : "reflect.Value",
      "package" : 6,
      "type" : "Named",
      "underlying" : 134
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 135
      }, {
        "name" : "ptr",
        "type" : 2
      }, {
        "name" : "flag",
        "type" : 146
      } ],
      "name" : "struct{typ *reflect.rtype; ptr unsafe.Pointer; reflect.flag}",
      "type" : "Struct",
      "underlying" : 134
    }, {
      "elem" : 136,
      "name" : "*reflect.rtype",
      "type" : "Pointer",
      "underlying" : 135
    }, {
      "local-name" : "rtype",
      "name" : "reflect.rtype",
      "package" : 6,
      "type" : "Named",
      "underlying" : 137
    }, {
      "fields" : [ {
        "name" : "size",
        "type" : 101
      }, {
        "name" : "ptrdata",
        "type" : 101
      }, {
        "name" : "hash",
        "type" : 50
      }, {
        "name" : "tflag",
        "type" : 138
      }, {
        "name" : "align",
        "type" : 139
      }, {
        "name" : "fieldAlign",
        "type" : 139
      }, {
        "name" : "kind",
        "type" : 139
      }, {
        "name" : "equal",
        "type" : 140
      }, {
        "name" : "gcdata",
        "type" : 142
      }, {
        "name" : "str",
        "type" : 144
      }, {
        "name" : "ptrToThis",
        "type" : 145
      } ],
      "name" : "struct{size uintptr; ptrdata uintptr; hash uint32; tflag reflect.tflag; align uint8; fieldAlign uint8; kind uint8; equal func(unsafe.Pointer, unsafe.Pointer) bool; gcdata *byte; str reflect.nameOff; ptrToThis reflect.typeOff}",
      "type" : "Struct",
      "underlying" : 137
    }, {
      "local-name" : "tflag",
      "name" : "reflect.tflag",
      "package" : 6,
      "type" : "Named",
      "underlying" : 139
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 139
    }, {
      "name" : "func(unsafe.Pointer, unsafe.Pointer) bool",
      "params" : 141,
      "recv" : -1,
      "results" : 3,
      "type" : "Signature",
      "underlying" : 140,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 2
      }, {
        "name" : "",
        "type" : 2
      } ],
      "name" : "(unsafe.Pointer, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 141
    }, {
      "elem" : 143,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 142
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 143
    }, {
      "local-name" : "nameOff",
      "name" : "reflect.nameOff",
      "package" : 6,
      "type" : "Named",
      "underlying" : 41
    }, {
      "local-name" : "typeOff",
      "name" : "reflect.typeOff",
      "package" : 6,
      "type" : "Named",
      "underlying" : 41
    }, {
      "local-name" : "flag",
      "name" : "reflect.flag",
      "package" : 6,
      "type" : "Named",
      "underlying" : 101
    }, {
      "name" : "func(string) (reflect.Method, bool)",
      "params" : 27,
      "recv" : 36,
      "results" : 148,
      "type" : "Signature",
      "underlying" : 147,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 131
      }, {
        "name" : "",
        "type" : 4
      } ],
      "name" : "(reflect.Method, bool)",
      "type" : "Tuple",
      "underlying" : 148
    }, {
      "name" : "func() *reflect.rtype",
      "params" : 16,
      "recv" : 37,
      "results" : 150,
      "type" : "Signature",
      "underlying" : 149,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 135
      } ],
      "name" : "(*reflect.rtype)",
      "type" : "Tuple",
      "underlying" : 150
    }, {
      "name" : "func() *reflect.uncommonType",
      "params" : 16,
      "recv" : 38,
      "results" : 152,
      "type" : "Signature",
      "underlying" : 151,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 153
      } ],
      "name" : "(*reflect.uncommonType)",
      "type" : "Tuple",
      "underlying" : 152
    }, {
      "elem" : 154,
      "name" : "*reflect.uncommonType",
      "type" : "Pointer",
      "underlying" : 153
    }, {
      "local-name" : "uncommonType",
      "name" : "reflect.uncommonType",
      "package" : 6,
      "type" : "Named",
      "underlying" : 155
    }, {
      "fields" : [ {
        "name" : "pkgPath",
        "type" : 144
      }, {
        "name" : "mcount",
        "type" : 156
      }, {
        "name" : "xcount",
        "type" : 156
      }, {
        "name" : "moff",
        "type" : 50
      }, {
        "name" : "_",
        "type" : 50
      } ],
      "name" : "struct{pkgPath reflect.nameOff; mcount uint16; xcount uint16; moff uint32; _ uint32}",
      "type" : "Struct",
      "underlying" : 155
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 156
    }, {
      "name" : "func() unsafe.Pointer",
      "params" : 16,
      "recv" : 40,
      "results" : 158,
      "type" : "Signature",
      "underlying" : 157,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 2
      } ],
      "name" : "(unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 158
    }, {
      "name" : "func(ptr unsafe.Pointer, val unsafe.Pointer)",
      "params" : 160,
      "recv" : 41,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 159,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ptr",
        "type" : 2
      }, {
        "name" : "val",
        "type" : 2
      } ],
      "name" : "(ptr unsafe.Pointer, val unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 160
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 162
      } ],
      "name" : "(github.com/json-iterator/go.ValDecoder)",
      "type" : "Tuple",
      "underlying" : 161
    }, {
      "local-name" : "ValDecoder",
      "name" : "github.com/json-iterator/go.ValDecoder",
      "package" : 0,
      "type" : "Named",
      "underlying" : 163
    }, {
      "methods" : [ {
        "name" : "Decode",
        "type" : 164
      } ],
      "name" : "interface{Decode(ptr unsafe.Pointer, iter *github.com/json-iterator/go.Iterator)}",
      "type" : "Interface",
      "underlying" : 163
    }, {
      "name" : "func(ptr unsafe.Pointer, iter *github.com/json-iterator/go.Iterator)",
      "params" : 165,
      "recv" : 43,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 164,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ptr",
        "type" : 2
      }, {
        "name" : "iter",
        "type" : 166
      } ],
      "name" : "(ptr unsafe.Pointer, iter *github.com/json-iterator/go.Iterator)",
      "type" : "Tuple",
      "underlying" : 165
    }, {
      "elem" : 167,
      "name" : "*github.com/json-iterator/go.Iterator",
      "type" : "Pointer",
      "underlying" : 166
    }, {
      "local-name" : "Iterator",
      "name" : "github.com/json-iterator/go.Iterator",
      "package" : 0,
      "type" : "Named",
      "underlying" : 168
    }, {
      "fields" : [ {
        "name" : "cfg",
        "type" : 64
      }, {
        "name" : "reader",
        "type" : 169
      }, {
        "name" : "buf",
        "type" : 173
      }, {
        "name" : "head",
        "type" : 31
      }, {
        "name" : "tail",
        "type" : 31
      }, {
        "name" : "depth",
        "type" : 31
      }, {
        "name" : "captureStartedAt",
        "type" : 31
      }, {
        "name" : "captured",
        "type" : 173
      }, {
        "name" : "Error",
        "type" : 24
      }, {
        "name" : "Attachment",
        "type" : 13
      } ],
      "name" : "struct{cfg *github.com/json-iterator/go.frozenConfig; reader io.Reader; buf []byte; head int; tail int; depth int; captureStartedAt int; captured []byte; Error error; Attachment interface{}}",
      "type" : "Struct",
      "underlying" : 168
    }, {
      "local-name" : "Reader",
      "name" : "io.Reader",
      "package" : 7,
      "type" : "Named",
      "underlying" : 170
    }, {
      "methods" : [ {
        "name" : "Read",
        "type" : 171
      } ],
      "name" : "interface{Read(p []byte) (n int, err error)}",
      "type" : "Interface",
      "underlying" : 170
    }, {
      "name" : "func(p []byte) (n int, err error)",
      "params" : 172,
      "recv" : 42,
      "results" : 174,
      "type" : "Signature",
      "underlying" : 171,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "p",
        "type" : 173
      } ],
      "name" : "(p []byte)",
      "type" : "Tuple",
      "underlying" : 172
    }, {
      "elem" : 143,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 173
    }, {
      "fields" : [ {
        "name" : "n",
        "type" : 31
      }, {
        "name" : "err",
        "type" : 24
      } ],
      "name" : "(n int, err error)",
      "type" : "Tuple",
      "underlying" : 174
    }, {
      "name" : "func(typ github.com/modern-go/reflect2.Type) github.com/json-iterator/go.ValEncoder",
      "params" : 85,
      "recv" : 46,
      "results" : 176,
      "type" : "Signature",
      "underlying" : 175,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 177
      } ],
      "name" : "(github.com/json-iterator/go.ValEncoder)",
      "type" : "Tuple",
      "underlying" : 176
    }, {
      "local-name" : "ValEncoder",
      "name" : "github.com/json-iterator/go.ValEncoder",
      "package" : 0,
      "type" : "Named",
      "underlying" : 178
    }, {
      "methods" : [ {
        "name" : "Encode",
        "type" : 179
      }, {
        "name" : "IsEmpty",
        "type" : 0
      } ],
      "name" : "interface{Encode(ptr unsafe.Pointer, stream *github.com/json-iterator/go.Stream); IsEmpty(ptr unsafe.Pointer) bool}",
      "type" : "Interface",
      "underlying" : 178
    }, {
      "name" : "func(ptr unsafe.Pointer, stream *github.com/json-iterator/go.Stream)",
      "params" : 180,
      "recv" : 45,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 179,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ptr",
        "type" : 2
      }, {
        "name" : "stream",
        "type" : 61
      } ],
      "name" : "(ptr unsafe.Pointer, stream *github.com/json-iterator/go.Stream)",
      "type" : "Tuple",
      "underlying" : 180
    }, {
      "name" : "func(typ github.com/modern-go/reflect2.Type, decoder github.com/json-iterator/go.ValDecoder) github.com/json-iterator/go.ValDecoder",
      "params" : 182,
      "recv" : 47,
      "results" : 161,
      "type" : "Signature",
      "underlying" : 181,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 86
      }, {
        "name" : "decoder",
        "type" : 162
      } ],
      "name" : "(typ github.com/modern-go/reflect2.Type, decoder github.com/json-iterator/go.ValDecoder)",
      "type" : "Tuple",
      "underlying" : 182
    }, {
      "name" : "func(typ github.com/modern-go/reflect2.Type, encoder github.com/json-iterator/go.ValEncoder) github.com/json-iterator/go.ValEncoder",
      "params" : 184,
      "recv" : 48,
      "results" : 176,
      "type" : "Signature",
      "underlying" : 183,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 86
      }, {
        "name" : "encoder",
        "type" : 177
      } ],
      "name" : "(typ github.com/modern-go/reflect2.Type, encoder github.com/json-iterator/go.ValEncoder)",
      "type" : "Tuple",
      "underlying" : 184
    }, {
      "name" : "func(structDescriptor *github.com/json-iterator/go.StructDescriptor)",
      "params" : 186,
      "recv" : 55,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 185,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "structDescriptor",
        "type" : 187
      } ],
      "name" : "(structDescriptor *github.com/json-iterator/go.StructDescriptor)",
      "type" : "Tuple",
      "underlying" : 186
    }, {
      "elem" : 188,
      "name" : "*github.com/json-iterator/go.StructDescriptor",
      "type" : "Pointer",
      "underlying" : 187
    }, {
      "local-name" : "StructDescriptor",
      "name" : "github.com/json-iterator/go.StructDescriptor",
      "package" : 0,
      "type" : "Named",
      "underlying" : 189
    }, {
      "fields" : [ {
        "name" : "Type",
        "type" : 86
      }, {
        "name" : "Fields",
        "type" : 190
      } ],
      "name" : "struct{Type github.com/modern-go/reflect2.Type; Fields []*github.com/json-iterator/go.Binding}",
      "type" : "Struct",
      "underlying" : 189
    }, {
      "elem" : 191,
      "name" : "[]*github.com/json-iterator/go.Binding",
      "type" : "Slice",
      "underlying" : 190
    }, {
      "elem" : 192,
      "name" : "*github.com/json-iterator/go.Binding",
      "type" : "Pointer",
      "underlying" : 191
    }, {
      "local-name" : "Binding",
      "name" : "github.com/json-iterator/go.Binding",
      "package" : 0,
      "type" : "Named",
      "underlying" : 193
    }, {
      "fields" : [ {
        "name" : "levels",
        "type" : 119
      }, {
        "name" : "Field",
        "type" : 194
      }, {
        "name" : "FromNames",
        "type" : 20
      }, {
        "name" : "ToNames",
        "type" : 20
      }, {
        "name" : "Encoder",
        "type" : 177
      }, {
        "name" : "Decoder",
        "type" : 162
      } ],
      "name" : "struct{levels []int; Field github.com/modern-go/reflect2.StructField; FromNames []string; ToNames []string; Encoder github.com/json-iterator/go.ValEncoder; Decoder github.com/json-iterator/go.ValDecoder}",
      "type" : "Struct",
      "underlying" : 193
    }, {
      "local-name" : "StructField",
      "name" : "github.com/modern-go/reflect2.StructField",
      "package" : 5,
      "type" : "Named",
      "underlying" : 195
    }, {
      "methods" : [ {
        "name" : "Anonymous",
        "type" : 32
      }, {
        "name" : "Get",
        "type" : 92
      }, {
        "name" : "Index",
        "type" : 196
      }, {
        "name" : "Name",
        "type" : 26
      }, {
        "name" : "Offset",
        "type" : 99
      }, {
        "name" : "PkgPath",
        "type" : 26
      }, {
        "name" : "Set",
        "type" : 198
      }, {
        "name" : "Tag",
        "type" : 200
      }, {
        "name" : "Type",
        "type" : 202
      }, {
        "name" : "UnsafeGet",
        "type" : 204
      }, {
        "name" : "UnsafeSet",
        "type" : 206
      } ],
      "name" : "interface{Anonymous() bool; Get(obj interface{}) interface{}; Index() []int; Name() string; Offset() uintptr; PkgPath() string; Set(obj interface{}, value interface{}); Tag() reflect.StructTag; Type() github.com/modern-go/reflect2.Type; UnsafeGet(obj unsafe.Pointer) unsafe.Pointer; UnsafeSet(obj unsafe.Pointer, value unsafe.Pointer)}",
      "type" : "Interface",
      "underlying" : 195
    }, {
      "name" : "func() []int",
      "params" : 16,
      "recv" : 49,
      "results" : 197,
      "type" : "Signature",
      "underlying" : 196,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 119
      } ],
      "name" : "([]int)",
      "type" : "Tuple",
      "underlying" : 197
    }, {
      "name" : "func(obj interface{}, value interface{})",
      "params" : 199,
      "recv" : 50,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 198,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "obj",
        "type" : 13
      }, {
        "name" : "value",
        "type" : 13
      } ],
      "name" : "(obj interface{}, value interface{})",
      "type" : "Tuple",
      "underlying" : 199
    }, {
      "name" : "func() reflect.StructTag",
      "params" : 16,
      "recv" : 51,
      "results" : 201,
      "type" : "Signature",
      "underlying" : 200,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 118
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 201
    }, {
      "name" : "func() github.com/modern-go/reflect2.Type",
      "params" : 16,
      "recv" : 52,
      "results" : 203,
      "type" : "Signature",
      "underlying" : 202,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 86
      } ],
      "name" : "(github.com/modern-go/reflect2.Type)",
      "type" : "Tuple",
      "underlying" : 203
    }, {
      "name" : "func(obj unsafe.Pointer) unsafe.Pointer",
      "params" : 205,
      "recv" : 53,
      "results" : 158,
      "type" : "Signature",
      "underlying" : 204,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "obj",
        "type" : 2
      } ],
      "name" : "(obj unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 205
    }, {
      "name" : "func(obj unsafe.Pointer, value unsafe.Pointer)",
      "params" : 207,
      "recv" : 54,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 206,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "obj",
        "type" : 2
      }, {
        "name" : "value",
        "type" : 2
      } ],
      "name" : "(obj unsafe.Pointer, value unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 207
    }, {
      "elem" : 82,
      "name" : "[]github.com/json-iterator/go.Extension",
      "type" : "Slice",
      "underlying" : 208
    }, {
      "elem" : 210,
      "name" : "*sync.Pool",
      "type" : "Pointer",
      "underlying" : 209
    }, {
      "local-name" : "Pool",
      "name" : "sync.Pool",
      "package" : 3,
      "type" : "Named",
      "underlying" : 211
    }, {
      "fields" : [ {
        "name" : "noCopy",
        "type" : 212
      }, {
        "name" : "local",
        "type" : 2
      }, {
        "name" : "localSize",
        "type" : 101
      }, {
        "name" : "victim",
        "type" : 2
      }, {
        "name" : "victimSize",
        "type" : 101
      }, {
        "name" : "New",
        "type" : 15
      } ],
      "name" : "struct{noCopy sync.noCopy; local unsafe.Pointer; localSize uintptr; victim unsafe.Pointer; victimSize uintptr; New func() interface{}}",
      "type" : "Struct",
      "underlying" : 211
    }, {
      "local-name" : "noCopy",
      "name" : "sync.noCopy",
      "package" : 3,
      "type" : "Named",
      "underlying" : 7
    }, {
      "local-name" : "Writer",
      "name" : "io.Writer",
      "package" : 7,
      "type" : "Named",
      "underlying" : 214
    }, {
      "methods" : [ {
        "name" : "Write",
        "type" : 171
      } ],
      "name" : "interface{Write(p []byte) (n int, err error)}",
      "type" : "Interface",
      "underlying" : 214
    }, {
      "elem" : 8,
      "name" : "*github.com/json-iterator/go.Any",
      "type" : "Pointer",
      "underlying" : 215
    } ],
    "variables" : [ {
      "name" : "codec",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "ptr",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : -1,
      "type" : 24,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 86,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 86,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 86,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 86,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 86,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 86,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 86,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 86,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 106,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 106,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 106,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 106,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 106,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 106,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 106,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 106,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 106,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 106,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 106,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 86,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 86,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 86,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 7,
      "type" : 169,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 162,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 82,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 177,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 82,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 82,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 82,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 194,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 194,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 194,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 194,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 194,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 194,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 82,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "any",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}