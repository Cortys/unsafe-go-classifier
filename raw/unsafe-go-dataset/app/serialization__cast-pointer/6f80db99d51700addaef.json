{
  "usage" : {
    "file" : "unsafe_map.go",
    "label1" : "cast-pointer",
    "label2" : "serialization",
    "line" : "112",
    "module" : "github.com/modern-go/reflect2",
    "pkg" : "github.com/modern-go/reflect2",
    "project" : "kubernetes/kubernetes",
    "snippet" : "hiter:      mapiterinit(type2.rtype, *(*unsafe.Pointer)(obj)),",
    "version" : "v1.0.1"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 3, 4 ],
      "exit" : false,
      "out-vars" : [ 3, 4 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 3, 4 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 111,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 15,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "declared" : {
              "go-type" : 16,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 16,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "UnsafeMapIterator"
              }
            },
            "go-type" : 16,
            "kind" : "literal",
            "type" : "composite",
            "values" : [ {
              "go-type" : -1,
              "key" : {
                "go-type" : -1,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "hiter",
                  "variable" : 6
                }
              },
              "kind" : "expression",
              "type" : "key-value",
              "value" : {
                "arguments" : [ {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "rtype",
                    "variable" : 7
                  },
                  "go-type" : 2,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 0,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "type2",
                      "variable" : 3
                    }
                  },
                  "type" : "selector"
                }, {
                  "go-type" : 2,
                  "kind" : "expression",
                  "target" : {
                    "coerced-to" : {
                      "contained" : {
                        "go-type" : 2,
                        "kind" : "type",
                        "qualifier" : {
                          "ident-kind" : "PkgName",
                          "kind" : "ident",
                          "package" : 1,
                          "value" : "unsafe"
                        },
                        "type" : "identifier",
                        "value" : {
                          "go-type" : 2,
                          "ident-kind" : "TypeName",
                          "kind" : "ident",
                          "value" : "Pointer"
                        }
                      },
                      "go-type" : 24,
                      "kind" : "type",
                      "type" : "pointer"
                    },
                    "go-type" : 24,
                    "kind" : "expression",
                    "target" : {
                      "go-type" : 2,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "obj",
                        "variable" : 4
                      }
                    },
                    "type" : "cast"
                  },
                  "type" : "star"
                } ],
                "ellipsis" : false,
                "function" : {
                  "go-type" : 21,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Func",
                    "kind" : "ident",
                    "value" : "mapiterinit"
                  }
                },
                "go-type" : 18,
                "kind" : "expression",
                "type" : "call"
              }
            }, {
              "go-type" : -1,
              "key" : {
                "go-type" : -1,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "pKeyRType",
                  "variable" : 8
                }
              },
              "kind" : "expression",
              "type" : "key-value",
              "value" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "pKeyRType",
                  "variable" : 9
                },
                "go-type" : 2,
                "kind" : "expression",
                "target" : {
                  "go-type" : 0,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "type2",
                    "variable" : 3
                  }
                },
                "type" : "selector"
              }
            }, {
              "go-type" : -1,
              "key" : {
                "go-type" : -1,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "pElemRType",
                  "variable" : 10
                }
              },
              "kind" : "expression",
              "type" : "key-value",
              "value" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "pElemRType",
                  "variable" : 11
                },
                "go-type" : 2,
                "kind" : "expression",
                "target" : {
                  "go-type" : 0,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "type2",
                    "variable" : 3
                  }
                },
                "type" : "selector"
              }
            } ]
          },
          "type" : "unary"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 115,
      "code" : "return &UnsafeMapIterator{\n\thiter:      mapiterinit(type2.rtype, *(*unsafe.Pointer)(obj)),\n\tpKeyRType:  type2.pKeyRType,\n\tpElemRType: type2.pElemRType,\n}",
      "entry" : false,
      "use-vars" : [ 4, 3 ]
    } ],
    "code" : "func (type2 *UnsafeMapType) UnsafeIterate(obj unsafe.Pointer) MapIterator {\n\treturn &UnsafeMapIterator{\n\t\thiter:      mapiterinit(type2.rtype, *(*unsafe.Pointer)(obj)),\n\t\tpKeyRType:  type2.pKeyRType,\n\t\tpElemRType: type2.pElemRType,\n\t}\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "UnsafeIterate",
      "package" : 0,
      "type" : 0,
      "exported" : true
    }, {
      "name" : "mapiterinit",
      "package" : 0,
      "type" : 21,
      "exported" : false
    } ],
    "line-end" : 116,
    "line-start" : 110,
    "names" : [ "UnsafeIterate" ],
    "package" : 0,
    "packages" : [ {
      "name" : "reflect2",
      "path" : "github.com/modern-go/reflect2"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "concurrent",
      "path" : "github.com/modern-go/concurrent"
    }, {
      "name" : "sync",
      "path" : "sync"
    }, {
      "name" : "atomic",
      "path" : "sync/atomic"
    } ],
    "params" : [ 4 ],
    "receivers" : [ 3 ],
    "results" : [ 5 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(obj unsafe.Pointer) github.com/modern-go/reflect2.MapIterator",
      "params" : 1,
      "recv" : 3,
      "results" : 3,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "obj",
        "type" : 2
      } ],
      "name" : "(obj unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 2
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 4
      } ],
      "name" : "(github.com/modern-go/reflect2.MapIterator)",
      "type" : "Tuple",
      "underlying" : 3
    }, {
      "local-name" : "MapIterator",
      "name" : "github.com/modern-go/reflect2.MapIterator",
      "package" : 0,
      "type" : "Named",
      "underlying" : 5
    }, {
      "methods" : [ {
        "name" : "HasNext",
        "type" : 6
      }, {
        "name" : "Next",
        "type" : 10
      }, {
        "name" : "UnsafeNext",
        "type" : 13
      } ],
      "name" : "interface{HasNext() bool; Next() (key interface{}, elem interface{}); UnsafeNext() (key unsafe.Pointer, elem unsafe.Pointer)}",
      "type" : "Interface",
      "underlying" : 5
    }, {
      "name" : "func() bool",
      "params" : 7,
      "recv" : 0,
      "results" : 8,
      "type" : "Signature",
      "underlying" : 6,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 7
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 9
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 8
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 9
    }, {
      "name" : "func() (key interface{}, elem interface{})",
      "params" : 7,
      "recv" : 1,
      "results" : 11,
      "type" : "Signature",
      "underlying" : 10,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 12
      }, {
        "name" : "elem",
        "type" : 12
      } ],
      "name" : "(key interface{}, elem interface{})",
      "type" : "Tuple",
      "underlying" : 11
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 12
    }, {
      "name" : "func() (key unsafe.Pointer, elem unsafe.Pointer)",
      "params" : 7,
      "recv" : 2,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 13,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 2
      }, {
        "name" : "elem",
        "type" : 2
      } ],
      "name" : "(key unsafe.Pointer, elem unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 14
    }, {
      "elem" : 16,
      "name" : "*github.com/modern-go/reflect2.UnsafeMapIterator",
      "type" : "Pointer",
      "underlying" : 15
    }, {
      "local-name" : "UnsafeMapIterator",
      "name" : "github.com/modern-go/reflect2.UnsafeMapIterator",
      "package" : 0,
      "type" : "Named",
      "underlying" : 17
    }, {
      "fields" : [ {
        "name" : "hiter",
        "type" : 18
      }, {
        "name" : "pKeyRType",
        "type" : 2
      }, {
        "name" : "pElemRType",
        "type" : 2
      } ],
      "name" : "struct{*github.com/modern-go/reflect2.hiter; pKeyRType unsafe.Pointer; pElemRType unsafe.Pointer}",
      "type" : "Struct",
      "underlying" : 17
    }, {
      "elem" : 19,
      "name" : "*github.com/modern-go/reflect2.hiter",
      "type" : "Pointer",
      "underlying" : 18
    }, {
      "local-name" : "hiter",
      "name" : "github.com/modern-go/reflect2.hiter",
      "package" : 0,
      "type" : "Named",
      "underlying" : 20
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 2
      }, {
        "name" : "value",
        "type" : 2
      } ],
      "name" : "struct{key unsafe.Pointer; value unsafe.Pointer}",
      "type" : "Struct",
      "underlying" : 20
    }, {
      "name" : "func(rtype unsafe.Pointer, m unsafe.Pointer) *github.com/modern-go/reflect2.hiter",
      "params" : 22,
      "recv" : -1,
      "results" : 23,
      "type" : "Signature",
      "underlying" : 21,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "rtype",
        "type" : 2
      }, {
        "name" : "m",
        "type" : 2
      } ],
      "name" : "(rtype unsafe.Pointer, m unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 22
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 18
      } ],
      "name" : "(*github.com/modern-go/reflect2.hiter)",
      "type" : "Tuple",
      "underlying" : 23
    }, {
      "elem" : 2,
      "name" : "*unsafe.Pointer",
      "type" : "Pointer",
      "underlying" : 24
    } ],
    "variables" : [ {
      "name" : "",
      "package" : 0,
      "type" : 4,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 4,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 4,
      "exported" : false
    }, {
      "name" : "type2",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "obj",
      "package" : 0,
      "type" : 2,
      "exported" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 4,
      "exported" : false
    }, {
      "name" : "hiter",
      "package" : 0,
      "type" : 18,
      "exported" : false
    }, {
      "name" : "rtype",
      "package" : 0,
      "type" : 2,
      "exported" : false
    }, {
      "name" : "pKeyRType",
      "package" : 0,
      "type" : 2,
      "exported" : false
    }, {
      "name" : "pKeyRType",
      "package" : 0,
      "type" : 2,
      "exported" : false
    }, {
      "name" : "pElemRType",
      "package" : 0,
      "type" : 2,
      "exported" : false
    }, {
      "name" : "pElemRType",
      "package" : 0,
      "type" : 2,
      "exported" : false
    } ]
  },
  "go-version" : "1.14.3"
}