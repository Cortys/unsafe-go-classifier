{
  "usage" : {
    "file" : "zz_generated.conversion.go",
    "label1" : "cast-struct",
    "label2" : "efficiency",
    "line" : "5230",
    "module" : "k8s.io/kubernetes",
    "pkg" : "k8s.io/kubernetes/pkg/apis/core/v1",
    "project" : "rook/rook",
    "snippet" : "out.AzureDisk = (*core.AzureDiskVolumeSource)(unsafe.Pointer(in.AzureDisk))",
    "version" : "v1.17.2"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 3 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 5215,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "GCEPersistentDisk",
            "variable" : 9
          },
          "go-type" : 95,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 96,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 96,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "GCEPersistentDiskVolumeSource"
              }
            },
            "go-type" : 95,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 95,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "GCEPersistentDisk",
                "variable" : 10
              },
              "go-type" : 5,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5215,
      "code" : "out.GCEPersistentDisk = (*core.GCEPersistentDiskVolumeSource)(unsafe.Pointer(in.GCEPersistentDisk))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 4 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5216,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "AWSElasticBlockStore",
            "variable" : 11
          },
          "go-type" : 98,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 99,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 99,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "AWSElasticBlockStoreVolumeSource"
              }
            },
            "go-type" : 98,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 98,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "AWSElasticBlockStore",
                "variable" : 12
              },
              "go-type" : 11,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5216,
      "code" : "out.AWSElasticBlockStore = (*core.AWSElasticBlockStoreVolumeSource)(unsafe.Pointer(in.AWSElasticBlockStore))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 5 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5217,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "HostPath",
            "variable" : 13
          },
          "go-type" : 101,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 102,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 102,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "HostPathVolumeSource"
              }
            },
            "go-type" : 101,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 101,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "HostPath",
                "variable" : 14
              },
              "go-type" : 14,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5217,
      "code" : "out.HostPath = (*core.HostPathVolumeSource)(unsafe.Pointer(in.HostPath))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 6 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5218,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Glusterfs",
            "variable" : 15
          },
          "go-type" : 106,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 107,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 107,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "GlusterfsPersistentVolumeSource"
              }
            },
            "go-type" : 106,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 106,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Glusterfs",
                "variable" : 16
              },
              "go-type" : 19,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5218,
      "code" : "out.Glusterfs = (*core.GlusterfsPersistentVolumeSource)(unsafe.Pointer(in.Glusterfs))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 7 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 5219,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "NFS",
            "variable" : 17
          },
          "go-type" : 109,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 110,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 110,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "NFSVolumeSource"
              }
            },
            "go-type" : 109,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 109,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "NFS",
                "variable" : 18
              },
              "go-type" : 23,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5219,
      "code" : "out.NFS = (*core.NFSVolumeSource)(unsafe.Pointer(in.NFS))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 8 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5220,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "RBD",
            "variable" : 19
          },
          "go-type" : 112,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 113,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 113,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "RBDPersistentVolumeSource"
              }
            },
            "go-type" : 112,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 112,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "RBD",
                "variable" : 20
              },
              "go-type" : 26,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5220,
      "code" : "out.RBD = (*core.RBDPersistentVolumeSource)(unsafe.Pointer(in.RBD))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 9 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5221,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ISCSI",
            "variable" : 21
          },
          "go-type" : 121,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 122,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 122,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "ISCSIPersistentVolumeSource"
              }
            },
            "go-type" : 121,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 121,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ISCSI",
                "variable" : 22
              },
              "go-type" : 33,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5221,
      "code" : "out.ISCSI = (*core.ISCSIPersistentVolumeSource)(unsafe.Pointer(in.ISCSI))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 10 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5222,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Cinder",
            "variable" : 23
          },
          "go-type" : 127,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 128,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 128,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "CinderPersistentVolumeSource"
              }
            },
            "go-type" : 127,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 127,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Cinder",
                "variable" : 24
              },
              "go-type" : 36,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5222,
      "code" : "out.Cinder = (*core.CinderPersistentVolumeSource)(unsafe.Pointer(in.Cinder))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 11 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5223,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "CephFS",
            "variable" : 25
          },
          "go-type" : 130,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 131,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 131,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "CephFSPersistentVolumeSource"
              }
            },
            "go-type" : 130,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 130,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "CephFS",
                "variable" : 26
              },
              "go-type" : 39,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5223,
      "code" : "out.CephFS = (*core.CephFSPersistentVolumeSource)(unsafe.Pointer(in.CephFS))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 12 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5224,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "FC",
            "variable" : 27
          },
          "go-type" : 133,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 134,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 134,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "FCVolumeSource"
              }
            },
            "go-type" : 133,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 133,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "FC",
                "variable" : 28
              },
              "go-type" : 42,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5224,
      "code" : "out.FC = (*core.FCVolumeSource)(unsafe.Pointer(in.FC))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 13 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 5225,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Flocker",
            "variable" : 29
          },
          "go-type" : 136,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 137,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 137,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "FlockerVolumeSource"
              }
            },
            "go-type" : 136,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 136,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Flocker",
                "variable" : 30
              },
              "go-type" : 46,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5225,
      "code" : "out.Flocker = (*core.FlockerVolumeSource)(unsafe.Pointer(in.Flocker))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 14 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5226,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "FlexVolume",
            "variable" : 31
          },
          "go-type" : 124,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 125,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 125,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "FlexPersistentVolumeSource"
              }
            },
            "go-type" : 124,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 124,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "FlexVolume",
                "variable" : 32
              },
              "go-type" : 49,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5226,
      "code" : "out.FlexVolume = (*core.FlexPersistentVolumeSource)(unsafe.Pointer(in.FlexVolume))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 15 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5227,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "AzureFile",
            "variable" : 33
          },
          "go-type" : 139,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 140,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 140,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "AzureFilePersistentVolumeSource"
              }
            },
            "go-type" : 139,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 139,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "AzureFile",
                "variable" : 34
              },
              "go-type" : 53,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5227,
      "code" : "out.AzureFile = (*core.AzureFilePersistentVolumeSource)(unsafe.Pointer(in.AzureFile))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 16 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5228,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "VsphereVolume",
            "variable" : 35
          },
          "go-type" : 142,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 143,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 143,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "VsphereVirtualDiskVolumeSource"
              }
            },
            "go-type" : 142,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 142,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "VsphereVolume",
                "variable" : 36
              },
              "go-type" : 56,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5228,
      "code" : "out.VsphereVolume = (*core.VsphereVirtualDiskVolumeSource)(unsafe.Pointer(in.VsphereVolume))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 17 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5229,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Quobyte",
            "variable" : 37
          },
          "go-type" : 118,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 119,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 119,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "QuobyteVolumeSource"
              }
            },
            "go-type" : 118,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 118,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Quobyte",
                "variable" : 38
              },
              "go-type" : 59,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5229,
      "code" : "out.Quobyte = (*core.QuobyteVolumeSource)(unsafe.Pointer(in.Quobyte))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 18 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5230,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "AzureDisk",
            "variable" : 39
          },
          "go-type" : 145,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 146,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 146,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "AzureDiskVolumeSource"
              }
            },
            "go-type" : 145,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 145,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "AzureDisk",
                "variable" : 40
              },
              "go-type" : 62,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5230,
      "code" : "out.AzureDisk = (*core.AzureDiskVolumeSource)(unsafe.Pointer(in.AzureDisk))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 19 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5231,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "PhotonPersistentDisk",
            "variable" : 41
          },
          "go-type" : 152,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 153,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 153,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "PhotonPersistentDiskVolumeSource"
              }
            },
            "go-type" : 152,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 152,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "PhotonPersistentDisk",
                "variable" : 42
              },
              "go-type" : 70,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5231,
      "code" : "out.PhotonPersistentDisk = (*core.PhotonPersistentDiskVolumeSource)(unsafe.Pointer(in.PhotonPersistentDisk))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 20 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5232,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "PortworxVolume",
            "variable" : 43
          },
          "go-type" : 155,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 156,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 156,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "PortworxVolumeSource"
              }
            },
            "go-type" : 155,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 155,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "PortworxVolume",
                "variable" : 44
              },
              "go-type" : 73,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5232,
      "code" : "out.PortworxVolume = (*core.PortworxVolumeSource)(unsafe.Pointer(in.PortworxVolume))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 21 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5233,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ScaleIO",
            "variable" : 45
          },
          "go-type" : 158,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 159,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 159,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "ScaleIOPersistentVolumeSource"
              }
            },
            "go-type" : 158,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 158,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ScaleIO",
                "variable" : 46
              },
              "go-type" : 76,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5233,
      "code" : "out.ScaleIO = (*core.ScaleIOPersistentVolumeSource)(unsafe.Pointer(in.ScaleIO))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 22 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5234,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Local",
            "variable" : 47
          },
          "go-type" : 161,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 162,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 162,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "LocalVolumeSource"
              }
            },
            "go-type" : 161,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 161,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Local",
                "variable" : 48
              },
              "go-type" : 79,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5234,
      "code" : "out.Local = (*core.LocalVolumeSource)(unsafe.Pointer(in.Local))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 23 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5235,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "StorageOS",
            "variable" : 49
          },
          "go-type" : 164,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 165,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 165,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "StorageOSPersistentVolumeSource"
              }
            },
            "go-type" : 164,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 164,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "StorageOS",
                "variable" : 50
              },
              "go-type" : 82,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5235,
      "code" : "out.StorageOS = (*core.StorageOSPersistentVolumeSource)(unsafe.Pointer(in.StorageOS))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 24 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 5236,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "CSI",
            "variable" : 51
          },
          "go-type" : 170,
          "kind" : "expression",
          "target" : {
            "go-type" : 92,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 171,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 171,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "CSIPersistentVolumeSource"
              }
            },
            "go-type" : 170,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 170,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 200,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 200,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 200,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "CSI",
                "variable" : 52
              },
              "go-type" : 89,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5236,
      "code" : "out.CSI = (*core.CSIPersistentVolumeSource)(unsafe.Pointer(in.CSI))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 5237,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 201,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 5237,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func autoConvert_v1_PersistentVolumeSource_To_core_PersistentVolumeSource(in *v1.PersistentVolumeSource, out *core.PersistentVolumeSource, s conversion.Scope) error {\n\tout.GCEPersistentDisk = (*core.GCEPersistentDiskVolumeSource)(unsafe.Pointer(in.GCEPersistentDisk))\n\tout.AWSElasticBlockStore = (*core.AWSElasticBlockStoreVolumeSource)(unsafe.Pointer(in.AWSElasticBlockStore))\n\tout.HostPath = (*core.HostPathVolumeSource)(unsafe.Pointer(in.HostPath))\n\tout.Glusterfs = (*core.GlusterfsPersistentVolumeSource)(unsafe.Pointer(in.Glusterfs))\n\tout.NFS = (*core.NFSVolumeSource)(unsafe.Pointer(in.NFS))\n\tout.RBD = (*core.RBDPersistentVolumeSource)(unsafe.Pointer(in.RBD))\n\tout.ISCSI = (*core.ISCSIPersistentVolumeSource)(unsafe.Pointer(in.ISCSI))\n\tout.Cinder = (*core.CinderPersistentVolumeSource)(unsafe.Pointer(in.Cinder))\n\tout.CephFS = (*core.CephFSPersistentVolumeSource)(unsafe.Pointer(in.CephFS))\n\tout.FC = (*core.FCVolumeSource)(unsafe.Pointer(in.FC))\n\tout.Flocker = (*core.FlockerVolumeSource)(unsafe.Pointer(in.Flocker))\n\tout.FlexVolume = (*core.FlexPersistentVolumeSource)(unsafe.Pointer(in.FlexVolume))\n\tout.AzureFile = (*core.AzureFilePersistentVolumeSource)(unsafe.Pointer(in.AzureFile))\n\tout.VsphereVolume = (*core.VsphereVirtualDiskVolumeSource)(unsafe.Pointer(in.VsphereVolume))\n\tout.Quobyte = (*core.QuobyteVolumeSource)(unsafe.Pointer(in.Quobyte))\n\tout.AzureDisk = (*core.AzureDiskVolumeSource)(unsafe.Pointer(in.AzureDisk))\n\tout.PhotonPersistentDisk = (*core.PhotonPersistentDiskVolumeSource)(unsafe.Pointer(in.PhotonPersistentDisk))\n\tout.PortworxVolume = (*core.PortworxVolumeSource)(unsafe.Pointer(in.PortworxVolume))\n\tout.ScaleIO = (*core.ScaleIOPersistentVolumeSource)(unsafe.Pointer(in.ScaleIO))\n\tout.Local = (*core.LocalVolumeSource)(unsafe.Pointer(in.Local))\n\tout.StorageOS = (*core.StorageOSPersistentVolumeSource)(unsafe.Pointer(in.StorageOS))\n\tout.CSI = (*core.CSIPersistentVolumeSource)(unsafe.Pointer(in.CSI))\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "autoConvert_v1_PersistentVolumeSource_To_core_PersistentVolumeSource",
      "package" : 0,
      "type" : 0,
      "exported" : false
    } ],
    "line-end" : 5238,
    "line-start" : 5214,
    "names" : [ "autoConvert_v1_PersistentVolumeSource_To_core_PersistentVolumeSource" ],
    "package" : 0,
    "packages" : [ {
      "name" : "v1",
      "path" : "k8s.io/kubernetes/pkg/apis/core/v1"
    }, {
      "name" : "v1",
      "path" : "k8s.io/api/core/v1"
    }, {
      "name" : "types",
      "path" : "k8s.io/apimachinery/pkg/types"
    }, {
      "name" : "core",
      "path" : "k8s.io/kubernetes/pkg/apis/core"
    }, {
      "name" : "conversion",
      "path" : "k8s.io/apimachinery/pkg/conversion"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 5, 6, 7 ],
    "receivers" : [ ],
    "results" : [ 8 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(in *k8s.io/api/core/v1.PersistentVolumeSource, out *k8s.io/kubernetes/pkg/apis/core.PersistentVolumeSource, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 1,
      "recv" : -1,
      "results" : 180,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 2
      }, {
        "name" : "out",
        "type" : 92
      }, {
        "name" : "s",
        "type" : 173
      } ],
      "name" : "(in *k8s.io/api/core/v1.PersistentVolumeSource, out *k8s.io/kubernetes/pkg/apis/core.PersistentVolumeSource, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*k8s.io/api/core/v1.PersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "PersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.PersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "GCEPersistentDisk",
        "type" : 5
      }, {
        "name" : "AWSElasticBlockStore",
        "type" : 11
      }, {
        "name" : "HostPath",
        "type" : 14
      }, {
        "name" : "Glusterfs",
        "type" : 19
      }, {
        "name" : "NFS",
        "type" : 23
      }, {
        "name" : "RBD",
        "type" : 26
      }, {
        "name" : "ISCSI",
        "type" : 33
      }, {
        "name" : "Cinder",
        "type" : 36
      }, {
        "name" : "CephFS",
        "type" : 39
      }, {
        "name" : "FC",
        "type" : 42
      }, {
        "name" : "Flocker",
        "type" : 46
      }, {
        "name" : "FlexVolume",
        "type" : 49
      }, {
        "name" : "AzureFile",
        "type" : 53
      }, {
        "name" : "VsphereVolume",
        "type" : 56
      }, {
        "name" : "Quobyte",
        "type" : 59
      }, {
        "name" : "AzureDisk",
        "type" : 62
      }, {
        "name" : "PhotonPersistentDisk",
        "type" : 70
      }, {
        "name" : "PortworxVolume",
        "type" : 73
      }, {
        "name" : "ScaleIO",
        "type" : 76
      }, {
        "name" : "Local",
        "type" : 79
      }, {
        "name" : "StorageOS",
        "type" : 82
      }, {
        "name" : "CSI",
        "type" : 89
      } ],
      "name" : "struct{GCEPersistentDisk *k8s.io/api/core/v1.GCEPersistentDiskVolumeSource \"json:\\\"gcePersistentDisk,omitempty\\\" protobuf:\\\"bytes,1,opt,name=gcePersistentDisk\\\"\"; AWSElasticBlockStore *k8s.io/api/core/v1.AWSElasticBlockStoreVolumeSource \"json:\\\"awsElasticBlockStore,omitempty\\\" protobuf:\\\"bytes,2,opt,name=awsElasticBlockStore\\\"\"; HostPath *k8s.io/api/core/v1.HostPathVolumeSource \"json:\\\"hostPath,omitempty\\\" protobuf:\\\"bytes,3,opt,name=hostPath\\\"\"; Glusterfs *k8s.io/api/core/v1.GlusterfsPersistentVolumeSource \"json:\\\"glusterfs,omitempty\\\" protobuf:\\\"bytes,4,opt,name=glusterfs\\\"\"; NFS *k8s.io/api/core/v1.NFSVolumeSource \"json:\\\"nfs,omitempty\\\" protobuf:\\\"bytes,5,opt,name=nfs\\\"\"; RBD *k8s.io/api/core/v1.RBDPersistentVolumeSource \"json:\\\"rbd,omitempty\\\" protobuf:\\\"bytes,6,opt,name=rbd\\\"\"; ISCSI *k8s.io/api/core/v1.ISCSIPersistentVolumeSource \"json:\\\"iscsi,omitempty\\\" protobuf:\\\"bytes,7,opt,name=iscsi\\\"\"; Cinder *k8s.io/api/core/v1.CinderPersistentVolumeSource \"json:\\\"cinder,omitempty\\\" protobuf:\\\"bytes,8,opt,name=cinder\\\"\"; CephFS *k8s.io/api/core/v1.CephFSPersistentVolumeSource \"json:\\\"cephfs,omitempty\\\" protobuf:\\\"bytes,9,opt,name=cephfs\\\"\"; FC *k8s.io/api/core/v1.FCVolumeSource \"json:\\\"fc,omitempty\\\" protobuf:\\\"bytes,10,opt,name=fc\\\"\"; Flocker *k8s.io/api/core/v1.FlockerVolumeSource \"json:\\\"flocker,omitempty\\\" protobuf:\\\"bytes,11,opt,name=flocker\\\"\"; FlexVolume *k8s.io/api/core/v1.FlexPersistentVolumeSource \"json:\\\"flexVolume,omitempty\\\" protobuf:\\\"bytes,12,opt,name=flexVolume\\\"\"; AzureFile *k8s.io/api/core/v1.AzureFilePersistentVolumeSource \"json:\\\"azureFile,omitempty\\\" protobuf:\\\"bytes,13,opt,name=azureFile\\\"\"; VsphereVolume *k8s.io/api/core/v1.VsphereVirtualDiskVolumeSource \"json:\\\"vsphereVolume,omitempty\\\" protobuf:\\\"bytes,14,opt,name=vsphereVolume\\\"\"; Quobyte *k8s.io/api/core/v1.QuobyteVolumeSource \"json:\\\"quobyte,omitempty\\\" protobuf:\\\"bytes,15,opt,name=quobyte\\\"\"; AzureDisk *k8s.io/api/core/v1.AzureDiskVolumeSource \"json:\\\"azureDisk,omitempty\\\" protobuf:\\\"bytes,16,opt,name=azureDisk\\\"\"; PhotonPersistentDisk *k8s.io/api/core/v1.PhotonPersistentDiskVolumeSource \"json:\\\"photonPersistentDisk,omitempty\\\" protobuf:\\\"bytes,17,opt,name=photonPersistentDisk\\\"\"; PortworxVolume *k8s.io/api/core/v1.PortworxVolumeSource \"json:\\\"portworxVolume,omitempty\\\" protobuf:\\\"bytes,18,opt,name=portworxVolume\\\"\"; ScaleIO *k8s.io/api/core/v1.ScaleIOPersistentVolumeSource \"json:\\\"scaleIO,omitempty\\\" protobuf:\\\"bytes,19,opt,name=scaleIO\\\"\"; Local *k8s.io/api/core/v1.LocalVolumeSource \"json:\\\"local,omitempty\\\" protobuf:\\\"bytes,20,opt,name=local\\\"\"; StorageOS *k8s.io/api/core/v1.StorageOSPersistentVolumeSource \"json:\\\"storageos,omitempty\\\" protobuf:\\\"bytes,21,opt,name=storageos\\\"\"; CSI *k8s.io/api/core/v1.CSIPersistentVolumeSource \"json:\\\"csi,omitempty\\\" protobuf:\\\"bytes,22,opt,name=csi\\\"\"}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "elem" : 6,
      "name" : "*k8s.io/api/core/v1.GCEPersistentDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 5
    }, {
      "local-name" : "GCEPersistentDiskVolumeSource",
      "name" : "k8s.io/api/core/v1.GCEPersistentDiskVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 7
    }, {
      "fields" : [ {
        "name" : "PDName",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "Partition",
        "type" : 9
      }, {
        "name" : "ReadOnly",
        "type" : 10
      } ],
      "name" : "struct{PDName string \"json:\\\"pdName\\\" protobuf:\\\"bytes,1,opt,name=pdName\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; Partition int32 \"json:\\\"partition,omitempty\\\" protobuf:\\\"varint,3,opt,name=partition\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 7
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 8
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 9
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 10
    }, {
      "elem" : 12,
      "name" : "*k8s.io/api/core/v1.AWSElasticBlockStoreVolumeSource",
      "type" : "Pointer",
      "underlying" : 11
    }, {
      "local-name" : "AWSElasticBlockStoreVolumeSource",
      "name" : "k8s.io/api/core/v1.AWSElasticBlockStoreVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "Partition",
        "type" : 9
      }, {
        "name" : "ReadOnly",
        "type" : 10
      } ],
      "name" : "struct{VolumeID string \"json:\\\"volumeID\\\" protobuf:\\\"bytes,1,opt,name=volumeID\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; Partition int32 \"json:\\\"partition,omitempty\\\" protobuf:\\\"varint,3,opt,name=partition\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 13
    }, {
      "elem" : 15,
      "name" : "*k8s.io/api/core/v1.HostPathVolumeSource",
      "type" : "Pointer",
      "underlying" : 14
    }, {
      "local-name" : "HostPathVolumeSource",
      "name" : "k8s.io/api/core/v1.HostPathVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 16
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "Type",
        "type" : 17
      } ],
      "name" : "struct{Path string \"json:\\\"path\\\" protobuf:\\\"bytes,1,opt,name=path\\\"\"; Type *k8s.io/api/core/v1.HostPathType \"json:\\\"type,omitempty\\\" protobuf:\\\"bytes,2,opt,name=type\\\"\"}",
      "type" : "Struct",
      "underlying" : 16
    }, {
      "elem" : 18,
      "name" : "*k8s.io/api/core/v1.HostPathType",
      "type" : "Pointer",
      "underlying" : 17
    }, {
      "local-name" : "HostPathType",
      "name" : "k8s.io/api/core/v1.HostPathType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 20,
      "name" : "*k8s.io/api/core/v1.GlusterfsPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 19
    }, {
      "local-name" : "GlusterfsPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.GlusterfsPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 21
    }, {
      "fields" : [ {
        "name" : "EndpointsName",
        "type" : 8
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "EndpointsNamespace",
        "type" : 22
      } ],
      "name" : "struct{EndpointsName string \"json:\\\"endpoints\\\" protobuf:\\\"bytes,1,opt,name=endpoints\\\"\"; Path string \"json:\\\"path\\\" protobuf:\\\"bytes,2,opt,name=path\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"; EndpointsNamespace *string \"json:\\\"endpointsNamespace,omitempty\\\" protobuf:\\\"bytes,4,opt,name=endpointsNamespace\\\"\"}",
      "type" : "Struct",
      "underlying" : 21
    }, {
      "elem" : 8,
      "name" : "*string",
      "type" : "Pointer",
      "underlying" : 22
    }, {
      "elem" : 24,
      "name" : "*k8s.io/api/core/v1.NFSVolumeSource",
      "type" : "Pointer",
      "underlying" : 23
    }, {
      "local-name" : "NFSVolumeSource",
      "name" : "k8s.io/api/core/v1.NFSVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 25
    }, {
      "fields" : [ {
        "name" : "Server",
        "type" : 8
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      } ],
      "name" : "struct{Server string \"json:\\\"server\\\" protobuf:\\\"bytes,1,opt,name=server\\\"\"; Path string \"json:\\\"path\\\" protobuf:\\\"bytes,2,opt,name=path\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 25
    }, {
      "elem" : 27,
      "name" : "*k8s.io/api/core/v1.RBDPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 26
    }, {
      "local-name" : "RBDPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.RBDPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 28
    }, {
      "fields" : [ {
        "name" : "CephMonitors",
        "type" : 29
      }, {
        "name" : "RBDImage",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "RBDPool",
        "type" : 8
      }, {
        "name" : "RadosUser",
        "type" : 8
      }, {
        "name" : "Keyring",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 30
      }, {
        "name" : "ReadOnly",
        "type" : 10
      } ],
      "name" : "struct{CephMonitors []string \"json:\\\"monitors\\\" protobuf:\\\"bytes,1,rep,name=monitors\\\"\"; RBDImage string \"json:\\\"image\\\" protobuf:\\\"bytes,2,opt,name=image\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,3,opt,name=fsType\\\"\"; RBDPool string \"json:\\\"pool,omitempty\\\" protobuf:\\\"bytes,4,opt,name=pool\\\"\"; RadosUser string \"json:\\\"user,omitempty\\\" protobuf:\\\"bytes,5,opt,name=user\\\"\"; Keyring string \"json:\\\"keyring,omitempty\\\" protobuf:\\\"bytes,6,opt,name=keyring\\\"\"; SecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,7,opt,name=secretRef\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,8,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 28
    }, {
      "elem" : 8,
      "name" : "[]string",
      "type" : "Slice",
      "underlying" : 29
    }, {
      "elem" : 31,
      "name" : "*k8s.io/api/core/v1.SecretReference",
      "type" : "Pointer",
      "underlying" : 30
    }, {
      "local-name" : "SecretReference",
      "name" : "k8s.io/api/core/v1.SecretReference",
      "package" : 1,
      "type" : "Named",
      "underlying" : 32
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "Namespace",
        "type" : 8
      } ],
      "name" : "struct{Name string \"json:\\\"name,omitempty\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; Namespace string \"json:\\\"namespace,omitempty\\\" protobuf:\\\"bytes,2,opt,name=namespace\\\"\"}",
      "type" : "Struct",
      "underlying" : 32
    }, {
      "elem" : 34,
      "name" : "*k8s.io/api/core/v1.ISCSIPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 33
    }, {
      "local-name" : "ISCSIPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.ISCSIPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 35
    }, {
      "fields" : [ {
        "name" : "TargetPortal",
        "type" : 8
      }, {
        "name" : "IQN",
        "type" : 8
      }, {
        "name" : "Lun",
        "type" : 9
      }, {
        "name" : "ISCSIInterface",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "Portals",
        "type" : 29
      }, {
        "name" : "DiscoveryCHAPAuth",
        "type" : 10
      }, {
        "name" : "SessionCHAPAuth",
        "type" : 10
      }, {
        "name" : "SecretRef",
        "type" : 30
      }, {
        "name" : "InitiatorName",
        "type" : 22
      } ],
      "name" : "struct{TargetPortal string \"json:\\\"targetPortal\\\" protobuf:\\\"bytes,1,opt,name=targetPortal\\\"\"; IQN string \"json:\\\"iqn\\\" protobuf:\\\"bytes,2,opt,name=iqn\\\"\"; Lun int32 \"json:\\\"lun\\\" protobuf:\\\"varint,3,opt,name=lun\\\"\"; ISCSIInterface string \"json:\\\"iscsiInterface,omitempty\\\" protobuf:\\\"bytes,4,opt,name=iscsiInterface\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,5,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,6,opt,name=readOnly\\\"\"; Portals []string \"json:\\\"portals,omitempty\\\" protobuf:\\\"bytes,7,opt,name=portals\\\"\"; DiscoveryCHAPAuth bool \"json:\\\"chapAuthDiscovery,omitempty\\\" protobuf:\\\"varint,8,opt,name=chapAuthDiscovery\\\"\"; SessionCHAPAuth bool \"json:\\\"chapAuthSession,omitempty\\\" protobuf:\\\"varint,11,opt,name=chapAuthSession\\\"\"; SecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,10,opt,name=secretRef\\\"\"; InitiatorName *string \"json:\\\"initiatorName,omitempty\\\" protobuf:\\\"bytes,12,opt,name=initiatorName\\\"\"}",
      "type" : "Struct",
      "underlying" : 35
    }, {
      "elem" : 37,
      "name" : "*k8s.io/api/core/v1.CinderPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 36
    }, {
      "local-name" : "CinderPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.CinderPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 38
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "SecretRef",
        "type" : 30
      } ],
      "name" : "struct{VolumeID string \"json:\\\"volumeID\\\" protobuf:\\\"bytes,1,opt,name=volumeID\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"; SecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,4,opt,name=secretRef\\\"\"}",
      "type" : "Struct",
      "underlying" : 38
    }, {
      "elem" : 40,
      "name" : "*k8s.io/api/core/v1.CephFSPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 39
    }, {
      "local-name" : "CephFSPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.CephFSPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 41
    }, {
      "fields" : [ {
        "name" : "Monitors",
        "type" : 29
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "User",
        "type" : 8
      }, {
        "name" : "SecretFile",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 30
      }, {
        "name" : "ReadOnly",
        "type" : 10
      } ],
      "name" : "struct{Monitors []string \"json:\\\"monitors\\\" protobuf:\\\"bytes,1,rep,name=monitors\\\"\"; Path string \"json:\\\"path,omitempty\\\" protobuf:\\\"bytes,2,opt,name=path\\\"\"; User string \"json:\\\"user,omitempty\\\" protobuf:\\\"bytes,3,opt,name=user\\\"\"; SecretFile string \"json:\\\"secretFile,omitempty\\\" protobuf:\\\"bytes,4,opt,name=secretFile\\\"\"; SecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,5,opt,name=secretRef\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,6,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 41
    }, {
      "elem" : 43,
      "name" : "*k8s.io/api/core/v1.FCVolumeSource",
      "type" : "Pointer",
      "underlying" : 42
    }, {
      "local-name" : "FCVolumeSource",
      "name" : "k8s.io/api/core/v1.FCVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 44
    }, {
      "fields" : [ {
        "name" : "TargetWWNs",
        "type" : 29
      }, {
        "name" : "Lun",
        "type" : 45
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "WWIDs",
        "type" : 29
      } ],
      "name" : "struct{TargetWWNs []string \"json:\\\"targetWWNs,omitempty\\\" protobuf:\\\"bytes,1,rep,name=targetWWNs\\\"\"; Lun *int32 \"json:\\\"lun,omitempty\\\" protobuf:\\\"varint,2,opt,name=lun\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,3,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"; WWIDs []string \"json:\\\"wwids,omitempty\\\" protobuf:\\\"bytes,5,rep,name=wwids\\\"\"}",
      "type" : "Struct",
      "underlying" : 44
    }, {
      "elem" : 9,
      "name" : "*int32",
      "type" : "Pointer",
      "underlying" : 45
    }, {
      "elem" : 47,
      "name" : "*k8s.io/api/core/v1.FlockerVolumeSource",
      "type" : "Pointer",
      "underlying" : 46
    }, {
      "local-name" : "FlockerVolumeSource",
      "name" : "k8s.io/api/core/v1.FlockerVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 48
    }, {
      "fields" : [ {
        "name" : "DatasetName",
        "type" : 8
      }, {
        "name" : "DatasetUUID",
        "type" : 8
      } ],
      "name" : "struct{DatasetName string \"json:\\\"datasetName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=datasetName\\\"\"; DatasetUUID string \"json:\\\"datasetUUID,omitempty\\\" protobuf:\\\"bytes,2,opt,name=datasetUUID\\\"\"}",
      "type" : "Struct",
      "underlying" : 48
    }, {
      "elem" : 50,
      "name" : "*k8s.io/api/core/v1.FlexPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 49
    }, {
      "local-name" : "FlexPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.FlexPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 51
    }, {
      "fields" : [ {
        "name" : "Driver",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 30
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "Options",
        "type" : 52
      } ],
      "name" : "struct{Driver string \"json:\\\"driver\\\" protobuf:\\\"bytes,1,opt,name=driver\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; SecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,3,opt,name=secretRef\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"; Options map[string]string \"json:\\\"options,omitempty\\\" protobuf:\\\"bytes,5,rep,name=options\\\"\"}",
      "type" : "Struct",
      "underlying" : 51
    }, {
      "elem" : 8,
      "key" : 8,
      "name" : "map[string]string",
      "type" : "Map",
      "underlying" : 52
    }, {
      "elem" : 54,
      "name" : "*k8s.io/api/core/v1.AzureFilePersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 53
    }, {
      "local-name" : "AzureFilePersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.AzureFilePersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 55
    }, {
      "fields" : [ {
        "name" : "SecretName",
        "type" : 8
      }, {
        "name" : "ShareName",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "SecretNamespace",
        "type" : 22
      } ],
      "name" : "struct{SecretName string \"json:\\\"secretName\\\" protobuf:\\\"bytes,1,opt,name=secretName\\\"\"; ShareName string \"json:\\\"shareName\\\" protobuf:\\\"bytes,2,opt,name=shareName\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"; SecretNamespace *string \"json:\\\"secretNamespace\\\" protobuf:\\\"bytes,4,opt,name=secretNamespace\\\"\"}",
      "type" : "Struct",
      "underlying" : 55
    }, {
      "elem" : 57,
      "name" : "*k8s.io/api/core/v1.VsphereVirtualDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 56
    }, {
      "local-name" : "VsphereVirtualDiskVolumeSource",
      "name" : "k8s.io/api/core/v1.VsphereVirtualDiskVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 58
    }, {
      "fields" : [ {
        "name" : "VolumePath",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "StoragePolicyName",
        "type" : 8
      }, {
        "name" : "StoragePolicyID",
        "type" : 8
      } ],
      "name" : "struct{VolumePath string \"json:\\\"volumePath\\\" protobuf:\\\"bytes,1,opt,name=volumePath\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; StoragePolicyName string \"json:\\\"storagePolicyName,omitempty\\\" protobuf:\\\"bytes,3,opt,name=storagePolicyName\\\"\"; StoragePolicyID string \"json:\\\"storagePolicyID,omitempty\\\" protobuf:\\\"bytes,4,opt,name=storagePolicyID\\\"\"}",
      "type" : "Struct",
      "underlying" : 58
    }, {
      "elem" : 60,
      "name" : "*k8s.io/api/core/v1.QuobyteVolumeSource",
      "type" : "Pointer",
      "underlying" : 59
    }, {
      "local-name" : "QuobyteVolumeSource",
      "name" : "k8s.io/api/core/v1.QuobyteVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 61
    }, {
      "fields" : [ {
        "name" : "Registry",
        "type" : 8
      }, {
        "name" : "Volume",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "User",
        "type" : 8
      }, {
        "name" : "Group",
        "type" : 8
      }, {
        "name" : "Tenant",
        "type" : 8
      } ],
      "name" : "struct{Registry string \"json:\\\"registry\\\" protobuf:\\\"bytes,1,opt,name=registry\\\"\"; Volume string \"json:\\\"volume\\\" protobuf:\\\"bytes,2,opt,name=volume\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"; User string \"json:\\\"user,omitempty\\\" protobuf:\\\"bytes,4,opt,name=user\\\"\"; Group string \"json:\\\"group,omitempty\\\" protobuf:\\\"bytes,5,opt,name=group\\\"\"; Tenant string \"json:\\\"tenant,omitempty\\\" protobuf:\\\"bytes,6,opt,name=tenant\\\"\"}",
      "type" : "Struct",
      "underlying" : 61
    }, {
      "elem" : 63,
      "name" : "*k8s.io/api/core/v1.AzureDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 62
    }, {
      "local-name" : "AzureDiskVolumeSource",
      "name" : "k8s.io/api/core/v1.AzureDiskVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 64
    }, {
      "fields" : [ {
        "name" : "DiskName",
        "type" : 8
      }, {
        "name" : "DataDiskURI",
        "type" : 8
      }, {
        "name" : "CachingMode",
        "type" : 65
      }, {
        "name" : "FSType",
        "type" : 22
      }, {
        "name" : "ReadOnly",
        "type" : 67
      }, {
        "name" : "Kind",
        "type" : 68
      } ],
      "name" : "struct{DiskName string \"json:\\\"diskName\\\" protobuf:\\\"bytes,1,opt,name=diskName\\\"\"; DataDiskURI string \"json:\\\"diskURI\\\" protobuf:\\\"bytes,2,opt,name=diskURI\\\"\"; CachingMode *k8s.io/api/core/v1.AzureDataDiskCachingMode \"json:\\\"cachingMode,omitempty\\\" protobuf:\\\"bytes,3,opt,name=cachingMode,casttype=AzureDataDiskCachingMode\\\"\"; FSType *string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,4,opt,name=fsType\\\"\"; ReadOnly *bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,5,opt,name=readOnly\\\"\"; Kind *k8s.io/api/core/v1.AzureDataDiskKind \"json:\\\"kind,omitempty\\\" protobuf:\\\"bytes,6,opt,name=kind,casttype=AzureDataDiskKind\\\"\"}",
      "type" : "Struct",
      "underlying" : 64
    }, {
      "elem" : 66,
      "name" : "*k8s.io/api/core/v1.AzureDataDiskCachingMode",
      "type" : "Pointer",
      "underlying" : 65
    }, {
      "local-name" : "AzureDataDiskCachingMode",
      "name" : "k8s.io/api/core/v1.AzureDataDiskCachingMode",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 10,
      "name" : "*bool",
      "type" : "Pointer",
      "underlying" : 67
    }, {
      "elem" : 69,
      "name" : "*k8s.io/api/core/v1.AzureDataDiskKind",
      "type" : "Pointer",
      "underlying" : 68
    }, {
      "local-name" : "AzureDataDiskKind",
      "name" : "k8s.io/api/core/v1.AzureDataDiskKind",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 71,
      "name" : "*k8s.io/api/core/v1.PhotonPersistentDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 70
    }, {
      "local-name" : "PhotonPersistentDiskVolumeSource",
      "name" : "k8s.io/api/core/v1.PhotonPersistentDiskVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 72
    }, {
      "fields" : [ {
        "name" : "PdID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      } ],
      "name" : "struct{PdID string \"json:\\\"pdID\\\" protobuf:\\\"bytes,1,opt,name=pdID\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"}",
      "type" : "Struct",
      "underlying" : 72
    }, {
      "elem" : 74,
      "name" : "*k8s.io/api/core/v1.PortworxVolumeSource",
      "type" : "Pointer",
      "underlying" : 73
    }, {
      "local-name" : "PortworxVolumeSource",
      "name" : "k8s.io/api/core/v1.PortworxVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 75
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      } ],
      "name" : "struct{VolumeID string \"json:\\\"volumeID\\\" protobuf:\\\"bytes,1,opt,name=volumeID\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 75
    }, {
      "elem" : 77,
      "name" : "*k8s.io/api/core/v1.ScaleIOPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 76
    }, {
      "local-name" : "ScaleIOPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.ScaleIOPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 78
    }, {
      "fields" : [ {
        "name" : "Gateway",
        "type" : 8
      }, {
        "name" : "System",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 30
      }, {
        "name" : "SSLEnabled",
        "type" : 10
      }, {
        "name" : "ProtectionDomain",
        "type" : 8
      }, {
        "name" : "StoragePool",
        "type" : 8
      }, {
        "name" : "StorageMode",
        "type" : 8
      }, {
        "name" : "VolumeName",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      } ],
      "name" : "struct{Gateway string \"json:\\\"gateway\\\" protobuf:\\\"bytes,1,opt,name=gateway\\\"\"; System string \"json:\\\"system\\\" protobuf:\\\"bytes,2,opt,name=system\\\"\"; SecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"secretRef\\\" protobuf:\\\"bytes,3,opt,name=secretRef\\\"\"; SSLEnabled bool \"json:\\\"sslEnabled,omitempty\\\" protobuf:\\\"varint,4,opt,name=sslEnabled\\\"\"; ProtectionDomain string \"json:\\\"protectionDomain,omitempty\\\" protobuf:\\\"bytes,5,opt,name=protectionDomain\\\"\"; StoragePool string \"json:\\\"storagePool,omitempty\\\" protobuf:\\\"bytes,6,opt,name=storagePool\\\"\"; StorageMode string \"json:\\\"storageMode,omitempty\\\" protobuf:\\\"bytes,7,opt,name=storageMode\\\"\"; VolumeName string \"json:\\\"volumeName,omitempty\\\" protobuf:\\\"bytes,8,opt,name=volumeName\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,9,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,10,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 78
    }, {
      "elem" : 80,
      "name" : "*k8s.io/api/core/v1.LocalVolumeSource",
      "type" : "Pointer",
      "underlying" : 79
    }, {
      "local-name" : "LocalVolumeSource",
      "name" : "k8s.io/api/core/v1.LocalVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 81
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 22
      } ],
      "name" : "struct{Path string \"json:\\\"path\\\" protobuf:\\\"bytes,1,opt,name=path\\\"\"; FSType *string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"}",
      "type" : "Struct",
      "underlying" : 81
    }, {
      "elem" : 83,
      "name" : "*k8s.io/api/core/v1.StorageOSPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 82
    }, {
      "local-name" : "StorageOSPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.StorageOSPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 84
    }, {
      "fields" : [ {
        "name" : "VolumeName",
        "type" : 8
      }, {
        "name" : "VolumeNamespace",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "SecretRef",
        "type" : 85
      } ],
      "name" : "struct{VolumeName string \"json:\\\"volumeName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=volumeName\\\"\"; VolumeNamespace string \"json:\\\"volumeNamespace,omitempty\\\" protobuf:\\\"bytes,2,opt,name=volumeNamespace\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,3,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"; SecretRef *k8s.io/api/core/v1.ObjectReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,5,opt,name=secretRef\\\"\"}",
      "type" : "Struct",
      "underlying" : 84
    }, {
      "elem" : 86,
      "name" : "*k8s.io/api/core/v1.ObjectReference",
      "type" : "Pointer",
      "underlying" : 85
    }, {
      "local-name" : "ObjectReference",
      "name" : "k8s.io/api/core/v1.ObjectReference",
      "package" : 1,
      "type" : "Named",
      "underlying" : 87
    }, {
      "fields" : [ {
        "name" : "Kind",
        "type" : 8
      }, {
        "name" : "Namespace",
        "type" : 8
      }, {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "UID",
        "type" : 88
      }, {
        "name" : "APIVersion",
        "type" : 8
      }, {
        "name" : "ResourceVersion",
        "type" : 8
      }, {
        "name" : "FieldPath",
        "type" : 8
      } ],
      "name" : "struct{Kind string \"json:\\\"kind,omitempty\\\" protobuf:\\\"bytes,1,opt,name=kind\\\"\"; Namespace string \"json:\\\"namespace,omitempty\\\" protobuf:\\\"bytes,2,opt,name=namespace\\\"\"; Name string \"json:\\\"name,omitempty\\\" protobuf:\\\"bytes,3,opt,name=name\\\"\"; UID k8s.io/apimachinery/pkg/types.UID \"json:\\\"uid,omitempty\\\" protobuf:\\\"bytes,4,opt,name=uid,casttype=k8s.io/apimachinery/pkg/types.UID\\\"\"; APIVersion string \"json:\\\"apiVersion,omitempty\\\" protobuf:\\\"bytes,5,opt,name=apiVersion\\\"\"; ResourceVersion string \"json:\\\"resourceVersion,omitempty\\\" protobuf:\\\"bytes,6,opt,name=resourceVersion\\\"\"; FieldPath string \"json:\\\"fieldPath,omitempty\\\" protobuf:\\\"bytes,7,opt,name=fieldPath\\\"\"}",
      "type" : "Struct",
      "underlying" : 87
    }, {
      "local-name" : "UID",
      "name" : "k8s.io/apimachinery/pkg/types.UID",
      "package" : 2,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 90,
      "name" : "*k8s.io/api/core/v1.CSIPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 89
    }, {
      "local-name" : "CSIPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.CSIPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 91
    }, {
      "fields" : [ {
        "name" : "Driver",
        "type" : 8
      }, {
        "name" : "VolumeHandle",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "VolumeAttributes",
        "type" : 52
      }, {
        "name" : "ControllerPublishSecretRef",
        "type" : 30
      }, {
        "name" : "NodeStageSecretRef",
        "type" : 30
      }, {
        "name" : "NodePublishSecretRef",
        "type" : 30
      }, {
        "name" : "ControllerExpandSecretRef",
        "type" : 30
      } ],
      "name" : "struct{Driver string \"json:\\\"driver\\\" protobuf:\\\"bytes,1,opt,name=driver\\\"\"; VolumeHandle string \"json:\\\"volumeHandle\\\" protobuf:\\\"bytes,2,opt,name=volumeHandle\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,4,opt,name=fsType\\\"\"; VolumeAttributes map[string]string \"json:\\\"volumeAttributes,omitempty\\\" protobuf:\\\"bytes,5,rep,name=volumeAttributes\\\"\"; ControllerPublishSecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"controllerPublishSecretRef,omitempty\\\" protobuf:\\\"bytes,6,opt,name=controllerPublishSecretRef\\\"\"; NodeStageSecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"nodeStageSecretRef,omitempty\\\" protobuf:\\\"bytes,7,opt,name=nodeStageSecretRef\\\"\"; NodePublishSecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"nodePublishSecretRef,omitempty\\\" protobuf:\\\"bytes,8,opt,name=nodePublishSecretRef\\\"\"; ControllerExpandSecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"controllerExpandSecretRef,omitempty\\\" protobuf:\\\"bytes,9,opt,name=controllerExpandSecretRef\\\"\"}",
      "type" : "Struct",
      "underlying" : 91
    }, {
      "elem" : 93,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 92
    }, {
      "local-name" : "PersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PersistentVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 94
    }, {
      "fields" : [ {
        "name" : "GCEPersistentDisk",
        "type" : 95
      }, {
        "name" : "AWSElasticBlockStore",
        "type" : 98
      }, {
        "name" : "HostPath",
        "type" : 101
      }, {
        "name" : "Glusterfs",
        "type" : 106
      }, {
        "name" : "NFS",
        "type" : 109
      }, {
        "name" : "RBD",
        "type" : 112
      }, {
        "name" : "Quobyte",
        "type" : 118
      }, {
        "name" : "ISCSI",
        "type" : 121
      }, {
        "name" : "FlexVolume",
        "type" : 124
      }, {
        "name" : "Cinder",
        "type" : 127
      }, {
        "name" : "CephFS",
        "type" : 130
      }, {
        "name" : "FC",
        "type" : 133
      }, {
        "name" : "Flocker",
        "type" : 136
      }, {
        "name" : "AzureFile",
        "type" : 139
      }, {
        "name" : "VsphereVolume",
        "type" : 142
      }, {
        "name" : "AzureDisk",
        "type" : 145
      }, {
        "name" : "PhotonPersistentDisk",
        "type" : 152
      }, {
        "name" : "PortworxVolume",
        "type" : 155
      }, {
        "name" : "ScaleIO",
        "type" : 158
      }, {
        "name" : "Local",
        "type" : 161
      }, {
        "name" : "StorageOS",
        "type" : 164
      }, {
        "name" : "CSI",
        "type" : 170
      } ],
      "name" : "struct{GCEPersistentDisk *k8s.io/kubernetes/pkg/apis/core.GCEPersistentDiskVolumeSource; AWSElasticBlockStore *k8s.io/kubernetes/pkg/apis/core.AWSElasticBlockStoreVolumeSource; HostPath *k8s.io/kubernetes/pkg/apis/core.HostPathVolumeSource; Glusterfs *k8s.io/kubernetes/pkg/apis/core.GlusterfsPersistentVolumeSource; NFS *k8s.io/kubernetes/pkg/apis/core.NFSVolumeSource; RBD *k8s.io/kubernetes/pkg/apis/core.RBDPersistentVolumeSource; Quobyte *k8s.io/kubernetes/pkg/apis/core.QuobyteVolumeSource; ISCSI *k8s.io/kubernetes/pkg/apis/core.ISCSIPersistentVolumeSource; FlexVolume *k8s.io/kubernetes/pkg/apis/core.FlexPersistentVolumeSource; Cinder *k8s.io/kubernetes/pkg/apis/core.CinderPersistentVolumeSource; CephFS *k8s.io/kubernetes/pkg/apis/core.CephFSPersistentVolumeSource; FC *k8s.io/kubernetes/pkg/apis/core.FCVolumeSource; Flocker *k8s.io/kubernetes/pkg/apis/core.FlockerVolumeSource; AzureFile *k8s.io/kubernetes/pkg/apis/core.AzureFilePersistentVolumeSource; VsphereVolume *k8s.io/kubernetes/pkg/apis/core.VsphereVirtualDiskVolumeSource; AzureDisk *k8s.io/kubernetes/pkg/apis/core.AzureDiskVolumeSource; PhotonPersistentDisk *k8s.io/kubernetes/pkg/apis/core.PhotonPersistentDiskVolumeSource; PortworxVolume *k8s.io/kubernetes/pkg/apis/core.PortworxVolumeSource; ScaleIO *k8s.io/kubernetes/pkg/apis/core.ScaleIOPersistentVolumeSource; Local *k8s.io/kubernetes/pkg/apis/core.LocalVolumeSource; StorageOS *k8s.io/kubernetes/pkg/apis/core.StorageOSPersistentVolumeSource; CSI *k8s.io/kubernetes/pkg/apis/core.CSIPersistentVolumeSource}",
      "type" : "Struct",
      "underlying" : 94
    }, {
      "elem" : 96,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.GCEPersistentDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 95
    }, {
      "local-name" : "GCEPersistentDiskVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.GCEPersistentDiskVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 97
    }, {
      "fields" : [ {
        "name" : "PDName",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "Partition",
        "type" : 9
      }, {
        "name" : "ReadOnly",
        "type" : 10
      } ],
      "name" : "struct{PDName string; FSType string; Partition int32; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 97
    }, {
      "elem" : 99,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AWSElasticBlockStoreVolumeSource",
      "type" : "Pointer",
      "underlying" : 98
    }, {
      "local-name" : "AWSElasticBlockStoreVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AWSElasticBlockStoreVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 100
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "Partition",
        "type" : 9
      }, {
        "name" : "ReadOnly",
        "type" : 10
      } ],
      "name" : "struct{VolumeID string; FSType string; Partition int32; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 100
    }, {
      "elem" : 102,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.HostPathVolumeSource",
      "type" : "Pointer",
      "underlying" : 101
    }, {
      "local-name" : "HostPathVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.HostPathVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 103
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "Type",
        "type" : 104
      } ],
      "name" : "struct{Path string; Type *k8s.io/kubernetes/pkg/apis/core.HostPathType}",
      "type" : "Struct",
      "underlying" : 103
    }, {
      "elem" : 105,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.HostPathType",
      "type" : "Pointer",
      "underlying" : 104
    }, {
      "local-name" : "HostPathType",
      "name" : "k8s.io/kubernetes/pkg/apis/core.HostPathType",
      "package" : 3,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 107,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.GlusterfsPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 106
    }, {
      "local-name" : "GlusterfsPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.GlusterfsPersistentVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 108
    }, {
      "fields" : [ {
        "name" : "EndpointsName",
        "type" : 8
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "EndpointsNamespace",
        "type" : 22
      } ],
      "name" : "struct{EndpointsName string; Path string; ReadOnly bool; EndpointsNamespace *string}",
      "type" : "Struct",
      "underlying" : 108
    }, {
      "elem" : 110,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.NFSVolumeSource",
      "type" : "Pointer",
      "underlying" : 109
    }, {
      "local-name" : "NFSVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NFSVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 111
    }, {
      "fields" : [ {
        "name" : "Server",
        "type" : 8
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      } ],
      "name" : "struct{Server string; Path string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 111
    }, {
      "elem" : 113,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.RBDPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 112
    }, {
      "local-name" : "RBDPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.RBDPersistentVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 114
    }, {
      "fields" : [ {
        "name" : "CephMonitors",
        "type" : 29
      }, {
        "name" : "RBDImage",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "RBDPool",
        "type" : 8
      }, {
        "name" : "RadosUser",
        "type" : 8
      }, {
        "name" : "Keyring",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 115
      }, {
        "name" : "ReadOnly",
        "type" : 10
      } ],
      "name" : "struct{CephMonitors []string; RBDImage string; FSType string; RBDPool string; RadosUser string; Keyring string; SecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 114
    }, {
      "elem" : 116,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.SecretReference",
      "type" : "Pointer",
      "underlying" : 115
    }, {
      "local-name" : "SecretReference",
      "name" : "k8s.io/kubernetes/pkg/apis/core.SecretReference",
      "package" : 3,
      "type" : "Named",
      "underlying" : 117
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "Namespace",
        "type" : 8
      } ],
      "name" : "struct{Name string; Namespace string}",
      "type" : "Struct",
      "underlying" : 117
    }, {
      "elem" : 119,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.QuobyteVolumeSource",
      "type" : "Pointer",
      "underlying" : 118
    }, {
      "local-name" : "QuobyteVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.QuobyteVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 120
    }, {
      "fields" : [ {
        "name" : "Registry",
        "type" : 8
      }, {
        "name" : "Volume",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "User",
        "type" : 8
      }, {
        "name" : "Group",
        "type" : 8
      }, {
        "name" : "Tenant",
        "type" : 8
      } ],
      "name" : "struct{Registry string; Volume string; ReadOnly bool; User string; Group string; Tenant string}",
      "type" : "Struct",
      "underlying" : 120
    }, {
      "elem" : 122,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ISCSIPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 121
    }, {
      "local-name" : "ISCSIPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ISCSIPersistentVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 123
    }, {
      "fields" : [ {
        "name" : "TargetPortal",
        "type" : 8
      }, {
        "name" : "IQN",
        "type" : 8
      }, {
        "name" : "Lun",
        "type" : 9
      }, {
        "name" : "ISCSIInterface",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "Portals",
        "type" : 29
      }, {
        "name" : "DiscoveryCHAPAuth",
        "type" : 10
      }, {
        "name" : "SessionCHAPAuth",
        "type" : 10
      }, {
        "name" : "SecretRef",
        "type" : 115
      }, {
        "name" : "InitiatorName",
        "type" : 22
      } ],
      "name" : "struct{TargetPortal string; IQN string; Lun int32; ISCSIInterface string; FSType string; ReadOnly bool; Portals []string; DiscoveryCHAPAuth bool; SessionCHAPAuth bool; SecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference; InitiatorName *string}",
      "type" : "Struct",
      "underlying" : 123
    }, {
      "elem" : 125,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.FlexPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 124
    }, {
      "local-name" : "FlexPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.FlexPersistentVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 126
    }, {
      "fields" : [ {
        "name" : "Driver",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 115
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "Options",
        "type" : 52
      } ],
      "name" : "struct{Driver string; FSType string; SecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference; ReadOnly bool; Options map[string]string}",
      "type" : "Struct",
      "underlying" : 126
    }, {
      "elem" : 128,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.CinderPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 127
    }, {
      "local-name" : "CinderPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.CinderPersistentVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 129
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "SecretRef",
        "type" : 115
      } ],
      "name" : "struct{VolumeID string; FSType string; ReadOnly bool; SecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference}",
      "type" : "Struct",
      "underlying" : 129
    }, {
      "elem" : 131,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.CephFSPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 130
    }, {
      "local-name" : "CephFSPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.CephFSPersistentVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 132
    }, {
      "fields" : [ {
        "name" : "Monitors",
        "type" : 29
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "User",
        "type" : 8
      }, {
        "name" : "SecretFile",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 115
      }, {
        "name" : "ReadOnly",
        "type" : 10
      } ],
      "name" : "struct{Monitors []string; Path string; User string; SecretFile string; SecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 132
    }, {
      "elem" : 134,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.FCVolumeSource",
      "type" : "Pointer",
      "underlying" : 133
    }, {
      "local-name" : "FCVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.FCVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 135
    }, {
      "fields" : [ {
        "name" : "TargetWWNs",
        "type" : 29
      }, {
        "name" : "Lun",
        "type" : 45
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "WWIDs",
        "type" : 29
      } ],
      "name" : "struct{TargetWWNs []string; Lun *int32; FSType string; ReadOnly bool; WWIDs []string}",
      "type" : "Struct",
      "underlying" : 135
    }, {
      "elem" : 137,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.FlockerVolumeSource",
      "type" : "Pointer",
      "underlying" : 136
    }, {
      "local-name" : "FlockerVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.FlockerVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 138
    }, {
      "fields" : [ {
        "name" : "DatasetName",
        "type" : 8
      }, {
        "name" : "DatasetUUID",
        "type" : 8
      } ],
      "name" : "struct{DatasetName string; DatasetUUID string}",
      "type" : "Struct",
      "underlying" : 138
    }, {
      "elem" : 140,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AzureFilePersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 139
    }, {
      "local-name" : "AzureFilePersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AzureFilePersistentVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 141
    }, {
      "fields" : [ {
        "name" : "SecretName",
        "type" : 8
      }, {
        "name" : "ShareName",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "SecretNamespace",
        "type" : 22
      } ],
      "name" : "struct{SecretName string; ShareName string; ReadOnly bool; SecretNamespace *string}",
      "type" : "Struct",
      "underlying" : 141
    }, {
      "elem" : 143,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.VsphereVirtualDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 142
    }, {
      "local-name" : "VsphereVirtualDiskVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.VsphereVirtualDiskVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 144
    }, {
      "fields" : [ {
        "name" : "VolumePath",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "StoragePolicyName",
        "type" : 8
      }, {
        "name" : "StoragePolicyID",
        "type" : 8
      } ],
      "name" : "struct{VolumePath string; FSType string; StoragePolicyName string; StoragePolicyID string}",
      "type" : "Struct",
      "underlying" : 144
    }, {
      "elem" : 146,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AzureDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 145
    }, {
      "local-name" : "AzureDiskVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AzureDiskVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 147
    }, {
      "fields" : [ {
        "name" : "DiskName",
        "type" : 8
      }, {
        "name" : "DataDiskURI",
        "type" : 8
      }, {
        "name" : "CachingMode",
        "type" : 148
      }, {
        "name" : "FSType",
        "type" : 22
      }, {
        "name" : "ReadOnly",
        "type" : 67
      }, {
        "name" : "Kind",
        "type" : 150
      } ],
      "name" : "struct{DiskName string; DataDiskURI string; CachingMode *k8s.io/kubernetes/pkg/apis/core.AzureDataDiskCachingMode; FSType *string; ReadOnly *bool; Kind *k8s.io/kubernetes/pkg/apis/core.AzureDataDiskKind}",
      "type" : "Struct",
      "underlying" : 147
    }, {
      "elem" : 149,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AzureDataDiskCachingMode",
      "type" : "Pointer",
      "underlying" : 148
    }, {
      "local-name" : "AzureDataDiskCachingMode",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AzureDataDiskCachingMode",
      "package" : 3,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 151,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AzureDataDiskKind",
      "type" : "Pointer",
      "underlying" : 150
    }, {
      "local-name" : "AzureDataDiskKind",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AzureDataDiskKind",
      "package" : 3,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 153,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PhotonPersistentDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 152
    }, {
      "local-name" : "PhotonPersistentDiskVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PhotonPersistentDiskVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 154
    }, {
      "fields" : [ {
        "name" : "PdID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      } ],
      "name" : "struct{PdID string; FSType string}",
      "type" : "Struct",
      "underlying" : 154
    }, {
      "elem" : 156,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PortworxVolumeSource",
      "type" : "Pointer",
      "underlying" : 155
    }, {
      "local-name" : "PortworxVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PortworxVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 157
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      } ],
      "name" : "struct{VolumeID string; FSType string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 157
    }, {
      "elem" : 159,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ScaleIOPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 158
    }, {
      "local-name" : "ScaleIOPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ScaleIOPersistentVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 160
    }, {
      "fields" : [ {
        "name" : "Gateway",
        "type" : 8
      }, {
        "name" : "System",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 115
      }, {
        "name" : "SSLEnabled",
        "type" : 10
      }, {
        "name" : "ProtectionDomain",
        "type" : 8
      }, {
        "name" : "StoragePool",
        "type" : 8
      }, {
        "name" : "StorageMode",
        "type" : 8
      }, {
        "name" : "VolumeName",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      } ],
      "name" : "struct{Gateway string; System string; SecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference; SSLEnabled bool; ProtectionDomain string; StoragePool string; StorageMode string; VolumeName string; FSType string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 160
    }, {
      "elem" : 162,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.LocalVolumeSource",
      "type" : "Pointer",
      "underlying" : 161
    }, {
      "local-name" : "LocalVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.LocalVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 163
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 22
      } ],
      "name" : "struct{Path string; FSType *string}",
      "type" : "Struct",
      "underlying" : 163
    }, {
      "elem" : 165,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.StorageOSPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 164
    }, {
      "local-name" : "StorageOSPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.StorageOSPersistentVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 166
    }, {
      "fields" : [ {
        "name" : "VolumeName",
        "type" : 8
      }, {
        "name" : "VolumeNamespace",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "SecretRef",
        "type" : 167
      } ],
      "name" : "struct{VolumeName string; VolumeNamespace string; FSType string; ReadOnly bool; SecretRef *k8s.io/kubernetes/pkg/apis/core.ObjectReference}",
      "type" : "Struct",
      "underlying" : 166
    }, {
      "elem" : 168,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ObjectReference",
      "type" : "Pointer",
      "underlying" : 167
    }, {
      "local-name" : "ObjectReference",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ObjectReference",
      "package" : 3,
      "type" : "Named",
      "underlying" : 169
    }, {
      "fields" : [ {
        "name" : "Kind",
        "type" : 8
      }, {
        "name" : "Namespace",
        "type" : 8
      }, {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "UID",
        "type" : 88
      }, {
        "name" : "APIVersion",
        "type" : 8
      }, {
        "name" : "ResourceVersion",
        "type" : 8
      }, {
        "name" : "FieldPath",
        "type" : 8
      } ],
      "name" : "struct{Kind string; Namespace string; Name string; UID k8s.io/apimachinery/pkg/types.UID; APIVersion string; ResourceVersion string; FieldPath string}",
      "type" : "Struct",
      "underlying" : 169
    }, {
      "elem" : 171,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.CSIPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 170
    }, {
      "local-name" : "CSIPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.CSIPersistentVolumeSource",
      "package" : 3,
      "type" : "Named",
      "underlying" : 172
    }, {
      "fields" : [ {
        "name" : "Driver",
        "type" : 8
      }, {
        "name" : "VolumeHandle",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 10
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "VolumeAttributes",
        "type" : 52
      }, {
        "name" : "ControllerPublishSecretRef",
        "type" : 115
      }, {
        "name" : "NodeStageSecretRef",
        "type" : 115
      }, {
        "name" : "NodePublishSecretRef",
        "type" : 115
      }, {
        "name" : "ControllerExpandSecretRef",
        "type" : 115
      } ],
      "name" : "struct{Driver string; VolumeHandle string; ReadOnly bool; FSType string; VolumeAttributes map[string]string; ControllerPublishSecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference; NodeStageSecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference; NodePublishSecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference; ControllerExpandSecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference}",
      "type" : "Struct",
      "underlying" : 172
    }, {
      "local-name" : "Scope",
      "name" : "k8s.io/apimachinery/pkg/conversion.Scope",
      "package" : 4,
      "type" : "Named",
      "underlying" : 174
    }, {
      "methods" : [ {
        "name" : "Convert",
        "type" : 175
      }, {
        "name" : "DefaultConvert",
        "type" : 175
      }, {
        "name" : "DestTag",
        "type" : 186
      }, {
        "name" : "Flags",
        "type" : 189
      }, {
        "name" : "Meta",
        "type" : 191
      }, {
        "name" : "SrcTag",
        "type" : 186
      } ],
      "name" : "interface{Convert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DefaultConvert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DestTag() reflect.StructTag; Flags() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags; Meta() *k8s.io/apimachinery/pkg/conversion.Meta; SrcTag() reflect.StructTag}",
      "type" : "Interface",
      "underlying" : 174
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error",
      "params" : 176,
      "recv" : 1,
      "results" : 180,
      "type" : "Signature",
      "underlying" : 175,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 177
      }, {
        "name" : "dest",
        "type" : 177
      }, {
        "name" : "flags",
        "type" : 178
      } ],
      "name" : "(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 176
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 177
    }, {
      "local-name" : "FieldMatchingFlags",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "package" : 4,
      "type" : "Named",
      "underlying" : 179
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 179
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 181
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 180
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 182
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 183
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 182
    }, {
      "name" : "(error) func() string",
      "params" : 184,
      "recv" : 0,
      "results" : 185,
      "type" : "Signature",
      "underlying" : 183,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 184
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 8
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 185
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func() reflect.StructTag",
      "params" : 184,
      "recv" : 2,
      "results" : 187,
      "type" : "Signature",
      "underlying" : 186,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 188
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 187
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 5,
      "type" : "Named",
      "underlying" : 8
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "params" : 184,
      "recv" : 3,
      "results" : 190,
      "type" : "Signature",
      "underlying" : 189,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 178
      } ],
      "name" : "(k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 190
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func() *k8s.io/apimachinery/pkg/conversion.Meta",
      "params" : 184,
      "recv" : 4,
      "results" : 192,
      "type" : "Signature",
      "underlying" : 191,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 193
      } ],
      "name" : "(*k8s.io/apimachinery/pkg/conversion.Meta)",
      "type" : "Tuple",
      "underlying" : 192
    }, {
      "elem" : 194,
      "name" : "*k8s.io/apimachinery/pkg/conversion.Meta",
      "type" : "Pointer",
      "underlying" : 193
    }, {
      "local-name" : "Meta",
      "name" : "k8s.io/apimachinery/pkg/conversion.Meta",
      "package" : 4,
      "type" : "Named",
      "underlying" : 195
    }, {
      "fields" : [ {
        "name" : "KeyNameMapping",
        "type" : 196
      }, {
        "name" : "Context",
        "type" : 177
      } ],
      "name" : "struct{KeyNameMapping k8s.io/apimachinery/pkg/conversion.FieldMappingFunc; Context interface{}}",
      "type" : "Struct",
      "underlying" : 195
    }, {
      "local-name" : "FieldMappingFunc",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMappingFunc",
      "package" : 4,
      "type" : "Named",
      "underlying" : 197
    }, {
      "name" : "func(key string, sourceTag reflect.StructTag, destTag reflect.StructTag) (source string, dest string)",
      "params" : 198,
      "recv" : -1,
      "results" : 199,
      "type" : "Signature",
      "underlying" : 197,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 8
      }, {
        "name" : "sourceTag",
        "type" : 188
      }, {
        "name" : "destTag",
        "type" : 188
      } ],
      "name" : "(key string, sourceTag reflect.StructTag, destTag reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 198
    }, {
      "fields" : [ {
        "name" : "source",
        "type" : 8
      }, {
        "name" : "dest",
        "type" : 8
      } ],
      "name" : "(source string, dest string)",
      "type" : "Tuple",
      "underlying" : 199
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 6,
      "type" : "Basic",
      "underlying" : 200
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 201
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 181,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 173,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 173,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 173,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 173,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 92,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 173,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 181,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "GCEPersistentDisk",
      "package" : 3,
      "type" : 95,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "GCEPersistentDisk",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AWSElasticBlockStore",
      "package" : 3,
      "type" : 98,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AWSElasticBlockStore",
      "package" : 1,
      "type" : 11,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "HostPath",
      "package" : 3,
      "type" : 101,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "HostPath",
      "package" : 1,
      "type" : 14,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Glusterfs",
      "package" : 3,
      "type" : 106,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Glusterfs",
      "package" : 1,
      "type" : 19,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "NFS",
      "package" : 3,
      "type" : 109,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "NFS",
      "package" : 1,
      "type" : 23,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "RBD",
      "package" : 3,
      "type" : 112,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "RBD",
      "package" : 1,
      "type" : 26,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ISCSI",
      "package" : 3,
      "type" : 121,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ISCSI",
      "package" : 1,
      "type" : 33,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Cinder",
      "package" : 3,
      "type" : 127,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Cinder",
      "package" : 1,
      "type" : 36,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "CephFS",
      "package" : 3,
      "type" : 130,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "CephFS",
      "package" : 1,
      "type" : 39,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "FC",
      "package" : 3,
      "type" : 133,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "FC",
      "package" : 1,
      "type" : 42,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Flocker",
      "package" : 3,
      "type" : 136,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Flocker",
      "package" : 1,
      "type" : 46,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "FlexVolume",
      "package" : 3,
      "type" : 124,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "FlexVolume",
      "package" : 1,
      "type" : 49,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AzureFile",
      "package" : 3,
      "type" : 139,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AzureFile",
      "package" : 1,
      "type" : 53,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "VsphereVolume",
      "package" : 3,
      "type" : 142,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "VsphereVolume",
      "package" : 1,
      "type" : 56,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Quobyte",
      "package" : 3,
      "type" : 118,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Quobyte",
      "package" : 1,
      "type" : 59,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AzureDisk",
      "package" : 3,
      "type" : 145,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AzureDisk",
      "package" : 1,
      "type" : 62,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "PhotonPersistentDisk",
      "package" : 3,
      "type" : 152,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "PhotonPersistentDisk",
      "package" : 1,
      "type" : 70,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "PortworxVolume",
      "package" : 3,
      "type" : 155,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "PortworxVolume",
      "package" : 1,
      "type" : 73,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ScaleIO",
      "package" : 3,
      "type" : 158,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ScaleIO",
      "package" : 1,
      "type" : 76,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Local",
      "package" : 3,
      "type" : 161,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Local",
      "package" : 1,
      "type" : 79,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "StorageOS",
      "package" : 3,
      "type" : 164,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "StorageOS",
      "package" : 1,
      "type" : 82,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "CSI",
      "package" : 3,
      "type" : 170,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "CSI",
      "package" : 1,
      "type" : 89,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}