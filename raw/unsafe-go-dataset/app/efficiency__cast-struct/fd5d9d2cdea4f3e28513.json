{
  "usage" : {
    "file" : "zz_generated.conversion.go",
    "label1" : "cast-struct",
    "label2" : "efficiency",
    "line" : "5296",
    "module" : "k8s.io/kubernetes",
    "pkg" : "k8s.io/kubernetes/pkg/apis/core/v1",
    "project" : "rook/rook",
    "snippet" : "out.AccessModes = *(*[]v1.PersistentVolumeAccessMode)(unsafe.Pointer(&in.AccessModes))",
    "version" : "v1.17.2"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 6, 7, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 7, 5 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 4 ],
      "in-vars" : [ 6, 7, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 7, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5292,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Capacity",
            "variable" : 9
          },
          "go-type" : 137,
          "kind" : "expression",
          "target" : {
            "go-type" : 134,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 137,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "go-type" : 137,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 6,
                  "value" : "v1"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 137,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "ResourceList"
                }
              },
              "go-type" : 265,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 265,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 266,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 9,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 266,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 266,
              "kind" : "expression",
              "target" : {
                "go-type" : 267,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Capacity",
                    "variable" : 10
                  },
                  "go-type" : 5,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5292,
      "code" : "out.Capacity = *(*v1.ResourceList)(unsafe.Pointer(&in.Capacity))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5, 6 ],
      "in-vars" : [ 13, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 13, 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5293,
      "ast" : {
        "condition" : {
          "go-type" : 272,
          "kind" : "expression",
          "left" : {
            "go-type" : 246,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 13
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 273,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 5295,
      "code" : "if err := Convert_core_PersistentVolumeSource_To_v1_PersistentVolumeSource(&in.PersistentVolumeSource, &out.PersistentVolumeSource, s); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 13 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 6, 7, 5 ],
      "exit" : false,
      "out-vars" : [ 13, 6, 5 ],
      "decl-vars" : [ 13 ],
      "line-start" : 5293,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 270,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "PersistentVolumeSource",
                "variable" : 11
              },
              "go-type" : 30,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 271,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "PersistentVolumeSource",
                "variable" : 12
              },
              "go-type" : 140,
              "kind" : "expression",
              "target" : {
                "go-type" : 134,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "out",
                  "variable" : 6
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 238,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "s",
              "variable" : 7
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 268,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Convert_core_PersistentVolumeSource_To_v1_PersistentVolumeSource"
            }
          },
          "go-type" : 246,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 5293,
      "code" : "err := Convert_core_PersistentVolumeSource_To_v1_PersistentVolumeSource(&in.PersistentVolumeSource, &out.PersistentVolumeSource, s)",
      "entry" : false,
      "use-vars" : [ 6, 7, 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 13 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 5294,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 246,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 13
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 5294,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 13 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 7 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5296,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "AccessModes",
            "variable" : 14
          },
          "go-type" : 220,
          "kind" : "expression",
          "target" : {
            "go-type" : 134,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 220,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 221,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 6,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 221,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "PersistentVolumeAccessMode"
                  }
                },
                "go-type" : 220,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 274,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 274,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 266,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 9,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 266,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 266,
              "kind" : "expression",
              "target" : {
                "go-type" : 275,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "AccessModes",
                    "variable" : 15
                  },
                  "go-type" : 116,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5296,
      "code" : "out.AccessModes = *(*[]v1.PersistentVolumeAccessMode)(unsafe.Pointer(&in.AccessModes))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 8 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5297,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ClaimRef",
            "variable" : 16
          },
          "go-type" : 214,
          "kind" : "expression",
          "target" : {
            "go-type" : 134,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 215,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 215,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "ObjectReference"
              }
            },
            "go-type" : 214,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 214,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 266,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 9,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 266,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 266,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ClaimRef",
                "variable" : 17
              },
              "go-type" : 109,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5297,
      "code" : "out.ClaimRef = (*v1.ObjectReference)(unsafe.Pointer(in.ClaimRef))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 9 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 5298,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "PersistentVolumeReclaimPolicy",
            "variable" : 18
          },
          "go-type" : 222,
          "kind" : "expression",
          "target" : {
            "go-type" : 134,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 222,
            "kind" : "type",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 6,
              "value" : "v1"
            },
            "type" : "identifier",
            "value" : {
              "go-type" : 222,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "PersistentVolumeReclaimPolicy"
            }
          },
          "go-type" : 222,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "PersistentVolumeReclaimPolicy",
              "variable" : 19
            },
            "go-type" : 118,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "in",
                "variable" : 5
              }
            },
            "type" : "selector"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5298,
      "code" : "out.PersistentVolumeReclaimPolicy = v1.PersistentVolumeReclaimPolicy(in.PersistentVolumeReclaimPolicy)",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 10 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5299,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "StorageClassName",
            "variable" : 20
          },
          "go-type" : 27,
          "kind" : "expression",
          "target" : {
            "go-type" : 134,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "StorageClassName",
            "variable" : 21
          },
          "go-type" : 27,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5299,
      "code" : "out.StorageClassName = in.StorageClassName",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 11 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 5300,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "MountOptions",
            "variable" : 22
          },
          "go-type" : 53,
          "kind" : "expression",
          "target" : {
            "go-type" : 134,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 53,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 27,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 27,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                },
                "go-type" : 53,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 276,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 276,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 266,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 9,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 266,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 266,
              "kind" : "expression",
              "target" : {
                "go-type" : 276,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "MountOptions",
                    "variable" : 23
                  },
                  "go-type" : 53,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5300,
      "code" : "out.MountOptions = *(*[]string)(unsafe.Pointer(&in.MountOptions))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 12 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5301,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "VolumeMode",
            "variable" : 24
          },
          "go-type" : 223,
          "kind" : "expression",
          "target" : {
            "go-type" : 134,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 224,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 224,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "PersistentVolumeMode"
              }
            },
            "go-type" : 223,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 223,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 266,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 9,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 266,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 266,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "VolumeMode",
                "variable" : 25
              },
              "go-type" : 119,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5301,
      "code" : "out.VolumeMode = (*v1.PersistentVolumeMode)(unsafe.Pointer(in.VolumeMode))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 13 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 5302,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "NodeAffinity",
            "variable" : 26
          },
          "go-type" : 225,
          "kind" : "expression",
          "target" : {
            "go-type" : 134,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 226,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 226,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "VolumeNodeAffinity"
              }
            },
            "go-type" : 225,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 225,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 266,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 9,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 266,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 266,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "NodeAffinity",
                "variable" : 27
              },
              "go-type" : 121,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5302,
      "code" : "out.NodeAffinity = (*v1.VolumeNodeAffinity)(unsafe.Pointer(in.NodeAffinity))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 5303,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 273,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 5303,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func autoConvert_core_PersistentVolumeSpec_To_v1_PersistentVolumeSpec(in *core.PersistentVolumeSpec, out *v1.PersistentVolumeSpec, s conversion.Scope) error {\n\tout.Capacity = *(*v1.ResourceList)(unsafe.Pointer(&in.Capacity))\n\tif err := Convert_core_PersistentVolumeSource_To_v1_PersistentVolumeSource(&in.PersistentVolumeSource, &out.PersistentVolumeSource, s); err != nil {\n\t\treturn err\n\t}\n\tout.AccessModes = *(*[]v1.PersistentVolumeAccessMode)(unsafe.Pointer(&in.AccessModes))\n\tout.ClaimRef = (*v1.ObjectReference)(unsafe.Pointer(in.ClaimRef))\n\tout.PersistentVolumeReclaimPolicy = v1.PersistentVolumeReclaimPolicy(in.PersistentVolumeReclaimPolicy)\n\tout.StorageClassName = in.StorageClassName\n\tout.MountOptions = *(*[]string)(unsafe.Pointer(&in.MountOptions))\n\tout.VolumeMode = (*v1.PersistentVolumeMode)(unsafe.Pointer(in.VolumeMode))\n\tout.NodeAffinity = (*v1.VolumeNodeAffinity)(unsafe.Pointer(in.NodeAffinity))\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "autoConvert_core_PersistentVolumeSpec_To_v1_PersistentVolumeSpec",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "Convert_core_PersistentVolumeSource_To_v1_PersistentVolumeSource",
      "package" : 0,
      "type" : 268,
      "exported" : true
    } ],
    "line-end" : 5304,
    "line-start" : 5291,
    "names" : [ "autoConvert_core_PersistentVolumeSpec_To_v1_PersistentVolumeSpec" ],
    "package" : 0,
    "packages" : [ {
      "name" : "v1",
      "path" : "k8s.io/kubernetes/pkg/apis/core/v1"
    }, {
      "name" : "core",
      "path" : "k8s.io/kubernetes/pkg/apis/core"
    }, {
      "name" : "resource",
      "path" : "k8s.io/apimachinery/pkg/api/resource"
    }, {
      "name" : "inf",
      "path" : "gopkg.in/inf.v0"
    }, {
      "name" : "big",
      "path" : "math/big"
    }, {
      "name" : "types",
      "path" : "k8s.io/apimachinery/pkg/types"
    }, {
      "name" : "v1",
      "path" : "k8s.io/api/core/v1"
    }, {
      "name" : "conversion",
      "path" : "k8s.io/apimachinery/pkg/conversion"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 5, 6, 7 ],
    "receivers" : [ ],
    "results" : [ 8 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.PersistentVolumeSpec, out *k8s.io/api/core/v1.PersistentVolumeSpec, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 1,
      "recv" : -1,
      "results" : 245,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 2
      }, {
        "name" : "out",
        "type" : 134
      }, {
        "name" : "s",
        "type" : 238
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.PersistentVolumeSpec, out *k8s.io/api/core/v1.PersistentVolumeSpec, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PersistentVolumeSpec",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "PersistentVolumeSpec",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PersistentVolumeSpec",
      "package" : 1,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "Capacity",
        "type" : 5
      }, {
        "name" : "PersistentVolumeSource",
        "type" : 30
      }, {
        "name" : "AccessModes",
        "type" : 116
      }, {
        "name" : "ClaimRef",
        "type" : 109
      }, {
        "name" : "PersistentVolumeReclaimPolicy",
        "type" : 118
      }, {
        "name" : "StorageClassName",
        "type" : 27
      }, {
        "name" : "MountOptions",
        "type" : 53
      }, {
        "name" : "VolumeMode",
        "type" : 119
      }, {
        "name" : "NodeAffinity",
        "type" : 121
      } ],
      "name" : "struct{Capacity k8s.io/kubernetes/pkg/apis/core.ResourceList; k8s.io/kubernetes/pkg/apis/core.PersistentVolumeSource; AccessModes []k8s.io/kubernetes/pkg/apis/core.PersistentVolumeAccessMode; ClaimRef *k8s.io/kubernetes/pkg/apis/core.ObjectReference; PersistentVolumeReclaimPolicy k8s.io/kubernetes/pkg/apis/core.PersistentVolumeReclaimPolicy; StorageClassName string; MountOptions []string; VolumeMode *k8s.io/kubernetes/pkg/apis/core.PersistentVolumeMode; NodeAffinity *k8s.io/kubernetes/pkg/apis/core.VolumeNodeAffinity}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "local-name" : "ResourceList",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ResourceList",
      "package" : 1,
      "type" : "Named",
      "underlying" : 6
    }, {
      "elem" : 7,
      "key" : 29,
      "name" : "map[k8s.io/kubernetes/pkg/apis/core.ResourceName]k8s.io/apimachinery/pkg/api/resource.Quantity",
      "type" : "Map",
      "underlying" : 6
    }, {
      "local-name" : "Quantity",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Quantity",
      "package" : 2,
      "type" : "Named",
      "underlying" : 8
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 9
      }, {
        "name" : "d",
        "type" : 14
      }, {
        "name" : "s",
        "type" : 27
      }, {
        "name" : "Format",
        "type" : 28
      } ],
      "name" : "struct{i k8s.io/apimachinery/pkg/api/resource.int64Amount; d k8s.io/apimachinery/pkg/api/resource.infDecAmount; s string; k8s.io/apimachinery/pkg/api/resource.Format}",
      "type" : "Struct",
      "underlying" : 8
    }, {
      "local-name" : "int64Amount",
      "name" : "k8s.io/apimachinery/pkg/api/resource.int64Amount",
      "package" : 2,
      "type" : "Named",
      "underlying" : 10
    }, {
      "fields" : [ {
        "name" : "value",
        "type" : 11
      }, {
        "name" : "scale",
        "type" : 12
      } ],
      "name" : "struct{value int64; scale k8s.io/apimachinery/pkg/api/resource.Scale}",
      "type" : "Struct",
      "underlying" : 10
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 11
    }, {
      "local-name" : "Scale",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Scale",
      "package" : 2,
      "type" : "Named",
      "underlying" : 13
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "local-name" : "infDecAmount",
      "name" : "k8s.io/apimachinery/pkg/api/resource.infDecAmount",
      "package" : 2,
      "type" : "Named",
      "underlying" : 15
    }, {
      "fields" : [ {
        "name" : "Dec",
        "type" : 16
      } ],
      "name" : "struct{*gopkg.in/inf.v0.Dec}",
      "type" : "Struct",
      "underlying" : 15
    }, {
      "elem" : 17,
      "name" : "*gopkg.in/inf.v0.Dec",
      "type" : "Pointer",
      "underlying" : 16
    }, {
      "local-name" : "Dec",
      "name" : "gopkg.in/inf.v0.Dec",
      "package" : 3,
      "type" : "Named",
      "underlying" : 18
    }, {
      "fields" : [ {
        "name" : "unscaled",
        "type" : 19
      }, {
        "name" : "scale",
        "type" : 26
      } ],
      "name" : "struct{unscaled math/big.Int; scale gopkg.in/inf.v0.Scale}",
      "type" : "Struct",
      "underlying" : 18
    }, {
      "local-name" : "Int",
      "name" : "math/big.Int",
      "package" : 4,
      "type" : "Named",
      "underlying" : 20
    }, {
      "fields" : [ {
        "name" : "neg",
        "type" : 21
      }, {
        "name" : "abs",
        "type" : 22
      } ],
      "name" : "struct{neg bool; abs math/big.nat}",
      "type" : "Struct",
      "underlying" : 20
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 21
    }, {
      "local-name" : "nat",
      "name" : "math/big.nat",
      "package" : 4,
      "type" : "Named",
      "underlying" : 23
    }, {
      "elem" : 24,
      "name" : "[]math/big.Word",
      "type" : "Slice",
      "underlying" : 23
    }, {
      "local-name" : "Word",
      "name" : "math/big.Word",
      "package" : 4,
      "type" : "Named",
      "underlying" : 25
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 25
    }, {
      "local-name" : "Scale",
      "name" : "gopkg.in/inf.v0.Scale",
      "package" : 3,
      "type" : "Named",
      "underlying" : 13
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 27
    }, {
      "local-name" : "Format",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Format",
      "package" : 2,
      "type" : "Named",
      "underlying" : 27
    }, {
      "local-name" : "ResourceName",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ResourceName",
      "package" : 1,
      "type" : "Named",
      "underlying" : 27
    }, {
      "local-name" : "PersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 31
    }, {
      "fields" : [ {
        "name" : "GCEPersistentDisk",
        "type" : 32
      }, {
        "name" : "AWSElasticBlockStore",
        "type" : 35
      }, {
        "name" : "HostPath",
        "type" : 38
      }, {
        "name" : "Glusterfs",
        "type" : 43
      }, {
        "name" : "NFS",
        "type" : 47
      }, {
        "name" : "RBD",
        "type" : 50
      }, {
        "name" : "Quobyte",
        "type" : 57
      }, {
        "name" : "ISCSI",
        "type" : 60
      }, {
        "name" : "FlexVolume",
        "type" : 63
      }, {
        "name" : "Cinder",
        "type" : 67
      }, {
        "name" : "CephFS",
        "type" : 70
      }, {
        "name" : "FC",
        "type" : 73
      }, {
        "name" : "Flocker",
        "type" : 77
      }, {
        "name" : "AzureFile",
        "type" : 80
      }, {
        "name" : "VsphereVolume",
        "type" : 83
      }, {
        "name" : "AzureDisk",
        "type" : 86
      }, {
        "name" : "PhotonPersistentDisk",
        "type" : 94
      }, {
        "name" : "PortworxVolume",
        "type" : 97
      }, {
        "name" : "ScaleIO",
        "type" : 100
      }, {
        "name" : "Local",
        "type" : 103
      }, {
        "name" : "StorageOS",
        "type" : 106
      }, {
        "name" : "CSI",
        "type" : 113
      } ],
      "name" : "struct{GCEPersistentDisk *k8s.io/kubernetes/pkg/apis/core.GCEPersistentDiskVolumeSource; AWSElasticBlockStore *k8s.io/kubernetes/pkg/apis/core.AWSElasticBlockStoreVolumeSource; HostPath *k8s.io/kubernetes/pkg/apis/core.HostPathVolumeSource; Glusterfs *k8s.io/kubernetes/pkg/apis/core.GlusterfsPersistentVolumeSource; NFS *k8s.io/kubernetes/pkg/apis/core.NFSVolumeSource; RBD *k8s.io/kubernetes/pkg/apis/core.RBDPersistentVolumeSource; Quobyte *k8s.io/kubernetes/pkg/apis/core.QuobyteVolumeSource; ISCSI *k8s.io/kubernetes/pkg/apis/core.ISCSIPersistentVolumeSource; FlexVolume *k8s.io/kubernetes/pkg/apis/core.FlexPersistentVolumeSource; Cinder *k8s.io/kubernetes/pkg/apis/core.CinderPersistentVolumeSource; CephFS *k8s.io/kubernetes/pkg/apis/core.CephFSPersistentVolumeSource; FC *k8s.io/kubernetes/pkg/apis/core.FCVolumeSource; Flocker *k8s.io/kubernetes/pkg/apis/core.FlockerVolumeSource; AzureFile *k8s.io/kubernetes/pkg/apis/core.AzureFilePersistentVolumeSource; VsphereVolume *k8s.io/kubernetes/pkg/apis/core.VsphereVirtualDiskVolumeSource; AzureDisk *k8s.io/kubernetes/pkg/apis/core.AzureDiskVolumeSource; PhotonPersistentDisk *k8s.io/kubernetes/pkg/apis/core.PhotonPersistentDiskVolumeSource; PortworxVolume *k8s.io/kubernetes/pkg/apis/core.PortworxVolumeSource; ScaleIO *k8s.io/kubernetes/pkg/apis/core.ScaleIOPersistentVolumeSource; Local *k8s.io/kubernetes/pkg/apis/core.LocalVolumeSource; StorageOS *k8s.io/kubernetes/pkg/apis/core.StorageOSPersistentVolumeSource; CSI *k8s.io/kubernetes/pkg/apis/core.CSIPersistentVolumeSource}",
      "type" : "Struct",
      "underlying" : 31
    }, {
      "elem" : 33,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.GCEPersistentDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 32
    }, {
      "local-name" : "GCEPersistentDiskVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.GCEPersistentDiskVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 34
    }, {
      "fields" : [ {
        "name" : "PDName",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "Partition",
        "type" : 13
      }, {
        "name" : "ReadOnly",
        "type" : 21
      } ],
      "name" : "struct{PDName string; FSType string; Partition int32; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 34
    }, {
      "elem" : 36,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AWSElasticBlockStoreVolumeSource",
      "type" : "Pointer",
      "underlying" : 35
    }, {
      "local-name" : "AWSElasticBlockStoreVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AWSElasticBlockStoreVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 37
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "Partition",
        "type" : 13
      }, {
        "name" : "ReadOnly",
        "type" : 21
      } ],
      "name" : "struct{VolumeID string; FSType string; Partition int32; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 37
    }, {
      "elem" : 39,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.HostPathVolumeSource",
      "type" : "Pointer",
      "underlying" : 38
    }, {
      "local-name" : "HostPathVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.HostPathVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 40
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 27
      }, {
        "name" : "Type",
        "type" : 41
      } ],
      "name" : "struct{Path string; Type *k8s.io/kubernetes/pkg/apis/core.HostPathType}",
      "type" : "Struct",
      "underlying" : 40
    }, {
      "elem" : 42,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.HostPathType",
      "type" : "Pointer",
      "underlying" : 41
    }, {
      "local-name" : "HostPathType",
      "name" : "k8s.io/kubernetes/pkg/apis/core.HostPathType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 44,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.GlusterfsPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 43
    }, {
      "local-name" : "GlusterfsPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.GlusterfsPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 45
    }, {
      "fields" : [ {
        "name" : "EndpointsName",
        "type" : 27
      }, {
        "name" : "Path",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "EndpointsNamespace",
        "type" : 46
      } ],
      "name" : "struct{EndpointsName string; Path string; ReadOnly bool; EndpointsNamespace *string}",
      "type" : "Struct",
      "underlying" : 45
    }, {
      "elem" : 27,
      "name" : "*string",
      "type" : "Pointer",
      "underlying" : 46
    }, {
      "elem" : 48,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.NFSVolumeSource",
      "type" : "Pointer",
      "underlying" : 47
    }, {
      "local-name" : "NFSVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NFSVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 49
    }, {
      "fields" : [ {
        "name" : "Server",
        "type" : 27
      }, {
        "name" : "Path",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      } ],
      "name" : "struct{Server string; Path string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 49
    }, {
      "elem" : 51,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.RBDPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 50
    }, {
      "local-name" : "RBDPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.RBDPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 52
    }, {
      "fields" : [ {
        "name" : "CephMonitors",
        "type" : 53
      }, {
        "name" : "RBDImage",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "RBDPool",
        "type" : 27
      }, {
        "name" : "RadosUser",
        "type" : 27
      }, {
        "name" : "Keyring",
        "type" : 27
      }, {
        "name" : "SecretRef",
        "type" : 54
      }, {
        "name" : "ReadOnly",
        "type" : 21
      } ],
      "name" : "struct{CephMonitors []string; RBDImage string; FSType string; RBDPool string; RadosUser string; Keyring string; SecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 52
    }, {
      "elem" : 27,
      "name" : "[]string",
      "type" : "Slice",
      "underlying" : 53
    }, {
      "elem" : 55,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.SecretReference",
      "type" : "Pointer",
      "underlying" : 54
    }, {
      "local-name" : "SecretReference",
      "name" : "k8s.io/kubernetes/pkg/apis/core.SecretReference",
      "package" : 1,
      "type" : "Named",
      "underlying" : 56
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 27
      }, {
        "name" : "Namespace",
        "type" : 27
      } ],
      "name" : "struct{Name string; Namespace string}",
      "type" : "Struct",
      "underlying" : 56
    }, {
      "elem" : 58,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.QuobyteVolumeSource",
      "type" : "Pointer",
      "underlying" : 57
    }, {
      "local-name" : "QuobyteVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.QuobyteVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 59
    }, {
      "fields" : [ {
        "name" : "Registry",
        "type" : 27
      }, {
        "name" : "Volume",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "User",
        "type" : 27
      }, {
        "name" : "Group",
        "type" : 27
      }, {
        "name" : "Tenant",
        "type" : 27
      } ],
      "name" : "struct{Registry string; Volume string; ReadOnly bool; User string; Group string; Tenant string}",
      "type" : "Struct",
      "underlying" : 59
    }, {
      "elem" : 61,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ISCSIPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 60
    }, {
      "local-name" : "ISCSIPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ISCSIPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 62
    }, {
      "fields" : [ {
        "name" : "TargetPortal",
        "type" : 27
      }, {
        "name" : "IQN",
        "type" : 27
      }, {
        "name" : "Lun",
        "type" : 13
      }, {
        "name" : "ISCSIInterface",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "Portals",
        "type" : 53
      }, {
        "name" : "DiscoveryCHAPAuth",
        "type" : 21
      }, {
        "name" : "SessionCHAPAuth",
        "type" : 21
      }, {
        "name" : "SecretRef",
        "type" : 54
      }, {
        "name" : "InitiatorName",
        "type" : 46
      } ],
      "name" : "struct{TargetPortal string; IQN string; Lun int32; ISCSIInterface string; FSType string; ReadOnly bool; Portals []string; DiscoveryCHAPAuth bool; SessionCHAPAuth bool; SecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference; InitiatorName *string}",
      "type" : "Struct",
      "underlying" : 62
    }, {
      "elem" : 64,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.FlexPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 63
    }, {
      "local-name" : "FlexPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.FlexPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 65
    }, {
      "fields" : [ {
        "name" : "Driver",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "SecretRef",
        "type" : 54
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "Options",
        "type" : 66
      } ],
      "name" : "struct{Driver string; FSType string; SecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference; ReadOnly bool; Options map[string]string}",
      "type" : "Struct",
      "underlying" : 65
    }, {
      "elem" : 27,
      "key" : 27,
      "name" : "map[string]string",
      "type" : "Map",
      "underlying" : 66
    }, {
      "elem" : 68,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.CinderPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 67
    }, {
      "local-name" : "CinderPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.CinderPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 69
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "SecretRef",
        "type" : 54
      } ],
      "name" : "struct{VolumeID string; FSType string; ReadOnly bool; SecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference}",
      "type" : "Struct",
      "underlying" : 69
    }, {
      "elem" : 71,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.CephFSPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 70
    }, {
      "local-name" : "CephFSPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.CephFSPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 72
    }, {
      "fields" : [ {
        "name" : "Monitors",
        "type" : 53
      }, {
        "name" : "Path",
        "type" : 27
      }, {
        "name" : "User",
        "type" : 27
      }, {
        "name" : "SecretFile",
        "type" : 27
      }, {
        "name" : "SecretRef",
        "type" : 54
      }, {
        "name" : "ReadOnly",
        "type" : 21
      } ],
      "name" : "struct{Monitors []string; Path string; User string; SecretFile string; SecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 72
    }, {
      "elem" : 74,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.FCVolumeSource",
      "type" : "Pointer",
      "underlying" : 73
    }, {
      "local-name" : "FCVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.FCVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 75
    }, {
      "fields" : [ {
        "name" : "TargetWWNs",
        "type" : 53
      }, {
        "name" : "Lun",
        "type" : 76
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "WWIDs",
        "type" : 53
      } ],
      "name" : "struct{TargetWWNs []string; Lun *int32; FSType string; ReadOnly bool; WWIDs []string}",
      "type" : "Struct",
      "underlying" : 75
    }, {
      "elem" : 13,
      "name" : "*int32",
      "type" : "Pointer",
      "underlying" : 76
    }, {
      "elem" : 78,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.FlockerVolumeSource",
      "type" : "Pointer",
      "underlying" : 77
    }, {
      "local-name" : "FlockerVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.FlockerVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 79
    }, {
      "fields" : [ {
        "name" : "DatasetName",
        "type" : 27
      }, {
        "name" : "DatasetUUID",
        "type" : 27
      } ],
      "name" : "struct{DatasetName string; DatasetUUID string}",
      "type" : "Struct",
      "underlying" : 79
    }, {
      "elem" : 81,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AzureFilePersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 80
    }, {
      "local-name" : "AzureFilePersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AzureFilePersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 82
    }, {
      "fields" : [ {
        "name" : "SecretName",
        "type" : 27
      }, {
        "name" : "ShareName",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "SecretNamespace",
        "type" : 46
      } ],
      "name" : "struct{SecretName string; ShareName string; ReadOnly bool; SecretNamespace *string}",
      "type" : "Struct",
      "underlying" : 82
    }, {
      "elem" : 84,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.VsphereVirtualDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 83
    }, {
      "local-name" : "VsphereVirtualDiskVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.VsphereVirtualDiskVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 85
    }, {
      "fields" : [ {
        "name" : "VolumePath",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "StoragePolicyName",
        "type" : 27
      }, {
        "name" : "StoragePolicyID",
        "type" : 27
      } ],
      "name" : "struct{VolumePath string; FSType string; StoragePolicyName string; StoragePolicyID string}",
      "type" : "Struct",
      "underlying" : 85
    }, {
      "elem" : 87,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AzureDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 86
    }, {
      "local-name" : "AzureDiskVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AzureDiskVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 88
    }, {
      "fields" : [ {
        "name" : "DiskName",
        "type" : 27
      }, {
        "name" : "DataDiskURI",
        "type" : 27
      }, {
        "name" : "CachingMode",
        "type" : 89
      }, {
        "name" : "FSType",
        "type" : 46
      }, {
        "name" : "ReadOnly",
        "type" : 91
      }, {
        "name" : "Kind",
        "type" : 92
      } ],
      "name" : "struct{DiskName string; DataDiskURI string; CachingMode *k8s.io/kubernetes/pkg/apis/core.AzureDataDiskCachingMode; FSType *string; ReadOnly *bool; Kind *k8s.io/kubernetes/pkg/apis/core.AzureDataDiskKind}",
      "type" : "Struct",
      "underlying" : 88
    }, {
      "elem" : 90,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AzureDataDiskCachingMode",
      "type" : "Pointer",
      "underlying" : 89
    }, {
      "local-name" : "AzureDataDiskCachingMode",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AzureDataDiskCachingMode",
      "package" : 1,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 21,
      "name" : "*bool",
      "type" : "Pointer",
      "underlying" : 91
    }, {
      "elem" : 93,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AzureDataDiskKind",
      "type" : "Pointer",
      "underlying" : 92
    }, {
      "local-name" : "AzureDataDiskKind",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AzureDataDiskKind",
      "package" : 1,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 95,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PhotonPersistentDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 94
    }, {
      "local-name" : "PhotonPersistentDiskVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PhotonPersistentDiskVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 96
    }, {
      "fields" : [ {
        "name" : "PdID",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      } ],
      "name" : "struct{PdID string; FSType string}",
      "type" : "Struct",
      "underlying" : 96
    }, {
      "elem" : 98,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PortworxVolumeSource",
      "type" : "Pointer",
      "underlying" : 97
    }, {
      "local-name" : "PortworxVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PortworxVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 99
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      } ],
      "name" : "struct{VolumeID string; FSType string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 99
    }, {
      "elem" : 101,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ScaleIOPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 100
    }, {
      "local-name" : "ScaleIOPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ScaleIOPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 102
    }, {
      "fields" : [ {
        "name" : "Gateway",
        "type" : 27
      }, {
        "name" : "System",
        "type" : 27
      }, {
        "name" : "SecretRef",
        "type" : 54
      }, {
        "name" : "SSLEnabled",
        "type" : 21
      }, {
        "name" : "ProtectionDomain",
        "type" : 27
      }, {
        "name" : "StoragePool",
        "type" : 27
      }, {
        "name" : "StorageMode",
        "type" : 27
      }, {
        "name" : "VolumeName",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      } ],
      "name" : "struct{Gateway string; System string; SecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference; SSLEnabled bool; ProtectionDomain string; StoragePool string; StorageMode string; VolumeName string; FSType string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 102
    }, {
      "elem" : 104,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.LocalVolumeSource",
      "type" : "Pointer",
      "underlying" : 103
    }, {
      "local-name" : "LocalVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.LocalVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 105
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 46
      } ],
      "name" : "struct{Path string; FSType *string}",
      "type" : "Struct",
      "underlying" : 105
    }, {
      "elem" : 107,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.StorageOSPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 106
    }, {
      "local-name" : "StorageOSPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.StorageOSPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 108
    }, {
      "fields" : [ {
        "name" : "VolumeName",
        "type" : 27
      }, {
        "name" : "VolumeNamespace",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "SecretRef",
        "type" : 109
      } ],
      "name" : "struct{VolumeName string; VolumeNamespace string; FSType string; ReadOnly bool; SecretRef *k8s.io/kubernetes/pkg/apis/core.ObjectReference}",
      "type" : "Struct",
      "underlying" : 108
    }, {
      "elem" : 110,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ObjectReference",
      "type" : "Pointer",
      "underlying" : 109
    }, {
      "local-name" : "ObjectReference",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ObjectReference",
      "package" : 1,
      "type" : "Named",
      "underlying" : 111
    }, {
      "fields" : [ {
        "name" : "Kind",
        "type" : 27
      }, {
        "name" : "Namespace",
        "type" : 27
      }, {
        "name" : "Name",
        "type" : 27
      }, {
        "name" : "UID",
        "type" : 112
      }, {
        "name" : "APIVersion",
        "type" : 27
      }, {
        "name" : "ResourceVersion",
        "type" : 27
      }, {
        "name" : "FieldPath",
        "type" : 27
      } ],
      "name" : "struct{Kind string; Namespace string; Name string; UID k8s.io/apimachinery/pkg/types.UID; APIVersion string; ResourceVersion string; FieldPath string}",
      "type" : "Struct",
      "underlying" : 111
    }, {
      "local-name" : "UID",
      "name" : "k8s.io/apimachinery/pkg/types.UID",
      "package" : 5,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 114,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.CSIPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 113
    }, {
      "local-name" : "CSIPersistentVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.CSIPersistentVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 115
    }, {
      "fields" : [ {
        "name" : "Driver",
        "type" : 27
      }, {
        "name" : "VolumeHandle",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "VolumeAttributes",
        "type" : 66
      }, {
        "name" : "ControllerPublishSecretRef",
        "type" : 54
      }, {
        "name" : "NodeStageSecretRef",
        "type" : 54
      }, {
        "name" : "NodePublishSecretRef",
        "type" : 54
      }, {
        "name" : "ControllerExpandSecretRef",
        "type" : 54
      } ],
      "name" : "struct{Driver string; VolumeHandle string; ReadOnly bool; FSType string; VolumeAttributes map[string]string; ControllerPublishSecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference; NodeStageSecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference; NodePublishSecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference; ControllerExpandSecretRef *k8s.io/kubernetes/pkg/apis/core.SecretReference}",
      "type" : "Struct",
      "underlying" : 115
    }, {
      "elem" : 117,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.PersistentVolumeAccessMode",
      "type" : "Slice",
      "underlying" : 116
    }, {
      "local-name" : "PersistentVolumeAccessMode",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PersistentVolumeAccessMode",
      "package" : 1,
      "type" : "Named",
      "underlying" : 27
    }, {
      "local-name" : "PersistentVolumeReclaimPolicy",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PersistentVolumeReclaimPolicy",
      "package" : 1,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 120,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PersistentVolumeMode",
      "type" : "Pointer",
      "underlying" : 119
    }, {
      "local-name" : "PersistentVolumeMode",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PersistentVolumeMode",
      "package" : 1,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 122,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.VolumeNodeAffinity",
      "type" : "Pointer",
      "underlying" : 121
    }, {
      "local-name" : "VolumeNodeAffinity",
      "name" : "k8s.io/kubernetes/pkg/apis/core.VolumeNodeAffinity",
      "package" : 1,
      "type" : "Named",
      "underlying" : 123
    }, {
      "fields" : [ {
        "name" : "Required",
        "type" : 124
      } ],
      "name" : "struct{Required *k8s.io/kubernetes/pkg/apis/core.NodeSelector}",
      "type" : "Struct",
      "underlying" : 123
    }, {
      "elem" : 125,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.NodeSelector",
      "type" : "Pointer",
      "underlying" : 124
    }, {
      "local-name" : "NodeSelector",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeSelector",
      "package" : 1,
      "type" : "Named",
      "underlying" : 126
    }, {
      "fields" : [ {
        "name" : "NodeSelectorTerms",
        "type" : 127
      } ],
      "name" : "struct{NodeSelectorTerms []k8s.io/kubernetes/pkg/apis/core.NodeSelectorTerm}",
      "type" : "Struct",
      "underlying" : 126
    }, {
      "elem" : 128,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.NodeSelectorTerm",
      "type" : "Slice",
      "underlying" : 127
    }, {
      "local-name" : "NodeSelectorTerm",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeSelectorTerm",
      "package" : 1,
      "type" : "Named",
      "underlying" : 129
    }, {
      "fields" : [ {
        "name" : "MatchExpressions",
        "type" : 130
      }, {
        "name" : "MatchFields",
        "type" : 130
      } ],
      "name" : "struct{MatchExpressions []k8s.io/kubernetes/pkg/apis/core.NodeSelectorRequirement; MatchFields []k8s.io/kubernetes/pkg/apis/core.NodeSelectorRequirement}",
      "type" : "Struct",
      "underlying" : 129
    }, {
      "elem" : 131,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.NodeSelectorRequirement",
      "type" : "Slice",
      "underlying" : 130
    }, {
      "local-name" : "NodeSelectorRequirement",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeSelectorRequirement",
      "package" : 1,
      "type" : "Named",
      "underlying" : 132
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 27
      }, {
        "name" : "Operator",
        "type" : 133
      }, {
        "name" : "Values",
        "type" : 53
      } ],
      "name" : "struct{Key string; Operator k8s.io/kubernetes/pkg/apis/core.NodeSelectorOperator; Values []string}",
      "type" : "Struct",
      "underlying" : 132
    }, {
      "local-name" : "NodeSelectorOperator",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeSelectorOperator",
      "package" : 1,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 135,
      "name" : "*k8s.io/api/core/v1.PersistentVolumeSpec",
      "type" : "Pointer",
      "underlying" : 134
    }, {
      "local-name" : "PersistentVolumeSpec",
      "name" : "k8s.io/api/core/v1.PersistentVolumeSpec",
      "package" : 6,
      "type" : "Named",
      "underlying" : 136
    }, {
      "fields" : [ {
        "name" : "Capacity",
        "type" : 137
      }, {
        "name" : "PersistentVolumeSource",
        "type" : 140
      }, {
        "name" : "AccessModes",
        "type" : 220
      }, {
        "name" : "ClaimRef",
        "type" : 214
      }, {
        "name" : "PersistentVolumeReclaimPolicy",
        "type" : 222
      }, {
        "name" : "StorageClassName",
        "type" : 27
      }, {
        "name" : "MountOptions",
        "type" : 53
      }, {
        "name" : "VolumeMode",
        "type" : 223
      }, {
        "name" : "NodeAffinity",
        "type" : 225
      } ],
      "name" : "struct{Capacity k8s.io/api/core/v1.ResourceList \"json:\\\"capacity,omitempty\\\" protobuf:\\\"bytes,1,rep,name=capacity,casttype=ResourceList,castkey=ResourceName\\\"\"; k8s.io/api/core/v1.PersistentVolumeSource \"json:\\\",inline\\\" protobuf:\\\"bytes,2,opt,name=persistentVolumeSource\\\"\"; AccessModes []k8s.io/api/core/v1.PersistentVolumeAccessMode \"json:\\\"accessModes,omitempty\\\" protobuf:\\\"bytes,3,rep,name=accessModes,casttype=PersistentVolumeAccessMode\\\"\"; ClaimRef *k8s.io/api/core/v1.ObjectReference \"json:\\\"claimRef,omitempty\\\" protobuf:\\\"bytes,4,opt,name=claimRef\\\"\"; PersistentVolumeReclaimPolicy k8s.io/api/core/v1.PersistentVolumeReclaimPolicy \"json:\\\"persistentVolumeReclaimPolicy,omitempty\\\" protobuf:\\\"bytes,5,opt,name=persistentVolumeReclaimPolicy,casttype=PersistentVolumeReclaimPolicy\\\"\"; StorageClassName string \"json:\\\"storageClassName,omitempty\\\" protobuf:\\\"bytes,6,opt,name=storageClassName\\\"\"; MountOptions []string \"json:\\\"mountOptions,omitempty\\\" protobuf:\\\"bytes,7,opt,name=mountOptions\\\"\"; VolumeMode *k8s.io/api/core/v1.PersistentVolumeMode \"json:\\\"volumeMode,omitempty\\\" protobuf:\\\"bytes,8,opt,name=volumeMode,casttype=PersistentVolumeMode\\\"\"; NodeAffinity *k8s.io/api/core/v1.VolumeNodeAffinity \"json:\\\"nodeAffinity,omitempty\\\" protobuf:\\\"bytes,9,opt,name=nodeAffinity\\\"\"}",
      "type" : "Struct",
      "underlying" : 136
    }, {
      "local-name" : "ResourceList",
      "name" : "k8s.io/api/core/v1.ResourceList",
      "package" : 6,
      "type" : "Named",
      "underlying" : 138
    }, {
      "elem" : 7,
      "key" : 139,
      "name" : "map[k8s.io/api/core/v1.ResourceName]k8s.io/apimachinery/pkg/api/resource.Quantity",
      "type" : "Map",
      "underlying" : 138
    }, {
      "local-name" : "ResourceName",
      "name" : "k8s.io/api/core/v1.ResourceName",
      "package" : 6,
      "type" : "Named",
      "underlying" : 27
    }, {
      "local-name" : "PersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.PersistentVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 141
    }, {
      "fields" : [ {
        "name" : "GCEPersistentDisk",
        "type" : 142
      }, {
        "name" : "AWSElasticBlockStore",
        "type" : 145
      }, {
        "name" : "HostPath",
        "type" : 148
      }, {
        "name" : "Glusterfs",
        "type" : 153
      }, {
        "name" : "NFS",
        "type" : 156
      }, {
        "name" : "RBD",
        "type" : 159
      }, {
        "name" : "ISCSI",
        "type" : 165
      }, {
        "name" : "Cinder",
        "type" : 168
      }, {
        "name" : "CephFS",
        "type" : 171
      }, {
        "name" : "FC",
        "type" : 174
      }, {
        "name" : "Flocker",
        "type" : 177
      }, {
        "name" : "FlexVolume",
        "type" : 180
      }, {
        "name" : "AzureFile",
        "type" : 183
      }, {
        "name" : "VsphereVolume",
        "type" : 186
      }, {
        "name" : "Quobyte",
        "type" : 189
      }, {
        "name" : "AzureDisk",
        "type" : 192
      }, {
        "name" : "PhotonPersistentDisk",
        "type" : 199
      }, {
        "name" : "PortworxVolume",
        "type" : 202
      }, {
        "name" : "ScaleIO",
        "type" : 205
      }, {
        "name" : "Local",
        "type" : 208
      }, {
        "name" : "StorageOS",
        "type" : 211
      }, {
        "name" : "CSI",
        "type" : 217
      } ],
      "name" : "struct{GCEPersistentDisk *k8s.io/api/core/v1.GCEPersistentDiskVolumeSource \"json:\\\"gcePersistentDisk,omitempty\\\" protobuf:\\\"bytes,1,opt,name=gcePersistentDisk\\\"\"; AWSElasticBlockStore *k8s.io/api/core/v1.AWSElasticBlockStoreVolumeSource \"json:\\\"awsElasticBlockStore,omitempty\\\" protobuf:\\\"bytes,2,opt,name=awsElasticBlockStore\\\"\"; HostPath *k8s.io/api/core/v1.HostPathVolumeSource \"json:\\\"hostPath,omitempty\\\" protobuf:\\\"bytes,3,opt,name=hostPath\\\"\"; Glusterfs *k8s.io/api/core/v1.GlusterfsPersistentVolumeSource \"json:\\\"glusterfs,omitempty\\\" protobuf:\\\"bytes,4,opt,name=glusterfs\\\"\"; NFS *k8s.io/api/core/v1.NFSVolumeSource \"json:\\\"nfs,omitempty\\\" protobuf:\\\"bytes,5,opt,name=nfs\\\"\"; RBD *k8s.io/api/core/v1.RBDPersistentVolumeSource \"json:\\\"rbd,omitempty\\\" protobuf:\\\"bytes,6,opt,name=rbd\\\"\"; ISCSI *k8s.io/api/core/v1.ISCSIPersistentVolumeSource \"json:\\\"iscsi,omitempty\\\" protobuf:\\\"bytes,7,opt,name=iscsi\\\"\"; Cinder *k8s.io/api/core/v1.CinderPersistentVolumeSource \"json:\\\"cinder,omitempty\\\" protobuf:\\\"bytes,8,opt,name=cinder\\\"\"; CephFS *k8s.io/api/core/v1.CephFSPersistentVolumeSource \"json:\\\"cephfs,omitempty\\\" protobuf:\\\"bytes,9,opt,name=cephfs\\\"\"; FC *k8s.io/api/core/v1.FCVolumeSource \"json:\\\"fc,omitempty\\\" protobuf:\\\"bytes,10,opt,name=fc\\\"\"; Flocker *k8s.io/api/core/v1.FlockerVolumeSource \"json:\\\"flocker,omitempty\\\" protobuf:\\\"bytes,11,opt,name=flocker\\\"\"; FlexVolume *k8s.io/api/core/v1.FlexPersistentVolumeSource \"json:\\\"flexVolume,omitempty\\\" protobuf:\\\"bytes,12,opt,name=flexVolume\\\"\"; AzureFile *k8s.io/api/core/v1.AzureFilePersistentVolumeSource \"json:\\\"azureFile,omitempty\\\" protobuf:\\\"bytes,13,opt,name=azureFile\\\"\"; VsphereVolume *k8s.io/api/core/v1.VsphereVirtualDiskVolumeSource \"json:\\\"vsphereVolume,omitempty\\\" protobuf:\\\"bytes,14,opt,name=vsphereVolume\\\"\"; Quobyte *k8s.io/api/core/v1.QuobyteVolumeSource \"json:\\\"quobyte,omitempty\\\" protobuf:\\\"bytes,15,opt,name=quobyte\\\"\"; AzureDisk *k8s.io/api/core/v1.AzureDiskVolumeSource \"json:\\\"azureDisk,omitempty\\\" protobuf:\\\"bytes,16,opt,name=azureDisk\\\"\"; PhotonPersistentDisk *k8s.io/api/core/v1.PhotonPersistentDiskVolumeSource \"json:\\\"photonPersistentDisk,omitempty\\\" protobuf:\\\"bytes,17,opt,name=photonPersistentDisk\\\"\"; PortworxVolume *k8s.io/api/core/v1.PortworxVolumeSource \"json:\\\"portworxVolume,omitempty\\\" protobuf:\\\"bytes,18,opt,name=portworxVolume\\\"\"; ScaleIO *k8s.io/api/core/v1.ScaleIOPersistentVolumeSource \"json:\\\"scaleIO,omitempty\\\" protobuf:\\\"bytes,19,opt,name=scaleIO\\\"\"; Local *k8s.io/api/core/v1.LocalVolumeSource \"json:\\\"local,omitempty\\\" protobuf:\\\"bytes,20,opt,name=local\\\"\"; StorageOS *k8s.io/api/core/v1.StorageOSPersistentVolumeSource \"json:\\\"storageos,omitempty\\\" protobuf:\\\"bytes,21,opt,name=storageos\\\"\"; CSI *k8s.io/api/core/v1.CSIPersistentVolumeSource \"json:\\\"csi,omitempty\\\" protobuf:\\\"bytes,22,opt,name=csi\\\"\"}",
      "type" : "Struct",
      "underlying" : 141
    }, {
      "elem" : 143,
      "name" : "*k8s.io/api/core/v1.GCEPersistentDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 142
    }, {
      "local-name" : "GCEPersistentDiskVolumeSource",
      "name" : "k8s.io/api/core/v1.GCEPersistentDiskVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 144
    }, {
      "fields" : [ {
        "name" : "PDName",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "Partition",
        "type" : 13
      }, {
        "name" : "ReadOnly",
        "type" : 21
      } ],
      "name" : "struct{PDName string \"json:\\\"pdName\\\" protobuf:\\\"bytes,1,opt,name=pdName\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; Partition int32 \"json:\\\"partition,omitempty\\\" protobuf:\\\"varint,3,opt,name=partition\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 144
    }, {
      "elem" : 146,
      "name" : "*k8s.io/api/core/v1.AWSElasticBlockStoreVolumeSource",
      "type" : "Pointer",
      "underlying" : 145
    }, {
      "local-name" : "AWSElasticBlockStoreVolumeSource",
      "name" : "k8s.io/api/core/v1.AWSElasticBlockStoreVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 147
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "Partition",
        "type" : 13
      }, {
        "name" : "ReadOnly",
        "type" : 21
      } ],
      "name" : "struct{VolumeID string \"json:\\\"volumeID\\\" protobuf:\\\"bytes,1,opt,name=volumeID\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; Partition int32 \"json:\\\"partition,omitempty\\\" protobuf:\\\"varint,3,opt,name=partition\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 147
    }, {
      "elem" : 149,
      "name" : "*k8s.io/api/core/v1.HostPathVolumeSource",
      "type" : "Pointer",
      "underlying" : 148
    }, {
      "local-name" : "HostPathVolumeSource",
      "name" : "k8s.io/api/core/v1.HostPathVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 150
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 27
      }, {
        "name" : "Type",
        "type" : 151
      } ],
      "name" : "struct{Path string \"json:\\\"path\\\" protobuf:\\\"bytes,1,opt,name=path\\\"\"; Type *k8s.io/api/core/v1.HostPathType \"json:\\\"type,omitempty\\\" protobuf:\\\"bytes,2,opt,name=type\\\"\"}",
      "type" : "Struct",
      "underlying" : 150
    }, {
      "elem" : 152,
      "name" : "*k8s.io/api/core/v1.HostPathType",
      "type" : "Pointer",
      "underlying" : 151
    }, {
      "local-name" : "HostPathType",
      "name" : "k8s.io/api/core/v1.HostPathType",
      "package" : 6,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 154,
      "name" : "*k8s.io/api/core/v1.GlusterfsPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 153
    }, {
      "local-name" : "GlusterfsPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.GlusterfsPersistentVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 155
    }, {
      "fields" : [ {
        "name" : "EndpointsName",
        "type" : 27
      }, {
        "name" : "Path",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "EndpointsNamespace",
        "type" : 46
      } ],
      "name" : "struct{EndpointsName string \"json:\\\"endpoints\\\" protobuf:\\\"bytes,1,opt,name=endpoints\\\"\"; Path string \"json:\\\"path\\\" protobuf:\\\"bytes,2,opt,name=path\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"; EndpointsNamespace *string \"json:\\\"endpointsNamespace,omitempty\\\" protobuf:\\\"bytes,4,opt,name=endpointsNamespace\\\"\"}",
      "type" : "Struct",
      "underlying" : 155
    }, {
      "elem" : 157,
      "name" : "*k8s.io/api/core/v1.NFSVolumeSource",
      "type" : "Pointer",
      "underlying" : 156
    }, {
      "local-name" : "NFSVolumeSource",
      "name" : "k8s.io/api/core/v1.NFSVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 158
    }, {
      "fields" : [ {
        "name" : "Server",
        "type" : 27
      }, {
        "name" : "Path",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      } ],
      "name" : "struct{Server string \"json:\\\"server\\\" protobuf:\\\"bytes,1,opt,name=server\\\"\"; Path string \"json:\\\"path\\\" protobuf:\\\"bytes,2,opt,name=path\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 158
    }, {
      "elem" : 160,
      "name" : "*k8s.io/api/core/v1.RBDPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 159
    }, {
      "local-name" : "RBDPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.RBDPersistentVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 161
    }, {
      "fields" : [ {
        "name" : "CephMonitors",
        "type" : 53
      }, {
        "name" : "RBDImage",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "RBDPool",
        "type" : 27
      }, {
        "name" : "RadosUser",
        "type" : 27
      }, {
        "name" : "Keyring",
        "type" : 27
      }, {
        "name" : "SecretRef",
        "type" : 162
      }, {
        "name" : "ReadOnly",
        "type" : 21
      } ],
      "name" : "struct{CephMonitors []string \"json:\\\"monitors\\\" protobuf:\\\"bytes,1,rep,name=monitors\\\"\"; RBDImage string \"json:\\\"image\\\" protobuf:\\\"bytes,2,opt,name=image\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,3,opt,name=fsType\\\"\"; RBDPool string \"json:\\\"pool,omitempty\\\" protobuf:\\\"bytes,4,opt,name=pool\\\"\"; RadosUser string \"json:\\\"user,omitempty\\\" protobuf:\\\"bytes,5,opt,name=user\\\"\"; Keyring string \"json:\\\"keyring,omitempty\\\" protobuf:\\\"bytes,6,opt,name=keyring\\\"\"; SecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,7,opt,name=secretRef\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,8,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 161
    }, {
      "elem" : 163,
      "name" : "*k8s.io/api/core/v1.SecretReference",
      "type" : "Pointer",
      "underlying" : 162
    }, {
      "local-name" : "SecretReference",
      "name" : "k8s.io/api/core/v1.SecretReference",
      "package" : 6,
      "type" : "Named",
      "underlying" : 164
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 27
      }, {
        "name" : "Namespace",
        "type" : 27
      } ],
      "name" : "struct{Name string \"json:\\\"name,omitempty\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; Namespace string \"json:\\\"namespace,omitempty\\\" protobuf:\\\"bytes,2,opt,name=namespace\\\"\"}",
      "type" : "Struct",
      "underlying" : 164
    }, {
      "elem" : 166,
      "name" : "*k8s.io/api/core/v1.ISCSIPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 165
    }, {
      "local-name" : "ISCSIPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.ISCSIPersistentVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 167
    }, {
      "fields" : [ {
        "name" : "TargetPortal",
        "type" : 27
      }, {
        "name" : "IQN",
        "type" : 27
      }, {
        "name" : "Lun",
        "type" : 13
      }, {
        "name" : "ISCSIInterface",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "Portals",
        "type" : 53
      }, {
        "name" : "DiscoveryCHAPAuth",
        "type" : 21
      }, {
        "name" : "SessionCHAPAuth",
        "type" : 21
      }, {
        "name" : "SecretRef",
        "type" : 162
      }, {
        "name" : "InitiatorName",
        "type" : 46
      } ],
      "name" : "struct{TargetPortal string \"json:\\\"targetPortal\\\" protobuf:\\\"bytes,1,opt,name=targetPortal\\\"\"; IQN string \"json:\\\"iqn\\\" protobuf:\\\"bytes,2,opt,name=iqn\\\"\"; Lun int32 \"json:\\\"lun\\\" protobuf:\\\"varint,3,opt,name=lun\\\"\"; ISCSIInterface string \"json:\\\"iscsiInterface,omitempty\\\" protobuf:\\\"bytes,4,opt,name=iscsiInterface\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,5,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,6,opt,name=readOnly\\\"\"; Portals []string \"json:\\\"portals,omitempty\\\" protobuf:\\\"bytes,7,opt,name=portals\\\"\"; DiscoveryCHAPAuth bool \"json:\\\"chapAuthDiscovery,omitempty\\\" protobuf:\\\"varint,8,opt,name=chapAuthDiscovery\\\"\"; SessionCHAPAuth bool \"json:\\\"chapAuthSession,omitempty\\\" protobuf:\\\"varint,11,opt,name=chapAuthSession\\\"\"; SecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,10,opt,name=secretRef\\\"\"; InitiatorName *string \"json:\\\"initiatorName,omitempty\\\" protobuf:\\\"bytes,12,opt,name=initiatorName\\\"\"}",
      "type" : "Struct",
      "underlying" : 167
    }, {
      "elem" : 169,
      "name" : "*k8s.io/api/core/v1.CinderPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 168
    }, {
      "local-name" : "CinderPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.CinderPersistentVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 170
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "SecretRef",
        "type" : 162
      } ],
      "name" : "struct{VolumeID string \"json:\\\"volumeID\\\" protobuf:\\\"bytes,1,opt,name=volumeID\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"; SecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,4,opt,name=secretRef\\\"\"}",
      "type" : "Struct",
      "underlying" : 170
    }, {
      "elem" : 172,
      "name" : "*k8s.io/api/core/v1.CephFSPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 171
    }, {
      "local-name" : "CephFSPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.CephFSPersistentVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 173
    }, {
      "fields" : [ {
        "name" : "Monitors",
        "type" : 53
      }, {
        "name" : "Path",
        "type" : 27
      }, {
        "name" : "User",
        "type" : 27
      }, {
        "name" : "SecretFile",
        "type" : 27
      }, {
        "name" : "SecretRef",
        "type" : 162
      }, {
        "name" : "ReadOnly",
        "type" : 21
      } ],
      "name" : "struct{Monitors []string \"json:\\\"monitors\\\" protobuf:\\\"bytes,1,rep,name=monitors\\\"\"; Path string \"json:\\\"path,omitempty\\\" protobuf:\\\"bytes,2,opt,name=path\\\"\"; User string \"json:\\\"user,omitempty\\\" protobuf:\\\"bytes,3,opt,name=user\\\"\"; SecretFile string \"json:\\\"secretFile,omitempty\\\" protobuf:\\\"bytes,4,opt,name=secretFile\\\"\"; SecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,5,opt,name=secretRef\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,6,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 173
    }, {
      "elem" : 175,
      "name" : "*k8s.io/api/core/v1.FCVolumeSource",
      "type" : "Pointer",
      "underlying" : 174
    }, {
      "local-name" : "FCVolumeSource",
      "name" : "k8s.io/api/core/v1.FCVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 176
    }, {
      "fields" : [ {
        "name" : "TargetWWNs",
        "type" : 53
      }, {
        "name" : "Lun",
        "type" : 76
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "WWIDs",
        "type" : 53
      } ],
      "name" : "struct{TargetWWNs []string \"json:\\\"targetWWNs,omitempty\\\" protobuf:\\\"bytes,1,rep,name=targetWWNs\\\"\"; Lun *int32 \"json:\\\"lun,omitempty\\\" protobuf:\\\"varint,2,opt,name=lun\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,3,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"; WWIDs []string \"json:\\\"wwids,omitempty\\\" protobuf:\\\"bytes,5,rep,name=wwids\\\"\"}",
      "type" : "Struct",
      "underlying" : 176
    }, {
      "elem" : 178,
      "name" : "*k8s.io/api/core/v1.FlockerVolumeSource",
      "type" : "Pointer",
      "underlying" : 177
    }, {
      "local-name" : "FlockerVolumeSource",
      "name" : "k8s.io/api/core/v1.FlockerVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 179
    }, {
      "fields" : [ {
        "name" : "DatasetName",
        "type" : 27
      }, {
        "name" : "DatasetUUID",
        "type" : 27
      } ],
      "name" : "struct{DatasetName string \"json:\\\"datasetName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=datasetName\\\"\"; DatasetUUID string \"json:\\\"datasetUUID,omitempty\\\" protobuf:\\\"bytes,2,opt,name=datasetUUID\\\"\"}",
      "type" : "Struct",
      "underlying" : 179
    }, {
      "elem" : 181,
      "name" : "*k8s.io/api/core/v1.FlexPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 180
    }, {
      "local-name" : "FlexPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.FlexPersistentVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 182
    }, {
      "fields" : [ {
        "name" : "Driver",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "SecretRef",
        "type" : 162
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "Options",
        "type" : 66
      } ],
      "name" : "struct{Driver string \"json:\\\"driver\\\" protobuf:\\\"bytes,1,opt,name=driver\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; SecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,3,opt,name=secretRef\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"; Options map[string]string \"json:\\\"options,omitempty\\\" protobuf:\\\"bytes,5,rep,name=options\\\"\"}",
      "type" : "Struct",
      "underlying" : 182
    }, {
      "elem" : 184,
      "name" : "*k8s.io/api/core/v1.AzureFilePersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 183
    }, {
      "local-name" : "AzureFilePersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.AzureFilePersistentVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 185
    }, {
      "fields" : [ {
        "name" : "SecretName",
        "type" : 27
      }, {
        "name" : "ShareName",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "SecretNamespace",
        "type" : 46
      } ],
      "name" : "struct{SecretName string \"json:\\\"secretName\\\" protobuf:\\\"bytes,1,opt,name=secretName\\\"\"; ShareName string \"json:\\\"shareName\\\" protobuf:\\\"bytes,2,opt,name=shareName\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"; SecretNamespace *string \"json:\\\"secretNamespace\\\" protobuf:\\\"bytes,4,opt,name=secretNamespace\\\"\"}",
      "type" : "Struct",
      "underlying" : 185
    }, {
      "elem" : 187,
      "name" : "*k8s.io/api/core/v1.VsphereVirtualDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 186
    }, {
      "local-name" : "VsphereVirtualDiskVolumeSource",
      "name" : "k8s.io/api/core/v1.VsphereVirtualDiskVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 188
    }, {
      "fields" : [ {
        "name" : "VolumePath",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "StoragePolicyName",
        "type" : 27
      }, {
        "name" : "StoragePolicyID",
        "type" : 27
      } ],
      "name" : "struct{VolumePath string \"json:\\\"volumePath\\\" protobuf:\\\"bytes,1,opt,name=volumePath\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; StoragePolicyName string \"json:\\\"storagePolicyName,omitempty\\\" protobuf:\\\"bytes,3,opt,name=storagePolicyName\\\"\"; StoragePolicyID string \"json:\\\"storagePolicyID,omitempty\\\" protobuf:\\\"bytes,4,opt,name=storagePolicyID\\\"\"}",
      "type" : "Struct",
      "underlying" : 188
    }, {
      "elem" : 190,
      "name" : "*k8s.io/api/core/v1.QuobyteVolumeSource",
      "type" : "Pointer",
      "underlying" : 189
    }, {
      "local-name" : "QuobyteVolumeSource",
      "name" : "k8s.io/api/core/v1.QuobyteVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 191
    }, {
      "fields" : [ {
        "name" : "Registry",
        "type" : 27
      }, {
        "name" : "Volume",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "User",
        "type" : 27
      }, {
        "name" : "Group",
        "type" : 27
      }, {
        "name" : "Tenant",
        "type" : 27
      } ],
      "name" : "struct{Registry string \"json:\\\"registry\\\" protobuf:\\\"bytes,1,opt,name=registry\\\"\"; Volume string \"json:\\\"volume\\\" protobuf:\\\"bytes,2,opt,name=volume\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"; User string \"json:\\\"user,omitempty\\\" protobuf:\\\"bytes,4,opt,name=user\\\"\"; Group string \"json:\\\"group,omitempty\\\" protobuf:\\\"bytes,5,opt,name=group\\\"\"; Tenant string \"json:\\\"tenant,omitempty\\\" protobuf:\\\"bytes,6,opt,name=tenant\\\"\"}",
      "type" : "Struct",
      "underlying" : 191
    }, {
      "elem" : 193,
      "name" : "*k8s.io/api/core/v1.AzureDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 192
    }, {
      "local-name" : "AzureDiskVolumeSource",
      "name" : "k8s.io/api/core/v1.AzureDiskVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 194
    }, {
      "fields" : [ {
        "name" : "DiskName",
        "type" : 27
      }, {
        "name" : "DataDiskURI",
        "type" : 27
      }, {
        "name" : "CachingMode",
        "type" : 195
      }, {
        "name" : "FSType",
        "type" : 46
      }, {
        "name" : "ReadOnly",
        "type" : 91
      }, {
        "name" : "Kind",
        "type" : 197
      } ],
      "name" : "struct{DiskName string \"json:\\\"diskName\\\" protobuf:\\\"bytes,1,opt,name=diskName\\\"\"; DataDiskURI string \"json:\\\"diskURI\\\" protobuf:\\\"bytes,2,opt,name=diskURI\\\"\"; CachingMode *k8s.io/api/core/v1.AzureDataDiskCachingMode \"json:\\\"cachingMode,omitempty\\\" protobuf:\\\"bytes,3,opt,name=cachingMode,casttype=AzureDataDiskCachingMode\\\"\"; FSType *string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,4,opt,name=fsType\\\"\"; ReadOnly *bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,5,opt,name=readOnly\\\"\"; Kind *k8s.io/api/core/v1.AzureDataDiskKind \"json:\\\"kind,omitempty\\\" protobuf:\\\"bytes,6,opt,name=kind,casttype=AzureDataDiskKind\\\"\"}",
      "type" : "Struct",
      "underlying" : 194
    }, {
      "elem" : 196,
      "name" : "*k8s.io/api/core/v1.AzureDataDiskCachingMode",
      "type" : "Pointer",
      "underlying" : 195
    }, {
      "local-name" : "AzureDataDiskCachingMode",
      "name" : "k8s.io/api/core/v1.AzureDataDiskCachingMode",
      "package" : 6,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 198,
      "name" : "*k8s.io/api/core/v1.AzureDataDiskKind",
      "type" : "Pointer",
      "underlying" : 197
    }, {
      "local-name" : "AzureDataDiskKind",
      "name" : "k8s.io/api/core/v1.AzureDataDiskKind",
      "package" : 6,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 200,
      "name" : "*k8s.io/api/core/v1.PhotonPersistentDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 199
    }, {
      "local-name" : "PhotonPersistentDiskVolumeSource",
      "name" : "k8s.io/api/core/v1.PhotonPersistentDiskVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 201
    }, {
      "fields" : [ {
        "name" : "PdID",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      } ],
      "name" : "struct{PdID string \"json:\\\"pdID\\\" protobuf:\\\"bytes,1,opt,name=pdID\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"}",
      "type" : "Struct",
      "underlying" : 201
    }, {
      "elem" : 203,
      "name" : "*k8s.io/api/core/v1.PortworxVolumeSource",
      "type" : "Pointer",
      "underlying" : 202
    }, {
      "local-name" : "PortworxVolumeSource",
      "name" : "k8s.io/api/core/v1.PortworxVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 204
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      } ],
      "name" : "struct{VolumeID string \"json:\\\"volumeID\\\" protobuf:\\\"bytes,1,opt,name=volumeID\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 204
    }, {
      "elem" : 206,
      "name" : "*k8s.io/api/core/v1.ScaleIOPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 205
    }, {
      "local-name" : "ScaleIOPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.ScaleIOPersistentVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 207
    }, {
      "fields" : [ {
        "name" : "Gateway",
        "type" : 27
      }, {
        "name" : "System",
        "type" : 27
      }, {
        "name" : "SecretRef",
        "type" : 162
      }, {
        "name" : "SSLEnabled",
        "type" : 21
      }, {
        "name" : "ProtectionDomain",
        "type" : 27
      }, {
        "name" : "StoragePool",
        "type" : 27
      }, {
        "name" : "StorageMode",
        "type" : 27
      }, {
        "name" : "VolumeName",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      } ],
      "name" : "struct{Gateway string \"json:\\\"gateway\\\" protobuf:\\\"bytes,1,opt,name=gateway\\\"\"; System string \"json:\\\"system\\\" protobuf:\\\"bytes,2,opt,name=system\\\"\"; SecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"secretRef\\\" protobuf:\\\"bytes,3,opt,name=secretRef\\\"\"; SSLEnabled bool \"json:\\\"sslEnabled,omitempty\\\" protobuf:\\\"varint,4,opt,name=sslEnabled\\\"\"; ProtectionDomain string \"json:\\\"protectionDomain,omitempty\\\" protobuf:\\\"bytes,5,opt,name=protectionDomain\\\"\"; StoragePool string \"json:\\\"storagePool,omitempty\\\" protobuf:\\\"bytes,6,opt,name=storagePool\\\"\"; StorageMode string \"json:\\\"storageMode,omitempty\\\" protobuf:\\\"bytes,7,opt,name=storageMode\\\"\"; VolumeName string \"json:\\\"volumeName,omitempty\\\" protobuf:\\\"bytes,8,opt,name=volumeName\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,9,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,10,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 207
    }, {
      "elem" : 209,
      "name" : "*k8s.io/api/core/v1.LocalVolumeSource",
      "type" : "Pointer",
      "underlying" : 208
    }, {
      "local-name" : "LocalVolumeSource",
      "name" : "k8s.io/api/core/v1.LocalVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 210
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 46
      } ],
      "name" : "struct{Path string \"json:\\\"path\\\" protobuf:\\\"bytes,1,opt,name=path\\\"\"; FSType *string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"}",
      "type" : "Struct",
      "underlying" : 210
    }, {
      "elem" : 212,
      "name" : "*k8s.io/api/core/v1.StorageOSPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 211
    }, {
      "local-name" : "StorageOSPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.StorageOSPersistentVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 213
    }, {
      "fields" : [ {
        "name" : "VolumeName",
        "type" : 27
      }, {
        "name" : "VolumeNamespace",
        "type" : 27
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "SecretRef",
        "type" : 214
      } ],
      "name" : "struct{VolumeName string \"json:\\\"volumeName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=volumeName\\\"\"; VolumeNamespace string \"json:\\\"volumeNamespace,omitempty\\\" protobuf:\\\"bytes,2,opt,name=volumeNamespace\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,3,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"; SecretRef *k8s.io/api/core/v1.ObjectReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,5,opt,name=secretRef\\\"\"}",
      "type" : "Struct",
      "underlying" : 213
    }, {
      "elem" : 215,
      "name" : "*k8s.io/api/core/v1.ObjectReference",
      "type" : "Pointer",
      "underlying" : 214
    }, {
      "local-name" : "ObjectReference",
      "name" : "k8s.io/api/core/v1.ObjectReference",
      "package" : 6,
      "type" : "Named",
      "underlying" : 216
    }, {
      "fields" : [ {
        "name" : "Kind",
        "type" : 27
      }, {
        "name" : "Namespace",
        "type" : 27
      }, {
        "name" : "Name",
        "type" : 27
      }, {
        "name" : "UID",
        "type" : 112
      }, {
        "name" : "APIVersion",
        "type" : 27
      }, {
        "name" : "ResourceVersion",
        "type" : 27
      }, {
        "name" : "FieldPath",
        "type" : 27
      } ],
      "name" : "struct{Kind string \"json:\\\"kind,omitempty\\\" protobuf:\\\"bytes,1,opt,name=kind\\\"\"; Namespace string \"json:\\\"namespace,omitempty\\\" protobuf:\\\"bytes,2,opt,name=namespace\\\"\"; Name string \"json:\\\"name,omitempty\\\" protobuf:\\\"bytes,3,opt,name=name\\\"\"; UID k8s.io/apimachinery/pkg/types.UID \"json:\\\"uid,omitempty\\\" protobuf:\\\"bytes,4,opt,name=uid,casttype=k8s.io/apimachinery/pkg/types.UID\\\"\"; APIVersion string \"json:\\\"apiVersion,omitempty\\\" protobuf:\\\"bytes,5,opt,name=apiVersion\\\"\"; ResourceVersion string \"json:\\\"resourceVersion,omitempty\\\" protobuf:\\\"bytes,6,opt,name=resourceVersion\\\"\"; FieldPath string \"json:\\\"fieldPath,omitempty\\\" protobuf:\\\"bytes,7,opt,name=fieldPath\\\"\"}",
      "type" : "Struct",
      "underlying" : 216
    }, {
      "elem" : 218,
      "name" : "*k8s.io/api/core/v1.CSIPersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 217
    }, {
      "local-name" : "CSIPersistentVolumeSource",
      "name" : "k8s.io/api/core/v1.CSIPersistentVolumeSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 219
    }, {
      "fields" : [ {
        "name" : "Driver",
        "type" : 27
      }, {
        "name" : "VolumeHandle",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "FSType",
        "type" : 27
      }, {
        "name" : "VolumeAttributes",
        "type" : 66
      }, {
        "name" : "ControllerPublishSecretRef",
        "type" : 162
      }, {
        "name" : "NodeStageSecretRef",
        "type" : 162
      }, {
        "name" : "NodePublishSecretRef",
        "type" : 162
      }, {
        "name" : "ControllerExpandSecretRef",
        "type" : 162
      } ],
      "name" : "struct{Driver string \"json:\\\"driver\\\" protobuf:\\\"bytes,1,opt,name=driver\\\"\"; VolumeHandle string \"json:\\\"volumeHandle\\\" protobuf:\\\"bytes,2,opt,name=volumeHandle\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,4,opt,name=fsType\\\"\"; VolumeAttributes map[string]string \"json:\\\"volumeAttributes,omitempty\\\" protobuf:\\\"bytes,5,rep,name=volumeAttributes\\\"\"; ControllerPublishSecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"controllerPublishSecretRef,omitempty\\\" protobuf:\\\"bytes,6,opt,name=controllerPublishSecretRef\\\"\"; NodeStageSecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"nodeStageSecretRef,omitempty\\\" protobuf:\\\"bytes,7,opt,name=nodeStageSecretRef\\\"\"; NodePublishSecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"nodePublishSecretRef,omitempty\\\" protobuf:\\\"bytes,8,opt,name=nodePublishSecretRef\\\"\"; ControllerExpandSecretRef *k8s.io/api/core/v1.SecretReference \"json:\\\"controllerExpandSecretRef,omitempty\\\" protobuf:\\\"bytes,9,opt,name=controllerExpandSecretRef\\\"\"}",
      "type" : "Struct",
      "underlying" : 219
    }, {
      "elem" : 221,
      "name" : "[]k8s.io/api/core/v1.PersistentVolumeAccessMode",
      "type" : "Slice",
      "underlying" : 220
    }, {
      "local-name" : "PersistentVolumeAccessMode",
      "name" : "k8s.io/api/core/v1.PersistentVolumeAccessMode",
      "package" : 6,
      "type" : "Named",
      "underlying" : 27
    }, {
      "local-name" : "PersistentVolumeReclaimPolicy",
      "name" : "k8s.io/api/core/v1.PersistentVolumeReclaimPolicy",
      "package" : 6,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 224,
      "name" : "*k8s.io/api/core/v1.PersistentVolumeMode",
      "type" : "Pointer",
      "underlying" : 223
    }, {
      "local-name" : "PersistentVolumeMode",
      "name" : "k8s.io/api/core/v1.PersistentVolumeMode",
      "package" : 6,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 226,
      "name" : "*k8s.io/api/core/v1.VolumeNodeAffinity",
      "type" : "Pointer",
      "underlying" : 225
    }, {
      "local-name" : "VolumeNodeAffinity",
      "name" : "k8s.io/api/core/v1.VolumeNodeAffinity",
      "package" : 6,
      "type" : "Named",
      "underlying" : 227
    }, {
      "fields" : [ {
        "name" : "Required",
        "type" : 228
      } ],
      "name" : "struct{Required *k8s.io/api/core/v1.NodeSelector \"json:\\\"required,omitempty\\\" protobuf:\\\"bytes,1,opt,name=required\\\"\"}",
      "type" : "Struct",
      "underlying" : 227
    }, {
      "elem" : 229,
      "name" : "*k8s.io/api/core/v1.NodeSelector",
      "type" : "Pointer",
      "underlying" : 228
    }, {
      "local-name" : "NodeSelector",
      "name" : "k8s.io/api/core/v1.NodeSelector",
      "package" : 6,
      "type" : "Named",
      "underlying" : 230
    }, {
      "fields" : [ {
        "name" : "NodeSelectorTerms",
        "type" : 231
      } ],
      "name" : "struct{NodeSelectorTerms []k8s.io/api/core/v1.NodeSelectorTerm \"json:\\\"nodeSelectorTerms\\\" protobuf:\\\"bytes,1,rep,name=nodeSelectorTerms\\\"\"}",
      "type" : "Struct",
      "underlying" : 230
    }, {
      "elem" : 232,
      "name" : "[]k8s.io/api/core/v1.NodeSelectorTerm",
      "type" : "Slice",
      "underlying" : 231
    }, {
      "local-name" : "NodeSelectorTerm",
      "name" : "k8s.io/api/core/v1.NodeSelectorTerm",
      "package" : 6,
      "type" : "Named",
      "underlying" : 233
    }, {
      "fields" : [ {
        "name" : "MatchExpressions",
        "type" : 234
      }, {
        "name" : "MatchFields",
        "type" : 234
      } ],
      "name" : "struct{MatchExpressions []k8s.io/api/core/v1.NodeSelectorRequirement \"json:\\\"matchExpressions,omitempty\\\" protobuf:\\\"bytes,1,rep,name=matchExpressions\\\"\"; MatchFields []k8s.io/api/core/v1.NodeSelectorRequirement \"json:\\\"matchFields,omitempty\\\" protobuf:\\\"bytes,2,rep,name=matchFields\\\"\"}",
      "type" : "Struct",
      "underlying" : 233
    }, {
      "elem" : 235,
      "name" : "[]k8s.io/api/core/v1.NodeSelectorRequirement",
      "type" : "Slice",
      "underlying" : 234
    }, {
      "local-name" : "NodeSelectorRequirement",
      "name" : "k8s.io/api/core/v1.NodeSelectorRequirement",
      "package" : 6,
      "type" : "Named",
      "underlying" : 236
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 27
      }, {
        "name" : "Operator",
        "type" : 237
      }, {
        "name" : "Values",
        "type" : 53
      } ],
      "name" : "struct{Key string \"json:\\\"key\\\" protobuf:\\\"bytes,1,opt,name=key\\\"\"; Operator k8s.io/api/core/v1.NodeSelectorOperator \"json:\\\"operator\\\" protobuf:\\\"bytes,2,opt,name=operator,casttype=NodeSelectorOperator\\\"\"; Values []string \"json:\\\"values,omitempty\\\" protobuf:\\\"bytes,3,rep,name=values\\\"\"}",
      "type" : "Struct",
      "underlying" : 236
    }, {
      "local-name" : "NodeSelectorOperator",
      "name" : "k8s.io/api/core/v1.NodeSelectorOperator",
      "package" : 6,
      "type" : "Named",
      "underlying" : 27
    }, {
      "local-name" : "Scope",
      "name" : "k8s.io/apimachinery/pkg/conversion.Scope",
      "package" : 7,
      "type" : "Named",
      "underlying" : 239
    }, {
      "methods" : [ {
        "name" : "Convert",
        "type" : 240
      }, {
        "name" : "DefaultConvert",
        "type" : 240
      }, {
        "name" : "DestTag",
        "type" : 251
      }, {
        "name" : "Flags",
        "type" : 254
      }, {
        "name" : "Meta",
        "type" : 256
      }, {
        "name" : "SrcTag",
        "type" : 251
      } ],
      "name" : "interface{Convert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DefaultConvert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DestTag() reflect.StructTag; Flags() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags; Meta() *k8s.io/apimachinery/pkg/conversion.Meta; SrcTag() reflect.StructTag}",
      "type" : "Interface",
      "underlying" : 239
    }, {
      "name" : "func(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error",
      "params" : 241,
      "recv" : 1,
      "results" : 245,
      "type" : "Signature",
      "underlying" : 240,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 242
      }, {
        "name" : "dest",
        "type" : 242
      }, {
        "name" : "flags",
        "type" : 243
      } ],
      "name" : "(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 241
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 242
    }, {
      "local-name" : "FieldMatchingFlags",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "package" : 7,
      "type" : "Named",
      "underlying" : 244
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 244
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 246
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 245
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 247
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 248
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 247
    }, {
      "name" : "func() string",
      "params" : 249,
      "recv" : 0,
      "results" : 250,
      "type" : "Signature",
      "underlying" : 248,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 249
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 27
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 250
    }, {
      "name" : "func() reflect.StructTag",
      "params" : 249,
      "recv" : 2,
      "results" : 252,
      "type" : "Signature",
      "underlying" : 251,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 253
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 252
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 8,
      "type" : "Named",
      "underlying" : 27
    }, {
      "name" : "func() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "params" : 249,
      "recv" : 3,
      "results" : 255,
      "type" : "Signature",
      "underlying" : 254,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 243
      } ],
      "name" : "(k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 255
    }, {
      "name" : "func() *k8s.io/apimachinery/pkg/conversion.Meta",
      "params" : 249,
      "recv" : 4,
      "results" : 257,
      "type" : "Signature",
      "underlying" : 256,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 258
      } ],
      "name" : "(*k8s.io/apimachinery/pkg/conversion.Meta)",
      "type" : "Tuple",
      "underlying" : 257
    }, {
      "elem" : 259,
      "name" : "*k8s.io/apimachinery/pkg/conversion.Meta",
      "type" : "Pointer",
      "underlying" : 258
    }, {
      "local-name" : "Meta",
      "name" : "k8s.io/apimachinery/pkg/conversion.Meta",
      "package" : 7,
      "type" : "Named",
      "underlying" : 260
    }, {
      "fields" : [ {
        "name" : "KeyNameMapping",
        "type" : 261
      }, {
        "name" : "Context",
        "type" : 242
      } ],
      "name" : "struct{KeyNameMapping k8s.io/apimachinery/pkg/conversion.FieldMappingFunc; Context interface{}}",
      "type" : "Struct",
      "underlying" : 260
    }, {
      "local-name" : "FieldMappingFunc",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMappingFunc",
      "package" : 7,
      "type" : "Named",
      "underlying" : 262
    }, {
      "name" : "func(key string, sourceTag reflect.StructTag, destTag reflect.StructTag) (source string, dest string)",
      "params" : 263,
      "recv" : -1,
      "results" : 264,
      "type" : "Signature",
      "underlying" : 262,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 27
      }, {
        "name" : "sourceTag",
        "type" : 253
      }, {
        "name" : "destTag",
        "type" : 253
      } ],
      "name" : "(key string, sourceTag reflect.StructTag, destTag reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 263
    }, {
      "fields" : [ {
        "name" : "source",
        "type" : 27
      }, {
        "name" : "dest",
        "type" : 27
      } ],
      "name" : "(source string, dest string)",
      "type" : "Tuple",
      "underlying" : 264
    }, {
      "elem" : 137,
      "name" : "*k8s.io/api/core/v1.ResourceList",
      "type" : "Pointer",
      "underlying" : 265
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 9,
      "type" : "Basic",
      "underlying" : 266
    }, {
      "elem" : 5,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ResourceList",
      "type" : "Pointer",
      "underlying" : 267
    }, {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.PersistentVolumeSource, out *k8s.io/api/core/v1.PersistentVolumeSource, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 269,
      "recv" : -1,
      "results" : 245,
      "type" : "Signature",
      "underlying" : 268,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 270
      }, {
        "name" : "out",
        "type" : 271
      }, {
        "name" : "s",
        "type" : 238
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.PersistentVolumeSource, out *k8s.io/api/core/v1.PersistentVolumeSource, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 269
    }, {
      "elem" : 30,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 270
    }, {
      "elem" : 140,
      "name" : "*k8s.io/api/core/v1.PersistentVolumeSource",
      "type" : "Pointer",
      "underlying" : 271
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 272
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 273
    }, {
      "elem" : 220,
      "name" : "*[]k8s.io/api/core/v1.PersistentVolumeAccessMode",
      "type" : "Pointer",
      "underlying" : 274
    }, {
      "elem" : 116,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.PersistentVolumeAccessMode",
      "type" : "Pointer",
      "underlying" : 275
    }, {
      "elem" : 53,
      "name" : "*[]string",
      "type" : "Pointer",
      "underlying" : 276
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 246,
      "exported" : false
    }, {
      "name" : "",
      "package" : 7,
      "type" : 238,
      "exported" : false
    }, {
      "name" : "",
      "package" : 7,
      "type" : 238,
      "exported" : false
    }, {
      "name" : "",
      "package" : 7,
      "type" : 238,
      "exported" : false
    }, {
      "name" : "",
      "package" : 7,
      "type" : 238,
      "exported" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 2,
      "exported" : false
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 134,
      "exported" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 238,
      "exported" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 246,
      "exported" : false
    }, {
      "name" : "Capacity",
      "package" : 6,
      "type" : 137,
      "exported" : true
    }, {
      "name" : "Capacity",
      "package" : 1,
      "type" : 5,
      "exported" : true
    }, {
      "name" : "PersistentVolumeSource",
      "package" : 1,
      "type" : 30,
      "exported" : true
    }, {
      "name" : "PersistentVolumeSource",
      "package" : 6,
      "type" : 140,
      "exported" : true
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 246,
      "exported" : false
    }, {
      "name" : "AccessModes",
      "package" : 6,
      "type" : 220,
      "exported" : true
    }, {
      "name" : "AccessModes",
      "package" : 1,
      "type" : 116,
      "exported" : true
    }, {
      "name" : "ClaimRef",
      "package" : 6,
      "type" : 214,
      "exported" : true
    }, {
      "name" : "ClaimRef",
      "package" : 1,
      "type" : 109,
      "exported" : true
    }, {
      "name" : "PersistentVolumeReclaimPolicy",
      "package" : 6,
      "type" : 222,
      "exported" : true
    }, {
      "name" : "PersistentVolumeReclaimPolicy",
      "package" : 1,
      "type" : 118,
      "exported" : true
    }, {
      "name" : "StorageClassName",
      "package" : 6,
      "type" : 27,
      "exported" : true
    }, {
      "name" : "StorageClassName",
      "package" : 1,
      "type" : 27,
      "exported" : true
    }, {
      "name" : "MountOptions",
      "package" : 6,
      "type" : 53,
      "exported" : true
    }, {
      "name" : "MountOptions",
      "package" : 1,
      "type" : 53,
      "exported" : true
    }, {
      "name" : "VolumeMode",
      "package" : 6,
      "type" : 223,
      "exported" : true
    }, {
      "name" : "VolumeMode",
      "package" : 1,
      "type" : 119,
      "exported" : true
    }, {
      "name" : "NodeAffinity",
      "package" : 6,
      "type" : 225,
      "exported" : true
    }, {
      "name" : "NodeAffinity",
      "package" : 1,
      "type" : 121,
      "exported" : true
    } ]
  },
  "go-version" : "1.14.3"
}