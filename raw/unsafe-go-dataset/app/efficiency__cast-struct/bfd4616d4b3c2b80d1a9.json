{
  "usage" : {
    "file" : "zz_generated.conversion.go",
    "label1" : "cast-struct",
    "label2" : "efficiency",
    "line" : "189",
    "module" : "k8s.io/apiserver",
    "pkg" : "k8s.io/apiserver/pkg/apis/audit/v1",
    "project" : "rook/rook",
    "snippet" : "out.ResourceNames = *(*[]string)(unsafe.Pointer(&in.ResourceNames))",
    "version" : "v0.17.2"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 3 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 187,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Group",
            "variable" : 9
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 7,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Group",
            "variable" : 10
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 187,
      "code" : "out.Group = in.Group",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 4 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 188,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Resources",
            "variable" : 11
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "go-type" : 7,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 5,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 5,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                },
                "go-type" : 6,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 37,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 37,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 38,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 4,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 38,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 38,
              "kind" : "expression",
              "target" : {
                "go-type" : 37,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Resources",
                    "variable" : 12
                  },
                  "go-type" : 6,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 188,
      "code" : "out.Resources = *(*[]string)(unsafe.Pointer(&in.Resources))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 5 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 189,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ResourceNames",
            "variable" : 13
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "go-type" : 7,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 5,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 5,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                },
                "go-type" : 6,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 37,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 37,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 38,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 4,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 38,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 38,
              "kind" : "expression",
              "target" : {
                "go-type" : 37,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "ResourceNames",
                    "variable" : 14
                  },
                  "go-type" : 6,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 189,
      "code" : "out.ResourceNames = *(*[]string)(unsafe.Pointer(&in.ResourceNames))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 190,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 39,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 190,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func autoConvert_v1_GroupResources_To_audit_GroupResources(in *GroupResources, out *audit.GroupResources, s conversion.Scope) error {\n\tout.Group = in.Group\n\tout.Resources = *(*[]string)(unsafe.Pointer(&in.Resources))\n\tout.ResourceNames = *(*[]string)(unsafe.Pointer(&in.ResourceNames))\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "autoConvert_v1_GroupResources_To_audit_GroupResources",
      "package" : 0,
      "type" : 0,
      "exported" : false
    } ],
    "line-end" : 191,
    "line-start" : 186,
    "names" : [ "autoConvert_v1_GroupResources_To_audit_GroupResources" ],
    "package" : 0,
    "packages" : [ {
      "name" : "v1",
      "path" : "k8s.io/apiserver/pkg/apis/audit/v1"
    }, {
      "name" : "audit",
      "path" : "k8s.io/apiserver/pkg/apis/audit"
    }, {
      "name" : "conversion",
      "path" : "k8s.io/apimachinery/pkg/conversion"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 5, 6, 7 ],
    "receivers" : [ ],
    "results" : [ 8 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(in *k8s.io/apiserver/pkg/apis/audit/v1.GroupResources, out *k8s.io/apiserver/pkg/apis/audit.GroupResources, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 1,
      "recv" : -1,
      "results" : 17,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 2
      }, {
        "name" : "out",
        "type" : 7
      }, {
        "name" : "s",
        "type" : 10
      } ],
      "name" : "(in *k8s.io/apiserver/pkg/apis/audit/v1.GroupResources, out *k8s.io/apiserver/pkg/apis/audit.GroupResources, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*k8s.io/apiserver/pkg/apis/audit/v1.GroupResources",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "GroupResources",
      "name" : "k8s.io/apiserver/pkg/apis/audit/v1.GroupResources",
      "package" : 0,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "Group",
        "type" : 5
      }, {
        "name" : "Resources",
        "type" : 6
      }, {
        "name" : "ResourceNames",
        "type" : 6
      } ],
      "name" : "struct{Group string \"json:\\\"group,omitempty\\\" protobuf:\\\"bytes,1,opt,name=group\\\"\"; Resources []string \"json:\\\"resources,omitempty\\\" protobuf:\\\"bytes,2,rep,name=resources\\\"\"; ResourceNames []string \"json:\\\"resourceNames,omitempty\\\" protobuf:\\\"bytes,3,rep,name=resourceNames\\\"\"}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 5
    }, {
      "elem" : 5,
      "name" : "[]string",
      "type" : "Slice",
      "underlying" : 6
    }, {
      "elem" : 8,
      "name" : "*k8s.io/apiserver/pkg/apis/audit.GroupResources",
      "type" : "Pointer",
      "underlying" : 7
    }, {
      "local-name" : "GroupResources",
      "name" : "k8s.io/apiserver/pkg/apis/audit.GroupResources",
      "package" : 1,
      "type" : "Named",
      "underlying" : 9
    }, {
      "fields" : [ {
        "name" : "Group",
        "type" : 5
      }, {
        "name" : "Resources",
        "type" : 6
      }, {
        "name" : "ResourceNames",
        "type" : 6
      } ],
      "name" : "struct{Group string; Resources []string; ResourceNames []string}",
      "type" : "Struct",
      "underlying" : 9
    }, {
      "local-name" : "Scope",
      "name" : "k8s.io/apimachinery/pkg/conversion.Scope",
      "package" : 2,
      "type" : "Named",
      "underlying" : 11
    }, {
      "methods" : [ {
        "name" : "Convert",
        "type" : 12
      }, {
        "name" : "DefaultConvert",
        "type" : 12
      }, {
        "name" : "DestTag",
        "type" : 23
      }, {
        "name" : "Flags",
        "type" : 26
      }, {
        "name" : "Meta",
        "type" : 28
      }, {
        "name" : "SrcTag",
        "type" : 23
      } ],
      "name" : "interface{Convert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DefaultConvert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DestTag() reflect.StructTag; Flags() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags; Meta() *k8s.io/apimachinery/pkg/conversion.Meta; SrcTag() reflect.StructTag}",
      "type" : "Interface",
      "underlying" : 11
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error",
      "params" : 13,
      "recv" : 1,
      "results" : 17,
      "type" : "Signature",
      "underlying" : 12,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 14
      }, {
        "name" : "dest",
        "type" : 14
      }, {
        "name" : "flags",
        "type" : 15
      } ],
      "name" : "(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 13
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 14
    }, {
      "local-name" : "FieldMatchingFlags",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "package" : 2,
      "type" : "Named",
      "underlying" : 16
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 16
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 18
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 17
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 19
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 20
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 19
    }, {
      "name" : "(error) func() string",
      "params" : 21,
      "recv" : 0,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 20,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 21
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 5
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 22
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func() reflect.StructTag",
      "params" : 21,
      "recv" : 2,
      "results" : 24,
      "type" : "Signature",
      "underlying" : 23,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 25
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 24
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 3,
      "type" : "Named",
      "underlying" : 5
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "params" : 21,
      "recv" : 3,
      "results" : 27,
      "type" : "Signature",
      "underlying" : 26,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 15
      } ],
      "name" : "(k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 27
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func() *k8s.io/apimachinery/pkg/conversion.Meta",
      "params" : 21,
      "recv" : 4,
      "results" : 29,
      "type" : "Signature",
      "underlying" : 28,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 30
      } ],
      "name" : "(*k8s.io/apimachinery/pkg/conversion.Meta)",
      "type" : "Tuple",
      "underlying" : 29
    }, {
      "elem" : 31,
      "name" : "*k8s.io/apimachinery/pkg/conversion.Meta",
      "type" : "Pointer",
      "underlying" : 30
    }, {
      "local-name" : "Meta",
      "name" : "k8s.io/apimachinery/pkg/conversion.Meta",
      "package" : 2,
      "type" : "Named",
      "underlying" : 32
    }, {
      "fields" : [ {
        "name" : "KeyNameMapping",
        "type" : 33
      }, {
        "name" : "Context",
        "type" : 14
      } ],
      "name" : "struct{KeyNameMapping k8s.io/apimachinery/pkg/conversion.FieldMappingFunc; Context interface{}}",
      "type" : "Struct",
      "underlying" : 32
    }, {
      "local-name" : "FieldMappingFunc",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMappingFunc",
      "package" : 2,
      "type" : "Named",
      "underlying" : 34
    }, {
      "name" : "func(key string, sourceTag reflect.StructTag, destTag reflect.StructTag) (source string, dest string)",
      "params" : 35,
      "recv" : -1,
      "results" : 36,
      "type" : "Signature",
      "underlying" : 34,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 5
      }, {
        "name" : "sourceTag",
        "type" : 25
      }, {
        "name" : "destTag",
        "type" : 25
      } ],
      "name" : "(key string, sourceTag reflect.StructTag, destTag reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 35
    }, {
      "fields" : [ {
        "name" : "source",
        "type" : 5
      }, {
        "name" : "dest",
        "type" : 5
      } ],
      "name" : "(source string, dest string)",
      "type" : "Tuple",
      "underlying" : 36
    }, {
      "elem" : 6,
      "name" : "*[]string",
      "type" : "Pointer",
      "underlying" : 37
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 4,
      "type" : "Basic",
      "underlying" : 38
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 39
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 18,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 18,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Group",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Group",
      "package" : 0,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Resources",
      "package" : 1,
      "type" : 6,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Resources",
      "package" : 0,
      "type" : 6,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ResourceNames",
      "package" : 1,
      "type" : 6,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ResourceNames",
      "package" : 0,
      "type" : 6,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}