{
  "usage" : {
    "file" : "zz_generated.conversion.go",
    "label1" : "cast-struct",
    "label2" : "efficiency",
    "line" : "6074",
    "module" : "k8s.io/kubernetes",
    "pkg" : "k8s.io/kubernetes/pkg/apis/core/v1",
    "project" : "rook/rook",
    "snippet" : "out.NodeSelector = *(*map[string]string)(unsafe.Pointer(&in.NodeSelector))",
    "version" : "v1.17.2"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 5, 7, 6 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3, 9 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 6056,
      "ast" : {
        "condition" : {
          "go-type" : 616,
          "kind" : "expression",
          "left" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Volumes",
              "variable" : 9
            },
            "go-type" : 5,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "in",
                "variable" : 5
              }
            },
            "type" : "selector"
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 617,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 6066,
      "code" : "if in.Volumes != nil {\n\tin, out := &in.Volumes, &out.Volumes\n\t*out = make([]v1.Volume, len(*in))\n\tfor i := range *in {\n\t\tif err := Convert_core_Volume_To_v1_Volume(&(*in)[i], &(*out)[i], s); err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n} else {\n\tout.Volumes = nil\n}",
      "entry" : false,
      "use-vars" : [ 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 12, 11, 7 ],
      "decl-vars" : [ 11, 12 ],
      "line-start" : 6057,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "in"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "out"
          }
        } ],
        "right" : [ {
          "go-type" : 618,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Volumes",
              "variable" : 9
            },
            "go-type" : 5,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "in",
                "variable" : 5
              }
            },
            "type" : "selector"
          },
          "type" : "unary"
        }, {
          "go-type" : 619,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Volumes",
              "variable" : 10
            },
            "go-type" : 318,
            "kind" : "expression",
            "target" : {
              "go-type" : 315,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "out",
                "variable" : 6
              }
            },
            "type" : "selector"
          },
          "type" : "unary"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 6057,
      "code" : "in, out := &in.Volumes, &out.Volumes",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5 ],
      "in-vars" : [ 5, 12, 11, 7, 6 ],
      "exit" : false,
      "out-vars" : [ 5, 12, 11, 7, 6 ],
      "decl-vars" : [ ],
      "line-start" : 6058,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 318,
          "kind" : "expression",
          "target" : {
            "go-type" : 619,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 11
            }
          },
          "type" : "star"
        } ],
        "right" : [ {
          "argument" : {
            "element" : {
              "go-type" : 319,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 7,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 319,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Volume"
              }
            },
            "go-type" : 318,
            "kind" : "type",
            "type" : "slice"
          },
          "go-type" : 318,
          "kind" : "expression",
          "rest" : [ {
            "arguments" : [ {
              "go-type" : 5,
              "kind" : "expression",
              "target" : {
                "go-type" : 618,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 12
                }
              },
              "type" : "star"
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 620,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Builtin",
                "kind" : "ident",
                "value" : "len"
              }
            },
            "go-type" : 595,
            "kind" : "expression",
            "type" : "call"
          } ],
          "type" : "make"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6058,
      "code" : "*out = make([]v1.Volume, len(*in))",
      "entry" : false,
      "use-vars" : [ 12 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 7, 10 ],
      "in-vars" : [ 12, 11, 7, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 11, 7, 6, 5, 12, 13 ],
      "decl-vars" : [ 13 ],
      "line-start" : 6059,
      "ast" : {
        "is-assign" : false,
        "key" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "i"
          }
        },
        "kind" : "statement",
        "target" : {
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 618,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 12
            }
          },
          "type" : "star"
        },
        "type" : "range",
        "value" : null
      },
      "assign-vars" : [ ],
      "line-end" : 6063,
      "code" : "for i := range *in {\n\tif err := Convert_core_Volume_To_v1_Volume(&(*in)[i], &(*out)[i], s); err != nil {\n\t\treturn err\n\t}\n}",
      "entry" : false,
      "use-vars" : [ 12 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 8, 5 ],
      "in-vars" : [ 5, 12, 14, 11, 7, 6 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 12, 14, 11, 7 ],
      "decl-vars" : [ ],
      "line-start" : 6060,
      "ast" : {
        "condition" : {
          "go-type" : 616,
          "kind" : "expression",
          "left" : {
            "go-type" : 597,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 14
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 617,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 6062,
      "code" : "if err := Convert_core_Volume_To_v1_Volume(&(*in)[i], &(*out)[i], s); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 14 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6 ],
      "in-vars" : [ 7, 6, 5, 12, 13, 11 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 12, 14, 11, 7 ],
      "decl-vars" : [ 14 ],
      "line-start" : 6060,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 625,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "go-type" : 6,
              "index" : {
                "go-type" : 595,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "i",
                  "variable" : 13
                }
              },
              "kind" : "expression",
              "target" : {
                "go-type" : 5,
                "kind" : "expression",
                "target" : {
                  "go-type" : 5,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 618,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 12
                    }
                  },
                  "type" : "star"
                },
                "type" : "paren"
              },
              "type" : "index"
            },
            "type" : "unary"
          }, {
            "go-type" : 626,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "go-type" : 319,
              "index" : {
                "go-type" : 595,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "i",
                  "variable" : 13
                }
              },
              "kind" : "expression",
              "target" : {
                "go-type" : 318,
                "kind" : "expression",
                "target" : {
                  "go-type" : 318,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 619,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "out",
                      "variable" : 11
                    }
                  },
                  "type" : "star"
                },
                "type" : "paren"
              },
              "type" : "index"
            },
            "type" : "unary"
          }, {
            "go-type" : 589,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "s",
              "variable" : 7
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 623,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Convert_core_Volume_To_v1_Volume"
            }
          },
          "go-type" : 597,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 6060,
      "code" : "err := Convert_core_Volume_To_v1_Volume(&(*in)[i], &(*out)[i], s)",
      "entry" : false,
      "use-vars" : [ 12, 13, 11, 7 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 14 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 6061,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 597,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 14
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 6061,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 14 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 10 ],
      "in-vars" : [ 5, 7, 6 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 6065,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Volumes",
            "variable" : 10
          },
          "go-type" : 318,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 617,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6065,
      "code" : "out.Volumes = nil",
      "entry" : false,
      "use-vars" : [ 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 11 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 5, 7, 6 ],
      "decl-vars" : [ ],
      "line-start" : 6067,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "InitContainers",
            "variable" : 15
          },
          "go-type" : 443,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 443,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 444,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 7,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 444,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Container"
                  }
                },
                "go-type" : 443,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 627,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 627,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 628,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 10,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 628,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 628,
              "kind" : "expression",
              "target" : {
                "go-type" : 629,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "InitContainers",
                    "variable" : 16
                  },
                  "go-type" : 158,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6067,
      "code" : "out.InitContainers = *(*[]v1.Container)(unsafe.Pointer(&in.InitContainers))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 12 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 5, 7, 6 ],
      "decl-vars" : [ ],
      "line-start" : 6068,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Containers",
            "variable" : 17
          },
          "go-type" : 443,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 443,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 444,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 7,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 444,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Container"
                  }
                },
                "go-type" : 443,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 627,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 627,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 628,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 10,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 628,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 628,
              "kind" : "expression",
              "target" : {
                "go-type" : 629,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Containers",
                    "variable" : 18
                  },
                  "go-type" : 158,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6068,
      "code" : "out.Containers = *(*[]v1.Container)(unsafe.Pointer(&in.Containers))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 13 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 6069,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "EphemeralContainers",
            "variable" : 19
          },
          "go-type" : 522,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 522,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 523,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 7,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 523,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "EphemeralContainer"
                  }
                },
                "go-type" : 522,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 630,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 630,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 628,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 10,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 628,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 628,
              "kind" : "expression",
              "target" : {
                "go-type" : 631,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "EphemeralContainers",
                    "variable" : 20
                  },
                  "go-type" : 241,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6069,
      "code" : "out.EphemeralContainers = *(*[]v1.EphemeralContainer)(unsafe.Pointer(&in.EphemeralContainers))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 14 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 6070,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "RestartPolicy",
            "variable" : 21
          },
          "go-type" : 527,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 527,
            "kind" : "type",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 7,
              "value" : "v1"
            },
            "type" : "identifier",
            "value" : {
              "go-type" : 527,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "RestartPolicy"
            }
          },
          "go-type" : 527,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "RestartPolicy",
              "variable" : 22
            },
            "go-type" : 245,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "in",
                "variable" : 5
              }
            },
            "type" : "selector"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6070,
      "code" : "out.RestartPolicy = v1.RestartPolicy(in.RestartPolicy)",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 15 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 6071,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "TerminationGracePeriodSeconds",
            "variable" : 23
          },
          "go-type" : 238,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 25,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 25,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "int64"
              }
            },
            "go-type" : 238,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 238,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 628,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 10,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 628,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 628,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "TerminationGracePeriodSeconds",
                "variable" : 24
              },
              "go-type" : 238,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6071,
      "code" : "out.TerminationGracePeriodSeconds = (*int64)(unsafe.Pointer(in.TerminationGracePeriodSeconds))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 16 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 6072,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ActiveDeadlineSeconds",
            "variable" : 25
          },
          "go-type" : 238,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 25,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 25,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "int64"
              }
            },
            "go-type" : 238,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 238,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 628,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 10,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 628,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 628,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ActiveDeadlineSeconds",
                "variable" : 26
              },
              "go-type" : 238,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6072,
      "code" : "out.ActiveDeadlineSeconds = (*int64)(unsafe.Pointer(in.ActiveDeadlineSeconds))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 17 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 7, 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6073,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "DNSPolicy",
            "variable" : 27
          },
          "go-type" : 528,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 528,
            "kind" : "type",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 7,
              "value" : "v1"
            },
            "type" : "identifier",
            "value" : {
              "go-type" : 528,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "DNSPolicy"
            }
          },
          "go-type" : 528,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "DNSPolicy",
              "variable" : 28
            },
            "go-type" : 246,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "in",
                "variable" : 5
              }
            },
            "type" : "selector"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6073,
      "code" : "out.DNSPolicy = v1.DNSPolicy(in.DNSPolicy)",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 18 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 6074,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "NodeSelector",
            "variable" : 29
          },
          "go-type" : 85,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 85,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "go-type" : 85,
                "key" : {
                  "go-type" : 8,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 8,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                },
                "kind" : "type",
                "type" : "map",
                "value" : {
                  "go-type" : 8,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 8,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                }
              },
              "go-type" : 632,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 632,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 628,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 10,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 628,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 628,
              "kind" : "expression",
              "target" : {
                "go-type" : 632,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "NodeSelector",
                    "variable" : 30
                  },
                  "go-type" : 85,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6074,
      "code" : "out.NodeSelector = *(*map[string]string)(unsafe.Pointer(&in.NodeSelector))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 19 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 5, 7, 6 ],
      "decl-vars" : [ ],
      "line-start" : 6075,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ServiceAccountName",
            "variable" : 31
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ServiceAccountName",
            "variable" : 32
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6075,
      "code" : "out.ServiceAccountName = in.ServiceAccountName",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 20 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 7, 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6076,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "AutomountServiceAccountToken",
            "variable" : 33
          },
          "go-type" : 58,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 35,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 35,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "bool"
              }
            },
            "go-type" : 58,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 58,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 628,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 10,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 628,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 628,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "AutomountServiceAccountToken",
                "variable" : 34
              },
              "go-type" : 58,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6076,
      "code" : "out.AutomountServiceAccountToken = (*bool)(unsafe.Pointer(in.AutomountServiceAccountToken))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 21 ],
      "in-vars" : [ 7, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 7, 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6077,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "NodeName",
            "variable" : 35
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "NodeName",
            "variable" : 36
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6077,
      "code" : "out.NodeName = in.NodeName",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 22, 27 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 6078,
      "ast" : {
        "condition" : {
          "go-type" : 616,
          "kind" : "expression",
          "left" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "SecurityContext",
              "variable" : 37
            },
            "go-type" : 247,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "in",
                "variable" : 5
              }
            },
            "type" : "selector"
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 617,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 6086,
      "code" : "if in.SecurityContext != nil {\n\tin, out := &in.SecurityContext, &out.SecurityContext\n\t*out = new(v1.PodSecurityContext)\n\tif err := Convert_core_PodSecurityContext_To_v1_PodSecurityContext(*in, *out, s); err != nil {\n\t\treturn err\n\t}\n} else {\n\tout.SecurityContext = nil\n}",
      "entry" : false,
      "use-vars" : [ 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 23 ],
      "in-vars" : [ 5, 7, 6 ],
      "exit" : false,
      "out-vars" : [ 40, 6, 5, 7, 39 ],
      "decl-vars" : [ 39, 40 ],
      "line-start" : 6079,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "in"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "out"
          }
        } ],
        "right" : [ {
          "go-type" : 633,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "SecurityContext",
              "variable" : 37
            },
            "go-type" : 247,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "in",
                "variable" : 5
              }
            },
            "type" : "selector"
          },
          "type" : "unary"
        }, {
          "go-type" : 634,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "SecurityContext",
              "variable" : 38
            },
            "go-type" : 529,
            "kind" : "expression",
            "target" : {
              "go-type" : 315,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "out",
                "variable" : 6
              }
            },
            "type" : "selector"
          },
          "type" : "unary"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 6079,
      "code" : "in, out := &in.SecurityContext, &out.SecurityContext",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 25 ],
      "in-vars" : [ 6, 5, 7, 39, 40 ],
      "exit" : false,
      "out-vars" : [ 39, 40, 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 6080,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 529,
          "kind" : "expression",
          "target" : {
            "go-type" : 634,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 39
            }
          },
          "type" : "star"
        } ],
        "right" : [ {
          "argument" : {
            "go-type" : 530,
            "kind" : "type",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 7,
              "value" : "v1"
            },
            "type" : "identifier",
            "value" : {
              "go-type" : 530,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "PodSecurityContext"
            }
          },
          "go-type" : 529,
          "kind" : "expression",
          "type" : "new"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6080,
      "code" : "*out = new(v1.PodSecurityContext)",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 26, 28 ],
      "in-vars" : [ 6, 5, 41 ],
      "exit" : false,
      "out-vars" : [ 5, 41, 6 ],
      "decl-vars" : [ ],
      "line-start" : 6081,
      "ast" : {
        "condition" : {
          "go-type" : 616,
          "kind" : "expression",
          "left" : {
            "go-type" : 597,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 41
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 617,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 6083,
      "code" : "if err := Convert_core_PodSecurityContext_To_v1_PodSecurityContext(*in, *out, s); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 41 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 24 ],
      "in-vars" : [ 6, 5, 7, 39, 40 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 41 ],
      "decl-vars" : [ 41 ],
      "line-start" : 6081,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 247,
            "kind" : "expression",
            "target" : {
              "go-type" : 633,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "in",
                "variable" : 40
              }
            },
            "type" : "star"
          }, {
            "go-type" : 529,
            "kind" : "expression",
            "target" : {
              "go-type" : 634,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "out",
                "variable" : 39
              }
            },
            "type" : "star"
          }, {
            "go-type" : 589,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "s",
              "variable" : 7
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 635,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 2,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Convert_core_PodSecurityContext_To_v1_PodSecurityContext"
            }
          },
          "go-type" : 597,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 6081,
      "code" : "err := Convert_core_PodSecurityContext_To_v1_PodSecurityContext(*in, *out, s)",
      "entry" : false,
      "use-vars" : [ 40, 39, 7 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 41 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 6082,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 597,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 41
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 6082,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 41 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 28 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6085,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "SecurityContext",
            "variable" : 38
          },
          "go-type" : 529,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 617,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6085,
      "code" : "out.SecurityContext = nil",
      "entry" : false,
      "use-vars" : [ 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 29 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6087,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ImagePullSecrets",
            "variable" : 42
          },
          "go-type" : 534,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 534,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 354,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 7,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 354,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "LocalObjectReference"
                  }
                },
                "go-type" : 534,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 637,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 637,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 628,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 10,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 628,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 628,
              "kind" : "expression",
              "target" : {
                "go-type" : 638,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "ImagePullSecrets",
                    "variable" : 43
                  },
                  "go-type" : 253,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6087,
      "code" : "out.ImagePullSecrets = *(*[]v1.LocalObjectReference)(unsafe.Pointer(&in.ImagePullSecrets))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 30 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6088,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Hostname",
            "variable" : 44
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Hostname",
            "variable" : 45
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6088,
      "code" : "out.Hostname = in.Hostname",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 31 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6089,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Subdomain",
            "variable" : 46
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Subdomain",
            "variable" : 47
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6089,
      "code" : "out.Subdomain = in.Subdomain",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 32 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6090,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Affinity",
            "variable" : 48
          },
          "go-type" : 535,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 536,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 7,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 536,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Affinity"
              }
            },
            "go-type" : 535,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 535,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 628,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 10,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 628,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 628,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Affinity",
                "variable" : 49
              },
              "go-type" : 254,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6090,
      "code" : "out.Affinity = (*v1.Affinity)(unsafe.Pointer(in.Affinity))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 33 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6091,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "SchedulerName",
            "variable" : 50
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "SchedulerName",
            "variable" : 51
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6091,
      "code" : "out.SchedulerName = in.SchedulerName",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 34 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6092,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Tolerations",
            "variable" : 52
          },
          "go-type" : 565,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 565,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 566,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 7,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 566,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Toleration"
                  }
                },
                "go-type" : 565,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 639,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 639,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 628,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 10,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 628,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 628,
              "kind" : "expression",
              "target" : {
                "go-type" : 640,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Tolerations",
                    "variable" : 53
                  },
                  "go-type" : 291,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6092,
      "code" : "out.Tolerations = *(*[]v1.Toleration)(unsafe.Pointer(&in.Tolerations))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 35 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6093,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "HostAliases",
            "variable" : 54
          },
          "go-type" : 570,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 570,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 571,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 7,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 571,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "HostAlias"
                  }
                },
                "go-type" : 570,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 641,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 641,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 628,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 10,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 628,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 628,
              "kind" : "expression",
              "target" : {
                "go-type" : 642,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "HostAliases",
                    "variable" : 55
                  },
                  "go-type" : 296,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6093,
      "code" : "out.HostAliases = *(*[]v1.HostAlias)(unsafe.Pointer(&in.HostAliases))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 36 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6094,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "PriorityClassName",
            "variable" : 56
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "PriorityClassName",
            "variable" : 57
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6094,
      "code" : "out.PriorityClassName = in.PriorityClassName",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 37 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6095,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Priority",
            "variable" : 58
          },
          "go-type" : 57,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 27,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 27,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "int32"
              }
            },
            "go-type" : 57,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 57,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 628,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 10,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 628,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 628,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Priority",
                "variable" : 59
              },
              "go-type" : 57,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6095,
      "code" : "out.Priority = (*int32)(unsafe.Pointer(in.Priority))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 38 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6096,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "PreemptionPolicy",
            "variable" : 60
          },
          "go-type" : 583,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 584,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 7,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 584,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "PreemptionPolicy"
              }
            },
            "go-type" : 583,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 583,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 628,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 10,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 628,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 628,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "PreemptionPolicy",
                "variable" : 61
              },
              "go-type" : 299,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6096,
      "code" : "out.PreemptionPolicy = (*v1.PreemptionPolicy)(unsafe.Pointer(in.PreemptionPolicy))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 39 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6097,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "DNSConfig",
            "variable" : 62
          },
          "go-type" : 573,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 574,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 7,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 574,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "PodDNSConfig"
              }
            },
            "go-type" : 573,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 573,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 628,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 10,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 628,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 628,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "DNSConfig",
                "variable" : 63
              },
              "go-type" : 301,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6097,
      "code" : "out.DNSConfig = (*v1.PodDNSConfig)(unsafe.Pointer(in.DNSConfig))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 40 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6098,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ReadinessGates",
            "variable" : 64
          },
          "go-type" : 579,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 579,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 580,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 7,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 580,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "PodReadinessGate"
                  }
                },
                "go-type" : 579,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 643,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 643,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 628,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 10,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 628,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 628,
              "kind" : "expression",
              "target" : {
                "go-type" : 644,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "ReadinessGates",
                    "variable" : 65
                  },
                  "go-type" : 307,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6098,
      "code" : "out.ReadinessGates = *(*[]v1.PodReadinessGate)(unsafe.Pointer(&in.ReadinessGates))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 41 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6099,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "RuntimeClassName",
            "variable" : 66
          },
          "go-type" : 69,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 8,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 8,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "string"
              }
            },
            "go-type" : 69,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 69,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 628,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 10,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 628,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 628,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "RuntimeClassName",
                "variable" : 67
              },
              "go-type" : 69,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6099,
      "code" : "out.RuntimeClassName = (*string)(unsafe.Pointer(in.RuntimeClassName))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 42 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6100,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Overhead",
            "variable" : 68
          },
          "go-type" : 471,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 471,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "go-type" : 471,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 7,
                  "value" : "v1"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 471,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "ResourceList"
                }
              },
              "go-type" : 645,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 645,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 628,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 10,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 628,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 628,
              "kind" : "expression",
              "target" : {
                "go-type" : 646,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Overhead",
                    "variable" : 69
                  },
                  "go-type" : 186,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6100,
      "code" : "out.Overhead = *(*v1.ResourceList)(unsafe.Pointer(&in.Overhead))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 43 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 6101,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "EnableServiceLinks",
            "variable" : 70
          },
          "go-type" : 58,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 35,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 35,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "bool"
              }
            },
            "go-type" : 58,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 58,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 628,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 10,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 628,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 628,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "EnableServiceLinks",
                "variable" : 71
              },
              "go-type" : 58,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6101,
      "code" : "out.EnableServiceLinks = (*bool)(unsafe.Pointer(in.EnableServiceLinks))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 44 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 6102,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "TopologySpreadConstraints",
            "variable" : 72
          },
          "go-type" : 585,
          "kind" : "expression",
          "target" : {
            "go-type" : 315,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 585,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 586,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 7,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 586,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "TopologySpreadConstraint"
                  }
                },
                "go-type" : 585,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 647,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 647,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 628,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 10,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 628,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 628,
              "kind" : "expression",
              "target" : {
                "go-type" : 648,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "TopologySpreadConstraints",
                    "variable" : 73
                  },
                  "go-type" : 311,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 6102,
      "code" : "out.TopologySpreadConstraints = *(*[]v1.TopologySpreadConstraint)(unsafe.Pointer(&in.TopologySpreadConstraints))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 6103,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 617,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 6103,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func autoConvert_core_PodSpec_To_v1_PodSpec(in *core.PodSpec, out *v1.PodSpec, s conversion.Scope) error {\n\tif in.Volumes != nil {\n\t\tin, out := &in.Volumes, &out.Volumes\n\t\t*out = make([]v1.Volume, len(*in))\n\t\tfor i := range *in {\n\t\t\tif err := Convert_core_Volume_To_v1_Volume(&(*in)[i], &(*out)[i], s); err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t}\n\t} else {\n\t\tout.Volumes = nil\n\t}\n\tout.InitContainers = *(*[]v1.Container)(unsafe.Pointer(&in.InitContainers))\n\tout.Containers = *(*[]v1.Container)(unsafe.Pointer(&in.Containers))\n\tout.EphemeralContainers = *(*[]v1.EphemeralContainer)(unsafe.Pointer(&in.EphemeralContainers))\n\tout.RestartPolicy = v1.RestartPolicy(in.RestartPolicy)\n\tout.TerminationGracePeriodSeconds = (*int64)(unsafe.Pointer(in.TerminationGracePeriodSeconds))\n\tout.ActiveDeadlineSeconds = (*int64)(unsafe.Pointer(in.ActiveDeadlineSeconds))\n\tout.DNSPolicy = v1.DNSPolicy(in.DNSPolicy)\n\tout.NodeSelector = *(*map[string]string)(unsafe.Pointer(&in.NodeSelector))\n\tout.ServiceAccountName = in.ServiceAccountName\n\tout.AutomountServiceAccountToken = (*bool)(unsafe.Pointer(in.AutomountServiceAccountToken))\n\tout.NodeName = in.NodeName\n\tif in.SecurityContext != nil {\n\t\tin, out := &in.SecurityContext, &out.SecurityContext\n\t\t*out = new(v1.PodSecurityContext)\n\t\tif err := Convert_core_PodSecurityContext_To_v1_PodSecurityContext(*in, *out, s); err != nil {\n\t\t\treturn err\n\t\t}\n\t} else {\n\t\tout.SecurityContext = nil\n\t}\n\tout.ImagePullSecrets = *(*[]v1.LocalObjectReference)(unsafe.Pointer(&in.ImagePullSecrets))\n\tout.Hostname = in.Hostname\n\tout.Subdomain = in.Subdomain\n\tout.Affinity = (*v1.Affinity)(unsafe.Pointer(in.Affinity))\n\tout.SchedulerName = in.SchedulerName\n\tout.Tolerations = *(*[]v1.Toleration)(unsafe.Pointer(&in.Tolerations))\n\tout.HostAliases = *(*[]v1.HostAlias)(unsafe.Pointer(&in.HostAliases))\n\tout.PriorityClassName = in.PriorityClassName\n\tout.Priority = (*int32)(unsafe.Pointer(in.Priority))\n\tout.PreemptionPolicy = (*v1.PreemptionPolicy)(unsafe.Pointer(in.PreemptionPolicy))\n\tout.DNSConfig = (*v1.PodDNSConfig)(unsafe.Pointer(in.DNSConfig))\n\tout.ReadinessGates = *(*[]v1.PodReadinessGate)(unsafe.Pointer(&in.ReadinessGates))\n\tout.RuntimeClassName = (*string)(unsafe.Pointer(in.RuntimeClassName))\n\tout.Overhead = *(*v1.ResourceList)(unsafe.Pointer(&in.Overhead))\n\tout.EnableServiceLinks = (*bool)(unsafe.Pointer(in.EnableServiceLinks))\n\tout.TopologySpreadConstraints = *(*[]v1.TopologySpreadConstraint)(unsafe.Pointer(&in.TopologySpreadConstraints))\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "autoConvert_core_PodSpec_To_v1_PodSpec",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "Convert_core_Volume_To_v1_Volume",
      "package" : 0,
      "type" : 623,
      "exported" : true
    }, {
      "name" : "Convert_core_PodSecurityContext_To_v1_PodSecurityContext",
      "package" : 0,
      "type" : 635,
      "exported" : true
    } ],
    "line-end" : 6104,
    "line-start" : 6055,
    "names" : [ "autoConvert_core_PodSpec_To_v1_PodSpec" ],
    "package" : 0,
    "packages" : [ {
      "name" : "v1",
      "path" : "k8s.io/kubernetes/pkg/apis/core/v1"
    }, {
      "name" : "core",
      "path" : "k8s.io/kubernetes/pkg/apis/core"
    }, {
      "name" : "resource",
      "path" : "k8s.io/apimachinery/pkg/api/resource"
    }, {
      "name" : "inf",
      "path" : "gopkg.in/inf.v0"
    }, {
      "name" : "big",
      "path" : "math/big"
    }, {
      "name" : "intstr",
      "path" : "k8s.io/apimachinery/pkg/util/intstr"
    }, {
      "name" : "v1",
      "path" : "k8s.io/apimachinery/pkg/apis/meta/v1"
    }, {
      "name" : "v1",
      "path" : "k8s.io/api/core/v1"
    }, {
      "name" : "conversion",
      "path" : "k8s.io/apimachinery/pkg/conversion"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 5, 6, 7 ],
    "receivers" : [ ],
    "results" : [ 8 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.PodSpec, out *k8s.io/api/core/v1.PodSpec, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 1,
      "recv" : -1,
      "results" : 596,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 2
      }, {
        "name" : "out",
        "type" : 315
      }, {
        "name" : "s",
        "type" : 589
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.PodSpec, out *k8s.io/api/core/v1.PodSpec, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PodSpec",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "PodSpec",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PodSpec",
      "package" : 1,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "Volumes",
        "type" : 5
      }, {
        "name" : "InitContainers",
        "type" : 158
      }, {
        "name" : "Containers",
        "type" : 158
      }, {
        "name" : "EphemeralContainers",
        "type" : 241
      }, {
        "name" : "RestartPolicy",
        "type" : 245
      }, {
        "name" : "TerminationGracePeriodSeconds",
        "type" : 238
      }, {
        "name" : "ActiveDeadlineSeconds",
        "type" : 238
      }, {
        "name" : "DNSPolicy",
        "type" : 246
      }, {
        "name" : "NodeSelector",
        "type" : 85
      }, {
        "name" : "ServiceAccountName",
        "type" : 8
      }, {
        "name" : "AutomountServiceAccountToken",
        "type" : 58
      }, {
        "name" : "NodeName",
        "type" : 8
      }, {
        "name" : "SecurityContext",
        "type" : 247
      }, {
        "name" : "ImagePullSecrets",
        "type" : 253
      }, {
        "name" : "Hostname",
        "type" : 8
      }, {
        "name" : "Subdomain",
        "type" : 8
      }, {
        "name" : "Affinity",
        "type" : 254
      }, {
        "name" : "SchedulerName",
        "type" : 8
      }, {
        "name" : "Tolerations",
        "type" : 291
      }, {
        "name" : "HostAliases",
        "type" : 296
      }, {
        "name" : "PriorityClassName",
        "type" : 8
      }, {
        "name" : "Priority",
        "type" : 57
      }, {
        "name" : "PreemptionPolicy",
        "type" : 299
      }, {
        "name" : "DNSConfig",
        "type" : 301
      }, {
        "name" : "ReadinessGates",
        "type" : 307
      }, {
        "name" : "RuntimeClassName",
        "type" : 69
      }, {
        "name" : "Overhead",
        "type" : 186
      }, {
        "name" : "EnableServiceLinks",
        "type" : 58
      }, {
        "name" : "TopologySpreadConstraints",
        "type" : 311
      } ],
      "name" : "struct{Volumes []k8s.io/kubernetes/pkg/apis/core.Volume; InitContainers []k8s.io/kubernetes/pkg/apis/core.Container; Containers []k8s.io/kubernetes/pkg/apis/core.Container; EphemeralContainers []k8s.io/kubernetes/pkg/apis/core.EphemeralContainer; RestartPolicy k8s.io/kubernetes/pkg/apis/core.RestartPolicy; TerminationGracePeriodSeconds *int64; ActiveDeadlineSeconds *int64; DNSPolicy k8s.io/kubernetes/pkg/apis/core.DNSPolicy; NodeSelector map[string]string; ServiceAccountName string; AutomountServiceAccountToken *bool; NodeName string; SecurityContext *k8s.io/kubernetes/pkg/apis/core.PodSecurityContext; ImagePullSecrets []k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; Hostname string; Subdomain string; Affinity *k8s.io/kubernetes/pkg/apis/core.Affinity; SchedulerName string; Tolerations []k8s.io/kubernetes/pkg/apis/core.Toleration; HostAliases []k8s.io/kubernetes/pkg/apis/core.HostAlias; PriorityClassName string; Priority *int32; PreemptionPolicy *k8s.io/kubernetes/pkg/apis/core.PreemptionPolicy; DNSConfig *k8s.io/kubernetes/pkg/apis/core.PodDNSConfig; ReadinessGates []k8s.io/kubernetes/pkg/apis/core.PodReadinessGate; RuntimeClassName *string; Overhead k8s.io/kubernetes/pkg/apis/core.ResourceList; EnableServiceLinks *bool; TopologySpreadConstraints []k8s.io/kubernetes/pkg/apis/core.TopologySpreadConstraint}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "elem" : 6,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.Volume",
      "type" : "Slice",
      "underlying" : 5
    }, {
      "local-name" : "Volume",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Volume",
      "package" : 1,
      "type" : "Named",
      "underlying" : 7
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "VolumeSource",
        "type" : 9
      } ],
      "name" : "struct{Name string; k8s.io/kubernetes/pkg/apis/core.VolumeSource}",
      "type" : "Struct",
      "underlying" : 7
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 8
    }, {
      "local-name" : "VolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.VolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 10
    }, {
      "fields" : [ {
        "name" : "HostPath",
        "type" : 11
      }, {
        "name" : "EmptyDir",
        "type" : 16
      }, {
        "name" : "GCEPersistentDisk",
        "type" : 42
      }, {
        "name" : "AWSElasticBlockStore",
        "type" : 45
      }, {
        "name" : "GitRepo",
        "type" : 48
      }, {
        "name" : "Secret",
        "type" : 51
      }, {
        "name" : "NFS",
        "type" : 59
      }, {
        "name" : "ISCSI",
        "type" : 62
      }, {
        "name" : "Glusterfs",
        "type" : 70
      }, {
        "name" : "PersistentVolumeClaim",
        "type" : 73
      }, {
        "name" : "RBD",
        "type" : 76
      }, {
        "name" : "Quobyte",
        "type" : 79
      }, {
        "name" : "FlexVolume",
        "type" : 82
      }, {
        "name" : "Cinder",
        "type" : 86
      }, {
        "name" : "CephFS",
        "type" : 89
      }, {
        "name" : "Flocker",
        "type" : 92
      }, {
        "name" : "DownwardAPI",
        "type" : 95
      }, {
        "name" : "FC",
        "type" : 107
      }, {
        "name" : "AzureFile",
        "type" : 110
      }, {
        "name" : "ConfigMap",
        "type" : 113
      }, {
        "name" : "VsphereVolume",
        "type" : 116
      }, {
        "name" : "AzureDisk",
        "type" : 119
      }, {
        "name" : "PhotonPersistentDisk",
        "type" : 126
      }, {
        "name" : "Projected",
        "type" : 129
      }, {
        "name" : "PortworxVolume",
        "type" : 146
      }, {
        "name" : "ScaleIO",
        "type" : 149
      }, {
        "name" : "StorageOS",
        "type" : 152
      }, {
        "name" : "CSI",
        "type" : 155
      } ],
      "name" : "struct{HostPath *k8s.io/kubernetes/pkg/apis/core.HostPathVolumeSource; EmptyDir *k8s.io/kubernetes/pkg/apis/core.EmptyDirVolumeSource; GCEPersistentDisk *k8s.io/kubernetes/pkg/apis/core.GCEPersistentDiskVolumeSource; AWSElasticBlockStore *k8s.io/kubernetes/pkg/apis/core.AWSElasticBlockStoreVolumeSource; GitRepo *k8s.io/kubernetes/pkg/apis/core.GitRepoVolumeSource; Secret *k8s.io/kubernetes/pkg/apis/core.SecretVolumeSource; NFS *k8s.io/kubernetes/pkg/apis/core.NFSVolumeSource; ISCSI *k8s.io/kubernetes/pkg/apis/core.ISCSIVolumeSource; Glusterfs *k8s.io/kubernetes/pkg/apis/core.GlusterfsVolumeSource; PersistentVolumeClaim *k8s.io/kubernetes/pkg/apis/core.PersistentVolumeClaimVolumeSource; RBD *k8s.io/kubernetes/pkg/apis/core.RBDVolumeSource; Quobyte *k8s.io/kubernetes/pkg/apis/core.QuobyteVolumeSource; FlexVolume *k8s.io/kubernetes/pkg/apis/core.FlexVolumeSource; Cinder *k8s.io/kubernetes/pkg/apis/core.CinderVolumeSource; CephFS *k8s.io/kubernetes/pkg/apis/core.CephFSVolumeSource; Flocker *k8s.io/kubernetes/pkg/apis/core.FlockerVolumeSource; DownwardAPI *k8s.io/kubernetes/pkg/apis/core.DownwardAPIVolumeSource; FC *k8s.io/kubernetes/pkg/apis/core.FCVolumeSource; AzureFile *k8s.io/kubernetes/pkg/apis/core.AzureFileVolumeSource; ConfigMap *k8s.io/kubernetes/pkg/apis/core.ConfigMapVolumeSource; VsphereVolume *k8s.io/kubernetes/pkg/apis/core.VsphereVirtualDiskVolumeSource; AzureDisk *k8s.io/kubernetes/pkg/apis/core.AzureDiskVolumeSource; PhotonPersistentDisk *k8s.io/kubernetes/pkg/apis/core.PhotonPersistentDiskVolumeSource; Projected *k8s.io/kubernetes/pkg/apis/core.ProjectedVolumeSource; PortworxVolume *k8s.io/kubernetes/pkg/apis/core.PortworxVolumeSource; ScaleIO *k8s.io/kubernetes/pkg/apis/core.ScaleIOVolumeSource; StorageOS *k8s.io/kubernetes/pkg/apis/core.StorageOSVolumeSource; CSI *k8s.io/kubernetes/pkg/apis/core.CSIVolumeSource}",
      "type" : "Struct",
      "underlying" : 10
    }, {
      "elem" : 12,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.HostPathVolumeSource",
      "type" : "Pointer",
      "underlying" : 11
    }, {
      "local-name" : "HostPathVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.HostPathVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "Type",
        "type" : 14
      } ],
      "name" : "struct{Path string; Type *k8s.io/kubernetes/pkg/apis/core.HostPathType}",
      "type" : "Struct",
      "underlying" : 13
    }, {
      "elem" : 15,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.HostPathType",
      "type" : "Pointer",
      "underlying" : 14
    }, {
      "local-name" : "HostPathType",
      "name" : "k8s.io/kubernetes/pkg/apis/core.HostPathType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 17,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.EmptyDirVolumeSource",
      "type" : "Pointer",
      "underlying" : 16
    }, {
      "local-name" : "EmptyDirVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.EmptyDirVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 18
    }, {
      "fields" : [ {
        "name" : "Medium",
        "type" : 19
      }, {
        "name" : "SizeLimit",
        "type" : 20
      } ],
      "name" : "struct{Medium k8s.io/kubernetes/pkg/apis/core.StorageMedium; SizeLimit *k8s.io/apimachinery/pkg/api/resource.Quantity}",
      "type" : "Struct",
      "underlying" : 18
    }, {
      "local-name" : "StorageMedium",
      "name" : "k8s.io/kubernetes/pkg/apis/core.StorageMedium",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 21,
      "name" : "*k8s.io/apimachinery/pkg/api/resource.Quantity",
      "type" : "Pointer",
      "underlying" : 20
    }, {
      "local-name" : "Quantity",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Quantity",
      "package" : 2,
      "type" : "Named",
      "underlying" : 22
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 23
      }, {
        "name" : "d",
        "type" : 28
      }, {
        "name" : "s",
        "type" : 8
      }, {
        "name" : "Format",
        "type" : 41
      } ],
      "name" : "struct{i k8s.io/apimachinery/pkg/api/resource.int64Amount; d k8s.io/apimachinery/pkg/api/resource.infDecAmount; s string; k8s.io/apimachinery/pkg/api/resource.Format}",
      "type" : "Struct",
      "underlying" : 22
    }, {
      "local-name" : "int64Amount",
      "name" : "k8s.io/apimachinery/pkg/api/resource.int64Amount",
      "package" : 2,
      "type" : "Named",
      "underlying" : 24
    }, {
      "fields" : [ {
        "name" : "value",
        "type" : 25
      }, {
        "name" : "scale",
        "type" : 26
      } ],
      "name" : "struct{value int64; scale k8s.io/apimachinery/pkg/api/resource.Scale}",
      "type" : "Struct",
      "underlying" : 24
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 25
    }, {
      "local-name" : "Scale",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Scale",
      "package" : 2,
      "type" : "Named",
      "underlying" : 27
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 27
    }, {
      "local-name" : "infDecAmount",
      "name" : "k8s.io/apimachinery/pkg/api/resource.infDecAmount",
      "package" : 2,
      "type" : "Named",
      "underlying" : 29
    }, {
      "fields" : [ {
        "name" : "Dec",
        "type" : 30
      } ],
      "name" : "struct{*gopkg.in/inf.v0.Dec}",
      "type" : "Struct",
      "underlying" : 29
    }, {
      "elem" : 31,
      "name" : "*gopkg.in/inf.v0.Dec",
      "type" : "Pointer",
      "underlying" : 30
    }, {
      "local-name" : "Dec",
      "name" : "gopkg.in/inf.v0.Dec",
      "package" : 3,
      "type" : "Named",
      "underlying" : 32
    }, {
      "fields" : [ {
        "name" : "unscaled",
        "type" : 33
      }, {
        "name" : "scale",
        "type" : 40
      } ],
      "name" : "struct{unscaled math/big.Int; scale gopkg.in/inf.v0.Scale}",
      "type" : "Struct",
      "underlying" : 32
    }, {
      "local-name" : "Int",
      "name" : "math/big.Int",
      "package" : 4,
      "type" : "Named",
      "underlying" : 34
    }, {
      "fields" : [ {
        "name" : "neg",
        "type" : 35
      }, {
        "name" : "abs",
        "type" : 36
      } ],
      "name" : "struct{neg bool; abs math/big.nat}",
      "type" : "Struct",
      "underlying" : 34
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 35
    }, {
      "local-name" : "nat",
      "name" : "math/big.nat",
      "package" : 4,
      "type" : "Named",
      "underlying" : 37
    }, {
      "elem" : 38,
      "name" : "[]math/big.Word",
      "type" : "Slice",
      "underlying" : 37
    }, {
      "local-name" : "Word",
      "name" : "math/big.Word",
      "package" : 4,
      "type" : "Named",
      "underlying" : 39
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 39
    }, {
      "local-name" : "Scale",
      "name" : "gopkg.in/inf.v0.Scale",
      "package" : 3,
      "type" : "Named",
      "underlying" : 27
    }, {
      "local-name" : "Format",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Format",
      "package" : 2,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 43,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.GCEPersistentDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 42
    }, {
      "local-name" : "GCEPersistentDiskVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.GCEPersistentDiskVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 44
    }, {
      "fields" : [ {
        "name" : "PDName",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "Partition",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{PDName string; FSType string; Partition int32; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 44
    }, {
      "elem" : 46,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AWSElasticBlockStoreVolumeSource",
      "type" : "Pointer",
      "underlying" : 45
    }, {
      "local-name" : "AWSElasticBlockStoreVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AWSElasticBlockStoreVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 47
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "Partition",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{VolumeID string; FSType string; Partition int32; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 47
    }, {
      "elem" : 49,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.GitRepoVolumeSource",
      "type" : "Pointer",
      "underlying" : 48
    }, {
      "local-name" : "GitRepoVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.GitRepoVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 50
    }, {
      "fields" : [ {
        "name" : "Repository",
        "type" : 8
      }, {
        "name" : "Revision",
        "type" : 8
      }, {
        "name" : "Directory",
        "type" : 8
      } ],
      "name" : "struct{Repository string; Revision string; Directory string}",
      "type" : "Struct",
      "underlying" : 50
    }, {
      "elem" : 52,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.SecretVolumeSource",
      "type" : "Pointer",
      "underlying" : 51
    }, {
      "local-name" : "SecretVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.SecretVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 53
    }, {
      "fields" : [ {
        "name" : "SecretName",
        "type" : 8
      }, {
        "name" : "Items",
        "type" : 54
      }, {
        "name" : "DefaultMode",
        "type" : 57
      }, {
        "name" : "Optional",
        "type" : 58
      } ],
      "name" : "struct{SecretName string; Items []k8s.io/kubernetes/pkg/apis/core.KeyToPath; DefaultMode *int32; Optional *bool}",
      "type" : "Struct",
      "underlying" : 53
    }, {
      "elem" : 55,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.KeyToPath",
      "type" : "Slice",
      "underlying" : 54
    }, {
      "local-name" : "KeyToPath",
      "name" : "k8s.io/kubernetes/pkg/apis/core.KeyToPath",
      "package" : 1,
      "type" : "Named",
      "underlying" : 56
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 8
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "Mode",
        "type" : 57
      } ],
      "name" : "struct{Key string; Path string; Mode *int32}",
      "type" : "Struct",
      "underlying" : 56
    }, {
      "elem" : 27,
      "name" : "*int32",
      "type" : "Pointer",
      "underlying" : 57
    }, {
      "elem" : 35,
      "name" : "*bool",
      "type" : "Pointer",
      "underlying" : 58
    }, {
      "elem" : 60,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.NFSVolumeSource",
      "type" : "Pointer",
      "underlying" : 59
    }, {
      "local-name" : "NFSVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NFSVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 61
    }, {
      "fields" : [ {
        "name" : "Server",
        "type" : 8
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{Server string; Path string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 61
    }, {
      "elem" : 63,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ISCSIVolumeSource",
      "type" : "Pointer",
      "underlying" : 62
    }, {
      "local-name" : "ISCSIVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ISCSIVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 64
    }, {
      "fields" : [ {
        "name" : "TargetPortal",
        "type" : 8
      }, {
        "name" : "IQN",
        "type" : 8
      }, {
        "name" : "Lun",
        "type" : 27
      }, {
        "name" : "ISCSIInterface",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      }, {
        "name" : "Portals",
        "type" : 65
      }, {
        "name" : "DiscoveryCHAPAuth",
        "type" : 35
      }, {
        "name" : "SessionCHAPAuth",
        "type" : 35
      }, {
        "name" : "SecretRef",
        "type" : 66
      }, {
        "name" : "InitiatorName",
        "type" : 69
      } ],
      "name" : "struct{TargetPortal string; IQN string; Lun int32; ISCSIInterface string; FSType string; ReadOnly bool; Portals []string; DiscoveryCHAPAuth bool; SessionCHAPAuth bool; SecretRef *k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; InitiatorName *string}",
      "type" : "Struct",
      "underlying" : 64
    }, {
      "elem" : 8,
      "name" : "[]string",
      "type" : "Slice",
      "underlying" : 65
    }, {
      "elem" : 67,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.LocalObjectReference",
      "type" : "Pointer",
      "underlying" : 66
    }, {
      "local-name" : "LocalObjectReference",
      "name" : "k8s.io/kubernetes/pkg/apis/core.LocalObjectReference",
      "package" : 1,
      "type" : "Named",
      "underlying" : 68
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      } ],
      "name" : "struct{Name string}",
      "type" : "Struct",
      "underlying" : 68
    }, {
      "elem" : 8,
      "name" : "*string",
      "type" : "Pointer",
      "underlying" : 69
    }, {
      "elem" : 71,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.GlusterfsVolumeSource",
      "type" : "Pointer",
      "underlying" : 70
    }, {
      "local-name" : "GlusterfsVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.GlusterfsVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 72
    }, {
      "fields" : [ {
        "name" : "EndpointsName",
        "type" : 8
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{EndpointsName string; Path string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 72
    }, {
      "elem" : 74,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PersistentVolumeClaimVolumeSource",
      "type" : "Pointer",
      "underlying" : 73
    }, {
      "local-name" : "PersistentVolumeClaimVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PersistentVolumeClaimVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 75
    }, {
      "fields" : [ {
        "name" : "ClaimName",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{ClaimName string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 75
    }, {
      "elem" : 77,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.RBDVolumeSource",
      "type" : "Pointer",
      "underlying" : 76
    }, {
      "local-name" : "RBDVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.RBDVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 78
    }, {
      "fields" : [ {
        "name" : "CephMonitors",
        "type" : 65
      }, {
        "name" : "RBDImage",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "RBDPool",
        "type" : 8
      }, {
        "name" : "RadosUser",
        "type" : 8
      }, {
        "name" : "Keyring",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 66
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{CephMonitors []string; RBDImage string; FSType string; RBDPool string; RadosUser string; Keyring string; SecretRef *k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 78
    }, {
      "elem" : 80,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.QuobyteVolumeSource",
      "type" : "Pointer",
      "underlying" : 79
    }, {
      "local-name" : "QuobyteVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.QuobyteVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 81
    }, {
      "fields" : [ {
        "name" : "Registry",
        "type" : 8
      }, {
        "name" : "Volume",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      }, {
        "name" : "User",
        "type" : 8
      }, {
        "name" : "Group",
        "type" : 8
      }, {
        "name" : "Tenant",
        "type" : 8
      } ],
      "name" : "struct{Registry string; Volume string; ReadOnly bool; User string; Group string; Tenant string}",
      "type" : "Struct",
      "underlying" : 81
    }, {
      "elem" : 83,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.FlexVolumeSource",
      "type" : "Pointer",
      "underlying" : 82
    }, {
      "local-name" : "FlexVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.FlexVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 84
    }, {
      "fields" : [ {
        "name" : "Driver",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 66
      }, {
        "name" : "ReadOnly",
        "type" : 35
      }, {
        "name" : "Options",
        "type" : 85
      } ],
      "name" : "struct{Driver string; FSType string; SecretRef *k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; ReadOnly bool; Options map[string]string}",
      "type" : "Struct",
      "underlying" : 84
    }, {
      "elem" : 8,
      "key" : 8,
      "name" : "map[string]string",
      "type" : "Map",
      "underlying" : 85
    }, {
      "elem" : 87,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.CinderVolumeSource",
      "type" : "Pointer",
      "underlying" : 86
    }, {
      "local-name" : "CinderVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.CinderVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 88
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      }, {
        "name" : "SecretRef",
        "type" : 66
      } ],
      "name" : "struct{VolumeID string; FSType string; ReadOnly bool; SecretRef *k8s.io/kubernetes/pkg/apis/core.LocalObjectReference}",
      "type" : "Struct",
      "underlying" : 88
    }, {
      "elem" : 90,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.CephFSVolumeSource",
      "type" : "Pointer",
      "underlying" : 89
    }, {
      "local-name" : "CephFSVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.CephFSVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 91
    }, {
      "fields" : [ {
        "name" : "Monitors",
        "type" : 65
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "User",
        "type" : 8
      }, {
        "name" : "SecretFile",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 66
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{Monitors []string; Path string; User string; SecretFile string; SecretRef *k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 91
    }, {
      "elem" : 93,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.FlockerVolumeSource",
      "type" : "Pointer",
      "underlying" : 92
    }, {
      "local-name" : "FlockerVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.FlockerVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 94
    }, {
      "fields" : [ {
        "name" : "DatasetName",
        "type" : 8
      }, {
        "name" : "DatasetUUID",
        "type" : 8
      } ],
      "name" : "struct{DatasetName string; DatasetUUID string}",
      "type" : "Struct",
      "underlying" : 94
    }, {
      "elem" : 96,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.DownwardAPIVolumeSource",
      "type" : "Pointer",
      "underlying" : 95
    }, {
      "local-name" : "DownwardAPIVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.DownwardAPIVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 97
    }, {
      "fields" : [ {
        "name" : "Items",
        "type" : 98
      }, {
        "name" : "DefaultMode",
        "type" : 57
      } ],
      "name" : "struct{Items []k8s.io/kubernetes/pkg/apis/core.DownwardAPIVolumeFile; DefaultMode *int32}",
      "type" : "Struct",
      "underlying" : 97
    }, {
      "elem" : 99,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.DownwardAPIVolumeFile",
      "type" : "Slice",
      "underlying" : 98
    }, {
      "local-name" : "DownwardAPIVolumeFile",
      "name" : "k8s.io/kubernetes/pkg/apis/core.DownwardAPIVolumeFile",
      "package" : 1,
      "type" : "Named",
      "underlying" : 100
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "FieldRef",
        "type" : 101
      }, {
        "name" : "ResourceFieldRef",
        "type" : 104
      }, {
        "name" : "Mode",
        "type" : 57
      } ],
      "name" : "struct{Path string; FieldRef *k8s.io/kubernetes/pkg/apis/core.ObjectFieldSelector; ResourceFieldRef *k8s.io/kubernetes/pkg/apis/core.ResourceFieldSelector; Mode *int32}",
      "type" : "Struct",
      "underlying" : 100
    }, {
      "elem" : 102,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ObjectFieldSelector",
      "type" : "Pointer",
      "underlying" : 101
    }, {
      "local-name" : "ObjectFieldSelector",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ObjectFieldSelector",
      "package" : 1,
      "type" : "Named",
      "underlying" : 103
    }, {
      "fields" : [ {
        "name" : "APIVersion",
        "type" : 8
      }, {
        "name" : "FieldPath",
        "type" : 8
      } ],
      "name" : "struct{APIVersion string; FieldPath string}",
      "type" : "Struct",
      "underlying" : 103
    }, {
      "elem" : 105,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ResourceFieldSelector",
      "type" : "Pointer",
      "underlying" : 104
    }, {
      "local-name" : "ResourceFieldSelector",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ResourceFieldSelector",
      "package" : 1,
      "type" : "Named",
      "underlying" : 106
    }, {
      "fields" : [ {
        "name" : "ContainerName",
        "type" : 8
      }, {
        "name" : "Resource",
        "type" : 8
      }, {
        "name" : "Divisor",
        "type" : 21
      } ],
      "name" : "struct{ContainerName string; Resource string; Divisor k8s.io/apimachinery/pkg/api/resource.Quantity}",
      "type" : "Struct",
      "underlying" : 106
    }, {
      "elem" : 108,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.FCVolumeSource",
      "type" : "Pointer",
      "underlying" : 107
    }, {
      "local-name" : "FCVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.FCVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 109
    }, {
      "fields" : [ {
        "name" : "TargetWWNs",
        "type" : 65
      }, {
        "name" : "Lun",
        "type" : 57
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      }, {
        "name" : "WWIDs",
        "type" : 65
      } ],
      "name" : "struct{TargetWWNs []string; Lun *int32; FSType string; ReadOnly bool; WWIDs []string}",
      "type" : "Struct",
      "underlying" : 109
    }, {
      "elem" : 111,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AzureFileVolumeSource",
      "type" : "Pointer",
      "underlying" : 110
    }, {
      "local-name" : "AzureFileVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AzureFileVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 112
    }, {
      "fields" : [ {
        "name" : "SecretName",
        "type" : 8
      }, {
        "name" : "ShareName",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{SecretName string; ShareName string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 112
    }, {
      "elem" : 114,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ConfigMapVolumeSource",
      "type" : "Pointer",
      "underlying" : 113
    }, {
      "local-name" : "ConfigMapVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ConfigMapVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 115
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 67
      }, {
        "name" : "Items",
        "type" : 54
      }, {
        "name" : "DefaultMode",
        "type" : 57
      }, {
        "name" : "Optional",
        "type" : 58
      } ],
      "name" : "struct{k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; Items []k8s.io/kubernetes/pkg/apis/core.KeyToPath; DefaultMode *int32; Optional *bool}",
      "type" : "Struct",
      "underlying" : 115
    }, {
      "elem" : 117,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.VsphereVirtualDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 116
    }, {
      "local-name" : "VsphereVirtualDiskVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.VsphereVirtualDiskVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 118
    }, {
      "fields" : [ {
        "name" : "VolumePath",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "StoragePolicyName",
        "type" : 8
      }, {
        "name" : "StoragePolicyID",
        "type" : 8
      } ],
      "name" : "struct{VolumePath string; FSType string; StoragePolicyName string; StoragePolicyID string}",
      "type" : "Struct",
      "underlying" : 118
    }, {
      "elem" : 120,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AzureDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 119
    }, {
      "local-name" : "AzureDiskVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AzureDiskVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 121
    }, {
      "fields" : [ {
        "name" : "DiskName",
        "type" : 8
      }, {
        "name" : "DataDiskURI",
        "type" : 8
      }, {
        "name" : "CachingMode",
        "type" : 122
      }, {
        "name" : "FSType",
        "type" : 69
      }, {
        "name" : "ReadOnly",
        "type" : 58
      }, {
        "name" : "Kind",
        "type" : 124
      } ],
      "name" : "struct{DiskName string; DataDiskURI string; CachingMode *k8s.io/kubernetes/pkg/apis/core.AzureDataDiskCachingMode; FSType *string; ReadOnly *bool; Kind *k8s.io/kubernetes/pkg/apis/core.AzureDataDiskKind}",
      "type" : "Struct",
      "underlying" : 121
    }, {
      "elem" : 123,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AzureDataDiskCachingMode",
      "type" : "Pointer",
      "underlying" : 122
    }, {
      "local-name" : "AzureDataDiskCachingMode",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AzureDataDiskCachingMode",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 125,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AzureDataDiskKind",
      "type" : "Pointer",
      "underlying" : 124
    }, {
      "local-name" : "AzureDataDiskKind",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AzureDataDiskKind",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 127,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PhotonPersistentDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 126
    }, {
      "local-name" : "PhotonPersistentDiskVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PhotonPersistentDiskVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 128
    }, {
      "fields" : [ {
        "name" : "PdID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      } ],
      "name" : "struct{PdID string; FSType string}",
      "type" : "Struct",
      "underlying" : 128
    }, {
      "elem" : 130,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ProjectedVolumeSource",
      "type" : "Pointer",
      "underlying" : 129
    }, {
      "local-name" : "ProjectedVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ProjectedVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 131
    }, {
      "fields" : [ {
        "name" : "Sources",
        "type" : 132
      }, {
        "name" : "DefaultMode",
        "type" : 57
      } ],
      "name" : "struct{Sources []k8s.io/kubernetes/pkg/apis/core.VolumeProjection; DefaultMode *int32}",
      "type" : "Struct",
      "underlying" : 131
    }, {
      "elem" : 133,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.VolumeProjection",
      "type" : "Slice",
      "underlying" : 132
    }, {
      "local-name" : "VolumeProjection",
      "name" : "k8s.io/kubernetes/pkg/apis/core.VolumeProjection",
      "package" : 1,
      "type" : "Named",
      "underlying" : 134
    }, {
      "fields" : [ {
        "name" : "Secret",
        "type" : 135
      }, {
        "name" : "DownwardAPI",
        "type" : 138
      }, {
        "name" : "ConfigMap",
        "type" : 141
      }, {
        "name" : "ServiceAccountToken",
        "type" : 143
      } ],
      "name" : "struct{Secret *k8s.io/kubernetes/pkg/apis/core.SecretProjection; DownwardAPI *k8s.io/kubernetes/pkg/apis/core.DownwardAPIProjection; ConfigMap *k8s.io/kubernetes/pkg/apis/core.ConfigMapProjection; ServiceAccountToken *k8s.io/kubernetes/pkg/apis/core.ServiceAccountTokenProjection}",
      "type" : "Struct",
      "underlying" : 134
    }, {
      "elem" : 136,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.SecretProjection",
      "type" : "Pointer",
      "underlying" : 135
    }, {
      "local-name" : "SecretProjection",
      "name" : "k8s.io/kubernetes/pkg/apis/core.SecretProjection",
      "package" : 1,
      "type" : "Named",
      "underlying" : 137
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 67
      }, {
        "name" : "Items",
        "type" : 54
      }, {
        "name" : "Optional",
        "type" : 58
      } ],
      "name" : "struct{k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; Items []k8s.io/kubernetes/pkg/apis/core.KeyToPath; Optional *bool}",
      "type" : "Struct",
      "underlying" : 137
    }, {
      "elem" : 139,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.DownwardAPIProjection",
      "type" : "Pointer",
      "underlying" : 138
    }, {
      "local-name" : "DownwardAPIProjection",
      "name" : "k8s.io/kubernetes/pkg/apis/core.DownwardAPIProjection",
      "package" : 1,
      "type" : "Named",
      "underlying" : 140
    }, {
      "fields" : [ {
        "name" : "Items",
        "type" : 98
      } ],
      "name" : "struct{Items []k8s.io/kubernetes/pkg/apis/core.DownwardAPIVolumeFile}",
      "type" : "Struct",
      "underlying" : 140
    }, {
      "elem" : 142,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ConfigMapProjection",
      "type" : "Pointer",
      "underlying" : 141
    }, {
      "local-name" : "ConfigMapProjection",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ConfigMapProjection",
      "package" : 1,
      "type" : "Named",
      "underlying" : 137
    }, {
      "elem" : 144,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ServiceAccountTokenProjection",
      "type" : "Pointer",
      "underlying" : 143
    }, {
      "local-name" : "ServiceAccountTokenProjection",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ServiceAccountTokenProjection",
      "package" : 1,
      "type" : "Named",
      "underlying" : 145
    }, {
      "fields" : [ {
        "name" : "Audience",
        "type" : 8
      }, {
        "name" : "ExpirationSeconds",
        "type" : 25
      }, {
        "name" : "Path",
        "type" : 8
      } ],
      "name" : "struct{Audience string; ExpirationSeconds int64; Path string}",
      "type" : "Struct",
      "underlying" : 145
    }, {
      "elem" : 147,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PortworxVolumeSource",
      "type" : "Pointer",
      "underlying" : 146
    }, {
      "local-name" : "PortworxVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PortworxVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 148
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{VolumeID string; FSType string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 148
    }, {
      "elem" : 150,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ScaleIOVolumeSource",
      "type" : "Pointer",
      "underlying" : 149
    }, {
      "local-name" : "ScaleIOVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ScaleIOVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 151
    }, {
      "fields" : [ {
        "name" : "Gateway",
        "type" : 8
      }, {
        "name" : "System",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 66
      }, {
        "name" : "SSLEnabled",
        "type" : 35
      }, {
        "name" : "ProtectionDomain",
        "type" : 8
      }, {
        "name" : "StoragePool",
        "type" : 8
      }, {
        "name" : "StorageMode",
        "type" : 8
      }, {
        "name" : "VolumeName",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{Gateway string; System string; SecretRef *k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; SSLEnabled bool; ProtectionDomain string; StoragePool string; StorageMode string; VolumeName string; FSType string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 151
    }, {
      "elem" : 153,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.StorageOSVolumeSource",
      "type" : "Pointer",
      "underlying" : 152
    }, {
      "local-name" : "StorageOSVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.StorageOSVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 154
    }, {
      "fields" : [ {
        "name" : "VolumeName",
        "type" : 8
      }, {
        "name" : "VolumeNamespace",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      }, {
        "name" : "SecretRef",
        "type" : 66
      } ],
      "name" : "struct{VolumeName string; VolumeNamespace string; FSType string; ReadOnly bool; SecretRef *k8s.io/kubernetes/pkg/apis/core.LocalObjectReference}",
      "type" : "Struct",
      "underlying" : 154
    }, {
      "elem" : 156,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.CSIVolumeSource",
      "type" : "Pointer",
      "underlying" : 155
    }, {
      "local-name" : "CSIVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.CSIVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 157
    }, {
      "fields" : [ {
        "name" : "Driver",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 58
      }, {
        "name" : "FSType",
        "type" : 69
      }, {
        "name" : "VolumeAttributes",
        "type" : 85
      }, {
        "name" : "NodePublishSecretRef",
        "type" : 66
      } ],
      "name" : "struct{Driver string; ReadOnly *bool; FSType *string; VolumeAttributes map[string]string; NodePublishSecretRef *k8s.io/kubernetes/pkg/apis/core.LocalObjectReference}",
      "type" : "Struct",
      "underlying" : 157
    }, {
      "elem" : 159,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.Container",
      "type" : "Slice",
      "underlying" : 158
    }, {
      "local-name" : "Container",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Container",
      "package" : 1,
      "type" : "Named",
      "underlying" : 160
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "Image",
        "type" : 8
      }, {
        "name" : "Command",
        "type" : 65
      }, {
        "name" : "Args",
        "type" : 65
      }, {
        "name" : "WorkingDir",
        "type" : 8
      }, {
        "name" : "Ports",
        "type" : 161
      }, {
        "name" : "EnvFrom",
        "type" : 165
      }, {
        "name" : "Env",
        "type" : 173
      }, {
        "name" : "Resources",
        "type" : 184
      }, {
        "name" : "VolumeMounts",
        "type" : 189
      }, {
        "name" : "VolumeDevices",
        "type" : 194
      }, {
        "name" : "LivenessProbe",
        "type" : 197
      }, {
        "name" : "ReadinessProbe",
        "type" : 197
      }, {
        "name" : "StartupProbe",
        "type" : 197
      }, {
        "name" : "Lifecycle",
        "type" : 218
      }, {
        "name" : "TerminationMessagePath",
        "type" : 8
      }, {
        "name" : "TerminationMessagePolicy",
        "type" : 222
      }, {
        "name" : "ImagePullPolicy",
        "type" : 223
      }, {
        "name" : "SecurityContext",
        "type" : 224
      }, {
        "name" : "Stdin",
        "type" : 35
      }, {
        "name" : "StdinOnce",
        "type" : 35
      }, {
        "name" : "TTY",
        "type" : 35
      } ],
      "name" : "struct{Name string; Image string; Command []string; Args []string; WorkingDir string; Ports []k8s.io/kubernetes/pkg/apis/core.ContainerPort; EnvFrom []k8s.io/kubernetes/pkg/apis/core.EnvFromSource; Env []k8s.io/kubernetes/pkg/apis/core.EnvVar; Resources k8s.io/kubernetes/pkg/apis/core.ResourceRequirements; VolumeMounts []k8s.io/kubernetes/pkg/apis/core.VolumeMount; VolumeDevices []k8s.io/kubernetes/pkg/apis/core.VolumeDevice; LivenessProbe *k8s.io/kubernetes/pkg/apis/core.Probe; ReadinessProbe *k8s.io/kubernetes/pkg/apis/core.Probe; StartupProbe *k8s.io/kubernetes/pkg/apis/core.Probe; Lifecycle *k8s.io/kubernetes/pkg/apis/core.Lifecycle; TerminationMessagePath string; TerminationMessagePolicy k8s.io/kubernetes/pkg/apis/core.TerminationMessagePolicy; ImagePullPolicy k8s.io/kubernetes/pkg/apis/core.PullPolicy; SecurityContext *k8s.io/kubernetes/pkg/apis/core.SecurityContext; Stdin bool; StdinOnce bool; TTY bool}",
      "type" : "Struct",
      "underlying" : 160
    }, {
      "elem" : 162,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.ContainerPort",
      "type" : "Slice",
      "underlying" : 161
    }, {
      "local-name" : "ContainerPort",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ContainerPort",
      "package" : 1,
      "type" : "Named",
      "underlying" : 163
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "HostPort",
        "type" : 27
      }, {
        "name" : "ContainerPort",
        "type" : 27
      }, {
        "name" : "Protocol",
        "type" : 164
      }, {
        "name" : "HostIP",
        "type" : 8
      } ],
      "name" : "struct{Name string; HostPort int32; ContainerPort int32; Protocol k8s.io/kubernetes/pkg/apis/core.Protocol; HostIP string}",
      "type" : "Struct",
      "underlying" : 163
    }, {
      "local-name" : "Protocol",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Protocol",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 166,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.EnvFromSource",
      "type" : "Slice",
      "underlying" : 165
    }, {
      "local-name" : "EnvFromSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.EnvFromSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 167
    }, {
      "fields" : [ {
        "name" : "Prefix",
        "type" : 8
      }, {
        "name" : "ConfigMapRef",
        "type" : 168
      }, {
        "name" : "SecretRef",
        "type" : 171
      } ],
      "name" : "struct{Prefix string; ConfigMapRef *k8s.io/kubernetes/pkg/apis/core.ConfigMapEnvSource; SecretRef *k8s.io/kubernetes/pkg/apis/core.SecretEnvSource}",
      "type" : "Struct",
      "underlying" : 167
    }, {
      "elem" : 169,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ConfigMapEnvSource",
      "type" : "Pointer",
      "underlying" : 168
    }, {
      "local-name" : "ConfigMapEnvSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ConfigMapEnvSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 170
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 67
      }, {
        "name" : "Optional",
        "type" : 58
      } ],
      "name" : "struct{k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; Optional *bool}",
      "type" : "Struct",
      "underlying" : 170
    }, {
      "elem" : 172,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.SecretEnvSource",
      "type" : "Pointer",
      "underlying" : 171
    }, {
      "local-name" : "SecretEnvSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.SecretEnvSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 170
    }, {
      "elem" : 174,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.EnvVar",
      "type" : "Slice",
      "underlying" : 173
    }, {
      "local-name" : "EnvVar",
      "name" : "k8s.io/kubernetes/pkg/apis/core.EnvVar",
      "package" : 1,
      "type" : "Named",
      "underlying" : 175
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "Value",
        "type" : 8
      }, {
        "name" : "ValueFrom",
        "type" : 176
      } ],
      "name" : "struct{Name string; Value string; ValueFrom *k8s.io/kubernetes/pkg/apis/core.EnvVarSource}",
      "type" : "Struct",
      "underlying" : 175
    }, {
      "elem" : 177,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.EnvVarSource",
      "type" : "Pointer",
      "underlying" : 176
    }, {
      "local-name" : "EnvVarSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.EnvVarSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 178
    }, {
      "fields" : [ {
        "name" : "FieldRef",
        "type" : 101
      }, {
        "name" : "ResourceFieldRef",
        "type" : 104
      }, {
        "name" : "ConfigMapKeyRef",
        "type" : 179
      }, {
        "name" : "SecretKeyRef",
        "type" : 182
      } ],
      "name" : "struct{FieldRef *k8s.io/kubernetes/pkg/apis/core.ObjectFieldSelector; ResourceFieldRef *k8s.io/kubernetes/pkg/apis/core.ResourceFieldSelector; ConfigMapKeyRef *k8s.io/kubernetes/pkg/apis/core.ConfigMapKeySelector; SecretKeyRef *k8s.io/kubernetes/pkg/apis/core.SecretKeySelector}",
      "type" : "Struct",
      "underlying" : 178
    }, {
      "elem" : 180,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ConfigMapKeySelector",
      "type" : "Pointer",
      "underlying" : 179
    }, {
      "local-name" : "ConfigMapKeySelector",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ConfigMapKeySelector",
      "package" : 1,
      "type" : "Named",
      "underlying" : 181
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 67
      }, {
        "name" : "Key",
        "type" : 8
      }, {
        "name" : "Optional",
        "type" : 58
      } ],
      "name" : "struct{k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; Key string; Optional *bool}",
      "type" : "Struct",
      "underlying" : 181
    }, {
      "elem" : 183,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.SecretKeySelector",
      "type" : "Pointer",
      "underlying" : 182
    }, {
      "local-name" : "SecretKeySelector",
      "name" : "k8s.io/kubernetes/pkg/apis/core.SecretKeySelector",
      "package" : 1,
      "type" : "Named",
      "underlying" : 181
    }, {
      "local-name" : "ResourceRequirements",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ResourceRequirements",
      "package" : 1,
      "type" : "Named",
      "underlying" : 185
    }, {
      "fields" : [ {
        "name" : "Limits",
        "type" : 186
      }, {
        "name" : "Requests",
        "type" : 186
      } ],
      "name" : "struct{Limits k8s.io/kubernetes/pkg/apis/core.ResourceList; Requests k8s.io/kubernetes/pkg/apis/core.ResourceList}",
      "type" : "Struct",
      "underlying" : 185
    }, {
      "local-name" : "ResourceList",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ResourceList",
      "package" : 1,
      "type" : "Named",
      "underlying" : 187
    }, {
      "elem" : 21,
      "key" : 188,
      "name" : "map[k8s.io/kubernetes/pkg/apis/core.ResourceName]k8s.io/apimachinery/pkg/api/resource.Quantity",
      "type" : "Map",
      "underlying" : 187
    }, {
      "local-name" : "ResourceName",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ResourceName",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 190,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.VolumeMount",
      "type" : "Slice",
      "underlying" : 189
    }, {
      "local-name" : "VolumeMount",
      "name" : "k8s.io/kubernetes/pkg/apis/core.VolumeMount",
      "package" : 1,
      "type" : "Named",
      "underlying" : 191
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      }, {
        "name" : "MountPath",
        "type" : 8
      }, {
        "name" : "SubPath",
        "type" : 8
      }, {
        "name" : "MountPropagation",
        "type" : 192
      }, {
        "name" : "SubPathExpr",
        "type" : 8
      } ],
      "name" : "struct{Name string; ReadOnly bool; MountPath string; SubPath string; MountPropagation *k8s.io/kubernetes/pkg/apis/core.MountPropagationMode; SubPathExpr string}",
      "type" : "Struct",
      "underlying" : 191
    }, {
      "elem" : 193,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.MountPropagationMode",
      "type" : "Pointer",
      "underlying" : 192
    }, {
      "local-name" : "MountPropagationMode",
      "name" : "k8s.io/kubernetes/pkg/apis/core.MountPropagationMode",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 195,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.VolumeDevice",
      "type" : "Slice",
      "underlying" : 194
    }, {
      "local-name" : "VolumeDevice",
      "name" : "k8s.io/kubernetes/pkg/apis/core.VolumeDevice",
      "package" : 1,
      "type" : "Named",
      "underlying" : 196
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "DevicePath",
        "type" : 8
      } ],
      "name" : "struct{Name string; DevicePath string}",
      "type" : "Struct",
      "underlying" : 196
    }, {
      "elem" : 198,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.Probe",
      "type" : "Pointer",
      "underlying" : 197
    }, {
      "local-name" : "Probe",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Probe",
      "package" : 1,
      "type" : "Named",
      "underlying" : 199
    }, {
      "fields" : [ {
        "name" : "Handler",
        "type" : 200
      }, {
        "name" : "InitialDelaySeconds",
        "type" : 27
      }, {
        "name" : "TimeoutSeconds",
        "type" : 27
      }, {
        "name" : "PeriodSeconds",
        "type" : 27
      }, {
        "name" : "SuccessThreshold",
        "type" : 27
      }, {
        "name" : "FailureThreshold",
        "type" : 27
      } ],
      "name" : "struct{k8s.io/kubernetes/pkg/apis/core.Handler; InitialDelaySeconds int32; TimeoutSeconds int32; PeriodSeconds int32; SuccessThreshold int32; FailureThreshold int32}",
      "type" : "Struct",
      "underlying" : 199
    }, {
      "local-name" : "Handler",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Handler",
      "package" : 1,
      "type" : "Named",
      "underlying" : 201
    }, {
      "fields" : [ {
        "name" : "Exec",
        "type" : 202
      }, {
        "name" : "HTTPGet",
        "type" : 205
      }, {
        "name" : "TCPSocket",
        "type" : 215
      } ],
      "name" : "struct{Exec *k8s.io/kubernetes/pkg/apis/core.ExecAction; HTTPGet *k8s.io/kubernetes/pkg/apis/core.HTTPGetAction; TCPSocket *k8s.io/kubernetes/pkg/apis/core.TCPSocketAction}",
      "type" : "Struct",
      "underlying" : 201
    }, {
      "elem" : 203,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ExecAction",
      "type" : "Pointer",
      "underlying" : 202
    }, {
      "local-name" : "ExecAction",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ExecAction",
      "package" : 1,
      "type" : "Named",
      "underlying" : 204
    }, {
      "fields" : [ {
        "name" : "Command",
        "type" : 65
      } ],
      "name" : "struct{Command []string}",
      "type" : "Struct",
      "underlying" : 204
    }, {
      "elem" : 206,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.HTTPGetAction",
      "type" : "Pointer",
      "underlying" : 205
    }, {
      "local-name" : "HTTPGetAction",
      "name" : "k8s.io/kubernetes/pkg/apis/core.HTTPGetAction",
      "package" : 1,
      "type" : "Named",
      "underlying" : 207
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "Port",
        "type" : 208
      }, {
        "name" : "Host",
        "type" : 8
      }, {
        "name" : "Scheme",
        "type" : 211
      }, {
        "name" : "HTTPHeaders",
        "type" : 212
      } ],
      "name" : "struct{Path string; Port k8s.io/apimachinery/pkg/util/intstr.IntOrString; Host string; Scheme k8s.io/kubernetes/pkg/apis/core.URIScheme; HTTPHeaders []k8s.io/kubernetes/pkg/apis/core.HTTPHeader}",
      "type" : "Struct",
      "underlying" : 207
    }, {
      "local-name" : "IntOrString",
      "name" : "k8s.io/apimachinery/pkg/util/intstr.IntOrString",
      "package" : 5,
      "type" : "Named",
      "underlying" : 209
    }, {
      "fields" : [ {
        "name" : "Type",
        "type" : 210
      }, {
        "name" : "IntVal",
        "type" : 27
      }, {
        "name" : "StrVal",
        "type" : 8
      } ],
      "name" : "struct{Type k8s.io/apimachinery/pkg/util/intstr.Type \"protobuf:\\\"varint,1,opt,name=type,casttype=Type\\\"\"; IntVal int32 \"protobuf:\\\"varint,2,opt,name=intVal\\\"\"; StrVal string \"protobuf:\\\"bytes,3,opt,name=strVal\\\"\"}",
      "type" : "Struct",
      "underlying" : 209
    }, {
      "local-name" : "Type",
      "name" : "k8s.io/apimachinery/pkg/util/intstr.Type",
      "package" : 5,
      "type" : "Named",
      "underlying" : 25
    }, {
      "local-name" : "URIScheme",
      "name" : "k8s.io/kubernetes/pkg/apis/core.URIScheme",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 213,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.HTTPHeader",
      "type" : "Slice",
      "underlying" : 212
    }, {
      "local-name" : "HTTPHeader",
      "name" : "k8s.io/kubernetes/pkg/apis/core.HTTPHeader",
      "package" : 1,
      "type" : "Named",
      "underlying" : 214
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "Value",
        "type" : 8
      } ],
      "name" : "struct{Name string; Value string}",
      "type" : "Struct",
      "underlying" : 214
    }, {
      "elem" : 216,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.TCPSocketAction",
      "type" : "Pointer",
      "underlying" : 215
    }, {
      "local-name" : "TCPSocketAction",
      "name" : "k8s.io/kubernetes/pkg/apis/core.TCPSocketAction",
      "package" : 1,
      "type" : "Named",
      "underlying" : 217
    }, {
      "fields" : [ {
        "name" : "Port",
        "type" : 208
      }, {
        "name" : "Host",
        "type" : 8
      } ],
      "name" : "struct{Port k8s.io/apimachinery/pkg/util/intstr.IntOrString; Host string}",
      "type" : "Struct",
      "underlying" : 217
    }, {
      "elem" : 219,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.Lifecycle",
      "type" : "Pointer",
      "underlying" : 218
    }, {
      "local-name" : "Lifecycle",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Lifecycle",
      "package" : 1,
      "type" : "Named",
      "underlying" : 220
    }, {
      "fields" : [ {
        "name" : "PostStart",
        "type" : 221
      }, {
        "name" : "PreStop",
        "type" : 221
      } ],
      "name" : "struct{PostStart *k8s.io/kubernetes/pkg/apis/core.Handler; PreStop *k8s.io/kubernetes/pkg/apis/core.Handler}",
      "type" : "Struct",
      "underlying" : 220
    }, {
      "elem" : 200,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.Handler",
      "type" : "Pointer",
      "underlying" : 221
    }, {
      "local-name" : "TerminationMessagePolicy",
      "name" : "k8s.io/kubernetes/pkg/apis/core.TerminationMessagePolicy",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "local-name" : "PullPolicy",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PullPolicy",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 225,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.SecurityContext",
      "type" : "Pointer",
      "underlying" : 224
    }, {
      "local-name" : "SecurityContext",
      "name" : "k8s.io/kubernetes/pkg/apis/core.SecurityContext",
      "package" : 1,
      "type" : "Named",
      "underlying" : 226
    }, {
      "fields" : [ {
        "name" : "Capabilities",
        "type" : 227
      }, {
        "name" : "Privileged",
        "type" : 58
      }, {
        "name" : "SELinuxOptions",
        "type" : 232
      }, {
        "name" : "WindowsOptions",
        "type" : 235
      }, {
        "name" : "RunAsUser",
        "type" : 238
      }, {
        "name" : "RunAsGroup",
        "type" : 238
      }, {
        "name" : "RunAsNonRoot",
        "type" : 58
      }, {
        "name" : "ReadOnlyRootFilesystem",
        "type" : 58
      }, {
        "name" : "AllowPrivilegeEscalation",
        "type" : 58
      }, {
        "name" : "ProcMount",
        "type" : 239
      } ],
      "name" : "struct{Capabilities *k8s.io/kubernetes/pkg/apis/core.Capabilities; Privileged *bool; SELinuxOptions *k8s.io/kubernetes/pkg/apis/core.SELinuxOptions; WindowsOptions *k8s.io/kubernetes/pkg/apis/core.WindowsSecurityContextOptions; RunAsUser *int64; RunAsGroup *int64; RunAsNonRoot *bool; ReadOnlyRootFilesystem *bool; AllowPrivilegeEscalation *bool; ProcMount *k8s.io/kubernetes/pkg/apis/core.ProcMountType}",
      "type" : "Struct",
      "underlying" : 226
    }, {
      "elem" : 228,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.Capabilities",
      "type" : "Pointer",
      "underlying" : 227
    }, {
      "local-name" : "Capabilities",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Capabilities",
      "package" : 1,
      "type" : "Named",
      "underlying" : 229
    }, {
      "fields" : [ {
        "name" : "Add",
        "type" : 230
      }, {
        "name" : "Drop",
        "type" : 230
      } ],
      "name" : "struct{Add []k8s.io/kubernetes/pkg/apis/core.Capability; Drop []k8s.io/kubernetes/pkg/apis/core.Capability}",
      "type" : "Struct",
      "underlying" : 229
    }, {
      "elem" : 231,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.Capability",
      "type" : "Slice",
      "underlying" : 230
    }, {
      "local-name" : "Capability",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Capability",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 233,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.SELinuxOptions",
      "type" : "Pointer",
      "underlying" : 232
    }, {
      "local-name" : "SELinuxOptions",
      "name" : "k8s.io/kubernetes/pkg/apis/core.SELinuxOptions",
      "package" : 1,
      "type" : "Named",
      "underlying" : 234
    }, {
      "fields" : [ {
        "name" : "User",
        "type" : 8
      }, {
        "name" : "Role",
        "type" : 8
      }, {
        "name" : "Type",
        "type" : 8
      }, {
        "name" : "Level",
        "type" : 8
      } ],
      "name" : "struct{User string; Role string; Type string; Level string}",
      "type" : "Struct",
      "underlying" : 234
    }, {
      "elem" : 236,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.WindowsSecurityContextOptions",
      "type" : "Pointer",
      "underlying" : 235
    }, {
      "local-name" : "WindowsSecurityContextOptions",
      "name" : "k8s.io/kubernetes/pkg/apis/core.WindowsSecurityContextOptions",
      "package" : 1,
      "type" : "Named",
      "underlying" : 237
    }, {
      "fields" : [ {
        "name" : "GMSACredentialSpecName",
        "type" : 69
      }, {
        "name" : "GMSACredentialSpec",
        "type" : 69
      }, {
        "name" : "RunAsUserName",
        "type" : 69
      } ],
      "name" : "struct{GMSACredentialSpecName *string; GMSACredentialSpec *string; RunAsUserName *string}",
      "type" : "Struct",
      "underlying" : 237
    }, {
      "elem" : 25,
      "name" : "*int64",
      "type" : "Pointer",
      "underlying" : 238
    }, {
      "elem" : 240,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ProcMountType",
      "type" : "Pointer",
      "underlying" : 239
    }, {
      "local-name" : "ProcMountType",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ProcMountType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 242,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.EphemeralContainer",
      "type" : "Slice",
      "underlying" : 241
    }, {
      "local-name" : "EphemeralContainer",
      "name" : "k8s.io/kubernetes/pkg/apis/core.EphemeralContainer",
      "package" : 1,
      "type" : "Named",
      "underlying" : 243
    }, {
      "fields" : [ {
        "name" : "EphemeralContainerCommon",
        "type" : 244
      }, {
        "name" : "TargetContainerName",
        "type" : 8
      } ],
      "name" : "struct{k8s.io/kubernetes/pkg/apis/core.EphemeralContainerCommon; TargetContainerName string}",
      "type" : "Struct",
      "underlying" : 243
    }, {
      "local-name" : "EphemeralContainerCommon",
      "name" : "k8s.io/kubernetes/pkg/apis/core.EphemeralContainerCommon",
      "package" : 1,
      "type" : "Named",
      "underlying" : 160
    }, {
      "local-name" : "RestartPolicy",
      "name" : "k8s.io/kubernetes/pkg/apis/core.RestartPolicy",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "local-name" : "DNSPolicy",
      "name" : "k8s.io/kubernetes/pkg/apis/core.DNSPolicy",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 248,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PodSecurityContext",
      "type" : "Pointer",
      "underlying" : 247
    }, {
      "local-name" : "PodSecurityContext",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PodSecurityContext",
      "package" : 1,
      "type" : "Named",
      "underlying" : 249
    }, {
      "fields" : [ {
        "name" : "HostNetwork",
        "type" : 35
      }, {
        "name" : "HostPID",
        "type" : 35
      }, {
        "name" : "HostIPC",
        "type" : 35
      }, {
        "name" : "ShareProcessNamespace",
        "type" : 58
      }, {
        "name" : "SELinuxOptions",
        "type" : 232
      }, {
        "name" : "WindowsOptions",
        "type" : 235
      }, {
        "name" : "RunAsUser",
        "type" : 238
      }, {
        "name" : "RunAsGroup",
        "type" : 238
      }, {
        "name" : "RunAsNonRoot",
        "type" : 58
      }, {
        "name" : "SupplementalGroups",
        "type" : 250
      }, {
        "name" : "FSGroup",
        "type" : 238
      }, {
        "name" : "Sysctls",
        "type" : 251
      } ],
      "name" : "struct{HostNetwork bool; HostPID bool; HostIPC bool; ShareProcessNamespace *bool; SELinuxOptions *k8s.io/kubernetes/pkg/apis/core.SELinuxOptions; WindowsOptions *k8s.io/kubernetes/pkg/apis/core.WindowsSecurityContextOptions; RunAsUser *int64; RunAsGroup *int64; RunAsNonRoot *bool; SupplementalGroups []int64; FSGroup *int64; Sysctls []k8s.io/kubernetes/pkg/apis/core.Sysctl}",
      "type" : "Struct",
      "underlying" : 249
    }, {
      "elem" : 25,
      "name" : "[]int64",
      "type" : "Slice",
      "underlying" : 250
    }, {
      "elem" : 252,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.Sysctl",
      "type" : "Slice",
      "underlying" : 251
    }, {
      "local-name" : "Sysctl",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Sysctl",
      "package" : 1,
      "type" : "Named",
      "underlying" : 214
    }, {
      "elem" : 67,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.LocalObjectReference",
      "type" : "Slice",
      "underlying" : 253
    }, {
      "elem" : 255,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.Affinity",
      "type" : "Pointer",
      "underlying" : 254
    }, {
      "local-name" : "Affinity",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Affinity",
      "package" : 1,
      "type" : "Named",
      "underlying" : 256
    }, {
      "fields" : [ {
        "name" : "NodeAffinity",
        "type" : 257
      }, {
        "name" : "PodAffinity",
        "type" : 273
      }, {
        "name" : "PodAntiAffinity",
        "type" : 289
      } ],
      "name" : "struct{NodeAffinity *k8s.io/kubernetes/pkg/apis/core.NodeAffinity; PodAffinity *k8s.io/kubernetes/pkg/apis/core.PodAffinity; PodAntiAffinity *k8s.io/kubernetes/pkg/apis/core.PodAntiAffinity}",
      "type" : "Struct",
      "underlying" : 256
    }, {
      "elem" : 258,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.NodeAffinity",
      "type" : "Pointer",
      "underlying" : 257
    }, {
      "local-name" : "NodeAffinity",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeAffinity",
      "package" : 1,
      "type" : "Named",
      "underlying" : 259
    }, {
      "fields" : [ {
        "name" : "RequiredDuringSchedulingIgnoredDuringExecution",
        "type" : 260
      }, {
        "name" : "PreferredDuringSchedulingIgnoredDuringExecution",
        "type" : 270
      } ],
      "name" : "struct{RequiredDuringSchedulingIgnoredDuringExecution *k8s.io/kubernetes/pkg/apis/core.NodeSelector; PreferredDuringSchedulingIgnoredDuringExecution []k8s.io/kubernetes/pkg/apis/core.PreferredSchedulingTerm}",
      "type" : "Struct",
      "underlying" : 259
    }, {
      "elem" : 261,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.NodeSelector",
      "type" : "Pointer",
      "underlying" : 260
    }, {
      "local-name" : "NodeSelector",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeSelector",
      "package" : 1,
      "type" : "Named",
      "underlying" : 262
    }, {
      "fields" : [ {
        "name" : "NodeSelectorTerms",
        "type" : 263
      } ],
      "name" : "struct{NodeSelectorTerms []k8s.io/kubernetes/pkg/apis/core.NodeSelectorTerm}",
      "type" : "Struct",
      "underlying" : 262
    }, {
      "elem" : 264,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.NodeSelectorTerm",
      "type" : "Slice",
      "underlying" : 263
    }, {
      "local-name" : "NodeSelectorTerm",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeSelectorTerm",
      "package" : 1,
      "type" : "Named",
      "underlying" : 265
    }, {
      "fields" : [ {
        "name" : "MatchExpressions",
        "type" : 266
      }, {
        "name" : "MatchFields",
        "type" : 266
      } ],
      "name" : "struct{MatchExpressions []k8s.io/kubernetes/pkg/apis/core.NodeSelectorRequirement; MatchFields []k8s.io/kubernetes/pkg/apis/core.NodeSelectorRequirement}",
      "type" : "Struct",
      "underlying" : 265
    }, {
      "elem" : 267,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.NodeSelectorRequirement",
      "type" : "Slice",
      "underlying" : 266
    }, {
      "local-name" : "NodeSelectorRequirement",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeSelectorRequirement",
      "package" : 1,
      "type" : "Named",
      "underlying" : 268
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 8
      }, {
        "name" : "Operator",
        "type" : 269
      }, {
        "name" : "Values",
        "type" : 65
      } ],
      "name" : "struct{Key string; Operator k8s.io/kubernetes/pkg/apis/core.NodeSelectorOperator; Values []string}",
      "type" : "Struct",
      "underlying" : 268
    }, {
      "local-name" : "NodeSelectorOperator",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeSelectorOperator",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 271,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.PreferredSchedulingTerm",
      "type" : "Slice",
      "underlying" : 270
    }, {
      "local-name" : "PreferredSchedulingTerm",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PreferredSchedulingTerm",
      "package" : 1,
      "type" : "Named",
      "underlying" : 272
    }, {
      "fields" : [ {
        "name" : "Weight",
        "type" : 27
      }, {
        "name" : "Preference",
        "type" : 264
      } ],
      "name" : "struct{Weight int32; Preference k8s.io/kubernetes/pkg/apis/core.NodeSelectorTerm}",
      "type" : "Struct",
      "underlying" : 272
    }, {
      "elem" : 274,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PodAffinity",
      "type" : "Pointer",
      "underlying" : 273
    }, {
      "local-name" : "PodAffinity",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PodAffinity",
      "package" : 1,
      "type" : "Named",
      "underlying" : 275
    }, {
      "fields" : [ {
        "name" : "RequiredDuringSchedulingIgnoredDuringExecution",
        "type" : 276
      }, {
        "name" : "PreferredDuringSchedulingIgnoredDuringExecution",
        "type" : 286
      } ],
      "name" : "struct{RequiredDuringSchedulingIgnoredDuringExecution []k8s.io/kubernetes/pkg/apis/core.PodAffinityTerm; PreferredDuringSchedulingIgnoredDuringExecution []k8s.io/kubernetes/pkg/apis/core.WeightedPodAffinityTerm}",
      "type" : "Struct",
      "underlying" : 275
    }, {
      "elem" : 277,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.PodAffinityTerm",
      "type" : "Slice",
      "underlying" : 276
    }, {
      "local-name" : "PodAffinityTerm",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PodAffinityTerm",
      "package" : 1,
      "type" : "Named",
      "underlying" : 278
    }, {
      "fields" : [ {
        "name" : "LabelSelector",
        "type" : 279
      }, {
        "name" : "Namespaces",
        "type" : 65
      }, {
        "name" : "TopologyKey",
        "type" : 8
      } ],
      "name" : "struct{LabelSelector *k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector; Namespaces []string; TopologyKey string}",
      "type" : "Struct",
      "underlying" : 278
    }, {
      "elem" : 280,
      "name" : "*k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector",
      "type" : "Pointer",
      "underlying" : 279
    }, {
      "local-name" : "LabelSelector",
      "name" : "k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector",
      "package" : 6,
      "type" : "Named",
      "underlying" : 281
    }, {
      "fields" : [ {
        "name" : "MatchLabels",
        "type" : 85
      }, {
        "name" : "MatchExpressions",
        "type" : 282
      } ],
      "name" : "struct{MatchLabels map[string]string \"json:\\\"matchLabels,omitempty\\\" protobuf:\\\"bytes,1,rep,name=matchLabels\\\"\"; MatchExpressions []k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelectorRequirement \"json:\\\"matchExpressions,omitempty\\\" protobuf:\\\"bytes,2,rep,name=matchExpressions\\\"\"}",
      "type" : "Struct",
      "underlying" : 281
    }, {
      "elem" : 283,
      "name" : "[]k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelectorRequirement",
      "type" : "Slice",
      "underlying" : 282
    }, {
      "local-name" : "LabelSelectorRequirement",
      "name" : "k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelectorRequirement",
      "package" : 6,
      "type" : "Named",
      "underlying" : 284
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 8
      }, {
        "name" : "Operator",
        "type" : 285
      }, {
        "name" : "Values",
        "type" : 65
      } ],
      "name" : "struct{Key string \"json:\\\"key\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"key\\\" protobuf:\\\"bytes,1,opt,name=key\\\"\"; Operator k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelectorOperator \"json:\\\"operator\\\" protobuf:\\\"bytes,2,opt,name=operator,casttype=LabelSelectorOperator\\\"\"; Values []string \"json:\\\"values,omitempty\\\" protobuf:\\\"bytes,3,rep,name=values\\\"\"}",
      "type" : "Struct",
      "underlying" : 284
    }, {
      "local-name" : "LabelSelectorOperator",
      "name" : "k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelectorOperator",
      "package" : 6,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 287,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.WeightedPodAffinityTerm",
      "type" : "Slice",
      "underlying" : 286
    }, {
      "local-name" : "WeightedPodAffinityTerm",
      "name" : "k8s.io/kubernetes/pkg/apis/core.WeightedPodAffinityTerm",
      "package" : 1,
      "type" : "Named",
      "underlying" : 288
    }, {
      "fields" : [ {
        "name" : "Weight",
        "type" : 27
      }, {
        "name" : "PodAffinityTerm",
        "type" : 277
      } ],
      "name" : "struct{Weight int32; PodAffinityTerm k8s.io/kubernetes/pkg/apis/core.PodAffinityTerm}",
      "type" : "Struct",
      "underlying" : 288
    }, {
      "elem" : 290,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PodAntiAffinity",
      "type" : "Pointer",
      "underlying" : 289
    }, {
      "local-name" : "PodAntiAffinity",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PodAntiAffinity",
      "package" : 1,
      "type" : "Named",
      "underlying" : 275
    }, {
      "elem" : 292,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.Toleration",
      "type" : "Slice",
      "underlying" : 291
    }, {
      "local-name" : "Toleration",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Toleration",
      "package" : 1,
      "type" : "Named",
      "underlying" : 293
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 8
      }, {
        "name" : "Operator",
        "type" : 294
      }, {
        "name" : "Value",
        "type" : 8
      }, {
        "name" : "Effect",
        "type" : 295
      }, {
        "name" : "TolerationSeconds",
        "type" : 238
      } ],
      "name" : "struct{Key string; Operator k8s.io/kubernetes/pkg/apis/core.TolerationOperator; Value string; Effect k8s.io/kubernetes/pkg/apis/core.TaintEffect; TolerationSeconds *int64}",
      "type" : "Struct",
      "underlying" : 293
    }, {
      "local-name" : "TolerationOperator",
      "name" : "k8s.io/kubernetes/pkg/apis/core.TolerationOperator",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "local-name" : "TaintEffect",
      "name" : "k8s.io/kubernetes/pkg/apis/core.TaintEffect",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 297,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.HostAlias",
      "type" : "Slice",
      "underlying" : 296
    }, {
      "local-name" : "HostAlias",
      "name" : "k8s.io/kubernetes/pkg/apis/core.HostAlias",
      "package" : 1,
      "type" : "Named",
      "underlying" : 298
    }, {
      "fields" : [ {
        "name" : "IP",
        "type" : 8
      }, {
        "name" : "Hostnames",
        "type" : 65
      } ],
      "name" : "struct{IP string; Hostnames []string}",
      "type" : "Struct",
      "underlying" : 298
    }, {
      "elem" : 300,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PreemptionPolicy",
      "type" : "Pointer",
      "underlying" : 299
    }, {
      "local-name" : "PreemptionPolicy",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PreemptionPolicy",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 302,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PodDNSConfig",
      "type" : "Pointer",
      "underlying" : 301
    }, {
      "local-name" : "PodDNSConfig",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PodDNSConfig",
      "package" : 1,
      "type" : "Named",
      "underlying" : 303
    }, {
      "fields" : [ {
        "name" : "Nameservers",
        "type" : 65
      }, {
        "name" : "Searches",
        "type" : 65
      }, {
        "name" : "Options",
        "type" : 304
      } ],
      "name" : "struct{Nameservers []string; Searches []string; Options []k8s.io/kubernetes/pkg/apis/core.PodDNSConfigOption}",
      "type" : "Struct",
      "underlying" : 303
    }, {
      "elem" : 305,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.PodDNSConfigOption",
      "type" : "Slice",
      "underlying" : 304
    }, {
      "local-name" : "PodDNSConfigOption",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PodDNSConfigOption",
      "package" : 1,
      "type" : "Named",
      "underlying" : 306
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "Value",
        "type" : 69
      } ],
      "name" : "struct{Name string; Value *string}",
      "type" : "Struct",
      "underlying" : 306
    }, {
      "elem" : 308,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.PodReadinessGate",
      "type" : "Slice",
      "underlying" : 307
    }, {
      "local-name" : "PodReadinessGate",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PodReadinessGate",
      "package" : 1,
      "type" : "Named",
      "underlying" : 309
    }, {
      "fields" : [ {
        "name" : "ConditionType",
        "type" : 310
      } ],
      "name" : "struct{ConditionType k8s.io/kubernetes/pkg/apis/core.PodConditionType}",
      "type" : "Struct",
      "underlying" : 309
    }, {
      "local-name" : "PodConditionType",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PodConditionType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 312,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.TopologySpreadConstraint",
      "type" : "Slice",
      "underlying" : 311
    }, {
      "local-name" : "TopologySpreadConstraint",
      "name" : "k8s.io/kubernetes/pkg/apis/core.TopologySpreadConstraint",
      "package" : 1,
      "type" : "Named",
      "underlying" : 313
    }, {
      "fields" : [ {
        "name" : "MaxSkew",
        "type" : 27
      }, {
        "name" : "TopologyKey",
        "type" : 8
      }, {
        "name" : "WhenUnsatisfiable",
        "type" : 314
      }, {
        "name" : "LabelSelector",
        "type" : 279
      } ],
      "name" : "struct{MaxSkew int32; TopologyKey string; WhenUnsatisfiable k8s.io/kubernetes/pkg/apis/core.UnsatisfiableConstraintAction; LabelSelector *k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector}",
      "type" : "Struct",
      "underlying" : 313
    }, {
      "local-name" : "UnsatisfiableConstraintAction",
      "name" : "k8s.io/kubernetes/pkg/apis/core.UnsatisfiableConstraintAction",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 316,
      "name" : "*k8s.io/api/core/v1.PodSpec",
      "type" : "Pointer",
      "underlying" : 315
    }, {
      "local-name" : "PodSpec",
      "name" : "k8s.io/api/core/v1.PodSpec",
      "package" : 7,
      "type" : "Named",
      "underlying" : 317
    }, {
      "fields" : [ {
        "name" : "Volumes",
        "type" : 318
      }, {
        "name" : "InitContainers",
        "type" : 443
      }, {
        "name" : "Containers",
        "type" : 443
      }, {
        "name" : "EphemeralContainers",
        "type" : 522
      }, {
        "name" : "RestartPolicy",
        "type" : 527
      }, {
        "name" : "TerminationGracePeriodSeconds",
        "type" : 238
      }, {
        "name" : "ActiveDeadlineSeconds",
        "type" : 238
      }, {
        "name" : "DNSPolicy",
        "type" : 528
      }, {
        "name" : "NodeSelector",
        "type" : 85
      }, {
        "name" : "ServiceAccountName",
        "type" : 8
      }, {
        "name" : "DeprecatedServiceAccount",
        "type" : 8
      }, {
        "name" : "AutomountServiceAccountToken",
        "type" : 58
      }, {
        "name" : "NodeName",
        "type" : 8
      }, {
        "name" : "HostNetwork",
        "type" : 35
      }, {
        "name" : "HostPID",
        "type" : 35
      }, {
        "name" : "HostIPC",
        "type" : 35
      }, {
        "name" : "ShareProcessNamespace",
        "type" : 58
      }, {
        "name" : "SecurityContext",
        "type" : 529
      }, {
        "name" : "ImagePullSecrets",
        "type" : 534
      }, {
        "name" : "Hostname",
        "type" : 8
      }, {
        "name" : "Subdomain",
        "type" : 8
      }, {
        "name" : "Affinity",
        "type" : 535
      }, {
        "name" : "SchedulerName",
        "type" : 8
      }, {
        "name" : "Tolerations",
        "type" : 565
      }, {
        "name" : "HostAliases",
        "type" : 570
      }, {
        "name" : "PriorityClassName",
        "type" : 8
      }, {
        "name" : "Priority",
        "type" : 57
      }, {
        "name" : "DNSConfig",
        "type" : 573
      }, {
        "name" : "ReadinessGates",
        "type" : 579
      }, {
        "name" : "RuntimeClassName",
        "type" : 69
      }, {
        "name" : "EnableServiceLinks",
        "type" : 58
      }, {
        "name" : "PreemptionPolicy",
        "type" : 583
      }, {
        "name" : "Overhead",
        "type" : 471
      }, {
        "name" : "TopologySpreadConstraints",
        "type" : 585
      } ],
      "name" : "struct{Volumes []k8s.io/api/core/v1.Volume \"json:\\\"volumes,omitempty\\\" patchStrategy:\\\"merge,retainKeys\\\" patchMergeKey:\\\"name\\\" protobuf:\\\"bytes,1,rep,name=volumes\\\"\"; InitContainers []k8s.io/api/core/v1.Container \"json:\\\"initContainers,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"name\\\" protobuf:\\\"bytes,20,rep,name=initContainers\\\"\"; Containers []k8s.io/api/core/v1.Container \"json:\\\"containers\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"name\\\" protobuf:\\\"bytes,2,rep,name=containers\\\"\"; EphemeralContainers []k8s.io/api/core/v1.EphemeralContainer \"json:\\\"ephemeralContainers,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"name\\\" protobuf:\\\"bytes,34,rep,name=ephemeralContainers\\\"\"; RestartPolicy k8s.io/api/core/v1.RestartPolicy \"json:\\\"restartPolicy,omitempty\\\" protobuf:\\\"bytes,3,opt,name=restartPolicy,casttype=RestartPolicy\\\"\"; TerminationGracePeriodSeconds *int64 \"json:\\\"terminationGracePeriodSeconds,omitempty\\\" protobuf:\\\"varint,4,opt,name=terminationGracePeriodSeconds\\\"\"; ActiveDeadlineSeconds *int64 \"json:\\\"activeDeadlineSeconds,omitempty\\\" protobuf:\\\"varint,5,opt,name=activeDeadlineSeconds\\\"\"; DNSPolicy k8s.io/api/core/v1.DNSPolicy \"json:\\\"dnsPolicy,omitempty\\\" protobuf:\\\"bytes,6,opt,name=dnsPolicy,casttype=DNSPolicy\\\"\"; NodeSelector map[string]string \"json:\\\"nodeSelector,omitempty\\\" protobuf:\\\"bytes,7,rep,name=nodeSelector\\\"\"; ServiceAccountName string \"json:\\\"serviceAccountName,omitempty\\\" protobuf:\\\"bytes,8,opt,name=serviceAccountName\\\"\"; DeprecatedServiceAccount string \"json:\\\"serviceAccount,omitempty\\\" protobuf:\\\"bytes,9,opt,name=serviceAccount\\\"\"; AutomountServiceAccountToken *bool \"json:\\\"automountServiceAccountToken,omitempty\\\" protobuf:\\\"varint,21,opt,name=automountServiceAccountToken\\\"\"; NodeName string \"json:\\\"nodeName,omitempty\\\" protobuf:\\\"bytes,10,opt,name=nodeName\\\"\"; HostNetwork bool \"json:\\\"hostNetwork,omitempty\\\" protobuf:\\\"varint,11,opt,name=hostNetwork\\\"\"; HostPID bool \"json:\\\"hostPID,omitempty\\\" protobuf:\\\"varint,12,opt,name=hostPID\\\"\"; HostIPC bool \"json:\\\"hostIPC,omitempty\\\" protobuf:\\\"varint,13,opt,name=hostIPC\\\"\"; ShareProcessNamespace *bool \"json:\\\"shareProcessNamespace,omitempty\\\" protobuf:\\\"varint,27,opt,name=shareProcessNamespace\\\"\"; SecurityContext *k8s.io/api/core/v1.PodSecurityContext \"json:\\\"securityContext,omitempty\\\" protobuf:\\\"bytes,14,opt,name=securityContext\\\"\"; ImagePullSecrets []k8s.io/api/core/v1.LocalObjectReference \"json:\\\"imagePullSecrets,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"name\\\" protobuf:\\\"bytes,15,rep,name=imagePullSecrets\\\"\"; Hostname string \"json:\\\"hostname,omitempty\\\" protobuf:\\\"bytes,16,opt,name=hostname\\\"\"; Subdomain string \"json:\\\"subdomain,omitempty\\\" protobuf:\\\"bytes,17,opt,name=subdomain\\\"\"; Affinity *k8s.io/api/core/v1.Affinity \"json:\\\"affinity,omitempty\\\" protobuf:\\\"bytes,18,opt,name=affinity\\\"\"; SchedulerName string \"json:\\\"schedulerName,omitempty\\\" protobuf:\\\"bytes,19,opt,name=schedulerName\\\"\"; Tolerations []k8s.io/api/core/v1.Toleration \"json:\\\"tolerations,omitempty\\\" protobuf:\\\"bytes,22,opt,name=tolerations\\\"\"; HostAliases []k8s.io/api/core/v1.HostAlias \"json:\\\"hostAliases,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"ip\\\" protobuf:\\\"bytes,23,rep,name=hostAliases\\\"\"; PriorityClassName string \"json:\\\"priorityClassName,omitempty\\\" protobuf:\\\"bytes,24,opt,name=priorityClassName\\\"\"; Priority *int32 \"json:\\\"priority,omitempty\\\" protobuf:\\\"bytes,25,opt,name=priority\\\"\"; DNSConfig *k8s.io/api/core/v1.PodDNSConfig \"json:\\\"dnsConfig,omitempty\\\" protobuf:\\\"bytes,26,opt,name=dnsConfig\\\"\"; ReadinessGates []k8s.io/api/core/v1.PodReadinessGate \"json:\\\"readinessGates,omitempty\\\" protobuf:\\\"bytes,28,opt,name=readinessGates\\\"\"; RuntimeClassName *string \"json:\\\"runtimeClassName,omitempty\\\" protobuf:\\\"bytes,29,opt,name=runtimeClassName\\\"\"; EnableServiceLinks *bool \"json:\\\"enableServiceLinks,omitempty\\\" protobuf:\\\"varint,30,opt,name=enableServiceLinks\\\"\"; PreemptionPolicy *k8s.io/api/core/v1.PreemptionPolicy \"json:\\\"preemptionPolicy,omitempty\\\" protobuf:\\\"bytes,31,opt,name=preemptionPolicy\\\"\"; Overhead k8s.io/api/core/v1.ResourceList \"json:\\\"overhead,omitempty\\\" protobuf:\\\"bytes,32,opt,name=overhead\\\"\"; TopologySpreadConstraints []k8s.io/api/core/v1.TopologySpreadConstraint \"json:\\\"topologySpreadConstraints,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"topologyKey\\\" protobuf:\\\"bytes,33,opt,name=topologySpreadConstraints\\\"\"}",
      "type" : "Struct",
      "underlying" : 317
    }, {
      "elem" : 319,
      "name" : "[]k8s.io/api/core/v1.Volume",
      "type" : "Slice",
      "underlying" : 318
    }, {
      "local-name" : "Volume",
      "name" : "k8s.io/api/core/v1.Volume",
      "package" : 7,
      "type" : "Named",
      "underlying" : 320
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "VolumeSource",
        "type" : 321
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; k8s.io/api/core/v1.VolumeSource \"json:\\\",inline\\\" protobuf:\\\"bytes,2,opt,name=volumeSource\\\"\"}",
      "type" : "Struct",
      "underlying" : 320
    }, {
      "local-name" : "VolumeSource",
      "name" : "k8s.io/api/core/v1.VolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 322
    }, {
      "fields" : [ {
        "name" : "HostPath",
        "type" : 323
      }, {
        "name" : "EmptyDir",
        "type" : 328
      }, {
        "name" : "GCEPersistentDisk",
        "type" : 332
      }, {
        "name" : "AWSElasticBlockStore",
        "type" : 335
      }, {
        "name" : "GitRepo",
        "type" : 338
      }, {
        "name" : "Secret",
        "type" : 341
      }, {
        "name" : "NFS",
        "type" : 347
      }, {
        "name" : "ISCSI",
        "type" : 350
      }, {
        "name" : "Glusterfs",
        "type" : 356
      }, {
        "name" : "PersistentVolumeClaim",
        "type" : 359
      }, {
        "name" : "RBD",
        "type" : 362
      }, {
        "name" : "FlexVolume",
        "type" : 365
      }, {
        "name" : "Cinder",
        "type" : 368
      }, {
        "name" : "CephFS",
        "type" : 371
      }, {
        "name" : "Flocker",
        "type" : 374
      }, {
        "name" : "DownwardAPI",
        "type" : 377
      }, {
        "name" : "FC",
        "type" : 389
      }, {
        "name" : "AzureFile",
        "type" : 392
      }, {
        "name" : "ConfigMap",
        "type" : 395
      }, {
        "name" : "VsphereVolume",
        "type" : 398
      }, {
        "name" : "Quobyte",
        "type" : 401
      }, {
        "name" : "AzureDisk",
        "type" : 404
      }, {
        "name" : "PhotonPersistentDisk",
        "type" : 411
      }, {
        "name" : "Projected",
        "type" : 414
      }, {
        "name" : "PortworxVolume",
        "type" : 431
      }, {
        "name" : "ScaleIO",
        "type" : 434
      }, {
        "name" : "StorageOS",
        "type" : 437
      }, {
        "name" : "CSI",
        "type" : 440
      } ],
      "name" : "struct{HostPath *k8s.io/api/core/v1.HostPathVolumeSource \"json:\\\"hostPath,omitempty\\\" protobuf:\\\"bytes,1,opt,name=hostPath\\\"\"; EmptyDir *k8s.io/api/core/v1.EmptyDirVolumeSource \"json:\\\"emptyDir,omitempty\\\" protobuf:\\\"bytes,2,opt,name=emptyDir\\\"\"; GCEPersistentDisk *k8s.io/api/core/v1.GCEPersistentDiskVolumeSource \"json:\\\"gcePersistentDisk,omitempty\\\" protobuf:\\\"bytes,3,opt,name=gcePersistentDisk\\\"\"; AWSElasticBlockStore *k8s.io/api/core/v1.AWSElasticBlockStoreVolumeSource \"json:\\\"awsElasticBlockStore,omitempty\\\" protobuf:\\\"bytes,4,opt,name=awsElasticBlockStore\\\"\"; GitRepo *k8s.io/api/core/v1.GitRepoVolumeSource \"json:\\\"gitRepo,omitempty\\\" protobuf:\\\"bytes,5,opt,name=gitRepo\\\"\"; Secret *k8s.io/api/core/v1.SecretVolumeSource \"json:\\\"secret,omitempty\\\" protobuf:\\\"bytes,6,opt,name=secret\\\"\"; NFS *k8s.io/api/core/v1.NFSVolumeSource \"json:\\\"nfs,omitempty\\\" protobuf:\\\"bytes,7,opt,name=nfs\\\"\"; ISCSI *k8s.io/api/core/v1.ISCSIVolumeSource \"json:\\\"iscsi,omitempty\\\" protobuf:\\\"bytes,8,opt,name=iscsi\\\"\"; Glusterfs *k8s.io/api/core/v1.GlusterfsVolumeSource \"json:\\\"glusterfs,omitempty\\\" protobuf:\\\"bytes,9,opt,name=glusterfs\\\"\"; PersistentVolumeClaim *k8s.io/api/core/v1.PersistentVolumeClaimVolumeSource \"json:\\\"persistentVolumeClaim,omitempty\\\" protobuf:\\\"bytes,10,opt,name=persistentVolumeClaim\\\"\"; RBD *k8s.io/api/core/v1.RBDVolumeSource \"json:\\\"rbd,omitempty\\\" protobuf:\\\"bytes,11,opt,name=rbd\\\"\"; FlexVolume *k8s.io/api/core/v1.FlexVolumeSource \"json:\\\"flexVolume,omitempty\\\" protobuf:\\\"bytes,12,opt,name=flexVolume\\\"\"; Cinder *k8s.io/api/core/v1.CinderVolumeSource \"json:\\\"cinder,omitempty\\\" protobuf:\\\"bytes,13,opt,name=cinder\\\"\"; CephFS *k8s.io/api/core/v1.CephFSVolumeSource \"json:\\\"cephfs,omitempty\\\" protobuf:\\\"bytes,14,opt,name=cephfs\\\"\"; Flocker *k8s.io/api/core/v1.FlockerVolumeSource \"json:\\\"flocker,omitempty\\\" protobuf:\\\"bytes,15,opt,name=flocker\\\"\"; DownwardAPI *k8s.io/api/core/v1.DownwardAPIVolumeSource \"json:\\\"downwardAPI,omitempty\\\" protobuf:\\\"bytes,16,opt,name=downwardAPI\\\"\"; FC *k8s.io/api/core/v1.FCVolumeSource \"json:\\\"fc,omitempty\\\" protobuf:\\\"bytes,17,opt,name=fc\\\"\"; AzureFile *k8s.io/api/core/v1.AzureFileVolumeSource \"json:\\\"azureFile,omitempty\\\" protobuf:\\\"bytes,18,opt,name=azureFile\\\"\"; ConfigMap *k8s.io/api/core/v1.ConfigMapVolumeSource \"json:\\\"configMap,omitempty\\\" protobuf:\\\"bytes,19,opt,name=configMap\\\"\"; VsphereVolume *k8s.io/api/core/v1.VsphereVirtualDiskVolumeSource \"json:\\\"vsphereVolume,omitempty\\\" protobuf:\\\"bytes,20,opt,name=vsphereVolume\\\"\"; Quobyte *k8s.io/api/core/v1.QuobyteVolumeSource \"json:\\\"quobyte,omitempty\\\" protobuf:\\\"bytes,21,opt,name=quobyte\\\"\"; AzureDisk *k8s.io/api/core/v1.AzureDiskVolumeSource \"json:\\\"azureDisk,omitempty\\\" protobuf:\\\"bytes,22,opt,name=azureDisk\\\"\"; PhotonPersistentDisk *k8s.io/api/core/v1.PhotonPersistentDiskVolumeSource \"json:\\\"photonPersistentDisk,omitempty\\\" protobuf:\\\"bytes,23,opt,name=photonPersistentDisk\\\"\"; Projected *k8s.io/api/core/v1.ProjectedVolumeSource \"json:\\\"projected,omitempty\\\" protobuf:\\\"bytes,26,opt,name=projected\\\"\"; PortworxVolume *k8s.io/api/core/v1.PortworxVolumeSource \"json:\\\"portworxVolume,omitempty\\\" protobuf:\\\"bytes,24,opt,name=portworxVolume\\\"\"; ScaleIO *k8s.io/api/core/v1.ScaleIOVolumeSource \"json:\\\"scaleIO,omitempty\\\" protobuf:\\\"bytes,25,opt,name=scaleIO\\\"\"; StorageOS *k8s.io/api/core/v1.StorageOSVolumeSource \"json:\\\"storageos,omitempty\\\" protobuf:\\\"bytes,27,opt,name=storageos\\\"\"; CSI *k8s.io/api/core/v1.CSIVolumeSource \"json:\\\"csi,omitempty\\\" protobuf:\\\"bytes,28,opt,name=csi\\\"\"}",
      "type" : "Struct",
      "underlying" : 322
    }, {
      "elem" : 324,
      "name" : "*k8s.io/api/core/v1.HostPathVolumeSource",
      "type" : "Pointer",
      "underlying" : 323
    }, {
      "local-name" : "HostPathVolumeSource",
      "name" : "k8s.io/api/core/v1.HostPathVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 325
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "Type",
        "type" : 326
      } ],
      "name" : "struct{Path string \"json:\\\"path\\\" protobuf:\\\"bytes,1,opt,name=path\\\"\"; Type *k8s.io/api/core/v1.HostPathType \"json:\\\"type,omitempty\\\" protobuf:\\\"bytes,2,opt,name=type\\\"\"}",
      "type" : "Struct",
      "underlying" : 325
    }, {
      "elem" : 327,
      "name" : "*k8s.io/api/core/v1.HostPathType",
      "type" : "Pointer",
      "underlying" : 326
    }, {
      "local-name" : "HostPathType",
      "name" : "k8s.io/api/core/v1.HostPathType",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 329,
      "name" : "*k8s.io/api/core/v1.EmptyDirVolumeSource",
      "type" : "Pointer",
      "underlying" : 328
    }, {
      "local-name" : "EmptyDirVolumeSource",
      "name" : "k8s.io/api/core/v1.EmptyDirVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 330
    }, {
      "fields" : [ {
        "name" : "Medium",
        "type" : 331
      }, {
        "name" : "SizeLimit",
        "type" : 20
      } ],
      "name" : "struct{Medium k8s.io/api/core/v1.StorageMedium \"json:\\\"medium,omitempty\\\" protobuf:\\\"bytes,1,opt,name=medium,casttype=StorageMedium\\\"\"; SizeLimit *k8s.io/apimachinery/pkg/api/resource.Quantity \"json:\\\"sizeLimit,omitempty\\\" protobuf:\\\"bytes,2,opt,name=sizeLimit\\\"\"}",
      "type" : "Struct",
      "underlying" : 330
    }, {
      "local-name" : "StorageMedium",
      "name" : "k8s.io/api/core/v1.StorageMedium",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 333,
      "name" : "*k8s.io/api/core/v1.GCEPersistentDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 332
    }, {
      "local-name" : "GCEPersistentDiskVolumeSource",
      "name" : "k8s.io/api/core/v1.GCEPersistentDiskVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 334
    }, {
      "fields" : [ {
        "name" : "PDName",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "Partition",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{PDName string \"json:\\\"pdName\\\" protobuf:\\\"bytes,1,opt,name=pdName\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; Partition int32 \"json:\\\"partition,omitempty\\\" protobuf:\\\"varint,3,opt,name=partition\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 334
    }, {
      "elem" : 336,
      "name" : "*k8s.io/api/core/v1.AWSElasticBlockStoreVolumeSource",
      "type" : "Pointer",
      "underlying" : 335
    }, {
      "local-name" : "AWSElasticBlockStoreVolumeSource",
      "name" : "k8s.io/api/core/v1.AWSElasticBlockStoreVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 337
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "Partition",
        "type" : 27
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{VolumeID string \"json:\\\"volumeID\\\" protobuf:\\\"bytes,1,opt,name=volumeID\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; Partition int32 \"json:\\\"partition,omitempty\\\" protobuf:\\\"varint,3,opt,name=partition\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 337
    }, {
      "elem" : 339,
      "name" : "*k8s.io/api/core/v1.GitRepoVolumeSource",
      "type" : "Pointer",
      "underlying" : 338
    }, {
      "local-name" : "GitRepoVolumeSource",
      "name" : "k8s.io/api/core/v1.GitRepoVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 340
    }, {
      "fields" : [ {
        "name" : "Repository",
        "type" : 8
      }, {
        "name" : "Revision",
        "type" : 8
      }, {
        "name" : "Directory",
        "type" : 8
      } ],
      "name" : "struct{Repository string \"json:\\\"repository\\\" protobuf:\\\"bytes,1,opt,name=repository\\\"\"; Revision string \"json:\\\"revision,omitempty\\\" protobuf:\\\"bytes,2,opt,name=revision\\\"\"; Directory string \"json:\\\"directory,omitempty\\\" protobuf:\\\"bytes,3,opt,name=directory\\\"\"}",
      "type" : "Struct",
      "underlying" : 340
    }, {
      "elem" : 342,
      "name" : "*k8s.io/api/core/v1.SecretVolumeSource",
      "type" : "Pointer",
      "underlying" : 341
    }, {
      "local-name" : "SecretVolumeSource",
      "name" : "k8s.io/api/core/v1.SecretVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 343
    }, {
      "fields" : [ {
        "name" : "SecretName",
        "type" : 8
      }, {
        "name" : "Items",
        "type" : 344
      }, {
        "name" : "DefaultMode",
        "type" : 57
      }, {
        "name" : "Optional",
        "type" : 58
      } ],
      "name" : "struct{SecretName string \"json:\\\"secretName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=secretName\\\"\"; Items []k8s.io/api/core/v1.KeyToPath \"json:\\\"items,omitempty\\\" protobuf:\\\"bytes,2,rep,name=items\\\"\"; DefaultMode *int32 \"json:\\\"defaultMode,omitempty\\\" protobuf:\\\"bytes,3,opt,name=defaultMode\\\"\"; Optional *bool \"json:\\\"optional,omitempty\\\" protobuf:\\\"varint,4,opt,name=optional\\\"\"}",
      "type" : "Struct",
      "underlying" : 343
    }, {
      "elem" : 345,
      "name" : "[]k8s.io/api/core/v1.KeyToPath",
      "type" : "Slice",
      "underlying" : 344
    }, {
      "local-name" : "KeyToPath",
      "name" : "k8s.io/api/core/v1.KeyToPath",
      "package" : 7,
      "type" : "Named",
      "underlying" : 346
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 8
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "Mode",
        "type" : 57
      } ],
      "name" : "struct{Key string \"json:\\\"key\\\" protobuf:\\\"bytes,1,opt,name=key\\\"\"; Path string \"json:\\\"path\\\" protobuf:\\\"bytes,2,opt,name=path\\\"\"; Mode *int32 \"json:\\\"mode,omitempty\\\" protobuf:\\\"varint,3,opt,name=mode\\\"\"}",
      "type" : "Struct",
      "underlying" : 346
    }, {
      "elem" : 348,
      "name" : "*k8s.io/api/core/v1.NFSVolumeSource",
      "type" : "Pointer",
      "underlying" : 347
    }, {
      "local-name" : "NFSVolumeSource",
      "name" : "k8s.io/api/core/v1.NFSVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 349
    }, {
      "fields" : [ {
        "name" : "Server",
        "type" : 8
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{Server string \"json:\\\"server\\\" protobuf:\\\"bytes,1,opt,name=server\\\"\"; Path string \"json:\\\"path\\\" protobuf:\\\"bytes,2,opt,name=path\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 349
    }, {
      "elem" : 351,
      "name" : "*k8s.io/api/core/v1.ISCSIVolumeSource",
      "type" : "Pointer",
      "underlying" : 350
    }, {
      "local-name" : "ISCSIVolumeSource",
      "name" : "k8s.io/api/core/v1.ISCSIVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 352
    }, {
      "fields" : [ {
        "name" : "TargetPortal",
        "type" : 8
      }, {
        "name" : "IQN",
        "type" : 8
      }, {
        "name" : "Lun",
        "type" : 27
      }, {
        "name" : "ISCSIInterface",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      }, {
        "name" : "Portals",
        "type" : 65
      }, {
        "name" : "DiscoveryCHAPAuth",
        "type" : 35
      }, {
        "name" : "SessionCHAPAuth",
        "type" : 35
      }, {
        "name" : "SecretRef",
        "type" : 353
      }, {
        "name" : "InitiatorName",
        "type" : 69
      } ],
      "name" : "struct{TargetPortal string \"json:\\\"targetPortal\\\" protobuf:\\\"bytes,1,opt,name=targetPortal\\\"\"; IQN string \"json:\\\"iqn\\\" protobuf:\\\"bytes,2,opt,name=iqn\\\"\"; Lun int32 \"json:\\\"lun\\\" protobuf:\\\"varint,3,opt,name=lun\\\"\"; ISCSIInterface string \"json:\\\"iscsiInterface,omitempty\\\" protobuf:\\\"bytes,4,opt,name=iscsiInterface\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,5,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,6,opt,name=readOnly\\\"\"; Portals []string \"json:\\\"portals,omitempty\\\" protobuf:\\\"bytes,7,opt,name=portals\\\"\"; DiscoveryCHAPAuth bool \"json:\\\"chapAuthDiscovery,omitempty\\\" protobuf:\\\"varint,8,opt,name=chapAuthDiscovery\\\"\"; SessionCHAPAuth bool \"json:\\\"chapAuthSession,omitempty\\\" protobuf:\\\"varint,11,opt,name=chapAuthSession\\\"\"; SecretRef *k8s.io/api/core/v1.LocalObjectReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,10,opt,name=secretRef\\\"\"; InitiatorName *string \"json:\\\"initiatorName,omitempty\\\" protobuf:\\\"bytes,12,opt,name=initiatorName\\\"\"}",
      "type" : "Struct",
      "underlying" : 352
    }, {
      "elem" : 354,
      "name" : "*k8s.io/api/core/v1.LocalObjectReference",
      "type" : "Pointer",
      "underlying" : 353
    }, {
      "local-name" : "LocalObjectReference",
      "name" : "k8s.io/api/core/v1.LocalObjectReference",
      "package" : 7,
      "type" : "Named",
      "underlying" : 355
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      } ],
      "name" : "struct{Name string \"json:\\\"name,omitempty\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"}",
      "type" : "Struct",
      "underlying" : 355
    }, {
      "elem" : 357,
      "name" : "*k8s.io/api/core/v1.GlusterfsVolumeSource",
      "type" : "Pointer",
      "underlying" : 356
    }, {
      "local-name" : "GlusterfsVolumeSource",
      "name" : "k8s.io/api/core/v1.GlusterfsVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 358
    }, {
      "fields" : [ {
        "name" : "EndpointsName",
        "type" : 8
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{EndpointsName string \"json:\\\"endpoints\\\" protobuf:\\\"bytes,1,opt,name=endpoints\\\"\"; Path string \"json:\\\"path\\\" protobuf:\\\"bytes,2,opt,name=path\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 358
    }, {
      "elem" : 360,
      "name" : "*k8s.io/api/core/v1.PersistentVolumeClaimVolumeSource",
      "type" : "Pointer",
      "underlying" : 359
    }, {
      "local-name" : "PersistentVolumeClaimVolumeSource",
      "name" : "k8s.io/api/core/v1.PersistentVolumeClaimVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 361
    }, {
      "fields" : [ {
        "name" : "ClaimName",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{ClaimName string \"json:\\\"claimName\\\" protobuf:\\\"bytes,1,opt,name=claimName\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,2,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 361
    }, {
      "elem" : 363,
      "name" : "*k8s.io/api/core/v1.RBDVolumeSource",
      "type" : "Pointer",
      "underlying" : 362
    }, {
      "local-name" : "RBDVolumeSource",
      "name" : "k8s.io/api/core/v1.RBDVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 364
    }, {
      "fields" : [ {
        "name" : "CephMonitors",
        "type" : 65
      }, {
        "name" : "RBDImage",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "RBDPool",
        "type" : 8
      }, {
        "name" : "RadosUser",
        "type" : 8
      }, {
        "name" : "Keyring",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 353
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{CephMonitors []string \"json:\\\"monitors\\\" protobuf:\\\"bytes,1,rep,name=monitors\\\"\"; RBDImage string \"json:\\\"image\\\" protobuf:\\\"bytes,2,opt,name=image\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,3,opt,name=fsType\\\"\"; RBDPool string \"json:\\\"pool,omitempty\\\" protobuf:\\\"bytes,4,opt,name=pool\\\"\"; RadosUser string \"json:\\\"user,omitempty\\\" protobuf:\\\"bytes,5,opt,name=user\\\"\"; Keyring string \"json:\\\"keyring,omitempty\\\" protobuf:\\\"bytes,6,opt,name=keyring\\\"\"; SecretRef *k8s.io/api/core/v1.LocalObjectReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,7,opt,name=secretRef\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,8,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 364
    }, {
      "elem" : 366,
      "name" : "*k8s.io/api/core/v1.FlexVolumeSource",
      "type" : "Pointer",
      "underlying" : 365
    }, {
      "local-name" : "FlexVolumeSource",
      "name" : "k8s.io/api/core/v1.FlexVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 367
    }, {
      "fields" : [ {
        "name" : "Driver",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 353
      }, {
        "name" : "ReadOnly",
        "type" : 35
      }, {
        "name" : "Options",
        "type" : 85
      } ],
      "name" : "struct{Driver string \"json:\\\"driver\\\" protobuf:\\\"bytes,1,opt,name=driver\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; SecretRef *k8s.io/api/core/v1.LocalObjectReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,3,opt,name=secretRef\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"; Options map[string]string \"json:\\\"options,omitempty\\\" protobuf:\\\"bytes,5,rep,name=options\\\"\"}",
      "type" : "Struct",
      "underlying" : 367
    }, {
      "elem" : 369,
      "name" : "*k8s.io/api/core/v1.CinderVolumeSource",
      "type" : "Pointer",
      "underlying" : 368
    }, {
      "local-name" : "CinderVolumeSource",
      "name" : "k8s.io/api/core/v1.CinderVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 370
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      }, {
        "name" : "SecretRef",
        "type" : 353
      } ],
      "name" : "struct{VolumeID string \"json:\\\"volumeID\\\" protobuf:\\\"bytes,1,opt,name=volumeID\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"; SecretRef *k8s.io/api/core/v1.LocalObjectReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,4,opt,name=secretRef\\\"\"}",
      "type" : "Struct",
      "underlying" : 370
    }, {
      "elem" : 372,
      "name" : "*k8s.io/api/core/v1.CephFSVolumeSource",
      "type" : "Pointer",
      "underlying" : 371
    }, {
      "local-name" : "CephFSVolumeSource",
      "name" : "k8s.io/api/core/v1.CephFSVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 373
    }, {
      "fields" : [ {
        "name" : "Monitors",
        "type" : 65
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "User",
        "type" : 8
      }, {
        "name" : "SecretFile",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 353
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{Monitors []string \"json:\\\"monitors\\\" protobuf:\\\"bytes,1,rep,name=monitors\\\"\"; Path string \"json:\\\"path,omitempty\\\" protobuf:\\\"bytes,2,opt,name=path\\\"\"; User string \"json:\\\"user,omitempty\\\" protobuf:\\\"bytes,3,opt,name=user\\\"\"; SecretFile string \"json:\\\"secretFile,omitempty\\\" protobuf:\\\"bytes,4,opt,name=secretFile\\\"\"; SecretRef *k8s.io/api/core/v1.LocalObjectReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,5,opt,name=secretRef\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,6,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 373
    }, {
      "elem" : 375,
      "name" : "*k8s.io/api/core/v1.FlockerVolumeSource",
      "type" : "Pointer",
      "underlying" : 374
    }, {
      "local-name" : "FlockerVolumeSource",
      "name" : "k8s.io/api/core/v1.FlockerVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 376
    }, {
      "fields" : [ {
        "name" : "DatasetName",
        "type" : 8
      }, {
        "name" : "DatasetUUID",
        "type" : 8
      } ],
      "name" : "struct{DatasetName string \"json:\\\"datasetName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=datasetName\\\"\"; DatasetUUID string \"json:\\\"datasetUUID,omitempty\\\" protobuf:\\\"bytes,2,opt,name=datasetUUID\\\"\"}",
      "type" : "Struct",
      "underlying" : 376
    }, {
      "elem" : 378,
      "name" : "*k8s.io/api/core/v1.DownwardAPIVolumeSource",
      "type" : "Pointer",
      "underlying" : 377
    }, {
      "local-name" : "DownwardAPIVolumeSource",
      "name" : "k8s.io/api/core/v1.DownwardAPIVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 379
    }, {
      "fields" : [ {
        "name" : "Items",
        "type" : 380
      }, {
        "name" : "DefaultMode",
        "type" : 57
      } ],
      "name" : "struct{Items []k8s.io/api/core/v1.DownwardAPIVolumeFile \"json:\\\"items,omitempty\\\" protobuf:\\\"bytes,1,rep,name=items\\\"\"; DefaultMode *int32 \"json:\\\"defaultMode,omitempty\\\" protobuf:\\\"varint,2,opt,name=defaultMode\\\"\"}",
      "type" : "Struct",
      "underlying" : 379
    }, {
      "elem" : 381,
      "name" : "[]k8s.io/api/core/v1.DownwardAPIVolumeFile",
      "type" : "Slice",
      "underlying" : 380
    }, {
      "local-name" : "DownwardAPIVolumeFile",
      "name" : "k8s.io/api/core/v1.DownwardAPIVolumeFile",
      "package" : 7,
      "type" : "Named",
      "underlying" : 382
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "FieldRef",
        "type" : 383
      }, {
        "name" : "ResourceFieldRef",
        "type" : 386
      }, {
        "name" : "Mode",
        "type" : 57
      } ],
      "name" : "struct{Path string \"json:\\\"path\\\" protobuf:\\\"bytes,1,opt,name=path\\\"\"; FieldRef *k8s.io/api/core/v1.ObjectFieldSelector \"json:\\\"fieldRef,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fieldRef\\\"\"; ResourceFieldRef *k8s.io/api/core/v1.ResourceFieldSelector \"json:\\\"resourceFieldRef,omitempty\\\" protobuf:\\\"bytes,3,opt,name=resourceFieldRef\\\"\"; Mode *int32 \"json:\\\"mode,omitempty\\\" protobuf:\\\"varint,4,opt,name=mode\\\"\"}",
      "type" : "Struct",
      "underlying" : 382
    }, {
      "elem" : 384,
      "name" : "*k8s.io/api/core/v1.ObjectFieldSelector",
      "type" : "Pointer",
      "underlying" : 383
    }, {
      "local-name" : "ObjectFieldSelector",
      "name" : "k8s.io/api/core/v1.ObjectFieldSelector",
      "package" : 7,
      "type" : "Named",
      "underlying" : 385
    }, {
      "fields" : [ {
        "name" : "APIVersion",
        "type" : 8
      }, {
        "name" : "FieldPath",
        "type" : 8
      } ],
      "name" : "struct{APIVersion string \"json:\\\"apiVersion,omitempty\\\" protobuf:\\\"bytes,1,opt,name=apiVersion\\\"\"; FieldPath string \"json:\\\"fieldPath\\\" protobuf:\\\"bytes,2,opt,name=fieldPath\\\"\"}",
      "type" : "Struct",
      "underlying" : 385
    }, {
      "elem" : 387,
      "name" : "*k8s.io/api/core/v1.ResourceFieldSelector",
      "type" : "Pointer",
      "underlying" : 386
    }, {
      "local-name" : "ResourceFieldSelector",
      "name" : "k8s.io/api/core/v1.ResourceFieldSelector",
      "package" : 7,
      "type" : "Named",
      "underlying" : 388
    }, {
      "fields" : [ {
        "name" : "ContainerName",
        "type" : 8
      }, {
        "name" : "Resource",
        "type" : 8
      }, {
        "name" : "Divisor",
        "type" : 21
      } ],
      "name" : "struct{ContainerName string \"json:\\\"containerName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=containerName\\\"\"; Resource string \"json:\\\"resource\\\" protobuf:\\\"bytes,2,opt,name=resource\\\"\"; Divisor k8s.io/apimachinery/pkg/api/resource.Quantity \"json:\\\"divisor,omitempty\\\" protobuf:\\\"bytes,3,opt,name=divisor\\\"\"}",
      "type" : "Struct",
      "underlying" : 388
    }, {
      "elem" : 390,
      "name" : "*k8s.io/api/core/v1.FCVolumeSource",
      "type" : "Pointer",
      "underlying" : 389
    }, {
      "local-name" : "FCVolumeSource",
      "name" : "k8s.io/api/core/v1.FCVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 391
    }, {
      "fields" : [ {
        "name" : "TargetWWNs",
        "type" : 65
      }, {
        "name" : "Lun",
        "type" : 57
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      }, {
        "name" : "WWIDs",
        "type" : 65
      } ],
      "name" : "struct{TargetWWNs []string \"json:\\\"targetWWNs,omitempty\\\" protobuf:\\\"bytes,1,rep,name=targetWWNs\\\"\"; Lun *int32 \"json:\\\"lun,omitempty\\\" protobuf:\\\"varint,2,opt,name=lun\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,3,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"; WWIDs []string \"json:\\\"wwids,omitempty\\\" protobuf:\\\"bytes,5,rep,name=wwids\\\"\"}",
      "type" : "Struct",
      "underlying" : 391
    }, {
      "elem" : 393,
      "name" : "*k8s.io/api/core/v1.AzureFileVolumeSource",
      "type" : "Pointer",
      "underlying" : 392
    }, {
      "local-name" : "AzureFileVolumeSource",
      "name" : "k8s.io/api/core/v1.AzureFileVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 394
    }, {
      "fields" : [ {
        "name" : "SecretName",
        "type" : 8
      }, {
        "name" : "ShareName",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{SecretName string \"json:\\\"secretName\\\" protobuf:\\\"bytes,1,opt,name=secretName\\\"\"; ShareName string \"json:\\\"shareName\\\" protobuf:\\\"bytes,2,opt,name=shareName\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 394
    }, {
      "elem" : 396,
      "name" : "*k8s.io/api/core/v1.ConfigMapVolumeSource",
      "type" : "Pointer",
      "underlying" : 395
    }, {
      "local-name" : "ConfigMapVolumeSource",
      "name" : "k8s.io/api/core/v1.ConfigMapVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 397
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 354
      }, {
        "name" : "Items",
        "type" : 344
      }, {
        "name" : "DefaultMode",
        "type" : 57
      }, {
        "name" : "Optional",
        "type" : 58
      } ],
      "name" : "struct{k8s.io/api/core/v1.LocalObjectReference \"json:\\\",inline\\\" protobuf:\\\"bytes,1,opt,name=localObjectReference\\\"\"; Items []k8s.io/api/core/v1.KeyToPath \"json:\\\"items,omitempty\\\" protobuf:\\\"bytes,2,rep,name=items\\\"\"; DefaultMode *int32 \"json:\\\"defaultMode,omitempty\\\" protobuf:\\\"varint,3,opt,name=defaultMode\\\"\"; Optional *bool \"json:\\\"optional,omitempty\\\" protobuf:\\\"varint,4,opt,name=optional\\\"\"}",
      "type" : "Struct",
      "underlying" : 397
    }, {
      "elem" : 399,
      "name" : "*k8s.io/api/core/v1.VsphereVirtualDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 398
    }, {
      "local-name" : "VsphereVirtualDiskVolumeSource",
      "name" : "k8s.io/api/core/v1.VsphereVirtualDiskVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 400
    }, {
      "fields" : [ {
        "name" : "VolumePath",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "StoragePolicyName",
        "type" : 8
      }, {
        "name" : "StoragePolicyID",
        "type" : 8
      } ],
      "name" : "struct{VolumePath string \"json:\\\"volumePath\\\" protobuf:\\\"bytes,1,opt,name=volumePath\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; StoragePolicyName string \"json:\\\"storagePolicyName,omitempty\\\" protobuf:\\\"bytes,3,opt,name=storagePolicyName\\\"\"; StoragePolicyID string \"json:\\\"storagePolicyID,omitempty\\\" protobuf:\\\"bytes,4,opt,name=storagePolicyID\\\"\"}",
      "type" : "Struct",
      "underlying" : 400
    }, {
      "elem" : 402,
      "name" : "*k8s.io/api/core/v1.QuobyteVolumeSource",
      "type" : "Pointer",
      "underlying" : 401
    }, {
      "local-name" : "QuobyteVolumeSource",
      "name" : "k8s.io/api/core/v1.QuobyteVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 403
    }, {
      "fields" : [ {
        "name" : "Registry",
        "type" : 8
      }, {
        "name" : "Volume",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      }, {
        "name" : "User",
        "type" : 8
      }, {
        "name" : "Group",
        "type" : 8
      }, {
        "name" : "Tenant",
        "type" : 8
      } ],
      "name" : "struct{Registry string \"json:\\\"registry\\\" protobuf:\\\"bytes,1,opt,name=registry\\\"\"; Volume string \"json:\\\"volume\\\" protobuf:\\\"bytes,2,opt,name=volume\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"; User string \"json:\\\"user,omitempty\\\" protobuf:\\\"bytes,4,opt,name=user\\\"\"; Group string \"json:\\\"group,omitempty\\\" protobuf:\\\"bytes,5,opt,name=group\\\"\"; Tenant string \"json:\\\"tenant,omitempty\\\" protobuf:\\\"bytes,6,opt,name=tenant\\\"\"}",
      "type" : "Struct",
      "underlying" : 403
    }, {
      "elem" : 405,
      "name" : "*k8s.io/api/core/v1.AzureDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 404
    }, {
      "local-name" : "AzureDiskVolumeSource",
      "name" : "k8s.io/api/core/v1.AzureDiskVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 406
    }, {
      "fields" : [ {
        "name" : "DiskName",
        "type" : 8
      }, {
        "name" : "DataDiskURI",
        "type" : 8
      }, {
        "name" : "CachingMode",
        "type" : 407
      }, {
        "name" : "FSType",
        "type" : 69
      }, {
        "name" : "ReadOnly",
        "type" : 58
      }, {
        "name" : "Kind",
        "type" : 409
      } ],
      "name" : "struct{DiskName string \"json:\\\"diskName\\\" protobuf:\\\"bytes,1,opt,name=diskName\\\"\"; DataDiskURI string \"json:\\\"diskURI\\\" protobuf:\\\"bytes,2,opt,name=diskURI\\\"\"; CachingMode *k8s.io/api/core/v1.AzureDataDiskCachingMode \"json:\\\"cachingMode,omitempty\\\" protobuf:\\\"bytes,3,opt,name=cachingMode,casttype=AzureDataDiskCachingMode\\\"\"; FSType *string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,4,opt,name=fsType\\\"\"; ReadOnly *bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,5,opt,name=readOnly\\\"\"; Kind *k8s.io/api/core/v1.AzureDataDiskKind \"json:\\\"kind,omitempty\\\" protobuf:\\\"bytes,6,opt,name=kind,casttype=AzureDataDiskKind\\\"\"}",
      "type" : "Struct",
      "underlying" : 406
    }, {
      "elem" : 408,
      "name" : "*k8s.io/api/core/v1.AzureDataDiskCachingMode",
      "type" : "Pointer",
      "underlying" : 407
    }, {
      "local-name" : "AzureDataDiskCachingMode",
      "name" : "k8s.io/api/core/v1.AzureDataDiskCachingMode",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 410,
      "name" : "*k8s.io/api/core/v1.AzureDataDiskKind",
      "type" : "Pointer",
      "underlying" : 409
    }, {
      "local-name" : "AzureDataDiskKind",
      "name" : "k8s.io/api/core/v1.AzureDataDiskKind",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 412,
      "name" : "*k8s.io/api/core/v1.PhotonPersistentDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 411
    }, {
      "local-name" : "PhotonPersistentDiskVolumeSource",
      "name" : "k8s.io/api/core/v1.PhotonPersistentDiskVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 413
    }, {
      "fields" : [ {
        "name" : "PdID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      } ],
      "name" : "struct{PdID string \"json:\\\"pdID\\\" protobuf:\\\"bytes,1,opt,name=pdID\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"}",
      "type" : "Struct",
      "underlying" : 413
    }, {
      "elem" : 415,
      "name" : "*k8s.io/api/core/v1.ProjectedVolumeSource",
      "type" : "Pointer",
      "underlying" : 414
    }, {
      "local-name" : "ProjectedVolumeSource",
      "name" : "k8s.io/api/core/v1.ProjectedVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 416
    }, {
      "fields" : [ {
        "name" : "Sources",
        "type" : 417
      }, {
        "name" : "DefaultMode",
        "type" : 57
      } ],
      "name" : "struct{Sources []k8s.io/api/core/v1.VolumeProjection \"json:\\\"sources\\\" protobuf:\\\"bytes,1,rep,name=sources\\\"\"; DefaultMode *int32 \"json:\\\"defaultMode,omitempty\\\" protobuf:\\\"varint,2,opt,name=defaultMode\\\"\"}",
      "type" : "Struct",
      "underlying" : 416
    }, {
      "elem" : 418,
      "name" : "[]k8s.io/api/core/v1.VolumeProjection",
      "type" : "Slice",
      "underlying" : 417
    }, {
      "local-name" : "VolumeProjection",
      "name" : "k8s.io/api/core/v1.VolumeProjection",
      "package" : 7,
      "type" : "Named",
      "underlying" : 419
    }, {
      "fields" : [ {
        "name" : "Secret",
        "type" : 420
      }, {
        "name" : "DownwardAPI",
        "type" : 423
      }, {
        "name" : "ConfigMap",
        "type" : 426
      }, {
        "name" : "ServiceAccountToken",
        "type" : 428
      } ],
      "name" : "struct{Secret *k8s.io/api/core/v1.SecretProjection \"json:\\\"secret,omitempty\\\" protobuf:\\\"bytes,1,opt,name=secret\\\"\"; DownwardAPI *k8s.io/api/core/v1.DownwardAPIProjection \"json:\\\"downwardAPI,omitempty\\\" protobuf:\\\"bytes,2,opt,name=downwardAPI\\\"\"; ConfigMap *k8s.io/api/core/v1.ConfigMapProjection \"json:\\\"configMap,omitempty\\\" protobuf:\\\"bytes,3,opt,name=configMap\\\"\"; ServiceAccountToken *k8s.io/api/core/v1.ServiceAccountTokenProjection \"json:\\\"serviceAccountToken,omitempty\\\" protobuf:\\\"bytes,4,opt,name=serviceAccountToken\\\"\"}",
      "type" : "Struct",
      "underlying" : 419
    }, {
      "elem" : 421,
      "name" : "*k8s.io/api/core/v1.SecretProjection",
      "type" : "Pointer",
      "underlying" : 420
    }, {
      "local-name" : "SecretProjection",
      "name" : "k8s.io/api/core/v1.SecretProjection",
      "package" : 7,
      "type" : "Named",
      "underlying" : 422
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 354
      }, {
        "name" : "Items",
        "type" : 344
      }, {
        "name" : "Optional",
        "type" : 58
      } ],
      "name" : "struct{k8s.io/api/core/v1.LocalObjectReference \"json:\\\",inline\\\" protobuf:\\\"bytes,1,opt,name=localObjectReference\\\"\"; Items []k8s.io/api/core/v1.KeyToPath \"json:\\\"items,omitempty\\\" protobuf:\\\"bytes,2,rep,name=items\\\"\"; Optional *bool \"json:\\\"optional,omitempty\\\" protobuf:\\\"varint,4,opt,name=optional\\\"\"}",
      "type" : "Struct",
      "underlying" : 422
    }, {
      "elem" : 424,
      "name" : "*k8s.io/api/core/v1.DownwardAPIProjection",
      "type" : "Pointer",
      "underlying" : 423
    }, {
      "local-name" : "DownwardAPIProjection",
      "name" : "k8s.io/api/core/v1.DownwardAPIProjection",
      "package" : 7,
      "type" : "Named",
      "underlying" : 425
    }, {
      "fields" : [ {
        "name" : "Items",
        "type" : 380
      } ],
      "name" : "struct{Items []k8s.io/api/core/v1.DownwardAPIVolumeFile \"json:\\\"items,omitempty\\\" protobuf:\\\"bytes,1,rep,name=items\\\"\"}",
      "type" : "Struct",
      "underlying" : 425
    }, {
      "elem" : 427,
      "name" : "*k8s.io/api/core/v1.ConfigMapProjection",
      "type" : "Pointer",
      "underlying" : 426
    }, {
      "local-name" : "ConfigMapProjection",
      "name" : "k8s.io/api/core/v1.ConfigMapProjection",
      "package" : 7,
      "type" : "Named",
      "underlying" : 422
    }, {
      "elem" : 429,
      "name" : "*k8s.io/api/core/v1.ServiceAccountTokenProjection",
      "type" : "Pointer",
      "underlying" : 428
    }, {
      "local-name" : "ServiceAccountTokenProjection",
      "name" : "k8s.io/api/core/v1.ServiceAccountTokenProjection",
      "package" : 7,
      "type" : "Named",
      "underlying" : 430
    }, {
      "fields" : [ {
        "name" : "Audience",
        "type" : 8
      }, {
        "name" : "ExpirationSeconds",
        "type" : 238
      }, {
        "name" : "Path",
        "type" : 8
      } ],
      "name" : "struct{Audience string \"json:\\\"audience,omitempty\\\" protobuf:\\\"bytes,1,rep,name=audience\\\"\"; ExpirationSeconds *int64 \"json:\\\"expirationSeconds,omitempty\\\" protobuf:\\\"varint,2,opt,name=expirationSeconds\\\"\"; Path string \"json:\\\"path\\\" protobuf:\\\"bytes,3,opt,name=path\\\"\"}",
      "type" : "Struct",
      "underlying" : 430
    }, {
      "elem" : 432,
      "name" : "*k8s.io/api/core/v1.PortworxVolumeSource",
      "type" : "Pointer",
      "underlying" : 431
    }, {
      "local-name" : "PortworxVolumeSource",
      "name" : "k8s.io/api/core/v1.PortworxVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 433
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{VolumeID string \"json:\\\"volumeID\\\" protobuf:\\\"bytes,1,opt,name=volumeID\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 433
    }, {
      "elem" : 435,
      "name" : "*k8s.io/api/core/v1.ScaleIOVolumeSource",
      "type" : "Pointer",
      "underlying" : 434
    }, {
      "local-name" : "ScaleIOVolumeSource",
      "name" : "k8s.io/api/core/v1.ScaleIOVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 436
    }, {
      "fields" : [ {
        "name" : "Gateway",
        "type" : 8
      }, {
        "name" : "System",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 353
      }, {
        "name" : "SSLEnabled",
        "type" : 35
      }, {
        "name" : "ProtectionDomain",
        "type" : 8
      }, {
        "name" : "StoragePool",
        "type" : 8
      }, {
        "name" : "StorageMode",
        "type" : 8
      }, {
        "name" : "VolumeName",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      } ],
      "name" : "struct{Gateway string \"json:\\\"gateway\\\" protobuf:\\\"bytes,1,opt,name=gateway\\\"\"; System string \"json:\\\"system\\\" protobuf:\\\"bytes,2,opt,name=system\\\"\"; SecretRef *k8s.io/api/core/v1.LocalObjectReference \"json:\\\"secretRef\\\" protobuf:\\\"bytes,3,opt,name=secretRef\\\"\"; SSLEnabled bool \"json:\\\"sslEnabled,omitempty\\\" protobuf:\\\"varint,4,opt,name=sslEnabled\\\"\"; ProtectionDomain string \"json:\\\"protectionDomain,omitempty\\\" protobuf:\\\"bytes,5,opt,name=protectionDomain\\\"\"; StoragePool string \"json:\\\"storagePool,omitempty\\\" protobuf:\\\"bytes,6,opt,name=storagePool\\\"\"; StorageMode string \"json:\\\"storageMode,omitempty\\\" protobuf:\\\"bytes,7,opt,name=storageMode\\\"\"; VolumeName string \"json:\\\"volumeName,omitempty\\\" protobuf:\\\"bytes,8,opt,name=volumeName\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,9,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,10,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 436
    }, {
      "elem" : 438,
      "name" : "*k8s.io/api/core/v1.StorageOSVolumeSource",
      "type" : "Pointer",
      "underlying" : 437
    }, {
      "local-name" : "StorageOSVolumeSource",
      "name" : "k8s.io/api/core/v1.StorageOSVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 439
    }, {
      "fields" : [ {
        "name" : "VolumeName",
        "type" : 8
      }, {
        "name" : "VolumeNamespace",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      }, {
        "name" : "SecretRef",
        "type" : 353
      } ],
      "name" : "struct{VolumeName string \"json:\\\"volumeName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=volumeName\\\"\"; VolumeNamespace string \"json:\\\"volumeNamespace,omitempty\\\" protobuf:\\\"bytes,2,opt,name=volumeNamespace\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,3,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"; SecretRef *k8s.io/api/core/v1.LocalObjectReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,5,opt,name=secretRef\\\"\"}",
      "type" : "Struct",
      "underlying" : 439
    }, {
      "elem" : 441,
      "name" : "*k8s.io/api/core/v1.CSIVolumeSource",
      "type" : "Pointer",
      "underlying" : 440
    }, {
      "local-name" : "CSIVolumeSource",
      "name" : "k8s.io/api/core/v1.CSIVolumeSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 442
    }, {
      "fields" : [ {
        "name" : "Driver",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 58
      }, {
        "name" : "FSType",
        "type" : 69
      }, {
        "name" : "VolumeAttributes",
        "type" : 85
      }, {
        "name" : "NodePublishSecretRef",
        "type" : 353
      } ],
      "name" : "struct{Driver string \"json:\\\"driver\\\" protobuf:\\\"bytes,1,opt,name=driver\\\"\"; ReadOnly *bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,2,opt,name=readOnly\\\"\"; FSType *string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,3,opt,name=fsType\\\"\"; VolumeAttributes map[string]string \"json:\\\"volumeAttributes,omitempty\\\" protobuf:\\\"bytes,4,rep,name=volumeAttributes\\\"\"; NodePublishSecretRef *k8s.io/api/core/v1.LocalObjectReference \"json:\\\"nodePublishSecretRef,omitempty\\\" protobuf:\\\"bytes,5,opt,name=nodePublishSecretRef\\\"\"}",
      "type" : "Struct",
      "underlying" : 442
    }, {
      "elem" : 444,
      "name" : "[]k8s.io/api/core/v1.Container",
      "type" : "Slice",
      "underlying" : 443
    }, {
      "local-name" : "Container",
      "name" : "k8s.io/api/core/v1.Container",
      "package" : 7,
      "type" : "Named",
      "underlying" : 445
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "Image",
        "type" : 8
      }, {
        "name" : "Command",
        "type" : 65
      }, {
        "name" : "Args",
        "type" : 65
      }, {
        "name" : "WorkingDir",
        "type" : 8
      }, {
        "name" : "Ports",
        "type" : 446
      }, {
        "name" : "EnvFrom",
        "type" : 450
      }, {
        "name" : "Env",
        "type" : 458
      }, {
        "name" : "Resources",
        "type" : 469
      }, {
        "name" : "VolumeMounts",
        "type" : 474
      }, {
        "name" : "VolumeDevices",
        "type" : 479
      }, {
        "name" : "LivenessProbe",
        "type" : 482
      }, {
        "name" : "ReadinessProbe",
        "type" : 482
      }, {
        "name" : "StartupProbe",
        "type" : 482
      }, {
        "name" : "Lifecycle",
        "type" : 500
      }, {
        "name" : "TerminationMessagePath",
        "type" : 8
      }, {
        "name" : "TerminationMessagePolicy",
        "type" : 504
      }, {
        "name" : "ImagePullPolicy",
        "type" : 505
      }, {
        "name" : "SecurityContext",
        "type" : 506
      }, {
        "name" : "Stdin",
        "type" : 35
      }, {
        "name" : "StdinOnce",
        "type" : 35
      }, {
        "name" : "TTY",
        "type" : 35
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; Image string \"json:\\\"image,omitempty\\\" protobuf:\\\"bytes,2,opt,name=image\\\"\"; Command []string \"json:\\\"command,omitempty\\\" protobuf:\\\"bytes,3,rep,name=command\\\"\"; Args []string \"json:\\\"args,omitempty\\\" protobuf:\\\"bytes,4,rep,name=args\\\"\"; WorkingDir string \"json:\\\"workingDir,omitempty\\\" protobuf:\\\"bytes,5,opt,name=workingDir\\\"\"; Ports []k8s.io/api/core/v1.ContainerPort \"json:\\\"ports,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"containerPort\\\" protobuf:\\\"bytes,6,rep,name=ports\\\"\"; EnvFrom []k8s.io/api/core/v1.EnvFromSource \"json:\\\"envFrom,omitempty\\\" protobuf:\\\"bytes,19,rep,name=envFrom\\\"\"; Env []k8s.io/api/core/v1.EnvVar \"json:\\\"env,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"name\\\" protobuf:\\\"bytes,7,rep,name=env\\\"\"; Resources k8s.io/api/core/v1.ResourceRequirements \"json:\\\"resources,omitempty\\\" protobuf:\\\"bytes,8,opt,name=resources\\\"\"; VolumeMounts []k8s.io/api/core/v1.VolumeMount \"json:\\\"volumeMounts,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"mountPath\\\" protobuf:\\\"bytes,9,rep,name=volumeMounts\\\"\"; VolumeDevices []k8s.io/api/core/v1.VolumeDevice \"json:\\\"volumeDevices,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"devicePath\\\" protobuf:\\\"bytes,21,rep,name=volumeDevices\\\"\"; LivenessProbe *k8s.io/api/core/v1.Probe \"json:\\\"livenessProbe,omitempty\\\" protobuf:\\\"bytes,10,opt,name=livenessProbe\\\"\"; ReadinessProbe *k8s.io/api/core/v1.Probe \"json:\\\"readinessProbe,omitempty\\\" protobuf:\\\"bytes,11,opt,name=readinessProbe\\\"\"; StartupProbe *k8s.io/api/core/v1.Probe \"json:\\\"startupProbe,omitempty\\\" protobuf:\\\"bytes,22,opt,name=startupProbe\\\"\"; Lifecycle *k8s.io/api/core/v1.Lifecycle \"json:\\\"lifecycle,omitempty\\\" protobuf:\\\"bytes,12,opt,name=lifecycle\\\"\"; TerminationMessagePath string \"json:\\\"terminationMessagePath,omitempty\\\" protobuf:\\\"bytes,13,opt,name=terminationMessagePath\\\"\"; TerminationMessagePolicy k8s.io/api/core/v1.TerminationMessagePolicy \"json:\\\"terminationMessagePolicy,omitempty\\\" protobuf:\\\"bytes,20,opt,name=terminationMessagePolicy,casttype=TerminationMessagePolicy\\\"\"; ImagePullPolicy k8s.io/api/core/v1.PullPolicy \"json:\\\"imagePullPolicy,omitempty\\\" protobuf:\\\"bytes,14,opt,name=imagePullPolicy,casttype=PullPolicy\\\"\"; SecurityContext *k8s.io/api/core/v1.SecurityContext \"json:\\\"securityContext,omitempty\\\" protobuf:\\\"bytes,15,opt,name=securityContext\\\"\"; Stdin bool \"json:\\\"stdin,omitempty\\\" protobuf:\\\"varint,16,opt,name=stdin\\\"\"; StdinOnce bool \"json:\\\"stdinOnce,omitempty\\\" protobuf:\\\"varint,17,opt,name=stdinOnce\\\"\"; TTY bool \"json:\\\"tty,omitempty\\\" protobuf:\\\"varint,18,opt,name=tty\\\"\"}",
      "type" : "Struct",
      "underlying" : 445
    }, {
      "elem" : 447,
      "name" : "[]k8s.io/api/core/v1.ContainerPort",
      "type" : "Slice",
      "underlying" : 446
    }, {
      "local-name" : "ContainerPort",
      "name" : "k8s.io/api/core/v1.ContainerPort",
      "package" : 7,
      "type" : "Named",
      "underlying" : 448
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "HostPort",
        "type" : 27
      }, {
        "name" : "ContainerPort",
        "type" : 27
      }, {
        "name" : "Protocol",
        "type" : 449
      }, {
        "name" : "HostIP",
        "type" : 8
      } ],
      "name" : "struct{Name string \"json:\\\"name,omitempty\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; HostPort int32 \"json:\\\"hostPort,omitempty\\\" protobuf:\\\"varint,2,opt,name=hostPort\\\"\"; ContainerPort int32 \"json:\\\"containerPort\\\" protobuf:\\\"varint,3,opt,name=containerPort\\\"\"; Protocol k8s.io/api/core/v1.Protocol \"json:\\\"protocol,omitempty\\\" protobuf:\\\"bytes,4,opt,name=protocol,casttype=Protocol\\\"\"; HostIP string \"json:\\\"hostIP,omitempty\\\" protobuf:\\\"bytes,5,opt,name=hostIP\\\"\"}",
      "type" : "Struct",
      "underlying" : 448
    }, {
      "local-name" : "Protocol",
      "name" : "k8s.io/api/core/v1.Protocol",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 451,
      "name" : "[]k8s.io/api/core/v1.EnvFromSource",
      "type" : "Slice",
      "underlying" : 450
    }, {
      "local-name" : "EnvFromSource",
      "name" : "k8s.io/api/core/v1.EnvFromSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 452
    }, {
      "fields" : [ {
        "name" : "Prefix",
        "type" : 8
      }, {
        "name" : "ConfigMapRef",
        "type" : 453
      }, {
        "name" : "SecretRef",
        "type" : 456
      } ],
      "name" : "struct{Prefix string \"json:\\\"prefix,omitempty\\\" protobuf:\\\"bytes,1,opt,name=prefix\\\"\"; ConfigMapRef *k8s.io/api/core/v1.ConfigMapEnvSource \"json:\\\"configMapRef,omitempty\\\" protobuf:\\\"bytes,2,opt,name=configMapRef\\\"\"; SecretRef *k8s.io/api/core/v1.SecretEnvSource \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,3,opt,name=secretRef\\\"\"}",
      "type" : "Struct",
      "underlying" : 452
    }, {
      "elem" : 454,
      "name" : "*k8s.io/api/core/v1.ConfigMapEnvSource",
      "type" : "Pointer",
      "underlying" : 453
    }, {
      "local-name" : "ConfigMapEnvSource",
      "name" : "k8s.io/api/core/v1.ConfigMapEnvSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 455
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 354
      }, {
        "name" : "Optional",
        "type" : 58
      } ],
      "name" : "struct{k8s.io/api/core/v1.LocalObjectReference \"json:\\\",inline\\\" protobuf:\\\"bytes,1,opt,name=localObjectReference\\\"\"; Optional *bool \"json:\\\"optional,omitempty\\\" protobuf:\\\"varint,2,opt,name=optional\\\"\"}",
      "type" : "Struct",
      "underlying" : 455
    }, {
      "elem" : 457,
      "name" : "*k8s.io/api/core/v1.SecretEnvSource",
      "type" : "Pointer",
      "underlying" : 456
    }, {
      "local-name" : "SecretEnvSource",
      "name" : "k8s.io/api/core/v1.SecretEnvSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 455
    }, {
      "elem" : 459,
      "name" : "[]k8s.io/api/core/v1.EnvVar",
      "type" : "Slice",
      "underlying" : 458
    }, {
      "local-name" : "EnvVar",
      "name" : "k8s.io/api/core/v1.EnvVar",
      "package" : 7,
      "type" : "Named",
      "underlying" : 460
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "Value",
        "type" : 8
      }, {
        "name" : "ValueFrom",
        "type" : 461
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; Value string \"json:\\\"value,omitempty\\\" protobuf:\\\"bytes,2,opt,name=value\\\"\"; ValueFrom *k8s.io/api/core/v1.EnvVarSource \"json:\\\"valueFrom,omitempty\\\" protobuf:\\\"bytes,3,opt,name=valueFrom\\\"\"}",
      "type" : "Struct",
      "underlying" : 460
    }, {
      "elem" : 462,
      "name" : "*k8s.io/api/core/v1.EnvVarSource",
      "type" : "Pointer",
      "underlying" : 461
    }, {
      "local-name" : "EnvVarSource",
      "name" : "k8s.io/api/core/v1.EnvVarSource",
      "package" : 7,
      "type" : "Named",
      "underlying" : 463
    }, {
      "fields" : [ {
        "name" : "FieldRef",
        "type" : 383
      }, {
        "name" : "ResourceFieldRef",
        "type" : 386
      }, {
        "name" : "ConfigMapKeyRef",
        "type" : 464
      }, {
        "name" : "SecretKeyRef",
        "type" : 467
      } ],
      "name" : "struct{FieldRef *k8s.io/api/core/v1.ObjectFieldSelector \"json:\\\"fieldRef,omitempty\\\" protobuf:\\\"bytes,1,opt,name=fieldRef\\\"\"; ResourceFieldRef *k8s.io/api/core/v1.ResourceFieldSelector \"json:\\\"resourceFieldRef,omitempty\\\" protobuf:\\\"bytes,2,opt,name=resourceFieldRef\\\"\"; ConfigMapKeyRef *k8s.io/api/core/v1.ConfigMapKeySelector \"json:\\\"configMapKeyRef,omitempty\\\" protobuf:\\\"bytes,3,opt,name=configMapKeyRef\\\"\"; SecretKeyRef *k8s.io/api/core/v1.SecretKeySelector \"json:\\\"secretKeyRef,omitempty\\\" protobuf:\\\"bytes,4,opt,name=secretKeyRef\\\"\"}",
      "type" : "Struct",
      "underlying" : 463
    }, {
      "elem" : 465,
      "name" : "*k8s.io/api/core/v1.ConfigMapKeySelector",
      "type" : "Pointer",
      "underlying" : 464
    }, {
      "local-name" : "ConfigMapKeySelector",
      "name" : "k8s.io/api/core/v1.ConfigMapKeySelector",
      "package" : 7,
      "type" : "Named",
      "underlying" : 466
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 354
      }, {
        "name" : "Key",
        "type" : 8
      }, {
        "name" : "Optional",
        "type" : 58
      } ],
      "name" : "struct{k8s.io/api/core/v1.LocalObjectReference \"json:\\\",inline\\\" protobuf:\\\"bytes,1,opt,name=localObjectReference\\\"\"; Key string \"json:\\\"key\\\" protobuf:\\\"bytes,2,opt,name=key\\\"\"; Optional *bool \"json:\\\"optional,omitempty\\\" protobuf:\\\"varint,3,opt,name=optional\\\"\"}",
      "type" : "Struct",
      "underlying" : 466
    }, {
      "elem" : 468,
      "name" : "*k8s.io/api/core/v1.SecretKeySelector",
      "type" : "Pointer",
      "underlying" : 467
    }, {
      "local-name" : "SecretKeySelector",
      "name" : "k8s.io/api/core/v1.SecretKeySelector",
      "package" : 7,
      "type" : "Named",
      "underlying" : 466
    }, {
      "local-name" : "ResourceRequirements",
      "name" : "k8s.io/api/core/v1.ResourceRequirements",
      "package" : 7,
      "type" : "Named",
      "underlying" : 470
    }, {
      "fields" : [ {
        "name" : "Limits",
        "type" : 471
      }, {
        "name" : "Requests",
        "type" : 471
      } ],
      "name" : "struct{Limits k8s.io/api/core/v1.ResourceList \"json:\\\"limits,omitempty\\\" protobuf:\\\"bytes,1,rep,name=limits,casttype=ResourceList,castkey=ResourceName\\\"\"; Requests k8s.io/api/core/v1.ResourceList \"json:\\\"requests,omitempty\\\" protobuf:\\\"bytes,2,rep,name=requests,casttype=ResourceList,castkey=ResourceName\\\"\"}",
      "type" : "Struct",
      "underlying" : 470
    }, {
      "local-name" : "ResourceList",
      "name" : "k8s.io/api/core/v1.ResourceList",
      "package" : 7,
      "type" : "Named",
      "underlying" : 472
    }, {
      "elem" : 21,
      "key" : 473,
      "name" : "map[k8s.io/api/core/v1.ResourceName]k8s.io/apimachinery/pkg/api/resource.Quantity",
      "type" : "Map",
      "underlying" : 472
    }, {
      "local-name" : "ResourceName",
      "name" : "k8s.io/api/core/v1.ResourceName",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 475,
      "name" : "[]k8s.io/api/core/v1.VolumeMount",
      "type" : "Slice",
      "underlying" : 474
    }, {
      "local-name" : "VolumeMount",
      "name" : "k8s.io/api/core/v1.VolumeMount",
      "package" : 7,
      "type" : "Named",
      "underlying" : 476
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 35
      }, {
        "name" : "MountPath",
        "type" : 8
      }, {
        "name" : "SubPath",
        "type" : 8
      }, {
        "name" : "MountPropagation",
        "type" : 477
      }, {
        "name" : "SubPathExpr",
        "type" : 8
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,2,opt,name=readOnly\\\"\"; MountPath string \"json:\\\"mountPath\\\" protobuf:\\\"bytes,3,opt,name=mountPath\\\"\"; SubPath string \"json:\\\"subPath,omitempty\\\" protobuf:\\\"bytes,4,opt,name=subPath\\\"\"; MountPropagation *k8s.io/api/core/v1.MountPropagationMode \"json:\\\"mountPropagation,omitempty\\\" protobuf:\\\"bytes,5,opt,name=mountPropagation,casttype=MountPropagationMode\\\"\"; SubPathExpr string \"json:\\\"subPathExpr,omitempty\\\" protobuf:\\\"bytes,6,opt,name=subPathExpr\\\"\"}",
      "type" : "Struct",
      "underlying" : 476
    }, {
      "elem" : 478,
      "name" : "*k8s.io/api/core/v1.MountPropagationMode",
      "type" : "Pointer",
      "underlying" : 477
    }, {
      "local-name" : "MountPropagationMode",
      "name" : "k8s.io/api/core/v1.MountPropagationMode",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 480,
      "name" : "[]k8s.io/api/core/v1.VolumeDevice",
      "type" : "Slice",
      "underlying" : 479
    }, {
      "local-name" : "VolumeDevice",
      "name" : "k8s.io/api/core/v1.VolumeDevice",
      "package" : 7,
      "type" : "Named",
      "underlying" : 481
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "DevicePath",
        "type" : 8
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; DevicePath string \"json:\\\"devicePath\\\" protobuf:\\\"bytes,2,opt,name=devicePath\\\"\"}",
      "type" : "Struct",
      "underlying" : 481
    }, {
      "elem" : 483,
      "name" : "*k8s.io/api/core/v1.Probe",
      "type" : "Pointer",
      "underlying" : 482
    }, {
      "local-name" : "Probe",
      "name" : "k8s.io/api/core/v1.Probe",
      "package" : 7,
      "type" : "Named",
      "underlying" : 484
    }, {
      "fields" : [ {
        "name" : "Handler",
        "type" : 485
      }, {
        "name" : "InitialDelaySeconds",
        "type" : 27
      }, {
        "name" : "TimeoutSeconds",
        "type" : 27
      }, {
        "name" : "PeriodSeconds",
        "type" : 27
      }, {
        "name" : "SuccessThreshold",
        "type" : 27
      }, {
        "name" : "FailureThreshold",
        "type" : 27
      } ],
      "name" : "struct{k8s.io/api/core/v1.Handler \"json:\\\",inline\\\" protobuf:\\\"bytes,1,opt,name=handler\\\"\"; InitialDelaySeconds int32 \"json:\\\"initialDelaySeconds,omitempty\\\" protobuf:\\\"varint,2,opt,name=initialDelaySeconds\\\"\"; TimeoutSeconds int32 \"json:\\\"timeoutSeconds,omitempty\\\" protobuf:\\\"varint,3,opt,name=timeoutSeconds\\\"\"; PeriodSeconds int32 \"json:\\\"periodSeconds,omitempty\\\" protobuf:\\\"varint,4,opt,name=periodSeconds\\\"\"; SuccessThreshold int32 \"json:\\\"successThreshold,omitempty\\\" protobuf:\\\"varint,5,opt,name=successThreshold\\\"\"; FailureThreshold int32 \"json:\\\"failureThreshold,omitempty\\\" protobuf:\\\"varint,6,opt,name=failureThreshold\\\"\"}",
      "type" : "Struct",
      "underlying" : 484
    }, {
      "local-name" : "Handler",
      "name" : "k8s.io/api/core/v1.Handler",
      "package" : 7,
      "type" : "Named",
      "underlying" : 486
    }, {
      "fields" : [ {
        "name" : "Exec",
        "type" : 487
      }, {
        "name" : "HTTPGet",
        "type" : 490
      }, {
        "name" : "TCPSocket",
        "type" : 497
      } ],
      "name" : "struct{Exec *k8s.io/api/core/v1.ExecAction \"json:\\\"exec,omitempty\\\" protobuf:\\\"bytes,1,opt,name=exec\\\"\"; HTTPGet *k8s.io/api/core/v1.HTTPGetAction \"json:\\\"httpGet,omitempty\\\" protobuf:\\\"bytes,2,opt,name=httpGet\\\"\"; TCPSocket *k8s.io/api/core/v1.TCPSocketAction \"json:\\\"tcpSocket,omitempty\\\" protobuf:\\\"bytes,3,opt,name=tcpSocket\\\"\"}",
      "type" : "Struct",
      "underlying" : 486
    }, {
      "elem" : 488,
      "name" : "*k8s.io/api/core/v1.ExecAction",
      "type" : "Pointer",
      "underlying" : 487
    }, {
      "local-name" : "ExecAction",
      "name" : "k8s.io/api/core/v1.ExecAction",
      "package" : 7,
      "type" : "Named",
      "underlying" : 489
    }, {
      "fields" : [ {
        "name" : "Command",
        "type" : 65
      } ],
      "name" : "struct{Command []string \"json:\\\"command,omitempty\\\" protobuf:\\\"bytes,1,rep,name=command\\\"\"}",
      "type" : "Struct",
      "underlying" : 489
    }, {
      "elem" : 491,
      "name" : "*k8s.io/api/core/v1.HTTPGetAction",
      "type" : "Pointer",
      "underlying" : 490
    }, {
      "local-name" : "HTTPGetAction",
      "name" : "k8s.io/api/core/v1.HTTPGetAction",
      "package" : 7,
      "type" : "Named",
      "underlying" : 492
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "Port",
        "type" : 208
      }, {
        "name" : "Host",
        "type" : 8
      }, {
        "name" : "Scheme",
        "type" : 493
      }, {
        "name" : "HTTPHeaders",
        "type" : 494
      } ],
      "name" : "struct{Path string \"json:\\\"path,omitempty\\\" protobuf:\\\"bytes,1,opt,name=path\\\"\"; Port k8s.io/apimachinery/pkg/util/intstr.IntOrString \"json:\\\"port\\\" protobuf:\\\"bytes,2,opt,name=port\\\"\"; Host string \"json:\\\"host,omitempty\\\" protobuf:\\\"bytes,3,opt,name=host\\\"\"; Scheme k8s.io/api/core/v1.URIScheme \"json:\\\"scheme,omitempty\\\" protobuf:\\\"bytes,4,opt,name=scheme,casttype=URIScheme\\\"\"; HTTPHeaders []k8s.io/api/core/v1.HTTPHeader \"json:\\\"httpHeaders,omitempty\\\" protobuf:\\\"bytes,5,rep,name=httpHeaders\\\"\"}",
      "type" : "Struct",
      "underlying" : 492
    }, {
      "local-name" : "URIScheme",
      "name" : "k8s.io/api/core/v1.URIScheme",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 495,
      "name" : "[]k8s.io/api/core/v1.HTTPHeader",
      "type" : "Slice",
      "underlying" : 494
    }, {
      "local-name" : "HTTPHeader",
      "name" : "k8s.io/api/core/v1.HTTPHeader",
      "package" : 7,
      "type" : "Named",
      "underlying" : 496
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "Value",
        "type" : 8
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; Value string \"json:\\\"value\\\" protobuf:\\\"bytes,2,opt,name=value\\\"\"}",
      "type" : "Struct",
      "underlying" : 496
    }, {
      "elem" : 498,
      "name" : "*k8s.io/api/core/v1.TCPSocketAction",
      "type" : "Pointer",
      "underlying" : 497
    }, {
      "local-name" : "TCPSocketAction",
      "name" : "k8s.io/api/core/v1.TCPSocketAction",
      "package" : 7,
      "type" : "Named",
      "underlying" : 499
    }, {
      "fields" : [ {
        "name" : "Port",
        "type" : 208
      }, {
        "name" : "Host",
        "type" : 8
      } ],
      "name" : "struct{Port k8s.io/apimachinery/pkg/util/intstr.IntOrString \"json:\\\"port\\\" protobuf:\\\"bytes,1,opt,name=port\\\"\"; Host string \"json:\\\"host,omitempty\\\" protobuf:\\\"bytes,2,opt,name=host\\\"\"}",
      "type" : "Struct",
      "underlying" : 499
    }, {
      "elem" : 501,
      "name" : "*k8s.io/api/core/v1.Lifecycle",
      "type" : "Pointer",
      "underlying" : 500
    }, {
      "local-name" : "Lifecycle",
      "name" : "k8s.io/api/core/v1.Lifecycle",
      "package" : 7,
      "type" : "Named",
      "underlying" : 502
    }, {
      "fields" : [ {
        "name" : "PostStart",
        "type" : 503
      }, {
        "name" : "PreStop",
        "type" : 503
      } ],
      "name" : "struct{PostStart *k8s.io/api/core/v1.Handler \"json:\\\"postStart,omitempty\\\" protobuf:\\\"bytes,1,opt,name=postStart\\\"\"; PreStop *k8s.io/api/core/v1.Handler \"json:\\\"preStop,omitempty\\\" protobuf:\\\"bytes,2,opt,name=preStop\\\"\"}",
      "type" : "Struct",
      "underlying" : 502
    }, {
      "elem" : 485,
      "name" : "*k8s.io/api/core/v1.Handler",
      "type" : "Pointer",
      "underlying" : 503
    }, {
      "local-name" : "TerminationMessagePolicy",
      "name" : "k8s.io/api/core/v1.TerminationMessagePolicy",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "local-name" : "PullPolicy",
      "name" : "k8s.io/api/core/v1.PullPolicy",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 507,
      "name" : "*k8s.io/api/core/v1.SecurityContext",
      "type" : "Pointer",
      "underlying" : 506
    }, {
      "local-name" : "SecurityContext",
      "name" : "k8s.io/api/core/v1.SecurityContext",
      "package" : 7,
      "type" : "Named",
      "underlying" : 508
    }, {
      "fields" : [ {
        "name" : "Capabilities",
        "type" : 509
      }, {
        "name" : "Privileged",
        "type" : 58
      }, {
        "name" : "SELinuxOptions",
        "type" : 514
      }, {
        "name" : "WindowsOptions",
        "type" : 517
      }, {
        "name" : "RunAsUser",
        "type" : 238
      }, {
        "name" : "RunAsGroup",
        "type" : 238
      }, {
        "name" : "RunAsNonRoot",
        "type" : 58
      }, {
        "name" : "ReadOnlyRootFilesystem",
        "type" : 58
      }, {
        "name" : "AllowPrivilegeEscalation",
        "type" : 58
      }, {
        "name" : "ProcMount",
        "type" : 520
      } ],
      "name" : "struct{Capabilities *k8s.io/api/core/v1.Capabilities \"json:\\\"capabilities,omitempty\\\" protobuf:\\\"bytes,1,opt,name=capabilities\\\"\"; Privileged *bool \"json:\\\"privileged,omitempty\\\" protobuf:\\\"varint,2,opt,name=privileged\\\"\"; SELinuxOptions *k8s.io/api/core/v1.SELinuxOptions \"json:\\\"seLinuxOptions,omitempty\\\" protobuf:\\\"bytes,3,opt,name=seLinuxOptions\\\"\"; WindowsOptions *k8s.io/api/core/v1.WindowsSecurityContextOptions \"json:\\\"windowsOptions,omitempty\\\" protobuf:\\\"bytes,10,opt,name=windowsOptions\\\"\"; RunAsUser *int64 \"json:\\\"runAsUser,omitempty\\\" protobuf:\\\"varint,4,opt,name=runAsUser\\\"\"; RunAsGroup *int64 \"json:\\\"runAsGroup,omitempty\\\" protobuf:\\\"varint,8,opt,name=runAsGroup\\\"\"; RunAsNonRoot *bool \"json:\\\"runAsNonRoot,omitempty\\\" protobuf:\\\"varint,5,opt,name=runAsNonRoot\\\"\"; ReadOnlyRootFilesystem *bool \"json:\\\"readOnlyRootFilesystem,omitempty\\\" protobuf:\\\"varint,6,opt,name=readOnlyRootFilesystem\\\"\"; AllowPrivilegeEscalation *bool \"json:\\\"allowPrivilegeEscalation,omitempty\\\" protobuf:\\\"varint,7,opt,name=allowPrivilegeEscalation\\\"\"; ProcMount *k8s.io/api/core/v1.ProcMountType \"json:\\\"procMount,omitempty\\\" protobuf:\\\"bytes,9,opt,name=procMount\\\"\"}",
      "type" : "Struct",
      "underlying" : 508
    }, {
      "elem" : 510,
      "name" : "*k8s.io/api/core/v1.Capabilities",
      "type" : "Pointer",
      "underlying" : 509
    }, {
      "local-name" : "Capabilities",
      "name" : "k8s.io/api/core/v1.Capabilities",
      "package" : 7,
      "type" : "Named",
      "underlying" : 511
    }, {
      "fields" : [ {
        "name" : "Add",
        "type" : 512
      }, {
        "name" : "Drop",
        "type" : 512
      } ],
      "name" : "struct{Add []k8s.io/api/core/v1.Capability \"json:\\\"add,omitempty\\\" protobuf:\\\"bytes,1,rep,name=add,casttype=Capability\\\"\"; Drop []k8s.io/api/core/v1.Capability \"json:\\\"drop,omitempty\\\" protobuf:\\\"bytes,2,rep,name=drop,casttype=Capability\\\"\"}",
      "type" : "Struct",
      "underlying" : 511
    }, {
      "elem" : 513,
      "name" : "[]k8s.io/api/core/v1.Capability",
      "type" : "Slice",
      "underlying" : 512
    }, {
      "local-name" : "Capability",
      "name" : "k8s.io/api/core/v1.Capability",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 515,
      "name" : "*k8s.io/api/core/v1.SELinuxOptions",
      "type" : "Pointer",
      "underlying" : 514
    }, {
      "local-name" : "SELinuxOptions",
      "name" : "k8s.io/api/core/v1.SELinuxOptions",
      "package" : 7,
      "type" : "Named",
      "underlying" : 516
    }, {
      "fields" : [ {
        "name" : "User",
        "type" : 8
      }, {
        "name" : "Role",
        "type" : 8
      }, {
        "name" : "Type",
        "type" : 8
      }, {
        "name" : "Level",
        "type" : 8
      } ],
      "name" : "struct{User string \"json:\\\"user,omitempty\\\" protobuf:\\\"bytes,1,opt,name=user\\\"\"; Role string \"json:\\\"role,omitempty\\\" protobuf:\\\"bytes,2,opt,name=role\\\"\"; Type string \"json:\\\"type,omitempty\\\" protobuf:\\\"bytes,3,opt,name=type\\\"\"; Level string \"json:\\\"level,omitempty\\\" protobuf:\\\"bytes,4,opt,name=level\\\"\"}",
      "type" : "Struct",
      "underlying" : 516
    }, {
      "elem" : 518,
      "name" : "*k8s.io/api/core/v1.WindowsSecurityContextOptions",
      "type" : "Pointer",
      "underlying" : 517
    }, {
      "local-name" : "WindowsSecurityContextOptions",
      "name" : "k8s.io/api/core/v1.WindowsSecurityContextOptions",
      "package" : 7,
      "type" : "Named",
      "underlying" : 519
    }, {
      "fields" : [ {
        "name" : "GMSACredentialSpecName",
        "type" : 69
      }, {
        "name" : "GMSACredentialSpec",
        "type" : 69
      }, {
        "name" : "RunAsUserName",
        "type" : 69
      } ],
      "name" : "struct{GMSACredentialSpecName *string \"json:\\\"gmsaCredentialSpecName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=gmsaCredentialSpecName\\\"\"; GMSACredentialSpec *string \"json:\\\"gmsaCredentialSpec,omitempty\\\" protobuf:\\\"bytes,2,opt,name=gmsaCredentialSpec\\\"\"; RunAsUserName *string \"json:\\\"runAsUserName,omitempty\\\" protobuf:\\\"bytes,3,opt,name=runAsUserName\\\"\"}",
      "type" : "Struct",
      "underlying" : 519
    }, {
      "elem" : 521,
      "name" : "*k8s.io/api/core/v1.ProcMountType",
      "type" : "Pointer",
      "underlying" : 520
    }, {
      "local-name" : "ProcMountType",
      "name" : "k8s.io/api/core/v1.ProcMountType",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 523,
      "name" : "[]k8s.io/api/core/v1.EphemeralContainer",
      "type" : "Slice",
      "underlying" : 522
    }, {
      "local-name" : "EphemeralContainer",
      "name" : "k8s.io/api/core/v1.EphemeralContainer",
      "package" : 7,
      "type" : "Named",
      "underlying" : 524
    }, {
      "fields" : [ {
        "name" : "EphemeralContainerCommon",
        "type" : 525
      }, {
        "name" : "TargetContainerName",
        "type" : 8
      } ],
      "name" : "struct{k8s.io/api/core/v1.EphemeralContainerCommon \"json:\\\",inline\\\" protobuf:\\\"bytes,1,req\\\"\"; TargetContainerName string \"json:\\\"targetContainerName,omitempty\\\" protobuf:\\\"bytes,2,opt,name=targetContainerName\\\"\"}",
      "type" : "Struct",
      "underlying" : 524
    }, {
      "local-name" : "EphemeralContainerCommon",
      "name" : "k8s.io/api/core/v1.EphemeralContainerCommon",
      "package" : 7,
      "type" : "Named",
      "underlying" : 526
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "Image",
        "type" : 8
      }, {
        "name" : "Command",
        "type" : 65
      }, {
        "name" : "Args",
        "type" : 65
      }, {
        "name" : "WorkingDir",
        "type" : 8
      }, {
        "name" : "Ports",
        "type" : 446
      }, {
        "name" : "EnvFrom",
        "type" : 450
      }, {
        "name" : "Env",
        "type" : 458
      }, {
        "name" : "Resources",
        "type" : 469
      }, {
        "name" : "VolumeMounts",
        "type" : 474
      }, {
        "name" : "VolumeDevices",
        "type" : 479
      }, {
        "name" : "LivenessProbe",
        "type" : 482
      }, {
        "name" : "ReadinessProbe",
        "type" : 482
      }, {
        "name" : "StartupProbe",
        "type" : 482
      }, {
        "name" : "Lifecycle",
        "type" : 500
      }, {
        "name" : "TerminationMessagePath",
        "type" : 8
      }, {
        "name" : "TerminationMessagePolicy",
        "type" : 504
      }, {
        "name" : "ImagePullPolicy",
        "type" : 505
      }, {
        "name" : "SecurityContext",
        "type" : 506
      }, {
        "name" : "Stdin",
        "type" : 35
      }, {
        "name" : "StdinOnce",
        "type" : 35
      }, {
        "name" : "TTY",
        "type" : 35
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; Image string \"json:\\\"image,omitempty\\\" protobuf:\\\"bytes,2,opt,name=image\\\"\"; Command []string \"json:\\\"command,omitempty\\\" protobuf:\\\"bytes,3,rep,name=command\\\"\"; Args []string \"json:\\\"args,omitempty\\\" protobuf:\\\"bytes,4,rep,name=args\\\"\"; WorkingDir string \"json:\\\"workingDir,omitempty\\\" protobuf:\\\"bytes,5,opt,name=workingDir\\\"\"; Ports []k8s.io/api/core/v1.ContainerPort \"json:\\\"ports,omitempty\\\" protobuf:\\\"bytes,6,rep,name=ports\\\"\"; EnvFrom []k8s.io/api/core/v1.EnvFromSource \"json:\\\"envFrom,omitempty\\\" protobuf:\\\"bytes,19,rep,name=envFrom\\\"\"; Env []k8s.io/api/core/v1.EnvVar \"json:\\\"env,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"name\\\" protobuf:\\\"bytes,7,rep,name=env\\\"\"; Resources k8s.io/api/core/v1.ResourceRequirements \"json:\\\"resources,omitempty\\\" protobuf:\\\"bytes,8,opt,name=resources\\\"\"; VolumeMounts []k8s.io/api/core/v1.VolumeMount \"json:\\\"volumeMounts,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"mountPath\\\" protobuf:\\\"bytes,9,rep,name=volumeMounts\\\"\"; VolumeDevices []k8s.io/api/core/v1.VolumeDevice \"json:\\\"volumeDevices,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"devicePath\\\" protobuf:\\\"bytes,21,rep,name=volumeDevices\\\"\"; LivenessProbe *k8s.io/api/core/v1.Probe \"json:\\\"livenessProbe,omitempty\\\" protobuf:\\\"bytes,10,opt,name=livenessProbe\\\"\"; ReadinessProbe *k8s.io/api/core/v1.Probe \"json:\\\"readinessProbe,omitempty\\\" protobuf:\\\"bytes,11,opt,name=readinessProbe\\\"\"; StartupProbe *k8s.io/api/core/v1.Probe \"json:\\\"startupProbe,omitempty\\\" protobuf:\\\"bytes,22,opt,name=startupProbe\\\"\"; Lifecycle *k8s.io/api/core/v1.Lifecycle \"json:\\\"lifecycle,omitempty\\\" protobuf:\\\"bytes,12,opt,name=lifecycle\\\"\"; TerminationMessagePath string \"json:\\\"terminationMessagePath,omitempty\\\" protobuf:\\\"bytes,13,opt,name=terminationMessagePath\\\"\"; TerminationMessagePolicy k8s.io/api/core/v1.TerminationMessagePolicy \"json:\\\"terminationMessagePolicy,omitempty\\\" protobuf:\\\"bytes,20,opt,name=terminationMessagePolicy,casttype=TerminationMessagePolicy\\\"\"; ImagePullPolicy k8s.io/api/core/v1.PullPolicy \"json:\\\"imagePullPolicy,omitempty\\\" protobuf:\\\"bytes,14,opt,name=imagePullPolicy,casttype=PullPolicy\\\"\"; SecurityContext *k8s.io/api/core/v1.SecurityContext \"json:\\\"securityContext,omitempty\\\" protobuf:\\\"bytes,15,opt,name=securityContext\\\"\"; Stdin bool \"json:\\\"stdin,omitempty\\\" protobuf:\\\"varint,16,opt,name=stdin\\\"\"; StdinOnce bool \"json:\\\"stdinOnce,omitempty\\\" protobuf:\\\"varint,17,opt,name=stdinOnce\\\"\"; TTY bool \"json:\\\"tty,omitempty\\\" protobuf:\\\"varint,18,opt,name=tty\\\"\"}",
      "type" : "Struct",
      "underlying" : 526
    }, {
      "local-name" : "RestartPolicy",
      "name" : "k8s.io/api/core/v1.RestartPolicy",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "local-name" : "DNSPolicy",
      "name" : "k8s.io/api/core/v1.DNSPolicy",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 530,
      "name" : "*k8s.io/api/core/v1.PodSecurityContext",
      "type" : "Pointer",
      "underlying" : 529
    }, {
      "local-name" : "PodSecurityContext",
      "name" : "k8s.io/api/core/v1.PodSecurityContext",
      "package" : 7,
      "type" : "Named",
      "underlying" : 531
    }, {
      "fields" : [ {
        "name" : "SELinuxOptions",
        "type" : 514
      }, {
        "name" : "WindowsOptions",
        "type" : 517
      }, {
        "name" : "RunAsUser",
        "type" : 238
      }, {
        "name" : "RunAsGroup",
        "type" : 238
      }, {
        "name" : "RunAsNonRoot",
        "type" : 58
      }, {
        "name" : "SupplementalGroups",
        "type" : 250
      }, {
        "name" : "FSGroup",
        "type" : 238
      }, {
        "name" : "Sysctls",
        "type" : 532
      } ],
      "name" : "struct{SELinuxOptions *k8s.io/api/core/v1.SELinuxOptions \"json:\\\"seLinuxOptions,omitempty\\\" protobuf:\\\"bytes,1,opt,name=seLinuxOptions\\\"\"; WindowsOptions *k8s.io/api/core/v1.WindowsSecurityContextOptions \"json:\\\"windowsOptions,omitempty\\\" protobuf:\\\"bytes,8,opt,name=windowsOptions\\\"\"; RunAsUser *int64 \"json:\\\"runAsUser,omitempty\\\" protobuf:\\\"varint,2,opt,name=runAsUser\\\"\"; RunAsGroup *int64 \"json:\\\"runAsGroup,omitempty\\\" protobuf:\\\"varint,6,opt,name=runAsGroup\\\"\"; RunAsNonRoot *bool \"json:\\\"runAsNonRoot,omitempty\\\" protobuf:\\\"varint,3,opt,name=runAsNonRoot\\\"\"; SupplementalGroups []int64 \"json:\\\"supplementalGroups,omitempty\\\" protobuf:\\\"varint,4,rep,name=supplementalGroups\\\"\"; FSGroup *int64 \"json:\\\"fsGroup,omitempty\\\" protobuf:\\\"varint,5,opt,name=fsGroup\\\"\"; Sysctls []k8s.io/api/core/v1.Sysctl \"json:\\\"sysctls,omitempty\\\" protobuf:\\\"bytes,7,rep,name=sysctls\\\"\"}",
      "type" : "Struct",
      "underlying" : 531
    }, {
      "elem" : 533,
      "name" : "[]k8s.io/api/core/v1.Sysctl",
      "type" : "Slice",
      "underlying" : 532
    }, {
      "local-name" : "Sysctl",
      "name" : "k8s.io/api/core/v1.Sysctl",
      "package" : 7,
      "type" : "Named",
      "underlying" : 496
    }, {
      "elem" : 354,
      "name" : "[]k8s.io/api/core/v1.LocalObjectReference",
      "type" : "Slice",
      "underlying" : 534
    }, {
      "elem" : 536,
      "name" : "*k8s.io/api/core/v1.Affinity",
      "type" : "Pointer",
      "underlying" : 535
    }, {
      "local-name" : "Affinity",
      "name" : "k8s.io/api/core/v1.Affinity",
      "package" : 7,
      "type" : "Named",
      "underlying" : 537
    }, {
      "fields" : [ {
        "name" : "NodeAffinity",
        "type" : 538
      }, {
        "name" : "PodAffinity",
        "type" : 554
      }, {
        "name" : "PodAntiAffinity",
        "type" : 563
      } ],
      "name" : "struct{NodeAffinity *k8s.io/api/core/v1.NodeAffinity \"json:\\\"nodeAffinity,omitempty\\\" protobuf:\\\"bytes,1,opt,name=nodeAffinity\\\"\"; PodAffinity *k8s.io/api/core/v1.PodAffinity \"json:\\\"podAffinity,omitempty\\\" protobuf:\\\"bytes,2,opt,name=podAffinity\\\"\"; PodAntiAffinity *k8s.io/api/core/v1.PodAntiAffinity \"json:\\\"podAntiAffinity,omitempty\\\" protobuf:\\\"bytes,3,opt,name=podAntiAffinity\\\"\"}",
      "type" : "Struct",
      "underlying" : 537
    }, {
      "elem" : 539,
      "name" : "*k8s.io/api/core/v1.NodeAffinity",
      "type" : "Pointer",
      "underlying" : 538
    }, {
      "local-name" : "NodeAffinity",
      "name" : "k8s.io/api/core/v1.NodeAffinity",
      "package" : 7,
      "type" : "Named",
      "underlying" : 540
    }, {
      "fields" : [ {
        "name" : "RequiredDuringSchedulingIgnoredDuringExecution",
        "type" : 541
      }, {
        "name" : "PreferredDuringSchedulingIgnoredDuringExecution",
        "type" : 551
      } ],
      "name" : "struct{RequiredDuringSchedulingIgnoredDuringExecution *k8s.io/api/core/v1.NodeSelector \"json:\\\"requiredDuringSchedulingIgnoredDuringExecution,omitempty\\\" protobuf:\\\"bytes,1,opt,name=requiredDuringSchedulingIgnoredDuringExecution\\\"\"; PreferredDuringSchedulingIgnoredDuringExecution []k8s.io/api/core/v1.PreferredSchedulingTerm \"json:\\\"preferredDuringSchedulingIgnoredDuringExecution,omitempty\\\" protobuf:\\\"bytes,2,rep,name=preferredDuringSchedulingIgnoredDuringExecution\\\"\"}",
      "type" : "Struct",
      "underlying" : 540
    }, {
      "elem" : 542,
      "name" : "*k8s.io/api/core/v1.NodeSelector",
      "type" : "Pointer",
      "underlying" : 541
    }, {
      "local-name" : "NodeSelector",
      "name" : "k8s.io/api/core/v1.NodeSelector",
      "package" : 7,
      "type" : "Named",
      "underlying" : 543
    }, {
      "fields" : [ {
        "name" : "NodeSelectorTerms",
        "type" : 544
      } ],
      "name" : "struct{NodeSelectorTerms []k8s.io/api/core/v1.NodeSelectorTerm \"json:\\\"nodeSelectorTerms\\\" protobuf:\\\"bytes,1,rep,name=nodeSelectorTerms\\\"\"}",
      "type" : "Struct",
      "underlying" : 543
    }, {
      "elem" : 545,
      "name" : "[]k8s.io/api/core/v1.NodeSelectorTerm",
      "type" : "Slice",
      "underlying" : 544
    }, {
      "local-name" : "NodeSelectorTerm",
      "name" : "k8s.io/api/core/v1.NodeSelectorTerm",
      "package" : 7,
      "type" : "Named",
      "underlying" : 546
    }, {
      "fields" : [ {
        "name" : "MatchExpressions",
        "type" : 547
      }, {
        "name" : "MatchFields",
        "type" : 547
      } ],
      "name" : "struct{MatchExpressions []k8s.io/api/core/v1.NodeSelectorRequirement \"json:\\\"matchExpressions,omitempty\\\" protobuf:\\\"bytes,1,rep,name=matchExpressions\\\"\"; MatchFields []k8s.io/api/core/v1.NodeSelectorRequirement \"json:\\\"matchFields,omitempty\\\" protobuf:\\\"bytes,2,rep,name=matchFields\\\"\"}",
      "type" : "Struct",
      "underlying" : 546
    }, {
      "elem" : 548,
      "name" : "[]k8s.io/api/core/v1.NodeSelectorRequirement",
      "type" : "Slice",
      "underlying" : 547
    }, {
      "local-name" : "NodeSelectorRequirement",
      "name" : "k8s.io/api/core/v1.NodeSelectorRequirement",
      "package" : 7,
      "type" : "Named",
      "underlying" : 549
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 8
      }, {
        "name" : "Operator",
        "type" : 550
      }, {
        "name" : "Values",
        "type" : 65
      } ],
      "name" : "struct{Key string \"json:\\\"key\\\" protobuf:\\\"bytes,1,opt,name=key\\\"\"; Operator k8s.io/api/core/v1.NodeSelectorOperator \"json:\\\"operator\\\" protobuf:\\\"bytes,2,opt,name=operator,casttype=NodeSelectorOperator\\\"\"; Values []string \"json:\\\"values,omitempty\\\" protobuf:\\\"bytes,3,rep,name=values\\\"\"}",
      "type" : "Struct",
      "underlying" : 549
    }, {
      "local-name" : "NodeSelectorOperator",
      "name" : "k8s.io/api/core/v1.NodeSelectorOperator",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 552,
      "name" : "[]k8s.io/api/core/v1.PreferredSchedulingTerm",
      "type" : "Slice",
      "underlying" : 551
    }, {
      "local-name" : "PreferredSchedulingTerm",
      "name" : "k8s.io/api/core/v1.PreferredSchedulingTerm",
      "package" : 7,
      "type" : "Named",
      "underlying" : 553
    }, {
      "fields" : [ {
        "name" : "Weight",
        "type" : 27
      }, {
        "name" : "Preference",
        "type" : 545
      } ],
      "name" : "struct{Weight int32 \"json:\\\"weight\\\" protobuf:\\\"varint,1,opt,name=weight\\\"\"; Preference k8s.io/api/core/v1.NodeSelectorTerm \"json:\\\"preference\\\" protobuf:\\\"bytes,2,opt,name=preference\\\"\"}",
      "type" : "Struct",
      "underlying" : 553
    }, {
      "elem" : 555,
      "name" : "*k8s.io/api/core/v1.PodAffinity",
      "type" : "Pointer",
      "underlying" : 554
    }, {
      "local-name" : "PodAffinity",
      "name" : "k8s.io/api/core/v1.PodAffinity",
      "package" : 7,
      "type" : "Named",
      "underlying" : 556
    }, {
      "fields" : [ {
        "name" : "RequiredDuringSchedulingIgnoredDuringExecution",
        "type" : 557
      }, {
        "name" : "PreferredDuringSchedulingIgnoredDuringExecution",
        "type" : 560
      } ],
      "name" : "struct{RequiredDuringSchedulingIgnoredDuringExecution []k8s.io/api/core/v1.PodAffinityTerm \"json:\\\"requiredDuringSchedulingIgnoredDuringExecution,omitempty\\\" protobuf:\\\"bytes,1,rep,name=requiredDuringSchedulingIgnoredDuringExecution\\\"\"; PreferredDuringSchedulingIgnoredDuringExecution []k8s.io/api/core/v1.WeightedPodAffinityTerm \"json:\\\"preferredDuringSchedulingIgnoredDuringExecution,omitempty\\\" protobuf:\\\"bytes,2,rep,name=preferredDuringSchedulingIgnoredDuringExecution\\\"\"}",
      "type" : "Struct",
      "underlying" : 556
    }, {
      "elem" : 558,
      "name" : "[]k8s.io/api/core/v1.PodAffinityTerm",
      "type" : "Slice",
      "underlying" : 557
    }, {
      "local-name" : "PodAffinityTerm",
      "name" : "k8s.io/api/core/v1.PodAffinityTerm",
      "package" : 7,
      "type" : "Named",
      "underlying" : 559
    }, {
      "fields" : [ {
        "name" : "LabelSelector",
        "type" : 279
      }, {
        "name" : "Namespaces",
        "type" : 65
      }, {
        "name" : "TopologyKey",
        "type" : 8
      } ],
      "name" : "struct{LabelSelector *k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector \"json:\\\"labelSelector,omitempty\\\" protobuf:\\\"bytes,1,opt,name=labelSelector\\\"\"; Namespaces []string \"json:\\\"namespaces,omitempty\\\" protobuf:\\\"bytes,2,rep,name=namespaces\\\"\"; TopologyKey string \"json:\\\"topologyKey\\\" protobuf:\\\"bytes,3,opt,name=topologyKey\\\"\"}",
      "type" : "Struct",
      "underlying" : 559
    }, {
      "elem" : 561,
      "name" : "[]k8s.io/api/core/v1.WeightedPodAffinityTerm",
      "type" : "Slice",
      "underlying" : 560
    }, {
      "local-name" : "WeightedPodAffinityTerm",
      "name" : "k8s.io/api/core/v1.WeightedPodAffinityTerm",
      "package" : 7,
      "type" : "Named",
      "underlying" : 562
    }, {
      "fields" : [ {
        "name" : "Weight",
        "type" : 27
      }, {
        "name" : "PodAffinityTerm",
        "type" : 558
      } ],
      "name" : "struct{Weight int32 \"json:\\\"weight\\\" protobuf:\\\"varint,1,opt,name=weight\\\"\"; PodAffinityTerm k8s.io/api/core/v1.PodAffinityTerm \"json:\\\"podAffinityTerm\\\" protobuf:\\\"bytes,2,opt,name=podAffinityTerm\\\"\"}",
      "type" : "Struct",
      "underlying" : 562
    }, {
      "elem" : 564,
      "name" : "*k8s.io/api/core/v1.PodAntiAffinity",
      "type" : "Pointer",
      "underlying" : 563
    }, {
      "local-name" : "PodAntiAffinity",
      "name" : "k8s.io/api/core/v1.PodAntiAffinity",
      "package" : 7,
      "type" : "Named",
      "underlying" : 556
    }, {
      "elem" : 566,
      "name" : "[]k8s.io/api/core/v1.Toleration",
      "type" : "Slice",
      "underlying" : 565
    }, {
      "local-name" : "Toleration",
      "name" : "k8s.io/api/core/v1.Toleration",
      "package" : 7,
      "type" : "Named",
      "underlying" : 567
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 8
      }, {
        "name" : "Operator",
        "type" : 568
      }, {
        "name" : "Value",
        "type" : 8
      }, {
        "name" : "Effect",
        "type" : 569
      }, {
        "name" : "TolerationSeconds",
        "type" : 238
      } ],
      "name" : "struct{Key string \"json:\\\"key,omitempty\\\" protobuf:\\\"bytes,1,opt,name=key\\\"\"; Operator k8s.io/api/core/v1.TolerationOperator \"json:\\\"operator,omitempty\\\" protobuf:\\\"bytes,2,opt,name=operator,casttype=TolerationOperator\\\"\"; Value string \"json:\\\"value,omitempty\\\" protobuf:\\\"bytes,3,opt,name=value\\\"\"; Effect k8s.io/api/core/v1.TaintEffect \"json:\\\"effect,omitempty\\\" protobuf:\\\"bytes,4,opt,name=effect,casttype=TaintEffect\\\"\"; TolerationSeconds *int64 \"json:\\\"tolerationSeconds,omitempty\\\" protobuf:\\\"varint,5,opt,name=tolerationSeconds\\\"\"}",
      "type" : "Struct",
      "underlying" : 567
    }, {
      "local-name" : "TolerationOperator",
      "name" : "k8s.io/api/core/v1.TolerationOperator",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "local-name" : "TaintEffect",
      "name" : "k8s.io/api/core/v1.TaintEffect",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 571,
      "name" : "[]k8s.io/api/core/v1.HostAlias",
      "type" : "Slice",
      "underlying" : 570
    }, {
      "local-name" : "HostAlias",
      "name" : "k8s.io/api/core/v1.HostAlias",
      "package" : 7,
      "type" : "Named",
      "underlying" : 572
    }, {
      "fields" : [ {
        "name" : "IP",
        "type" : 8
      }, {
        "name" : "Hostnames",
        "type" : 65
      } ],
      "name" : "struct{IP string \"json:\\\"ip,omitempty\\\" protobuf:\\\"bytes,1,opt,name=ip\\\"\"; Hostnames []string \"json:\\\"hostnames,omitempty\\\" protobuf:\\\"bytes,2,rep,name=hostnames\\\"\"}",
      "type" : "Struct",
      "underlying" : 572
    }, {
      "elem" : 574,
      "name" : "*k8s.io/api/core/v1.PodDNSConfig",
      "type" : "Pointer",
      "underlying" : 573
    }, {
      "local-name" : "PodDNSConfig",
      "name" : "k8s.io/api/core/v1.PodDNSConfig",
      "package" : 7,
      "type" : "Named",
      "underlying" : 575
    }, {
      "fields" : [ {
        "name" : "Nameservers",
        "type" : 65
      }, {
        "name" : "Searches",
        "type" : 65
      }, {
        "name" : "Options",
        "type" : 576
      } ],
      "name" : "struct{Nameservers []string \"json:\\\"nameservers,omitempty\\\" protobuf:\\\"bytes,1,rep,name=nameservers\\\"\"; Searches []string \"json:\\\"searches,omitempty\\\" protobuf:\\\"bytes,2,rep,name=searches\\\"\"; Options []k8s.io/api/core/v1.PodDNSConfigOption \"json:\\\"options,omitempty\\\" protobuf:\\\"bytes,3,rep,name=options\\\"\"}",
      "type" : "Struct",
      "underlying" : 575
    }, {
      "elem" : 577,
      "name" : "[]k8s.io/api/core/v1.PodDNSConfigOption",
      "type" : "Slice",
      "underlying" : 576
    }, {
      "local-name" : "PodDNSConfigOption",
      "name" : "k8s.io/api/core/v1.PodDNSConfigOption",
      "package" : 7,
      "type" : "Named",
      "underlying" : 578
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "Value",
        "type" : 69
      } ],
      "name" : "struct{Name string \"json:\\\"name,omitempty\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; Value *string \"json:\\\"value,omitempty\\\" protobuf:\\\"bytes,2,opt,name=value\\\"\"}",
      "type" : "Struct",
      "underlying" : 578
    }, {
      "elem" : 580,
      "name" : "[]k8s.io/api/core/v1.PodReadinessGate",
      "type" : "Slice",
      "underlying" : 579
    }, {
      "local-name" : "PodReadinessGate",
      "name" : "k8s.io/api/core/v1.PodReadinessGate",
      "package" : 7,
      "type" : "Named",
      "underlying" : 581
    }, {
      "fields" : [ {
        "name" : "ConditionType",
        "type" : 582
      } ],
      "name" : "struct{ConditionType k8s.io/api/core/v1.PodConditionType \"json:\\\"conditionType\\\" protobuf:\\\"bytes,1,opt,name=conditionType,casttype=PodConditionType\\\"\"}",
      "type" : "Struct",
      "underlying" : 581
    }, {
      "local-name" : "PodConditionType",
      "name" : "k8s.io/api/core/v1.PodConditionType",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 584,
      "name" : "*k8s.io/api/core/v1.PreemptionPolicy",
      "type" : "Pointer",
      "underlying" : 583
    }, {
      "local-name" : "PreemptionPolicy",
      "name" : "k8s.io/api/core/v1.PreemptionPolicy",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 586,
      "name" : "[]k8s.io/api/core/v1.TopologySpreadConstraint",
      "type" : "Slice",
      "underlying" : 585
    }, {
      "local-name" : "TopologySpreadConstraint",
      "name" : "k8s.io/api/core/v1.TopologySpreadConstraint",
      "package" : 7,
      "type" : "Named",
      "underlying" : 587
    }, {
      "fields" : [ {
        "name" : "MaxSkew",
        "type" : 27
      }, {
        "name" : "TopologyKey",
        "type" : 8
      }, {
        "name" : "WhenUnsatisfiable",
        "type" : 588
      }, {
        "name" : "LabelSelector",
        "type" : 279
      } ],
      "name" : "struct{MaxSkew int32 \"json:\\\"maxSkew\\\" protobuf:\\\"varint,1,opt,name=maxSkew\\\"\"; TopologyKey string \"json:\\\"topologyKey\\\" protobuf:\\\"bytes,2,opt,name=topologyKey\\\"\"; WhenUnsatisfiable k8s.io/api/core/v1.UnsatisfiableConstraintAction \"json:\\\"whenUnsatisfiable\\\" protobuf:\\\"bytes,3,opt,name=whenUnsatisfiable,casttype=UnsatisfiableConstraintAction\\\"\"; LabelSelector *k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector \"json:\\\"labelSelector,omitempty\\\" protobuf:\\\"bytes,4,opt,name=labelSelector\\\"\"}",
      "type" : "Struct",
      "underlying" : 587
    }, {
      "local-name" : "UnsatisfiableConstraintAction",
      "name" : "k8s.io/api/core/v1.UnsatisfiableConstraintAction",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "local-name" : "Scope",
      "name" : "k8s.io/apimachinery/pkg/conversion.Scope",
      "package" : 8,
      "type" : "Named",
      "underlying" : 590
    }, {
      "methods" : [ {
        "name" : "Convert",
        "type" : 591
      }, {
        "name" : "DefaultConvert",
        "type" : 591
      }, {
        "name" : "DestTag",
        "type" : 602
      }, {
        "name" : "Flags",
        "type" : 605
      }, {
        "name" : "Meta",
        "type" : 607
      }, {
        "name" : "SrcTag",
        "type" : 602
      } ],
      "name" : "interface{Convert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DefaultConvert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DestTag() reflect.StructTag; Flags() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags; Meta() *k8s.io/apimachinery/pkg/conversion.Meta; SrcTag() reflect.StructTag}",
      "type" : "Interface",
      "underlying" : 590
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error",
      "params" : 592,
      "recv" : 1,
      "results" : 596,
      "type" : "Signature",
      "underlying" : 591,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 593
      }, {
        "name" : "dest",
        "type" : 593
      }, {
        "name" : "flags",
        "type" : 594
      } ],
      "name" : "(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 592
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 593
    }, {
      "local-name" : "FieldMatchingFlags",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "package" : 8,
      "type" : "Named",
      "underlying" : 595
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 595
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 597
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 596
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 598
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 599
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 598
    }, {
      "name" : "(error) func() string",
      "params" : 600,
      "recv" : 0,
      "results" : 601,
      "type" : "Signature",
      "underlying" : 599,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 600
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 8
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 601
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func() reflect.StructTag",
      "params" : 600,
      "recv" : 2,
      "results" : 603,
      "type" : "Signature",
      "underlying" : 602,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 604
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 603
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 9,
      "type" : "Named",
      "underlying" : 8
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "params" : 600,
      "recv" : 3,
      "results" : 606,
      "type" : "Signature",
      "underlying" : 605,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 594
      } ],
      "name" : "(k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 606
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func() *k8s.io/apimachinery/pkg/conversion.Meta",
      "params" : 600,
      "recv" : 4,
      "results" : 608,
      "type" : "Signature",
      "underlying" : 607,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 609
      } ],
      "name" : "(*k8s.io/apimachinery/pkg/conversion.Meta)",
      "type" : "Tuple",
      "underlying" : 608
    }, {
      "elem" : 610,
      "name" : "*k8s.io/apimachinery/pkg/conversion.Meta",
      "type" : "Pointer",
      "underlying" : 609
    }, {
      "local-name" : "Meta",
      "name" : "k8s.io/apimachinery/pkg/conversion.Meta",
      "package" : 8,
      "type" : "Named",
      "underlying" : 611
    }, {
      "fields" : [ {
        "name" : "KeyNameMapping",
        "type" : 612
      }, {
        "name" : "Context",
        "type" : 593
      } ],
      "name" : "struct{KeyNameMapping k8s.io/apimachinery/pkg/conversion.FieldMappingFunc; Context interface{}}",
      "type" : "Struct",
      "underlying" : 611
    }, {
      "local-name" : "FieldMappingFunc",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMappingFunc",
      "package" : 8,
      "type" : "Named",
      "underlying" : 613
    }, {
      "name" : "func(key string, sourceTag reflect.StructTag, destTag reflect.StructTag) (source string, dest string)",
      "params" : 614,
      "recv" : -1,
      "results" : 615,
      "type" : "Signature",
      "underlying" : 613,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 8
      }, {
        "name" : "sourceTag",
        "type" : 604
      }, {
        "name" : "destTag",
        "type" : 604
      } ],
      "name" : "(key string, sourceTag reflect.StructTag, destTag reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 614
    }, {
      "fields" : [ {
        "name" : "source",
        "type" : 8
      }, {
        "name" : "dest",
        "type" : 8
      } ],
      "name" : "(source string, dest string)",
      "type" : "Tuple",
      "underlying" : 615
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 616
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 617
    }, {
      "elem" : 5,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.Volume",
      "type" : "Pointer",
      "underlying" : 618
    }, {
      "elem" : 318,
      "name" : "*[]k8s.io/api/core/v1.Volume",
      "type" : "Pointer",
      "underlying" : 619
    }, {
      "name" : "func([]k8s.io/kubernetes/pkg/apis/core.Volume) int",
      "params" : 621,
      "recv" : -1,
      "results" : 622,
      "type" : "Signature",
      "underlying" : 620,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 5
      } ],
      "name" : "([]k8s.io/kubernetes/pkg/apis/core.Volume)",
      "type" : "Tuple",
      "underlying" : 621
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 595
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 622
    }, {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.Volume, out *k8s.io/api/core/v1.Volume, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 624,
      "recv" : -1,
      "results" : 596,
      "type" : "Signature",
      "underlying" : 623,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 625
      }, {
        "name" : "out",
        "type" : 626
      }, {
        "name" : "s",
        "type" : 589
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.Volume, out *k8s.io/api/core/v1.Volume, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 624
    }, {
      "elem" : 6,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.Volume",
      "type" : "Pointer",
      "underlying" : 625
    }, {
      "elem" : 319,
      "name" : "*k8s.io/api/core/v1.Volume",
      "type" : "Pointer",
      "underlying" : 626
    }, {
      "elem" : 443,
      "name" : "*[]k8s.io/api/core/v1.Container",
      "type" : "Pointer",
      "underlying" : 627
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 10,
      "type" : "Basic",
      "underlying" : 628
    }, {
      "elem" : 158,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.Container",
      "type" : "Pointer",
      "underlying" : 629
    }, {
      "elem" : 522,
      "name" : "*[]k8s.io/api/core/v1.EphemeralContainer",
      "type" : "Pointer",
      "underlying" : 630
    }, {
      "elem" : 241,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.EphemeralContainer",
      "type" : "Pointer",
      "underlying" : 631
    }, {
      "elem" : 85,
      "name" : "*map[string]string",
      "type" : "Pointer",
      "underlying" : 632
    }, {
      "elem" : 247,
      "name" : "**k8s.io/kubernetes/pkg/apis/core.PodSecurityContext",
      "type" : "Pointer",
      "underlying" : 633
    }, {
      "elem" : 529,
      "name" : "**k8s.io/api/core/v1.PodSecurityContext",
      "type" : "Pointer",
      "underlying" : 634
    }, {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.PodSecurityContext, out *k8s.io/api/core/v1.PodSecurityContext, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 636,
      "recv" : -1,
      "results" : 596,
      "type" : "Signature",
      "underlying" : 635,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 247
      }, {
        "name" : "out",
        "type" : 529
      }, {
        "name" : "s",
        "type" : 589
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.PodSecurityContext, out *k8s.io/api/core/v1.PodSecurityContext, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 636
    }, {
      "elem" : 534,
      "name" : "*[]k8s.io/api/core/v1.LocalObjectReference",
      "type" : "Pointer",
      "underlying" : 637
    }, {
      "elem" : 253,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.LocalObjectReference",
      "type" : "Pointer",
      "underlying" : 638
    }, {
      "elem" : 565,
      "name" : "*[]k8s.io/api/core/v1.Toleration",
      "type" : "Pointer",
      "underlying" : 639
    }, {
      "elem" : 291,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.Toleration",
      "type" : "Pointer",
      "underlying" : 640
    }, {
      "elem" : 570,
      "name" : "*[]k8s.io/api/core/v1.HostAlias",
      "type" : "Pointer",
      "underlying" : 641
    }, {
      "elem" : 296,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.HostAlias",
      "type" : "Pointer",
      "underlying" : 642
    }, {
      "elem" : 579,
      "name" : "*[]k8s.io/api/core/v1.PodReadinessGate",
      "type" : "Pointer",
      "underlying" : 643
    }, {
      "elem" : 307,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.PodReadinessGate",
      "type" : "Pointer",
      "underlying" : 644
    }, {
      "elem" : 471,
      "name" : "*k8s.io/api/core/v1.ResourceList",
      "type" : "Pointer",
      "underlying" : 645
    }, {
      "elem" : 186,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ResourceList",
      "type" : "Pointer",
      "underlying" : 646
    }, {
      "elem" : 585,
      "name" : "*[]k8s.io/api/core/v1.TopologySpreadConstraint",
      "type" : "Pointer",
      "underlying" : 647
    }, {
      "elem" : 311,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.TopologySpreadConstraint",
      "type" : "Pointer",
      "underlying" : 648
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 597,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 8,
      "type" : 589,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 8,
      "type" : 589,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 8,
      "type" : 589,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 8,
      "type" : 589,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 315,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 589,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 597,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Volumes",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Volumes",
      "package" : 7,
      "type" : 318,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 619,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 618,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "i",
      "package" : 0,
      "type" : 595,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 597,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "InitContainers",
      "package" : 7,
      "type" : 443,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "InitContainers",
      "package" : 1,
      "type" : 158,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Containers",
      "package" : 7,
      "type" : 443,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Containers",
      "package" : 1,
      "type" : 158,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "EphemeralContainers",
      "package" : 7,
      "type" : 522,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "EphemeralContainers",
      "package" : 1,
      "type" : 241,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "RestartPolicy",
      "package" : 7,
      "type" : 527,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "RestartPolicy",
      "package" : 1,
      "type" : 245,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "TerminationGracePeriodSeconds",
      "package" : 7,
      "type" : 238,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "TerminationGracePeriodSeconds",
      "package" : 1,
      "type" : 238,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ActiveDeadlineSeconds",
      "package" : 7,
      "type" : 238,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ActiveDeadlineSeconds",
      "package" : 1,
      "type" : 238,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "DNSPolicy",
      "package" : 7,
      "type" : 528,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "DNSPolicy",
      "package" : 1,
      "type" : 246,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "NodeSelector",
      "package" : 7,
      "type" : 85,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "NodeSelector",
      "package" : 1,
      "type" : 85,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ServiceAccountName",
      "package" : 7,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ServiceAccountName",
      "package" : 1,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AutomountServiceAccountToken",
      "package" : 7,
      "type" : 58,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AutomountServiceAccountToken",
      "package" : 1,
      "type" : 58,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "NodeName",
      "package" : 7,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "NodeName",
      "package" : 1,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "SecurityContext",
      "package" : 1,
      "type" : 247,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "SecurityContext",
      "package" : 7,
      "type" : 529,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 634,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 633,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 597,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "ImagePullSecrets",
      "package" : 7,
      "type" : 534,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ImagePullSecrets",
      "package" : 1,
      "type" : 253,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Hostname",
      "package" : 7,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Hostname",
      "package" : 1,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Subdomain",
      "package" : 7,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Subdomain",
      "package" : 1,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Affinity",
      "package" : 7,
      "type" : 535,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Affinity",
      "package" : 1,
      "type" : 254,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "SchedulerName",
      "package" : 7,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "SchedulerName",
      "package" : 1,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Tolerations",
      "package" : 7,
      "type" : 565,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Tolerations",
      "package" : 1,
      "type" : 291,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "HostAliases",
      "package" : 7,
      "type" : 570,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "HostAliases",
      "package" : 1,
      "type" : 296,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "PriorityClassName",
      "package" : 7,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "PriorityClassName",
      "package" : 1,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Priority",
      "package" : 7,
      "type" : 57,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Priority",
      "package" : 1,
      "type" : 57,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "PreemptionPolicy",
      "package" : 7,
      "type" : 583,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "PreemptionPolicy",
      "package" : 1,
      "type" : 299,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "DNSConfig",
      "package" : 7,
      "type" : 573,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "DNSConfig",
      "package" : 1,
      "type" : 301,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ReadinessGates",
      "package" : 7,
      "type" : 579,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ReadinessGates",
      "package" : 1,
      "type" : 307,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "RuntimeClassName",
      "package" : 7,
      "type" : 69,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "RuntimeClassName",
      "package" : 1,
      "type" : 69,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Overhead",
      "package" : 7,
      "type" : 471,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Overhead",
      "package" : 1,
      "type" : 186,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "EnableServiceLinks",
      "package" : 7,
      "type" : 58,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "EnableServiceLinks",
      "package" : 1,
      "type" : 58,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "TopologySpreadConstraints",
      "package" : 7,
      "type" : 585,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "TopologySpreadConstraints",
      "package" : 1,
      "type" : 311,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}