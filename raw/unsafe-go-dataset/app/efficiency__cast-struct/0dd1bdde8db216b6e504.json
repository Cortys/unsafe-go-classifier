{
  "usage" : {
    "file" : "zz_generated.conversion.go",
    "label1" : "cast-struct",
    "label2" : "efficiency",
    "line" : "3261",
    "module" : "k8s.io/kubernetes",
    "pkg" : "k8s.io/kubernetes/pkg/apis/core/v1",
    "project" : "rook/rook",
    "snippet" : "out.NotReadyAddresses = *(*[]v1.EndpointAddress)(unsafe.Pointer(&in.NotReadyAddresses))",
    "version" : "v1.17.2"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 3 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 3260,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Addresses",
            "variable" : 9
          },
          "go-type" : 22,
          "kind" : "expression",
          "target" : {
            "go-type" : 19,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 22,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 23,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 3,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 23,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "EndpointAddress"
                  }
                },
                "go-type" : 22,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 59,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 59,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 60,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 6,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 60,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 60,
              "kind" : "expression",
              "target" : {
                "go-type" : 61,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Addresses",
                    "variable" : 10
                  },
                  "go-type" : 5,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3260,
      "code" : "out.Addresses = *(*[]v1.EndpointAddress)(unsafe.Pointer(&in.Addresses))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 4 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 3261,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "NotReadyAddresses",
            "variable" : 11
          },
          "go-type" : 22,
          "kind" : "expression",
          "target" : {
            "go-type" : 19,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 22,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 23,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 3,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 23,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "EndpointAddress"
                  }
                },
                "go-type" : 22,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 59,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 59,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 60,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 6,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 60,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 60,
              "kind" : "expression",
              "target" : {
                "go-type" : 61,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "NotReadyAddresses",
                    "variable" : 12
                  },
                  "go-type" : 5,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3261,
      "code" : "out.NotReadyAddresses = *(*[]v1.EndpointAddress)(unsafe.Pointer(&in.NotReadyAddresses))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 5 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 3262,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Ports",
            "variable" : 13
          },
          "go-type" : 28,
          "kind" : "expression",
          "target" : {
            "go-type" : 19,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 28,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 29,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 3,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 29,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "EndpointPort"
                  }
                },
                "go-type" : 28,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 62,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 62,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 60,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 6,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 60,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 60,
              "kind" : "expression",
              "target" : {
                "go-type" : 63,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Ports",
                    "variable" : 14
                  },
                  "go-type" : 14,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3262,
      "code" : "out.Ports = *(*[]v1.EndpointPort)(unsafe.Pointer(&in.Ports))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 3263,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 64,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 3263,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func autoConvert_core_EndpointSubset_To_v1_EndpointSubset(in *core.EndpointSubset, out *v1.EndpointSubset, s conversion.Scope) error {\n\tout.Addresses = *(*[]v1.EndpointAddress)(unsafe.Pointer(&in.Addresses))\n\tout.NotReadyAddresses = *(*[]v1.EndpointAddress)(unsafe.Pointer(&in.NotReadyAddresses))\n\tout.Ports = *(*[]v1.EndpointPort)(unsafe.Pointer(&in.Ports))\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "autoConvert_core_EndpointSubset_To_v1_EndpointSubset",
      "package" : 0,
      "type" : 0,
      "exported" : false
    } ],
    "line-end" : 3264,
    "line-start" : 3259,
    "names" : [ "autoConvert_core_EndpointSubset_To_v1_EndpointSubset" ],
    "package" : 0,
    "packages" : [ {
      "name" : "v1",
      "path" : "k8s.io/kubernetes/pkg/apis/core/v1"
    }, {
      "name" : "core",
      "path" : "k8s.io/kubernetes/pkg/apis/core"
    }, {
      "name" : "types",
      "path" : "k8s.io/apimachinery/pkg/types"
    }, {
      "name" : "v1",
      "path" : "k8s.io/api/core/v1"
    }, {
      "name" : "conversion",
      "path" : "k8s.io/apimachinery/pkg/conversion"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 5, 6, 7 ],
    "receivers" : [ ],
    "results" : [ 8 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.EndpointSubset, out *k8s.io/api/core/v1.EndpointSubset, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 1,
      "recv" : -1,
      "results" : 39,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 2
      }, {
        "name" : "out",
        "type" : 19
      }, {
        "name" : "s",
        "type" : 32
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.EndpointSubset, out *k8s.io/api/core/v1.EndpointSubset, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.EndpointSubset",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "EndpointSubset",
      "name" : "k8s.io/kubernetes/pkg/apis/core.EndpointSubset",
      "package" : 1,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "Addresses",
        "type" : 5
      }, {
        "name" : "NotReadyAddresses",
        "type" : 5
      }, {
        "name" : "Ports",
        "type" : 14
      } ],
      "name" : "struct{Addresses []k8s.io/kubernetes/pkg/apis/core.EndpointAddress; NotReadyAddresses []k8s.io/kubernetes/pkg/apis/core.EndpointAddress; Ports []k8s.io/kubernetes/pkg/apis/core.EndpointPort}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "elem" : 6,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.EndpointAddress",
      "type" : "Slice",
      "underlying" : 5
    }, {
      "local-name" : "EndpointAddress",
      "name" : "k8s.io/kubernetes/pkg/apis/core.EndpointAddress",
      "package" : 1,
      "type" : "Named",
      "underlying" : 7
    }, {
      "fields" : [ {
        "name" : "IP",
        "type" : 8
      }, {
        "name" : "Hostname",
        "type" : 8
      }, {
        "name" : "NodeName",
        "type" : 9
      }, {
        "name" : "TargetRef",
        "type" : 10
      } ],
      "name" : "struct{IP string; Hostname string; NodeName *string; TargetRef *k8s.io/kubernetes/pkg/apis/core.ObjectReference}",
      "type" : "Struct",
      "underlying" : 7
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 8
    }, {
      "elem" : 8,
      "name" : "*string",
      "type" : "Pointer",
      "underlying" : 9
    }, {
      "elem" : 11,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ObjectReference",
      "type" : "Pointer",
      "underlying" : 10
    }, {
      "local-name" : "ObjectReference",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ObjectReference",
      "package" : 1,
      "type" : "Named",
      "underlying" : 12
    }, {
      "fields" : [ {
        "name" : "Kind",
        "type" : 8
      }, {
        "name" : "Namespace",
        "type" : 8
      }, {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "UID",
        "type" : 13
      }, {
        "name" : "APIVersion",
        "type" : 8
      }, {
        "name" : "ResourceVersion",
        "type" : 8
      }, {
        "name" : "FieldPath",
        "type" : 8
      } ],
      "name" : "struct{Kind string; Namespace string; Name string; UID k8s.io/apimachinery/pkg/types.UID; APIVersion string; ResourceVersion string; FieldPath string}",
      "type" : "Struct",
      "underlying" : 12
    }, {
      "local-name" : "UID",
      "name" : "k8s.io/apimachinery/pkg/types.UID",
      "package" : 2,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 15,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.EndpointPort",
      "type" : "Slice",
      "underlying" : 14
    }, {
      "local-name" : "EndpointPort",
      "name" : "k8s.io/kubernetes/pkg/apis/core.EndpointPort",
      "package" : 1,
      "type" : "Named",
      "underlying" : 16
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "Port",
        "type" : 17
      }, {
        "name" : "Protocol",
        "type" : 18
      } ],
      "name" : "struct{Name string; Port int32; Protocol k8s.io/kubernetes/pkg/apis/core.Protocol}",
      "type" : "Struct",
      "underlying" : 16
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 17
    }, {
      "local-name" : "Protocol",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Protocol",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 20,
      "name" : "*k8s.io/api/core/v1.EndpointSubset",
      "type" : "Pointer",
      "underlying" : 19
    }, {
      "local-name" : "EndpointSubset",
      "name" : "k8s.io/api/core/v1.EndpointSubset",
      "package" : 3,
      "type" : "Named",
      "underlying" : 21
    }, {
      "fields" : [ {
        "name" : "Addresses",
        "type" : 22
      }, {
        "name" : "NotReadyAddresses",
        "type" : 22
      }, {
        "name" : "Ports",
        "type" : 28
      } ],
      "name" : "struct{Addresses []k8s.io/api/core/v1.EndpointAddress \"json:\\\"addresses,omitempty\\\" protobuf:\\\"bytes,1,rep,name=addresses\\\"\"; NotReadyAddresses []k8s.io/api/core/v1.EndpointAddress \"json:\\\"notReadyAddresses,omitempty\\\" protobuf:\\\"bytes,2,rep,name=notReadyAddresses\\\"\"; Ports []k8s.io/api/core/v1.EndpointPort \"json:\\\"ports,omitempty\\\" protobuf:\\\"bytes,3,rep,name=ports\\\"\"}",
      "type" : "Struct",
      "underlying" : 21
    }, {
      "elem" : 23,
      "name" : "[]k8s.io/api/core/v1.EndpointAddress",
      "type" : "Slice",
      "underlying" : 22
    }, {
      "local-name" : "EndpointAddress",
      "name" : "k8s.io/api/core/v1.EndpointAddress",
      "package" : 3,
      "type" : "Named",
      "underlying" : 24
    }, {
      "fields" : [ {
        "name" : "IP",
        "type" : 8
      }, {
        "name" : "Hostname",
        "type" : 8
      }, {
        "name" : "NodeName",
        "type" : 9
      }, {
        "name" : "TargetRef",
        "type" : 25
      } ],
      "name" : "struct{IP string \"json:\\\"ip\\\" protobuf:\\\"bytes,1,opt,name=ip\\\"\"; Hostname string \"json:\\\"hostname,omitempty\\\" protobuf:\\\"bytes,3,opt,name=hostname\\\"\"; NodeName *string \"json:\\\"nodeName,omitempty\\\" protobuf:\\\"bytes,4,opt,name=nodeName\\\"\"; TargetRef *k8s.io/api/core/v1.ObjectReference \"json:\\\"targetRef,omitempty\\\" protobuf:\\\"bytes,2,opt,name=targetRef\\\"\"}",
      "type" : "Struct",
      "underlying" : 24
    }, {
      "elem" : 26,
      "name" : "*k8s.io/api/core/v1.ObjectReference",
      "type" : "Pointer",
      "underlying" : 25
    }, {
      "local-name" : "ObjectReference",
      "name" : "k8s.io/api/core/v1.ObjectReference",
      "package" : 3,
      "type" : "Named",
      "underlying" : 27
    }, {
      "fields" : [ {
        "name" : "Kind",
        "type" : 8
      }, {
        "name" : "Namespace",
        "type" : 8
      }, {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "UID",
        "type" : 13
      }, {
        "name" : "APIVersion",
        "type" : 8
      }, {
        "name" : "ResourceVersion",
        "type" : 8
      }, {
        "name" : "FieldPath",
        "type" : 8
      } ],
      "name" : "struct{Kind string \"json:\\\"kind,omitempty\\\" protobuf:\\\"bytes,1,opt,name=kind\\\"\"; Namespace string \"json:\\\"namespace,omitempty\\\" protobuf:\\\"bytes,2,opt,name=namespace\\\"\"; Name string \"json:\\\"name,omitempty\\\" protobuf:\\\"bytes,3,opt,name=name\\\"\"; UID k8s.io/apimachinery/pkg/types.UID \"json:\\\"uid,omitempty\\\" protobuf:\\\"bytes,4,opt,name=uid,casttype=k8s.io/apimachinery/pkg/types.UID\\\"\"; APIVersion string \"json:\\\"apiVersion,omitempty\\\" protobuf:\\\"bytes,5,opt,name=apiVersion\\\"\"; ResourceVersion string \"json:\\\"resourceVersion,omitempty\\\" protobuf:\\\"bytes,6,opt,name=resourceVersion\\\"\"; FieldPath string \"json:\\\"fieldPath,omitempty\\\" protobuf:\\\"bytes,7,opt,name=fieldPath\\\"\"}",
      "type" : "Struct",
      "underlying" : 27
    }, {
      "elem" : 29,
      "name" : "[]k8s.io/api/core/v1.EndpointPort",
      "type" : "Slice",
      "underlying" : 28
    }, {
      "local-name" : "EndpointPort",
      "name" : "k8s.io/api/core/v1.EndpointPort",
      "package" : 3,
      "type" : "Named",
      "underlying" : 30
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "Port",
        "type" : 17
      }, {
        "name" : "Protocol",
        "type" : 31
      } ],
      "name" : "struct{Name string \"json:\\\"name,omitempty\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; Port int32 \"json:\\\"port\\\" protobuf:\\\"varint,2,opt,name=port\\\"\"; Protocol k8s.io/api/core/v1.Protocol \"json:\\\"protocol,omitempty\\\" protobuf:\\\"bytes,3,opt,name=protocol,casttype=Protocol\\\"\"}",
      "type" : "Struct",
      "underlying" : 30
    }, {
      "local-name" : "Protocol",
      "name" : "k8s.io/api/core/v1.Protocol",
      "package" : 3,
      "type" : "Named",
      "underlying" : 8
    }, {
      "local-name" : "Scope",
      "name" : "k8s.io/apimachinery/pkg/conversion.Scope",
      "package" : 4,
      "type" : "Named",
      "underlying" : 33
    }, {
      "methods" : [ {
        "name" : "Convert",
        "type" : 34
      }, {
        "name" : "DefaultConvert",
        "type" : 34
      }, {
        "name" : "DestTag",
        "type" : 45
      }, {
        "name" : "Flags",
        "type" : 48
      }, {
        "name" : "Meta",
        "type" : 50
      }, {
        "name" : "SrcTag",
        "type" : 45
      } ],
      "name" : "interface{Convert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DefaultConvert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DestTag() reflect.StructTag; Flags() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags; Meta() *k8s.io/apimachinery/pkg/conversion.Meta; SrcTag() reflect.StructTag}",
      "type" : "Interface",
      "underlying" : 33
    }, {
      "name" : "func(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error",
      "params" : 35,
      "recv" : 1,
      "results" : 39,
      "type" : "Signature",
      "underlying" : 34,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 36
      }, {
        "name" : "dest",
        "type" : 36
      }, {
        "name" : "flags",
        "type" : 37
      } ],
      "name" : "(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 35
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 36
    }, {
      "local-name" : "FieldMatchingFlags",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "package" : 4,
      "type" : "Named",
      "underlying" : 38
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 38
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 40
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 39
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 41
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 42
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 41
    }, {
      "name" : "func() string",
      "params" : 43,
      "recv" : 0,
      "results" : 44,
      "type" : "Signature",
      "underlying" : 42,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 43
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 8
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 44
    }, {
      "name" : "func() reflect.StructTag",
      "params" : 43,
      "recv" : 2,
      "results" : 46,
      "type" : "Signature",
      "underlying" : 45,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 47
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 46
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 5,
      "type" : "Named",
      "underlying" : 8
    }, {
      "name" : "func() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "params" : 43,
      "recv" : 3,
      "results" : 49,
      "type" : "Signature",
      "underlying" : 48,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 37
      } ],
      "name" : "(k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 49
    }, {
      "name" : "func() *k8s.io/apimachinery/pkg/conversion.Meta",
      "params" : 43,
      "recv" : 4,
      "results" : 51,
      "type" : "Signature",
      "underlying" : 50,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 52
      } ],
      "name" : "(*k8s.io/apimachinery/pkg/conversion.Meta)",
      "type" : "Tuple",
      "underlying" : 51
    }, {
      "elem" : 53,
      "name" : "*k8s.io/apimachinery/pkg/conversion.Meta",
      "type" : "Pointer",
      "underlying" : 52
    }, {
      "local-name" : "Meta",
      "name" : "k8s.io/apimachinery/pkg/conversion.Meta",
      "package" : 4,
      "type" : "Named",
      "underlying" : 54
    }, {
      "fields" : [ {
        "name" : "KeyNameMapping",
        "type" : 55
      }, {
        "name" : "Context",
        "type" : 36
      } ],
      "name" : "struct{KeyNameMapping k8s.io/apimachinery/pkg/conversion.FieldMappingFunc; Context interface{}}",
      "type" : "Struct",
      "underlying" : 54
    }, {
      "local-name" : "FieldMappingFunc",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMappingFunc",
      "package" : 4,
      "type" : "Named",
      "underlying" : 56
    }, {
      "name" : "func(key string, sourceTag reflect.StructTag, destTag reflect.StructTag) (source string, dest string)",
      "params" : 57,
      "recv" : -1,
      "results" : 58,
      "type" : "Signature",
      "underlying" : 56,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 8
      }, {
        "name" : "sourceTag",
        "type" : 47
      }, {
        "name" : "destTag",
        "type" : 47
      } ],
      "name" : "(key string, sourceTag reflect.StructTag, destTag reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 57
    }, {
      "fields" : [ {
        "name" : "source",
        "type" : 8
      }, {
        "name" : "dest",
        "type" : 8
      } ],
      "name" : "(source string, dest string)",
      "type" : "Tuple",
      "underlying" : 58
    }, {
      "elem" : 22,
      "name" : "*[]k8s.io/api/core/v1.EndpointAddress",
      "type" : "Pointer",
      "underlying" : 59
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 6,
      "type" : "Basic",
      "underlying" : 60
    }, {
      "elem" : 5,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.EndpointAddress",
      "type" : "Pointer",
      "underlying" : 61
    }, {
      "elem" : 28,
      "name" : "*[]k8s.io/api/core/v1.EndpointPort",
      "type" : "Pointer",
      "underlying" : 62
    }, {
      "elem" : 14,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.EndpointPort",
      "type" : "Pointer",
      "underlying" : 63
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 64
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 40,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 32,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 32,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 32,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 32,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 32,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 40,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Addresses",
      "package" : 3,
      "type" : 22,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Addresses",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "NotReadyAddresses",
      "package" : 3,
      "type" : 22,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "NotReadyAddresses",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Ports",
      "package" : 3,
      "type" : 28,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Ports",
      "package" : 1,
      "type" : 14,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}