{
  "usage" : {
    "file" : "zz_generated.conversion.go",
    "label1" : "cast-struct",
    "label2" : "efficiency",
    "line" : "7925",
    "module" : "k8s.io/kubernetes",
    "pkg" : "k8s.io/kubernetes/pkg/apis/core/v1",
    "project" : "rancher/rancher",
    "snippet" : "out.Secret = (*v1.SecretProjection)(unsafe.Pointer(in.Secret))",
    "version" : "v1.18.0"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 3 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 7, 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 7925,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Secret",
            "variable" : 9
          },
          "go-type" : 57,
          "kind" : "expression",
          "target" : {
            "go-type" : 54,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 58,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 58,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "SecretProjection"
              }
            },
            "go-type" : 57,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 57,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 110,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 110,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 110,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Secret",
                "variable" : 10
              },
              "go-type" : 5,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 7925,
      "code" : "out.Secret = (*v1.SecretProjection)(unsafe.Pointer(in.Secret))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 4 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 7926,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "DownwardAPI",
            "variable" : 11
          },
          "go-type" : 65,
          "kind" : "expression",
          "target" : {
            "go-type" : 54,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 66,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 66,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "DownwardAPIProjection"
              }
            },
            "go-type" : 65,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 65,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 110,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 110,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 110,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "DownwardAPI",
                "variable" : 12
              },
              "go-type" : 18,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 7926,
      "code" : "out.DownwardAPI = (*v1.DownwardAPIProjection)(unsafe.Pointer(in.DownwardAPI))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 5 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 7927,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ConfigMap",
            "variable" : 13
          },
          "go-type" : 77,
          "kind" : "expression",
          "target" : {
            "go-type" : 54,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 78,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 78,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "ConfigMapProjection"
              }
            },
            "go-type" : 77,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 77,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 110,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 110,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 110,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ConfigMap",
                "variable" : 14
              },
              "go-type" : 49,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 7927,
      "code" : "out.ConfigMap = (*v1.ConfigMapProjection)(unsafe.Pointer(in.ConfigMap))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6, 11 ],
      "in-vars" : [ 5, 7, 6 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 7928,
      "ast" : {
        "condition" : {
          "go-type" : 111,
          "kind" : "expression",
          "left" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "ServiceAccountToken",
              "variable" : 15
            },
            "go-type" : 51,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "in",
                "variable" : 5
              }
            },
            "type" : "selector"
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 112,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 7936,
      "code" : "if in.ServiceAccountToken != nil {\n\tin, out := &in.ServiceAccountToken, &out.ServiceAccountToken\n\t*out = new(v1.ServiceAccountTokenProjection)\n\tif err := Convert_core_ServiceAccountTokenProjection_To_v1_ServiceAccountTokenProjection(*in, *out, s); err != nil {\n\t\treturn err\n\t}\n} else {\n\tout.ServiceAccountToken = nil\n}",
      "entry" : false,
      "use-vars" : [ 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 7 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 17, 18, 7 ],
      "decl-vars" : [ 18, 17 ],
      "line-start" : 7929,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "in"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "out"
          }
        } ],
        "right" : [ {
          "go-type" : 113,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "ServiceAccountToken",
              "variable" : 15
            },
            "go-type" : 51,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "in",
                "variable" : 5
              }
            },
            "type" : "selector"
          },
          "type" : "unary"
        }, {
          "go-type" : 114,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "ServiceAccountToken",
              "variable" : 16
            },
            "go-type" : 79,
            "kind" : "expression",
            "target" : {
              "go-type" : 54,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "out",
                "variable" : 6
              }
            },
            "type" : "selector"
          },
          "type" : "unary"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 7929,
      "code" : "in, out := &in.ServiceAccountToken, &out.ServiceAccountToken",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 9 ],
      "in-vars" : [ 17, 18, 7 ],
      "exit" : false,
      "out-vars" : [ 17, 18, 7 ],
      "decl-vars" : [ ],
      "line-start" : 7930,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 79,
          "kind" : "expression",
          "target" : {
            "go-type" : 114,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 17
            }
          },
          "type" : "star"
        } ],
        "right" : [ {
          "argument" : {
            "go-type" : 80,
            "kind" : "type",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 5,
              "value" : "v1"
            },
            "type" : "identifier",
            "value" : {
              "go-type" : 80,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "ServiceAccountTokenProjection"
            }
          },
          "go-type" : 79,
          "kind" : "expression",
          "type" : "new"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 7930,
      "code" : "*out = new(v1.ServiceAccountTokenProjection)",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 10, 12 ],
      "in-vars" : [ 19 ],
      "exit" : false,
      "out-vars" : [ 19 ],
      "decl-vars" : [ ],
      "line-start" : 7931,
      "ast" : {
        "condition" : {
          "go-type" : 111,
          "kind" : "expression",
          "left" : {
            "go-type" : 91,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 19
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 112,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 7933,
      "code" : "if err := Convert_core_ServiceAccountTokenProjection_To_v1_ServiceAccountTokenProjection(*in, *out, s); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 19 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 8 ],
      "in-vars" : [ 17, 18, 7 ],
      "exit" : false,
      "out-vars" : [ 19 ],
      "decl-vars" : [ 19 ],
      "line-start" : 7931,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 51,
            "kind" : "expression",
            "target" : {
              "go-type" : 113,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "in",
                "variable" : 18
              }
            },
            "type" : "star"
          }, {
            "go-type" : 79,
            "kind" : "expression",
            "target" : {
              "go-type" : 114,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "out",
                "variable" : 17
              }
            },
            "type" : "star"
          }, {
            "go-type" : 83,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "s",
              "variable" : 7
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Convert_core_ServiceAccountTokenProjection_To_v1_ServiceAccountTokenProjection"
            }
          },
          "go-type" : 91,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 7931,
      "code" : "err := Convert_core_ServiceAccountTokenProjection_To_v1_ServiceAccountTokenProjection(*in, *out, s)",
      "entry" : false,
      "use-vars" : [ 18, 17, 7 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 19 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 7932,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 91,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 19
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 7932,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 19 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 12 ],
      "in-vars" : [ 6 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 7935,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ServiceAccountToken",
            "variable" : 16
          },
          "go-type" : 79,
          "kind" : "expression",
          "target" : {
            "go-type" : 54,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 112,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 7935,
      "code" : "out.ServiceAccountToken = nil",
      "entry" : false,
      "use-vars" : [ 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 7937,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 112,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 7937,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func autoConvert_core_VolumeProjection_To_v1_VolumeProjection(in *core.VolumeProjection, out *v1.VolumeProjection, s conversion.Scope) error {\n\tout.Secret = (*v1.SecretProjection)(unsafe.Pointer(in.Secret))\n\tout.DownwardAPI = (*v1.DownwardAPIProjection)(unsafe.Pointer(in.DownwardAPI))\n\tout.ConfigMap = (*v1.ConfigMapProjection)(unsafe.Pointer(in.ConfigMap))\n\tif in.ServiceAccountToken != nil {\n\t\tin, out := &in.ServiceAccountToken, &out.ServiceAccountToken\n\t\t*out = new(v1.ServiceAccountTokenProjection)\n\t\tif err := Convert_core_ServiceAccountTokenProjection_To_v1_ServiceAccountTokenProjection(*in, *out, s); err != nil {\n\t\t\treturn err\n\t\t}\n\t} else {\n\t\tout.ServiceAccountToken = nil\n\t}\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "autoConvert_core_VolumeProjection_To_v1_VolumeProjection",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "Convert_core_ServiceAccountTokenProjection_To_v1_ServiceAccountTokenProjection",
      "package" : 0,
      "type" : 115,
      "exported" : true
    } ],
    "line-end" : 7938,
    "line-start" : 7924,
    "names" : [ "autoConvert_core_VolumeProjection_To_v1_VolumeProjection" ],
    "package" : 0,
    "packages" : [ {
      "name" : "v1",
      "path" : "k8s.io/kubernetes/pkg/apis/core/v1"
    }, {
      "name" : "core",
      "path" : "k8s.io/kubernetes/pkg/apis/core"
    }, {
      "name" : "resource",
      "path" : "k8s.io/apimachinery/pkg/api/resource"
    }, {
      "name" : "inf",
      "path" : "gopkg.in/inf.v0"
    }, {
      "name" : "big",
      "path" : "math/big"
    }, {
      "name" : "v1",
      "path" : "k8s.io/api/core/v1"
    }, {
      "name" : "conversion",
      "path" : "k8s.io/apimachinery/pkg/conversion"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 5, 6, 7 ],
    "receivers" : [ ],
    "results" : [ 8 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.VolumeProjection, out *k8s.io/api/core/v1.VolumeProjection, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 1,
      "recv" : -1,
      "results" : 90,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 2
      }, {
        "name" : "out",
        "type" : 54
      }, {
        "name" : "s",
        "type" : 83
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.VolumeProjection, out *k8s.io/api/core/v1.VolumeProjection, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.VolumeProjection",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "VolumeProjection",
      "name" : "k8s.io/kubernetes/pkg/apis/core.VolumeProjection",
      "package" : 1,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "Secret",
        "type" : 5
      }, {
        "name" : "DownwardAPI",
        "type" : 18
      }, {
        "name" : "ConfigMap",
        "type" : 49
      }, {
        "name" : "ServiceAccountToken",
        "type" : 51
      } ],
      "name" : "struct{Secret *k8s.io/kubernetes/pkg/apis/core.SecretProjection; DownwardAPI *k8s.io/kubernetes/pkg/apis/core.DownwardAPIProjection; ConfigMap *k8s.io/kubernetes/pkg/apis/core.ConfigMapProjection; ServiceAccountToken *k8s.io/kubernetes/pkg/apis/core.ServiceAccountTokenProjection}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "elem" : 6,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.SecretProjection",
      "type" : "Pointer",
      "underlying" : 5
    }, {
      "local-name" : "SecretProjection",
      "name" : "k8s.io/kubernetes/pkg/apis/core.SecretProjection",
      "package" : 1,
      "type" : "Named",
      "underlying" : 7
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 8
      }, {
        "name" : "Items",
        "type" : 11
      }, {
        "name" : "Optional",
        "type" : 16
      } ],
      "name" : "struct{k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; Items []k8s.io/kubernetes/pkg/apis/core.KeyToPath; Optional *bool}",
      "type" : "Struct",
      "underlying" : 7
    }, {
      "local-name" : "LocalObjectReference",
      "name" : "k8s.io/kubernetes/pkg/apis/core.LocalObjectReference",
      "package" : 1,
      "type" : "Named",
      "underlying" : 9
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 10
      } ],
      "name" : "struct{Name string}",
      "type" : "Struct",
      "underlying" : 9
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 10
    }, {
      "elem" : 12,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.KeyToPath",
      "type" : "Slice",
      "underlying" : 11
    }, {
      "local-name" : "KeyToPath",
      "name" : "k8s.io/kubernetes/pkg/apis/core.KeyToPath",
      "package" : 1,
      "type" : "Named",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 10
      }, {
        "name" : "Path",
        "type" : 10
      }, {
        "name" : "Mode",
        "type" : 14
      } ],
      "name" : "struct{Key string; Path string; Mode *int32}",
      "type" : "Struct",
      "underlying" : 13
    }, {
      "elem" : 15,
      "name" : "*int32",
      "type" : "Pointer",
      "underlying" : 14
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 15
    }, {
      "elem" : 17,
      "name" : "*bool",
      "type" : "Pointer",
      "underlying" : 16
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 17
    }, {
      "elem" : 19,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.DownwardAPIProjection",
      "type" : "Pointer",
      "underlying" : 18
    }, {
      "local-name" : "DownwardAPIProjection",
      "name" : "k8s.io/kubernetes/pkg/apis/core.DownwardAPIProjection",
      "package" : 1,
      "type" : "Named",
      "underlying" : 20
    }, {
      "fields" : [ {
        "name" : "Items",
        "type" : 21
      } ],
      "name" : "struct{Items []k8s.io/kubernetes/pkg/apis/core.DownwardAPIVolumeFile}",
      "type" : "Struct",
      "underlying" : 20
    }, {
      "elem" : 22,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.DownwardAPIVolumeFile",
      "type" : "Slice",
      "underlying" : 21
    }, {
      "local-name" : "DownwardAPIVolumeFile",
      "name" : "k8s.io/kubernetes/pkg/apis/core.DownwardAPIVolumeFile",
      "package" : 1,
      "type" : "Named",
      "underlying" : 23
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 10
      }, {
        "name" : "FieldRef",
        "type" : 24
      }, {
        "name" : "ResourceFieldRef",
        "type" : 27
      }, {
        "name" : "Mode",
        "type" : 14
      } ],
      "name" : "struct{Path string; FieldRef *k8s.io/kubernetes/pkg/apis/core.ObjectFieldSelector; ResourceFieldRef *k8s.io/kubernetes/pkg/apis/core.ResourceFieldSelector; Mode *int32}",
      "type" : "Struct",
      "underlying" : 23
    }, {
      "elem" : 25,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ObjectFieldSelector",
      "type" : "Pointer",
      "underlying" : 24
    }, {
      "local-name" : "ObjectFieldSelector",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ObjectFieldSelector",
      "package" : 1,
      "type" : "Named",
      "underlying" : 26
    }, {
      "fields" : [ {
        "name" : "APIVersion",
        "type" : 10
      }, {
        "name" : "FieldPath",
        "type" : 10
      } ],
      "name" : "struct{APIVersion string; FieldPath string}",
      "type" : "Struct",
      "underlying" : 26
    }, {
      "elem" : 28,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ResourceFieldSelector",
      "type" : "Pointer",
      "underlying" : 27
    }, {
      "local-name" : "ResourceFieldSelector",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ResourceFieldSelector",
      "package" : 1,
      "type" : "Named",
      "underlying" : 29
    }, {
      "fields" : [ {
        "name" : "ContainerName",
        "type" : 10
      }, {
        "name" : "Resource",
        "type" : 10
      }, {
        "name" : "Divisor",
        "type" : 30
      } ],
      "name" : "struct{ContainerName string; Resource string; Divisor k8s.io/apimachinery/pkg/api/resource.Quantity}",
      "type" : "Struct",
      "underlying" : 29
    }, {
      "local-name" : "Quantity",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Quantity",
      "package" : 2,
      "type" : "Named",
      "underlying" : 31
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 32
      }, {
        "name" : "d",
        "type" : 36
      }, {
        "name" : "s",
        "type" : 10
      }, {
        "name" : "Format",
        "type" : 48
      } ],
      "name" : "struct{i k8s.io/apimachinery/pkg/api/resource.int64Amount; d k8s.io/apimachinery/pkg/api/resource.infDecAmount; s string; k8s.io/apimachinery/pkg/api/resource.Format}",
      "type" : "Struct",
      "underlying" : 31
    }, {
      "local-name" : "int64Amount",
      "name" : "k8s.io/apimachinery/pkg/api/resource.int64Amount",
      "package" : 2,
      "type" : "Named",
      "underlying" : 33
    }, {
      "fields" : [ {
        "name" : "value",
        "type" : 34
      }, {
        "name" : "scale",
        "type" : 35
      } ],
      "name" : "struct{value int64; scale k8s.io/apimachinery/pkg/api/resource.Scale}",
      "type" : "Struct",
      "underlying" : 33
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 34
    }, {
      "local-name" : "Scale",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Scale",
      "package" : 2,
      "type" : "Named",
      "underlying" : 15
    }, {
      "local-name" : "infDecAmount",
      "name" : "k8s.io/apimachinery/pkg/api/resource.infDecAmount",
      "package" : 2,
      "type" : "Named",
      "underlying" : 37
    }, {
      "fields" : [ {
        "name" : "Dec",
        "type" : 38
      } ],
      "name" : "struct{*gopkg.in/inf.v0.Dec}",
      "type" : "Struct",
      "underlying" : 37
    }, {
      "elem" : 39,
      "name" : "*gopkg.in/inf.v0.Dec",
      "type" : "Pointer",
      "underlying" : 38
    }, {
      "local-name" : "Dec",
      "name" : "gopkg.in/inf.v0.Dec",
      "package" : 3,
      "type" : "Named",
      "underlying" : 40
    }, {
      "fields" : [ {
        "name" : "unscaled",
        "type" : 41
      }, {
        "name" : "scale",
        "type" : 47
      } ],
      "name" : "struct{unscaled math/big.Int; scale gopkg.in/inf.v0.Scale}",
      "type" : "Struct",
      "underlying" : 40
    }, {
      "local-name" : "Int",
      "name" : "math/big.Int",
      "package" : 4,
      "type" : "Named",
      "underlying" : 42
    }, {
      "fields" : [ {
        "name" : "neg",
        "type" : 17
      }, {
        "name" : "abs",
        "type" : 43
      } ],
      "name" : "struct{neg bool; abs math/big.nat}",
      "type" : "Struct",
      "underlying" : 42
    }, {
      "local-name" : "nat",
      "name" : "math/big.nat",
      "package" : 4,
      "type" : "Named",
      "underlying" : 44
    }, {
      "elem" : 45,
      "name" : "[]math/big.Word",
      "type" : "Slice",
      "underlying" : 44
    }, {
      "local-name" : "Word",
      "name" : "math/big.Word",
      "package" : 4,
      "type" : "Named",
      "underlying" : 46
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 46
    }, {
      "local-name" : "Scale",
      "name" : "gopkg.in/inf.v0.Scale",
      "package" : 3,
      "type" : "Named",
      "underlying" : 15
    }, {
      "local-name" : "Format",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Format",
      "package" : 2,
      "type" : "Named",
      "underlying" : 10
    }, {
      "elem" : 50,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ConfigMapProjection",
      "type" : "Pointer",
      "underlying" : 49
    }, {
      "local-name" : "ConfigMapProjection",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ConfigMapProjection",
      "package" : 1,
      "type" : "Named",
      "underlying" : 7
    }, {
      "elem" : 52,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ServiceAccountTokenProjection",
      "type" : "Pointer",
      "underlying" : 51
    }, {
      "local-name" : "ServiceAccountTokenProjection",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ServiceAccountTokenProjection",
      "package" : 1,
      "type" : "Named",
      "underlying" : 53
    }, {
      "fields" : [ {
        "name" : "Audience",
        "type" : 10
      }, {
        "name" : "ExpirationSeconds",
        "type" : 34
      }, {
        "name" : "Path",
        "type" : 10
      } ],
      "name" : "struct{Audience string; ExpirationSeconds int64; Path string}",
      "type" : "Struct",
      "underlying" : 53
    }, {
      "elem" : 55,
      "name" : "*k8s.io/api/core/v1.VolumeProjection",
      "type" : "Pointer",
      "underlying" : 54
    }, {
      "local-name" : "VolumeProjection",
      "name" : "k8s.io/api/core/v1.VolumeProjection",
      "package" : 5,
      "type" : "Named",
      "underlying" : 56
    }, {
      "fields" : [ {
        "name" : "Secret",
        "type" : 57
      }, {
        "name" : "DownwardAPI",
        "type" : 65
      }, {
        "name" : "ConfigMap",
        "type" : 77
      }, {
        "name" : "ServiceAccountToken",
        "type" : 79
      } ],
      "name" : "struct{Secret *k8s.io/api/core/v1.SecretProjection \"json:\\\"secret,omitempty\\\" protobuf:\\\"bytes,1,opt,name=secret\\\"\"; DownwardAPI *k8s.io/api/core/v1.DownwardAPIProjection \"json:\\\"downwardAPI,omitempty\\\" protobuf:\\\"bytes,2,opt,name=downwardAPI\\\"\"; ConfigMap *k8s.io/api/core/v1.ConfigMapProjection \"json:\\\"configMap,omitempty\\\" protobuf:\\\"bytes,3,opt,name=configMap\\\"\"; ServiceAccountToken *k8s.io/api/core/v1.ServiceAccountTokenProjection \"json:\\\"serviceAccountToken,omitempty\\\" protobuf:\\\"bytes,4,opt,name=serviceAccountToken\\\"\"}",
      "type" : "Struct",
      "underlying" : 56
    }, {
      "elem" : 58,
      "name" : "*k8s.io/api/core/v1.SecretProjection",
      "type" : "Pointer",
      "underlying" : 57
    }, {
      "local-name" : "SecretProjection",
      "name" : "k8s.io/api/core/v1.SecretProjection",
      "package" : 5,
      "type" : "Named",
      "underlying" : 59
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 60
      }, {
        "name" : "Items",
        "type" : 62
      }, {
        "name" : "Optional",
        "type" : 16
      } ],
      "name" : "struct{k8s.io/api/core/v1.LocalObjectReference \"json:\\\",inline\\\" protobuf:\\\"bytes,1,opt,name=localObjectReference\\\"\"; Items []k8s.io/api/core/v1.KeyToPath \"json:\\\"items,omitempty\\\" protobuf:\\\"bytes,2,rep,name=items\\\"\"; Optional *bool \"json:\\\"optional,omitempty\\\" protobuf:\\\"varint,4,opt,name=optional\\\"\"}",
      "type" : "Struct",
      "underlying" : 59
    }, {
      "local-name" : "LocalObjectReference",
      "name" : "k8s.io/api/core/v1.LocalObjectReference",
      "package" : 5,
      "type" : "Named",
      "underlying" : 61
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 10
      } ],
      "name" : "struct{Name string \"json:\\\"name,omitempty\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"}",
      "type" : "Struct",
      "underlying" : 61
    }, {
      "elem" : 63,
      "name" : "[]k8s.io/api/core/v1.KeyToPath",
      "type" : "Slice",
      "underlying" : 62
    }, {
      "local-name" : "KeyToPath",
      "name" : "k8s.io/api/core/v1.KeyToPath",
      "package" : 5,
      "type" : "Named",
      "underlying" : 64
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 10
      }, {
        "name" : "Path",
        "type" : 10
      }, {
        "name" : "Mode",
        "type" : 14
      } ],
      "name" : "struct{Key string \"json:\\\"key\\\" protobuf:\\\"bytes,1,opt,name=key\\\"\"; Path string \"json:\\\"path\\\" protobuf:\\\"bytes,2,opt,name=path\\\"\"; Mode *int32 \"json:\\\"mode,omitempty\\\" protobuf:\\\"varint,3,opt,name=mode\\\"\"}",
      "type" : "Struct",
      "underlying" : 64
    }, {
      "elem" : 66,
      "name" : "*k8s.io/api/core/v1.DownwardAPIProjection",
      "type" : "Pointer",
      "underlying" : 65
    }, {
      "local-name" : "DownwardAPIProjection",
      "name" : "k8s.io/api/core/v1.DownwardAPIProjection",
      "package" : 5,
      "type" : "Named",
      "underlying" : 67
    }, {
      "fields" : [ {
        "name" : "Items",
        "type" : 68
      } ],
      "name" : "struct{Items []k8s.io/api/core/v1.DownwardAPIVolumeFile \"json:\\\"items,omitempty\\\" protobuf:\\\"bytes,1,rep,name=items\\\"\"}",
      "type" : "Struct",
      "underlying" : 67
    }, {
      "elem" : 69,
      "name" : "[]k8s.io/api/core/v1.DownwardAPIVolumeFile",
      "type" : "Slice",
      "underlying" : 68
    }, {
      "local-name" : "DownwardAPIVolumeFile",
      "name" : "k8s.io/api/core/v1.DownwardAPIVolumeFile",
      "package" : 5,
      "type" : "Named",
      "underlying" : 70
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 10
      }, {
        "name" : "FieldRef",
        "type" : 71
      }, {
        "name" : "ResourceFieldRef",
        "type" : 74
      }, {
        "name" : "Mode",
        "type" : 14
      } ],
      "name" : "struct{Path string \"json:\\\"path\\\" protobuf:\\\"bytes,1,opt,name=path\\\"\"; FieldRef *k8s.io/api/core/v1.ObjectFieldSelector \"json:\\\"fieldRef,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fieldRef\\\"\"; ResourceFieldRef *k8s.io/api/core/v1.ResourceFieldSelector \"json:\\\"resourceFieldRef,omitempty\\\" protobuf:\\\"bytes,3,opt,name=resourceFieldRef\\\"\"; Mode *int32 \"json:\\\"mode,omitempty\\\" protobuf:\\\"varint,4,opt,name=mode\\\"\"}",
      "type" : "Struct",
      "underlying" : 70
    }, {
      "elem" : 72,
      "name" : "*k8s.io/api/core/v1.ObjectFieldSelector",
      "type" : "Pointer",
      "underlying" : 71
    }, {
      "local-name" : "ObjectFieldSelector",
      "name" : "k8s.io/api/core/v1.ObjectFieldSelector",
      "package" : 5,
      "type" : "Named",
      "underlying" : 73
    }, {
      "fields" : [ {
        "name" : "APIVersion",
        "type" : 10
      }, {
        "name" : "FieldPath",
        "type" : 10
      } ],
      "name" : "struct{APIVersion string \"json:\\\"apiVersion,omitempty\\\" protobuf:\\\"bytes,1,opt,name=apiVersion\\\"\"; FieldPath string \"json:\\\"fieldPath\\\" protobuf:\\\"bytes,2,opt,name=fieldPath\\\"\"}",
      "type" : "Struct",
      "underlying" : 73
    }, {
      "elem" : 75,
      "name" : "*k8s.io/api/core/v1.ResourceFieldSelector",
      "type" : "Pointer",
      "underlying" : 74
    }, {
      "local-name" : "ResourceFieldSelector",
      "name" : "k8s.io/api/core/v1.ResourceFieldSelector",
      "package" : 5,
      "type" : "Named",
      "underlying" : 76
    }, {
      "fields" : [ {
        "name" : "ContainerName",
        "type" : 10
      }, {
        "name" : "Resource",
        "type" : 10
      }, {
        "name" : "Divisor",
        "type" : 30
      } ],
      "name" : "struct{ContainerName string \"json:\\\"containerName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=containerName\\\"\"; Resource string \"json:\\\"resource\\\" protobuf:\\\"bytes,2,opt,name=resource\\\"\"; Divisor k8s.io/apimachinery/pkg/api/resource.Quantity \"json:\\\"divisor,omitempty\\\" protobuf:\\\"bytes,3,opt,name=divisor\\\"\"}",
      "type" : "Struct",
      "underlying" : 76
    }, {
      "elem" : 78,
      "name" : "*k8s.io/api/core/v1.ConfigMapProjection",
      "type" : "Pointer",
      "underlying" : 77
    }, {
      "local-name" : "ConfigMapProjection",
      "name" : "k8s.io/api/core/v1.ConfigMapProjection",
      "package" : 5,
      "type" : "Named",
      "underlying" : 59
    }, {
      "elem" : 80,
      "name" : "*k8s.io/api/core/v1.ServiceAccountTokenProjection",
      "type" : "Pointer",
      "underlying" : 79
    }, {
      "local-name" : "ServiceAccountTokenProjection",
      "name" : "k8s.io/api/core/v1.ServiceAccountTokenProjection",
      "package" : 5,
      "type" : "Named",
      "underlying" : 81
    }, {
      "fields" : [ {
        "name" : "Audience",
        "type" : 10
      }, {
        "name" : "ExpirationSeconds",
        "type" : 82
      }, {
        "name" : "Path",
        "type" : 10
      } ],
      "name" : "struct{Audience string \"json:\\\"audience,omitempty\\\" protobuf:\\\"bytes,1,rep,name=audience\\\"\"; ExpirationSeconds *int64 \"json:\\\"expirationSeconds,omitempty\\\" protobuf:\\\"varint,2,opt,name=expirationSeconds\\\"\"; Path string \"json:\\\"path\\\" protobuf:\\\"bytes,3,opt,name=path\\\"\"}",
      "type" : "Struct",
      "underlying" : 81
    }, {
      "elem" : 34,
      "name" : "*int64",
      "type" : "Pointer",
      "underlying" : 82
    }, {
      "local-name" : "Scope",
      "name" : "k8s.io/apimachinery/pkg/conversion.Scope",
      "package" : 6,
      "type" : "Named",
      "underlying" : 84
    }, {
      "methods" : [ {
        "name" : "Convert",
        "type" : 85
      }, {
        "name" : "DestTag",
        "type" : 96
      }, {
        "name" : "Flags",
        "type" : 99
      }, {
        "name" : "Meta",
        "type" : 101
      }, {
        "name" : "SrcTag",
        "type" : 96
      } ],
      "name" : "interface{Convert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DestTag() reflect.StructTag; Flags() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags; Meta() *k8s.io/apimachinery/pkg/conversion.Meta; SrcTag() reflect.StructTag}",
      "type" : "Interface",
      "underlying" : 84
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error",
      "params" : 86,
      "recv" : 1,
      "results" : 90,
      "type" : "Signature",
      "underlying" : 85,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 87
      }, {
        "name" : "dest",
        "type" : 87
      }, {
        "name" : "flags",
        "type" : 88
      } ],
      "name" : "(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 86
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 87
    }, {
      "local-name" : "FieldMatchingFlags",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "package" : 6,
      "type" : "Named",
      "underlying" : 89
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 89
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 91
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 90
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 92
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 93
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 92
    }, {
      "name" : "(error) func() string",
      "params" : 94,
      "recv" : 0,
      "results" : 95,
      "type" : "Signature",
      "underlying" : 93,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 94
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 10
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 95
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func() reflect.StructTag",
      "params" : 94,
      "recv" : 2,
      "results" : 97,
      "type" : "Signature",
      "underlying" : 96,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 98
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 97
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 7,
      "type" : "Named",
      "underlying" : 10
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "params" : 94,
      "recv" : 3,
      "results" : 100,
      "type" : "Signature",
      "underlying" : 99,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 88
      } ],
      "name" : "(k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 100
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func() *k8s.io/apimachinery/pkg/conversion.Meta",
      "params" : 94,
      "recv" : 4,
      "results" : 102,
      "type" : "Signature",
      "underlying" : 101,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 103
      } ],
      "name" : "(*k8s.io/apimachinery/pkg/conversion.Meta)",
      "type" : "Tuple",
      "underlying" : 102
    }, {
      "elem" : 104,
      "name" : "*k8s.io/apimachinery/pkg/conversion.Meta",
      "type" : "Pointer",
      "underlying" : 103
    }, {
      "local-name" : "Meta",
      "name" : "k8s.io/apimachinery/pkg/conversion.Meta",
      "package" : 6,
      "type" : "Named",
      "underlying" : 105
    }, {
      "fields" : [ {
        "name" : "KeyNameMapping",
        "type" : 106
      }, {
        "name" : "Context",
        "type" : 87
      } ],
      "name" : "struct{KeyNameMapping k8s.io/apimachinery/pkg/conversion.FieldMappingFunc; Context interface{}}",
      "type" : "Struct",
      "underlying" : 105
    }, {
      "local-name" : "FieldMappingFunc",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMappingFunc",
      "package" : 6,
      "type" : "Named",
      "underlying" : 107
    }, {
      "name" : "func(key string, sourceTag reflect.StructTag, destTag reflect.StructTag) (source string, dest string)",
      "params" : 108,
      "recv" : -1,
      "results" : 109,
      "type" : "Signature",
      "underlying" : 107,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 10
      }, {
        "name" : "sourceTag",
        "type" : 98
      }, {
        "name" : "destTag",
        "type" : 98
      } ],
      "name" : "(key string, sourceTag reflect.StructTag, destTag reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 108
    }, {
      "fields" : [ {
        "name" : "source",
        "type" : 10
      }, {
        "name" : "dest",
        "type" : 10
      } ],
      "name" : "(source string, dest string)",
      "type" : "Tuple",
      "underlying" : 109
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 8,
      "type" : "Basic",
      "underlying" : 110
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 111
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 112
    }, {
      "elem" : 51,
      "name" : "**k8s.io/kubernetes/pkg/apis/core.ServiceAccountTokenProjection",
      "type" : "Pointer",
      "underlying" : 113
    }, {
      "elem" : 79,
      "name" : "**k8s.io/api/core/v1.ServiceAccountTokenProjection",
      "type" : "Pointer",
      "underlying" : 114
    }, {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.ServiceAccountTokenProjection, out *k8s.io/api/core/v1.ServiceAccountTokenProjection, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 116,
      "recv" : -1,
      "results" : 90,
      "type" : "Signature",
      "underlying" : 115,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 51
      }, {
        "name" : "out",
        "type" : 79
      }, {
        "name" : "s",
        "type" : 83
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.ServiceAccountTokenProjection, out *k8s.io/api/core/v1.ServiceAccountTokenProjection, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 116
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 91,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 83,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 83,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 83,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 83,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 54,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 83,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 91,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Secret",
      "package" : 5,
      "type" : 57,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Secret",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "DownwardAPI",
      "package" : 5,
      "type" : 65,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "DownwardAPI",
      "package" : 1,
      "type" : 18,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ConfigMap",
      "package" : 5,
      "type" : 77,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ConfigMap",
      "package" : 1,
      "type" : 49,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ServiceAccountToken",
      "package" : 1,
      "type" : 51,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ServiceAccountToken",
      "package" : 5,
      "type" : 79,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 114,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 113,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 91,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}