{
  "usage" : {
    "file" : "zz_generated.conversion.go",
    "label1" : "cast-struct",
    "label2" : "efficiency",
    "line" : "8036",
    "module" : "k8s.io/kubernetes",
    "pkg" : "k8s.io/kubernetes/pkg/apis/core/v1",
    "project" : "rook/rook",
    "snippet" : "out.CSI = (*v1.CSIVolumeSource)(unsafe.Pointer(in.CSI))",
    "version" : "v1.17.2"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 3 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8001,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "HostPath",
            "variable" : 9
          },
          "go-type" : 156,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 157,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 157,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "HostPathVolumeSource"
              }
            },
            "go-type" : 156,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 156,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "HostPath",
                "variable" : 10
              },
              "go-type" : 5,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8001,
      "code" : "out.HostPath = (*v1.HostPathVolumeSource)(unsafe.Pointer(in.HostPath))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 4 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 7, 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 8002,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "EmptyDir",
            "variable" : 11
          },
          "go-type" : 161,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 162,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 162,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "EmptyDirVolumeSource"
              }
            },
            "go-type" : 161,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 161,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "EmptyDir",
                "variable" : 12
              },
              "go-type" : 11,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8002,
      "code" : "out.EmptyDir = (*v1.EmptyDirVolumeSource)(unsafe.Pointer(in.EmptyDir))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 5 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8003,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "GCEPersistentDisk",
            "variable" : 13
          },
          "go-type" : 165,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 166,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 166,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "GCEPersistentDiskVolumeSource"
              }
            },
            "go-type" : 165,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 165,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "GCEPersistentDisk",
                "variable" : 14
              },
              "go-type" : 37,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8003,
      "code" : "out.GCEPersistentDisk = (*v1.GCEPersistentDiskVolumeSource)(unsafe.Pointer(in.GCEPersistentDisk))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 6 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 7, 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 8004,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "AWSElasticBlockStore",
            "variable" : 15
          },
          "go-type" : 168,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 169,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 169,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "AWSElasticBlockStoreVolumeSource"
              }
            },
            "go-type" : 168,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 168,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "AWSElasticBlockStore",
                "variable" : 16
              },
              "go-type" : 40,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8004,
      "code" : "out.AWSElasticBlockStore = (*v1.AWSElasticBlockStoreVolumeSource)(unsafe.Pointer(in.AWSElasticBlockStore))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 7 ],
      "in-vars" : [ 7, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5, 7, 6 ],
      "decl-vars" : [ ],
      "line-start" : 8005,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "GitRepo",
            "variable" : 17
          },
          "go-type" : 171,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 172,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 172,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "GitRepoVolumeSource"
              }
            },
            "go-type" : 171,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 171,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "GitRepo",
                "variable" : 18
              },
              "go-type" : 43,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8005,
      "code" : "out.GitRepo = (*v1.GitRepoVolumeSource)(unsafe.Pointer(in.GitRepo))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 8 ],
      "in-vars" : [ 5, 7, 6 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8006,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Secret",
            "variable" : 19
          },
          "go-type" : 174,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 175,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 175,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "SecretVolumeSource"
              }
            },
            "go-type" : 174,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 174,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Secret",
                "variable" : 20
              },
              "go-type" : 46,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8006,
      "code" : "out.Secret = (*v1.SecretVolumeSource)(unsafe.Pointer(in.Secret))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 9 ],
      "in-vars" : [ 7, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8007,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "NFS",
            "variable" : 21
          },
          "go-type" : 180,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 181,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 181,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "NFSVolumeSource"
              }
            },
            "go-type" : 180,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 180,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "NFS",
                "variable" : 22
              },
              "go-type" : 54,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8007,
      "code" : "out.NFS = (*v1.NFSVolumeSource)(unsafe.Pointer(in.NFS))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 10 ],
      "in-vars" : [ 7, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5, 7, 6 ],
      "decl-vars" : [ ],
      "line-start" : 8008,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ISCSI",
            "variable" : 23
          },
          "go-type" : 183,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 184,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 184,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "ISCSIVolumeSource"
              }
            },
            "go-type" : 183,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 183,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ISCSI",
                "variable" : 24
              },
              "go-type" : 57,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8008,
      "code" : "out.ISCSI = (*v1.ISCSIVolumeSource)(unsafe.Pointer(in.ISCSI))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 11 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8009,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Glusterfs",
            "variable" : 25
          },
          "go-type" : 189,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 190,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 190,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "GlusterfsVolumeSource"
              }
            },
            "go-type" : 189,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 189,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Glusterfs",
                "variable" : 26
              },
              "go-type" : 65,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8009,
      "code" : "out.Glusterfs = (*v1.GlusterfsVolumeSource)(unsafe.Pointer(in.Glusterfs))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 12 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8010,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "PersistentVolumeClaim",
            "variable" : 27
          },
          "go-type" : 192,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 193,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 193,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "PersistentVolumeClaimVolumeSource"
              }
            },
            "go-type" : 192,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 192,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "PersistentVolumeClaim",
                "variable" : 28
              },
              "go-type" : 68,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8010,
      "code" : "out.PersistentVolumeClaim = (*v1.PersistentVolumeClaimVolumeSource)(unsafe.Pointer(in.PersistentVolumeClaim))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 13 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8011,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "RBD",
            "variable" : 29
          },
          "go-type" : 195,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 196,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 196,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "RBDVolumeSource"
              }
            },
            "go-type" : 195,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 195,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "RBD",
                "variable" : 30
              },
              "go-type" : 71,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8011,
      "code" : "out.RBD = (*v1.RBDVolumeSource)(unsafe.Pointer(in.RBD))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 14 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8012,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Quobyte",
            "variable" : 31
          },
          "go-type" : 234,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 235,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 235,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "QuobyteVolumeSource"
              }
            },
            "go-type" : 234,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 234,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Quobyte",
                "variable" : 32
              },
              "go-type" : 74,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8012,
      "code" : "out.Quobyte = (*v1.QuobyteVolumeSource)(unsafe.Pointer(in.Quobyte))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 15 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8013,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "FlexVolume",
            "variable" : 33
          },
          "go-type" : 198,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 199,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 199,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "FlexVolumeSource"
              }
            },
            "go-type" : 198,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 198,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "FlexVolume",
                "variable" : 34
              },
              "go-type" : 77,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8013,
      "code" : "out.FlexVolume = (*v1.FlexVolumeSource)(unsafe.Pointer(in.FlexVolume))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 16 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 5, 7, 6 ],
      "decl-vars" : [ ],
      "line-start" : 8014,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Cinder",
            "variable" : 35
          },
          "go-type" : 201,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 202,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 202,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "CinderVolumeSource"
              }
            },
            "go-type" : 201,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 201,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Cinder",
                "variable" : 36
              },
              "go-type" : 81,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8014,
      "code" : "out.Cinder = (*v1.CinderVolumeSource)(unsafe.Pointer(in.Cinder))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 17 ],
      "in-vars" : [ 7, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8015,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "CephFS",
            "variable" : 37
          },
          "go-type" : 204,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 205,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 205,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "CephFSVolumeSource"
              }
            },
            "go-type" : 204,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 204,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "CephFS",
                "variable" : 38
              },
              "go-type" : 84,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8015,
      "code" : "out.CephFS = (*v1.CephFSVolumeSource)(unsafe.Pointer(in.CephFS))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 18 ],
      "in-vars" : [ 7, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8016,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Flocker",
            "variable" : 39
          },
          "go-type" : 207,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 208,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 208,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "FlockerVolumeSource"
              }
            },
            "go-type" : 207,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 207,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Flocker",
                "variable" : 40
              },
              "go-type" : 87,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8016,
      "code" : "out.Flocker = (*v1.FlockerVolumeSource)(unsafe.Pointer(in.Flocker))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 19 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8017,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "DownwardAPI",
            "variable" : 41
          },
          "go-type" : 210,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 211,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 211,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "DownwardAPIVolumeSource"
              }
            },
            "go-type" : 210,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 210,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "DownwardAPI",
                "variable" : 42
              },
              "go-type" : 90,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8017,
      "code" : "out.DownwardAPI = (*v1.DownwardAPIVolumeSource)(unsafe.Pointer(in.DownwardAPI))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 20 ],
      "in-vars" : [ 7, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8018,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "FC",
            "variable" : 43
          },
          "go-type" : 222,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 223,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 223,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "FCVolumeSource"
              }
            },
            "go-type" : 222,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 222,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "FC",
                "variable" : 44
              },
              "go-type" : 102,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8018,
      "code" : "out.FC = (*v1.FCVolumeSource)(unsafe.Pointer(in.FC))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 21 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8019,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "AzureFile",
            "variable" : 45
          },
          "go-type" : 225,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 226,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 226,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "AzureFileVolumeSource"
              }
            },
            "go-type" : 225,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 225,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "AzureFile",
                "variable" : 46
              },
              "go-type" : 105,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8019,
      "code" : "out.AzureFile = (*v1.AzureFileVolumeSource)(unsafe.Pointer(in.AzureFile))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 22 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8020,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ConfigMap",
            "variable" : 47
          },
          "go-type" : 228,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 229,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 229,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "ConfigMapVolumeSource"
              }
            },
            "go-type" : 228,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 228,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ConfigMap",
                "variable" : 48
              },
              "go-type" : 108,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8020,
      "code" : "out.ConfigMap = (*v1.ConfigMapVolumeSource)(unsafe.Pointer(in.ConfigMap))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 23 ],
      "in-vars" : [ 7, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8021,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "VsphereVolume",
            "variable" : 49
          },
          "go-type" : 231,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 232,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 232,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "VsphereVirtualDiskVolumeSource"
              }
            },
            "go-type" : 231,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 231,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "VsphereVolume",
                "variable" : 50
              },
              "go-type" : 111,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8021,
      "code" : "out.VsphereVolume = (*v1.VsphereVirtualDiskVolumeSource)(unsafe.Pointer(in.VsphereVolume))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 24 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8022,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "AzureDisk",
            "variable" : 51
          },
          "go-type" : 237,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 238,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 238,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "AzureDiskVolumeSource"
              }
            },
            "go-type" : 237,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 237,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "AzureDisk",
                "variable" : 52
              },
              "go-type" : 114,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8022,
      "code" : "out.AzureDisk = (*v1.AzureDiskVolumeSource)(unsafe.Pointer(in.AzureDisk))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 25 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 5, 7, 6 ],
      "decl-vars" : [ ],
      "line-start" : 8023,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "PhotonPersistentDisk",
            "variable" : 53
          },
          "go-type" : 244,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 245,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 245,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "PhotonPersistentDiskVolumeSource"
              }
            },
            "go-type" : 244,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 244,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "PhotonPersistentDisk",
                "variable" : 54
              },
              "go-type" : 121,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8023,
      "code" : "out.PhotonPersistentDisk = (*v1.PhotonPersistentDiskVolumeSource)(unsafe.Pointer(in.PhotonPersistentDisk))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 26, 31 ],
      "in-vars" : [ 7, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 8024,
      "ast" : {
        "condition" : {
          "go-type" : 305,
          "kind" : "expression",
          "left" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Projected",
              "variable" : 55
            },
            "go-type" : 124,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "in",
                "variable" : 5
              }
            },
            "type" : "selector"
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 306,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 8032,
      "code" : "if in.Projected != nil {\n\tin, out := &in.Projected, &out.Projected\n\t*out = new(v1.ProjectedVolumeSource)\n\tif err := Convert_core_ProjectedVolumeSource_To_v1_ProjectedVolumeSource(*in, *out, s); err != nil {\n\t\treturn err\n\t}\n} else {\n\tout.Projected = nil\n}",
      "entry" : false,
      "use-vars" : [ 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 27 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 57, 58, 7 ],
      "decl-vars" : [ 57, 58 ],
      "line-start" : 8025,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "in"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "out"
          }
        } ],
        "right" : [ {
          "go-type" : 307,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Projected",
              "variable" : 55
            },
            "go-type" : 124,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "in",
                "variable" : 5
              }
            },
            "type" : "selector"
          },
          "type" : "unary"
        }, {
          "go-type" : 308,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Projected",
              "variable" : 56
            },
            "go-type" : 247,
            "kind" : "expression",
            "target" : {
              "go-type" : 153,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "out",
                "variable" : 6
              }
            },
            "type" : "selector"
          },
          "type" : "unary"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 8025,
      "code" : "in, out := &in.Projected, &out.Projected",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 29 ],
      "in-vars" : [ 58, 7, 6, 5, 57 ],
      "exit" : false,
      "out-vars" : [ 7, 6, 5, 57, 58 ],
      "decl-vars" : [ ],
      "line-start" : 8026,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 247,
          "kind" : "expression",
          "target" : {
            "go-type" : 308,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 57
            }
          },
          "type" : "star"
        } ],
        "right" : [ {
          "argument" : {
            "go-type" : 248,
            "kind" : "type",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 5,
              "value" : "v1"
            },
            "type" : "identifier",
            "value" : {
              "go-type" : 248,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "ProjectedVolumeSource"
            }
          },
          "go-type" : 247,
          "kind" : "expression",
          "type" : "new"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8026,
      "code" : "*out = new(v1.ProjectedVolumeSource)",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 30, 32 ],
      "in-vars" : [ 6, 5, 59 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 59 ],
      "decl-vars" : [ ],
      "line-start" : 8027,
      "ast" : {
        "condition" : {
          "go-type" : 305,
          "kind" : "expression",
          "left" : {
            "go-type" : 285,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 59
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 306,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 8029,
      "code" : "if err := Convert_core_ProjectedVolumeSource_To_v1_ProjectedVolumeSource(*in, *out, s); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 59 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 28 ],
      "in-vars" : [ 7, 6, 5, 57, 58 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 59 ],
      "decl-vars" : [ 59 ],
      "line-start" : 8027,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 124,
            "kind" : "expression",
            "target" : {
              "go-type" : 307,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "in",
                "variable" : 58
              }
            },
            "type" : "star"
          }, {
            "go-type" : 247,
            "kind" : "expression",
            "target" : {
              "go-type" : 308,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "out",
                "variable" : 57
              }
            },
            "type" : "star"
          }, {
            "go-type" : 277,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "s",
              "variable" : 7
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 309,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Convert_core_ProjectedVolumeSource_To_v1_ProjectedVolumeSource"
            }
          },
          "go-type" : 285,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 8027,
      "code" : "err := Convert_core_ProjectedVolumeSource_To_v1_ProjectedVolumeSource(*in, *out, s)",
      "entry" : false,
      "use-vars" : [ 57, 7, 58 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 59 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 8028,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 285,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 59
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 8028,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 59 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 32 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 8031,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Projected",
            "variable" : 56
          },
          "go-type" : 247,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 306,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8031,
      "code" : "out.Projected = nil",
      "entry" : false,
      "use-vars" : [ 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 33 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 8033,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "PortworxVolume",
            "variable" : 60
          },
          "go-type" : 265,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 266,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 266,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "PortworxVolumeSource"
              }
            },
            "go-type" : 265,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 265,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "PortworxVolume",
                "variable" : 61
              },
              "go-type" : 141,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8033,
      "code" : "out.PortworxVolume = (*v1.PortworxVolumeSource)(unsafe.Pointer(in.PortworxVolume))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 34 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 8034,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ScaleIO",
            "variable" : 62
          },
          "go-type" : 268,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 269,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 269,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "ScaleIOVolumeSource"
              }
            },
            "go-type" : 268,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 268,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ScaleIO",
                "variable" : 63
              },
              "go-type" : 144,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8034,
      "code" : "out.ScaleIO = (*v1.ScaleIOVolumeSource)(unsafe.Pointer(in.ScaleIO))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 35 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 8035,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "StorageOS",
            "variable" : 64
          },
          "go-type" : 271,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 272,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 272,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "StorageOSVolumeSource"
              }
            },
            "go-type" : 271,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 271,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "StorageOS",
                "variable" : 65
              },
              "go-type" : 147,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8035,
      "code" : "out.StorageOS = (*v1.StorageOSVolumeSource)(unsafe.Pointer(in.StorageOS))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 36 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 8036,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "CSI",
            "variable" : 66
          },
          "go-type" : 274,
          "kind" : "expression",
          "target" : {
            "go-type" : 153,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 275,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 275,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "CSIVolumeSource"
              }
            },
            "go-type" : 274,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 274,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 304,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 304,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 304,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "CSI",
                "variable" : 67
              },
              "go-type" : 150,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 8036,
      "code" : "out.CSI = (*v1.CSIVolumeSource)(unsafe.Pointer(in.CSI))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 8037,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 306,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 8037,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func autoConvert_core_VolumeSource_To_v1_VolumeSource(in *core.VolumeSource, out *v1.VolumeSource, s conversion.Scope) error {\n\tout.HostPath = (*v1.HostPathVolumeSource)(unsafe.Pointer(in.HostPath))\n\tout.EmptyDir = (*v1.EmptyDirVolumeSource)(unsafe.Pointer(in.EmptyDir))\n\tout.GCEPersistentDisk = (*v1.GCEPersistentDiskVolumeSource)(unsafe.Pointer(in.GCEPersistentDisk))\n\tout.AWSElasticBlockStore = (*v1.AWSElasticBlockStoreVolumeSource)(unsafe.Pointer(in.AWSElasticBlockStore))\n\tout.GitRepo = (*v1.GitRepoVolumeSource)(unsafe.Pointer(in.GitRepo))\n\tout.Secret = (*v1.SecretVolumeSource)(unsafe.Pointer(in.Secret))\n\tout.NFS = (*v1.NFSVolumeSource)(unsafe.Pointer(in.NFS))\n\tout.ISCSI = (*v1.ISCSIVolumeSource)(unsafe.Pointer(in.ISCSI))\n\tout.Glusterfs = (*v1.GlusterfsVolumeSource)(unsafe.Pointer(in.Glusterfs))\n\tout.PersistentVolumeClaim = (*v1.PersistentVolumeClaimVolumeSource)(unsafe.Pointer(in.PersistentVolumeClaim))\n\tout.RBD = (*v1.RBDVolumeSource)(unsafe.Pointer(in.RBD))\n\tout.Quobyte = (*v1.QuobyteVolumeSource)(unsafe.Pointer(in.Quobyte))\n\tout.FlexVolume = (*v1.FlexVolumeSource)(unsafe.Pointer(in.FlexVolume))\n\tout.Cinder = (*v1.CinderVolumeSource)(unsafe.Pointer(in.Cinder))\n\tout.CephFS = (*v1.CephFSVolumeSource)(unsafe.Pointer(in.CephFS))\n\tout.Flocker = (*v1.FlockerVolumeSource)(unsafe.Pointer(in.Flocker))\n\tout.DownwardAPI = (*v1.DownwardAPIVolumeSource)(unsafe.Pointer(in.DownwardAPI))\n\tout.FC = (*v1.FCVolumeSource)(unsafe.Pointer(in.FC))\n\tout.AzureFile = (*v1.AzureFileVolumeSource)(unsafe.Pointer(in.AzureFile))\n\tout.ConfigMap = (*v1.ConfigMapVolumeSource)(unsafe.Pointer(in.ConfigMap))\n\tout.VsphereVolume = (*v1.VsphereVirtualDiskVolumeSource)(unsafe.Pointer(in.VsphereVolume))\n\tout.AzureDisk = (*v1.AzureDiskVolumeSource)(unsafe.Pointer(in.AzureDisk))\n\tout.PhotonPersistentDisk = (*v1.PhotonPersistentDiskVolumeSource)(unsafe.Pointer(in.PhotonPersistentDisk))\n\tif in.Projected != nil {\n\t\tin, out := &in.Projected, &out.Projected\n\t\t*out = new(v1.ProjectedVolumeSource)\n\t\tif err := Convert_core_ProjectedVolumeSource_To_v1_ProjectedVolumeSource(*in, *out, s); err != nil {\n\t\t\treturn err\n\t\t}\n\t} else {\n\t\tout.Projected = nil\n\t}\n\tout.PortworxVolume = (*v1.PortworxVolumeSource)(unsafe.Pointer(in.PortworxVolume))\n\tout.ScaleIO = (*v1.ScaleIOVolumeSource)(unsafe.Pointer(in.ScaleIO))\n\tout.StorageOS = (*v1.StorageOSVolumeSource)(unsafe.Pointer(in.StorageOS))\n\tout.CSI = (*v1.CSIVolumeSource)(unsafe.Pointer(in.CSI))\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "autoConvert_core_VolumeSource_To_v1_VolumeSource",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "Convert_core_ProjectedVolumeSource_To_v1_ProjectedVolumeSource",
      "package" : 0,
      "type" : 309,
      "exported" : true
    } ],
    "line-end" : 8038,
    "line-start" : 8000,
    "names" : [ "autoConvert_core_VolumeSource_To_v1_VolumeSource" ],
    "package" : 0,
    "packages" : [ {
      "name" : "v1",
      "path" : "k8s.io/kubernetes/pkg/apis/core/v1"
    }, {
      "name" : "core",
      "path" : "k8s.io/kubernetes/pkg/apis/core"
    }, {
      "name" : "resource",
      "path" : "k8s.io/apimachinery/pkg/api/resource"
    }, {
      "name" : "inf",
      "path" : "gopkg.in/inf.v0"
    }, {
      "name" : "big",
      "path" : "math/big"
    }, {
      "name" : "v1",
      "path" : "k8s.io/api/core/v1"
    }, {
      "name" : "conversion",
      "path" : "k8s.io/apimachinery/pkg/conversion"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 5, 6, 7 ],
    "receivers" : [ ],
    "results" : [ 8 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.VolumeSource, out *k8s.io/api/core/v1.VolumeSource, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 1,
      "recv" : -1,
      "results" : 284,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 2
      }, {
        "name" : "out",
        "type" : 153
      }, {
        "name" : "s",
        "type" : 277
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.VolumeSource, out *k8s.io/api/core/v1.VolumeSource, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.VolumeSource",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "VolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.VolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "HostPath",
        "type" : 5
      }, {
        "name" : "EmptyDir",
        "type" : 11
      }, {
        "name" : "GCEPersistentDisk",
        "type" : 37
      }, {
        "name" : "AWSElasticBlockStore",
        "type" : 40
      }, {
        "name" : "GitRepo",
        "type" : 43
      }, {
        "name" : "Secret",
        "type" : 46
      }, {
        "name" : "NFS",
        "type" : 54
      }, {
        "name" : "ISCSI",
        "type" : 57
      }, {
        "name" : "Glusterfs",
        "type" : 65
      }, {
        "name" : "PersistentVolumeClaim",
        "type" : 68
      }, {
        "name" : "RBD",
        "type" : 71
      }, {
        "name" : "Quobyte",
        "type" : 74
      }, {
        "name" : "FlexVolume",
        "type" : 77
      }, {
        "name" : "Cinder",
        "type" : 81
      }, {
        "name" : "CephFS",
        "type" : 84
      }, {
        "name" : "Flocker",
        "type" : 87
      }, {
        "name" : "DownwardAPI",
        "type" : 90
      }, {
        "name" : "FC",
        "type" : 102
      }, {
        "name" : "AzureFile",
        "type" : 105
      }, {
        "name" : "ConfigMap",
        "type" : 108
      }, {
        "name" : "VsphereVolume",
        "type" : 111
      }, {
        "name" : "AzureDisk",
        "type" : 114
      }, {
        "name" : "PhotonPersistentDisk",
        "type" : 121
      }, {
        "name" : "Projected",
        "type" : 124
      }, {
        "name" : "PortworxVolume",
        "type" : 141
      }, {
        "name" : "ScaleIO",
        "type" : 144
      }, {
        "name" : "StorageOS",
        "type" : 147
      }, {
        "name" : "CSI",
        "type" : 150
      } ],
      "name" : "struct{HostPath *k8s.io/kubernetes/pkg/apis/core.HostPathVolumeSource; EmptyDir *k8s.io/kubernetes/pkg/apis/core.EmptyDirVolumeSource; GCEPersistentDisk *k8s.io/kubernetes/pkg/apis/core.GCEPersistentDiskVolumeSource; AWSElasticBlockStore *k8s.io/kubernetes/pkg/apis/core.AWSElasticBlockStoreVolumeSource; GitRepo *k8s.io/kubernetes/pkg/apis/core.GitRepoVolumeSource; Secret *k8s.io/kubernetes/pkg/apis/core.SecretVolumeSource; NFS *k8s.io/kubernetes/pkg/apis/core.NFSVolumeSource; ISCSI *k8s.io/kubernetes/pkg/apis/core.ISCSIVolumeSource; Glusterfs *k8s.io/kubernetes/pkg/apis/core.GlusterfsVolumeSource; PersistentVolumeClaim *k8s.io/kubernetes/pkg/apis/core.PersistentVolumeClaimVolumeSource; RBD *k8s.io/kubernetes/pkg/apis/core.RBDVolumeSource; Quobyte *k8s.io/kubernetes/pkg/apis/core.QuobyteVolumeSource; FlexVolume *k8s.io/kubernetes/pkg/apis/core.FlexVolumeSource; Cinder *k8s.io/kubernetes/pkg/apis/core.CinderVolumeSource; CephFS *k8s.io/kubernetes/pkg/apis/core.CephFSVolumeSource; Flocker *k8s.io/kubernetes/pkg/apis/core.FlockerVolumeSource; DownwardAPI *k8s.io/kubernetes/pkg/apis/core.DownwardAPIVolumeSource; FC *k8s.io/kubernetes/pkg/apis/core.FCVolumeSource; AzureFile *k8s.io/kubernetes/pkg/apis/core.AzureFileVolumeSource; ConfigMap *k8s.io/kubernetes/pkg/apis/core.ConfigMapVolumeSource; VsphereVolume *k8s.io/kubernetes/pkg/apis/core.VsphereVirtualDiskVolumeSource; AzureDisk *k8s.io/kubernetes/pkg/apis/core.AzureDiskVolumeSource; PhotonPersistentDisk *k8s.io/kubernetes/pkg/apis/core.PhotonPersistentDiskVolumeSource; Projected *k8s.io/kubernetes/pkg/apis/core.ProjectedVolumeSource; PortworxVolume *k8s.io/kubernetes/pkg/apis/core.PortworxVolumeSource; ScaleIO *k8s.io/kubernetes/pkg/apis/core.ScaleIOVolumeSource; StorageOS *k8s.io/kubernetes/pkg/apis/core.StorageOSVolumeSource; CSI *k8s.io/kubernetes/pkg/apis/core.CSIVolumeSource}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "elem" : 6,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.HostPathVolumeSource",
      "type" : "Pointer",
      "underlying" : 5
    }, {
      "local-name" : "HostPathVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.HostPathVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 7
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "Type",
        "type" : 9
      } ],
      "name" : "struct{Path string; Type *k8s.io/kubernetes/pkg/apis/core.HostPathType}",
      "type" : "Struct",
      "underlying" : 7
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 8
    }, {
      "elem" : 10,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.HostPathType",
      "type" : "Pointer",
      "underlying" : 9
    }, {
      "local-name" : "HostPathType",
      "name" : "k8s.io/kubernetes/pkg/apis/core.HostPathType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 12,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.EmptyDirVolumeSource",
      "type" : "Pointer",
      "underlying" : 11
    }, {
      "local-name" : "EmptyDirVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.EmptyDirVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "Medium",
        "type" : 14
      }, {
        "name" : "SizeLimit",
        "type" : 15
      } ],
      "name" : "struct{Medium k8s.io/kubernetes/pkg/apis/core.StorageMedium; SizeLimit *k8s.io/apimachinery/pkg/api/resource.Quantity}",
      "type" : "Struct",
      "underlying" : 13
    }, {
      "local-name" : "StorageMedium",
      "name" : "k8s.io/kubernetes/pkg/apis/core.StorageMedium",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 16,
      "name" : "*k8s.io/apimachinery/pkg/api/resource.Quantity",
      "type" : "Pointer",
      "underlying" : 15
    }, {
      "local-name" : "Quantity",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Quantity",
      "package" : 2,
      "type" : "Named",
      "underlying" : 17
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 18
      }, {
        "name" : "d",
        "type" : 23
      }, {
        "name" : "s",
        "type" : 8
      }, {
        "name" : "Format",
        "type" : 36
      } ],
      "name" : "struct{i k8s.io/apimachinery/pkg/api/resource.int64Amount; d k8s.io/apimachinery/pkg/api/resource.infDecAmount; s string; k8s.io/apimachinery/pkg/api/resource.Format}",
      "type" : "Struct",
      "underlying" : 17
    }, {
      "local-name" : "int64Amount",
      "name" : "k8s.io/apimachinery/pkg/api/resource.int64Amount",
      "package" : 2,
      "type" : "Named",
      "underlying" : 19
    }, {
      "fields" : [ {
        "name" : "value",
        "type" : 20
      }, {
        "name" : "scale",
        "type" : 21
      } ],
      "name" : "struct{value int64; scale k8s.io/apimachinery/pkg/api/resource.Scale}",
      "type" : "Struct",
      "underlying" : 19
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 20
    }, {
      "local-name" : "Scale",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Scale",
      "package" : 2,
      "type" : "Named",
      "underlying" : 22
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 22
    }, {
      "local-name" : "infDecAmount",
      "name" : "k8s.io/apimachinery/pkg/api/resource.infDecAmount",
      "package" : 2,
      "type" : "Named",
      "underlying" : 24
    }, {
      "fields" : [ {
        "name" : "Dec",
        "type" : 25
      } ],
      "name" : "struct{*gopkg.in/inf.v0.Dec}",
      "type" : "Struct",
      "underlying" : 24
    }, {
      "elem" : 26,
      "name" : "*gopkg.in/inf.v0.Dec",
      "type" : "Pointer",
      "underlying" : 25
    }, {
      "local-name" : "Dec",
      "name" : "gopkg.in/inf.v0.Dec",
      "package" : 3,
      "type" : "Named",
      "underlying" : 27
    }, {
      "fields" : [ {
        "name" : "unscaled",
        "type" : 28
      }, {
        "name" : "scale",
        "type" : 35
      } ],
      "name" : "struct{unscaled math/big.Int; scale gopkg.in/inf.v0.Scale}",
      "type" : "Struct",
      "underlying" : 27
    }, {
      "local-name" : "Int",
      "name" : "math/big.Int",
      "package" : 4,
      "type" : "Named",
      "underlying" : 29
    }, {
      "fields" : [ {
        "name" : "neg",
        "type" : 30
      }, {
        "name" : "abs",
        "type" : 31
      } ],
      "name" : "struct{neg bool; abs math/big.nat}",
      "type" : "Struct",
      "underlying" : 29
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 30
    }, {
      "local-name" : "nat",
      "name" : "math/big.nat",
      "package" : 4,
      "type" : "Named",
      "underlying" : 32
    }, {
      "elem" : 33,
      "name" : "[]math/big.Word",
      "type" : "Slice",
      "underlying" : 32
    }, {
      "local-name" : "Word",
      "name" : "math/big.Word",
      "package" : 4,
      "type" : "Named",
      "underlying" : 34
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 34
    }, {
      "local-name" : "Scale",
      "name" : "gopkg.in/inf.v0.Scale",
      "package" : 3,
      "type" : "Named",
      "underlying" : 22
    }, {
      "local-name" : "Format",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Format",
      "package" : 2,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 38,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.GCEPersistentDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 37
    }, {
      "local-name" : "GCEPersistentDiskVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.GCEPersistentDiskVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 39
    }, {
      "fields" : [ {
        "name" : "PDName",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "Partition",
        "type" : 22
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{PDName string; FSType string; Partition int32; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 39
    }, {
      "elem" : 41,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AWSElasticBlockStoreVolumeSource",
      "type" : "Pointer",
      "underlying" : 40
    }, {
      "local-name" : "AWSElasticBlockStoreVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AWSElasticBlockStoreVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 42
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "Partition",
        "type" : 22
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{VolumeID string; FSType string; Partition int32; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 42
    }, {
      "elem" : 44,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.GitRepoVolumeSource",
      "type" : "Pointer",
      "underlying" : 43
    }, {
      "local-name" : "GitRepoVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.GitRepoVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 45
    }, {
      "fields" : [ {
        "name" : "Repository",
        "type" : 8
      }, {
        "name" : "Revision",
        "type" : 8
      }, {
        "name" : "Directory",
        "type" : 8
      } ],
      "name" : "struct{Repository string; Revision string; Directory string}",
      "type" : "Struct",
      "underlying" : 45
    }, {
      "elem" : 47,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.SecretVolumeSource",
      "type" : "Pointer",
      "underlying" : 46
    }, {
      "local-name" : "SecretVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.SecretVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 48
    }, {
      "fields" : [ {
        "name" : "SecretName",
        "type" : 8
      }, {
        "name" : "Items",
        "type" : 49
      }, {
        "name" : "DefaultMode",
        "type" : 52
      }, {
        "name" : "Optional",
        "type" : 53
      } ],
      "name" : "struct{SecretName string; Items []k8s.io/kubernetes/pkg/apis/core.KeyToPath; DefaultMode *int32; Optional *bool}",
      "type" : "Struct",
      "underlying" : 48
    }, {
      "elem" : 50,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.KeyToPath",
      "type" : "Slice",
      "underlying" : 49
    }, {
      "local-name" : "KeyToPath",
      "name" : "k8s.io/kubernetes/pkg/apis/core.KeyToPath",
      "package" : 1,
      "type" : "Named",
      "underlying" : 51
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 8
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "Mode",
        "type" : 52
      } ],
      "name" : "struct{Key string; Path string; Mode *int32}",
      "type" : "Struct",
      "underlying" : 51
    }, {
      "elem" : 22,
      "name" : "*int32",
      "type" : "Pointer",
      "underlying" : 52
    }, {
      "elem" : 30,
      "name" : "*bool",
      "type" : "Pointer",
      "underlying" : 53
    }, {
      "elem" : 55,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.NFSVolumeSource",
      "type" : "Pointer",
      "underlying" : 54
    }, {
      "local-name" : "NFSVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NFSVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 56
    }, {
      "fields" : [ {
        "name" : "Server",
        "type" : 8
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{Server string; Path string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 56
    }, {
      "elem" : 58,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ISCSIVolumeSource",
      "type" : "Pointer",
      "underlying" : 57
    }, {
      "local-name" : "ISCSIVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ISCSIVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 59
    }, {
      "fields" : [ {
        "name" : "TargetPortal",
        "type" : 8
      }, {
        "name" : "IQN",
        "type" : 8
      }, {
        "name" : "Lun",
        "type" : 22
      }, {
        "name" : "ISCSIInterface",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      }, {
        "name" : "Portals",
        "type" : 60
      }, {
        "name" : "DiscoveryCHAPAuth",
        "type" : 30
      }, {
        "name" : "SessionCHAPAuth",
        "type" : 30
      }, {
        "name" : "SecretRef",
        "type" : 61
      }, {
        "name" : "InitiatorName",
        "type" : 64
      } ],
      "name" : "struct{TargetPortal string; IQN string; Lun int32; ISCSIInterface string; FSType string; ReadOnly bool; Portals []string; DiscoveryCHAPAuth bool; SessionCHAPAuth bool; SecretRef *k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; InitiatorName *string}",
      "type" : "Struct",
      "underlying" : 59
    }, {
      "elem" : 8,
      "name" : "[]string",
      "type" : "Slice",
      "underlying" : 60
    }, {
      "elem" : 62,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.LocalObjectReference",
      "type" : "Pointer",
      "underlying" : 61
    }, {
      "local-name" : "LocalObjectReference",
      "name" : "k8s.io/kubernetes/pkg/apis/core.LocalObjectReference",
      "package" : 1,
      "type" : "Named",
      "underlying" : 63
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      } ],
      "name" : "struct{Name string}",
      "type" : "Struct",
      "underlying" : 63
    }, {
      "elem" : 8,
      "name" : "*string",
      "type" : "Pointer",
      "underlying" : 64
    }, {
      "elem" : 66,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.GlusterfsVolumeSource",
      "type" : "Pointer",
      "underlying" : 65
    }, {
      "local-name" : "GlusterfsVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.GlusterfsVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 67
    }, {
      "fields" : [ {
        "name" : "EndpointsName",
        "type" : 8
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{EndpointsName string; Path string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 67
    }, {
      "elem" : 69,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PersistentVolumeClaimVolumeSource",
      "type" : "Pointer",
      "underlying" : 68
    }, {
      "local-name" : "PersistentVolumeClaimVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PersistentVolumeClaimVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 70
    }, {
      "fields" : [ {
        "name" : "ClaimName",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{ClaimName string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 70
    }, {
      "elem" : 72,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.RBDVolumeSource",
      "type" : "Pointer",
      "underlying" : 71
    }, {
      "local-name" : "RBDVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.RBDVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 73
    }, {
      "fields" : [ {
        "name" : "CephMonitors",
        "type" : 60
      }, {
        "name" : "RBDImage",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "RBDPool",
        "type" : 8
      }, {
        "name" : "RadosUser",
        "type" : 8
      }, {
        "name" : "Keyring",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 61
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{CephMonitors []string; RBDImage string; FSType string; RBDPool string; RadosUser string; Keyring string; SecretRef *k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 73
    }, {
      "elem" : 75,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.QuobyteVolumeSource",
      "type" : "Pointer",
      "underlying" : 74
    }, {
      "local-name" : "QuobyteVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.QuobyteVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 76
    }, {
      "fields" : [ {
        "name" : "Registry",
        "type" : 8
      }, {
        "name" : "Volume",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      }, {
        "name" : "User",
        "type" : 8
      }, {
        "name" : "Group",
        "type" : 8
      }, {
        "name" : "Tenant",
        "type" : 8
      } ],
      "name" : "struct{Registry string; Volume string; ReadOnly bool; User string; Group string; Tenant string}",
      "type" : "Struct",
      "underlying" : 76
    }, {
      "elem" : 78,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.FlexVolumeSource",
      "type" : "Pointer",
      "underlying" : 77
    }, {
      "local-name" : "FlexVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.FlexVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 79
    }, {
      "fields" : [ {
        "name" : "Driver",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 61
      }, {
        "name" : "ReadOnly",
        "type" : 30
      }, {
        "name" : "Options",
        "type" : 80
      } ],
      "name" : "struct{Driver string; FSType string; SecretRef *k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; ReadOnly bool; Options map[string]string}",
      "type" : "Struct",
      "underlying" : 79
    }, {
      "elem" : 8,
      "key" : 8,
      "name" : "map[string]string",
      "type" : "Map",
      "underlying" : 80
    }, {
      "elem" : 82,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.CinderVolumeSource",
      "type" : "Pointer",
      "underlying" : 81
    }, {
      "local-name" : "CinderVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.CinderVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 83
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      }, {
        "name" : "SecretRef",
        "type" : 61
      } ],
      "name" : "struct{VolumeID string; FSType string; ReadOnly bool; SecretRef *k8s.io/kubernetes/pkg/apis/core.LocalObjectReference}",
      "type" : "Struct",
      "underlying" : 83
    }, {
      "elem" : 85,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.CephFSVolumeSource",
      "type" : "Pointer",
      "underlying" : 84
    }, {
      "local-name" : "CephFSVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.CephFSVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 86
    }, {
      "fields" : [ {
        "name" : "Monitors",
        "type" : 60
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "User",
        "type" : 8
      }, {
        "name" : "SecretFile",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 61
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{Monitors []string; Path string; User string; SecretFile string; SecretRef *k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 86
    }, {
      "elem" : 88,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.FlockerVolumeSource",
      "type" : "Pointer",
      "underlying" : 87
    }, {
      "local-name" : "FlockerVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.FlockerVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 89
    }, {
      "fields" : [ {
        "name" : "DatasetName",
        "type" : 8
      }, {
        "name" : "DatasetUUID",
        "type" : 8
      } ],
      "name" : "struct{DatasetName string; DatasetUUID string}",
      "type" : "Struct",
      "underlying" : 89
    }, {
      "elem" : 91,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.DownwardAPIVolumeSource",
      "type" : "Pointer",
      "underlying" : 90
    }, {
      "local-name" : "DownwardAPIVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.DownwardAPIVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 92
    }, {
      "fields" : [ {
        "name" : "Items",
        "type" : 93
      }, {
        "name" : "DefaultMode",
        "type" : 52
      } ],
      "name" : "struct{Items []k8s.io/kubernetes/pkg/apis/core.DownwardAPIVolumeFile; DefaultMode *int32}",
      "type" : "Struct",
      "underlying" : 92
    }, {
      "elem" : 94,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.DownwardAPIVolumeFile",
      "type" : "Slice",
      "underlying" : 93
    }, {
      "local-name" : "DownwardAPIVolumeFile",
      "name" : "k8s.io/kubernetes/pkg/apis/core.DownwardAPIVolumeFile",
      "package" : 1,
      "type" : "Named",
      "underlying" : 95
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "FieldRef",
        "type" : 96
      }, {
        "name" : "ResourceFieldRef",
        "type" : 99
      }, {
        "name" : "Mode",
        "type" : 52
      } ],
      "name" : "struct{Path string; FieldRef *k8s.io/kubernetes/pkg/apis/core.ObjectFieldSelector; ResourceFieldRef *k8s.io/kubernetes/pkg/apis/core.ResourceFieldSelector; Mode *int32}",
      "type" : "Struct",
      "underlying" : 95
    }, {
      "elem" : 97,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ObjectFieldSelector",
      "type" : "Pointer",
      "underlying" : 96
    }, {
      "local-name" : "ObjectFieldSelector",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ObjectFieldSelector",
      "package" : 1,
      "type" : "Named",
      "underlying" : 98
    }, {
      "fields" : [ {
        "name" : "APIVersion",
        "type" : 8
      }, {
        "name" : "FieldPath",
        "type" : 8
      } ],
      "name" : "struct{APIVersion string; FieldPath string}",
      "type" : "Struct",
      "underlying" : 98
    }, {
      "elem" : 100,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ResourceFieldSelector",
      "type" : "Pointer",
      "underlying" : 99
    }, {
      "local-name" : "ResourceFieldSelector",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ResourceFieldSelector",
      "package" : 1,
      "type" : "Named",
      "underlying" : 101
    }, {
      "fields" : [ {
        "name" : "ContainerName",
        "type" : 8
      }, {
        "name" : "Resource",
        "type" : 8
      }, {
        "name" : "Divisor",
        "type" : 16
      } ],
      "name" : "struct{ContainerName string; Resource string; Divisor k8s.io/apimachinery/pkg/api/resource.Quantity}",
      "type" : "Struct",
      "underlying" : 101
    }, {
      "elem" : 103,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.FCVolumeSource",
      "type" : "Pointer",
      "underlying" : 102
    }, {
      "local-name" : "FCVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.FCVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 104
    }, {
      "fields" : [ {
        "name" : "TargetWWNs",
        "type" : 60
      }, {
        "name" : "Lun",
        "type" : 52
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      }, {
        "name" : "WWIDs",
        "type" : 60
      } ],
      "name" : "struct{TargetWWNs []string; Lun *int32; FSType string; ReadOnly bool; WWIDs []string}",
      "type" : "Struct",
      "underlying" : 104
    }, {
      "elem" : 106,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AzureFileVolumeSource",
      "type" : "Pointer",
      "underlying" : 105
    }, {
      "local-name" : "AzureFileVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AzureFileVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 107
    }, {
      "fields" : [ {
        "name" : "SecretName",
        "type" : 8
      }, {
        "name" : "ShareName",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{SecretName string; ShareName string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 107
    }, {
      "elem" : 109,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ConfigMapVolumeSource",
      "type" : "Pointer",
      "underlying" : 108
    }, {
      "local-name" : "ConfigMapVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ConfigMapVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 110
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 62
      }, {
        "name" : "Items",
        "type" : 49
      }, {
        "name" : "DefaultMode",
        "type" : 52
      }, {
        "name" : "Optional",
        "type" : 53
      } ],
      "name" : "struct{k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; Items []k8s.io/kubernetes/pkg/apis/core.KeyToPath; DefaultMode *int32; Optional *bool}",
      "type" : "Struct",
      "underlying" : 110
    }, {
      "elem" : 112,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.VsphereVirtualDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 111
    }, {
      "local-name" : "VsphereVirtualDiskVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.VsphereVirtualDiskVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 113
    }, {
      "fields" : [ {
        "name" : "VolumePath",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "StoragePolicyName",
        "type" : 8
      }, {
        "name" : "StoragePolicyID",
        "type" : 8
      } ],
      "name" : "struct{VolumePath string; FSType string; StoragePolicyName string; StoragePolicyID string}",
      "type" : "Struct",
      "underlying" : 113
    }, {
      "elem" : 115,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AzureDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 114
    }, {
      "local-name" : "AzureDiskVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AzureDiskVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 116
    }, {
      "fields" : [ {
        "name" : "DiskName",
        "type" : 8
      }, {
        "name" : "DataDiskURI",
        "type" : 8
      }, {
        "name" : "CachingMode",
        "type" : 117
      }, {
        "name" : "FSType",
        "type" : 64
      }, {
        "name" : "ReadOnly",
        "type" : 53
      }, {
        "name" : "Kind",
        "type" : 119
      } ],
      "name" : "struct{DiskName string; DataDiskURI string; CachingMode *k8s.io/kubernetes/pkg/apis/core.AzureDataDiskCachingMode; FSType *string; ReadOnly *bool; Kind *k8s.io/kubernetes/pkg/apis/core.AzureDataDiskKind}",
      "type" : "Struct",
      "underlying" : 116
    }, {
      "elem" : 118,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AzureDataDiskCachingMode",
      "type" : "Pointer",
      "underlying" : 117
    }, {
      "local-name" : "AzureDataDiskCachingMode",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AzureDataDiskCachingMode",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 120,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.AzureDataDiskKind",
      "type" : "Pointer",
      "underlying" : 119
    }, {
      "local-name" : "AzureDataDiskKind",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AzureDataDiskKind",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 122,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PhotonPersistentDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 121
    }, {
      "local-name" : "PhotonPersistentDiskVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PhotonPersistentDiskVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 123
    }, {
      "fields" : [ {
        "name" : "PdID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      } ],
      "name" : "struct{PdID string; FSType string}",
      "type" : "Struct",
      "underlying" : 123
    }, {
      "elem" : 125,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ProjectedVolumeSource",
      "type" : "Pointer",
      "underlying" : 124
    }, {
      "local-name" : "ProjectedVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ProjectedVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 126
    }, {
      "fields" : [ {
        "name" : "Sources",
        "type" : 127
      }, {
        "name" : "DefaultMode",
        "type" : 52
      } ],
      "name" : "struct{Sources []k8s.io/kubernetes/pkg/apis/core.VolumeProjection; DefaultMode *int32}",
      "type" : "Struct",
      "underlying" : 126
    }, {
      "elem" : 128,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.VolumeProjection",
      "type" : "Slice",
      "underlying" : 127
    }, {
      "local-name" : "VolumeProjection",
      "name" : "k8s.io/kubernetes/pkg/apis/core.VolumeProjection",
      "package" : 1,
      "type" : "Named",
      "underlying" : 129
    }, {
      "fields" : [ {
        "name" : "Secret",
        "type" : 130
      }, {
        "name" : "DownwardAPI",
        "type" : 133
      }, {
        "name" : "ConfigMap",
        "type" : 136
      }, {
        "name" : "ServiceAccountToken",
        "type" : 138
      } ],
      "name" : "struct{Secret *k8s.io/kubernetes/pkg/apis/core.SecretProjection; DownwardAPI *k8s.io/kubernetes/pkg/apis/core.DownwardAPIProjection; ConfigMap *k8s.io/kubernetes/pkg/apis/core.ConfigMapProjection; ServiceAccountToken *k8s.io/kubernetes/pkg/apis/core.ServiceAccountTokenProjection}",
      "type" : "Struct",
      "underlying" : 129
    }, {
      "elem" : 131,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.SecretProjection",
      "type" : "Pointer",
      "underlying" : 130
    }, {
      "local-name" : "SecretProjection",
      "name" : "k8s.io/kubernetes/pkg/apis/core.SecretProjection",
      "package" : 1,
      "type" : "Named",
      "underlying" : 132
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 62
      }, {
        "name" : "Items",
        "type" : 49
      }, {
        "name" : "Optional",
        "type" : 53
      } ],
      "name" : "struct{k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; Items []k8s.io/kubernetes/pkg/apis/core.KeyToPath; Optional *bool}",
      "type" : "Struct",
      "underlying" : 132
    }, {
      "elem" : 134,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.DownwardAPIProjection",
      "type" : "Pointer",
      "underlying" : 133
    }, {
      "local-name" : "DownwardAPIProjection",
      "name" : "k8s.io/kubernetes/pkg/apis/core.DownwardAPIProjection",
      "package" : 1,
      "type" : "Named",
      "underlying" : 135
    }, {
      "fields" : [ {
        "name" : "Items",
        "type" : 93
      } ],
      "name" : "struct{Items []k8s.io/kubernetes/pkg/apis/core.DownwardAPIVolumeFile}",
      "type" : "Struct",
      "underlying" : 135
    }, {
      "elem" : 137,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ConfigMapProjection",
      "type" : "Pointer",
      "underlying" : 136
    }, {
      "local-name" : "ConfigMapProjection",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ConfigMapProjection",
      "package" : 1,
      "type" : "Named",
      "underlying" : 132
    }, {
      "elem" : 139,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ServiceAccountTokenProjection",
      "type" : "Pointer",
      "underlying" : 138
    }, {
      "local-name" : "ServiceAccountTokenProjection",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ServiceAccountTokenProjection",
      "package" : 1,
      "type" : "Named",
      "underlying" : 140
    }, {
      "fields" : [ {
        "name" : "Audience",
        "type" : 8
      }, {
        "name" : "ExpirationSeconds",
        "type" : 20
      }, {
        "name" : "Path",
        "type" : 8
      } ],
      "name" : "struct{Audience string; ExpirationSeconds int64; Path string}",
      "type" : "Struct",
      "underlying" : 140
    }, {
      "elem" : 142,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PortworxVolumeSource",
      "type" : "Pointer",
      "underlying" : 141
    }, {
      "local-name" : "PortworxVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PortworxVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 143
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{VolumeID string; FSType string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 143
    }, {
      "elem" : 145,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ScaleIOVolumeSource",
      "type" : "Pointer",
      "underlying" : 144
    }, {
      "local-name" : "ScaleIOVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ScaleIOVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 146
    }, {
      "fields" : [ {
        "name" : "Gateway",
        "type" : 8
      }, {
        "name" : "System",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 61
      }, {
        "name" : "SSLEnabled",
        "type" : 30
      }, {
        "name" : "ProtectionDomain",
        "type" : 8
      }, {
        "name" : "StoragePool",
        "type" : 8
      }, {
        "name" : "StorageMode",
        "type" : 8
      }, {
        "name" : "VolumeName",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{Gateway string; System string; SecretRef *k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; SSLEnabled bool; ProtectionDomain string; StoragePool string; StorageMode string; VolumeName string; FSType string; ReadOnly bool}",
      "type" : "Struct",
      "underlying" : 146
    }, {
      "elem" : 148,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.StorageOSVolumeSource",
      "type" : "Pointer",
      "underlying" : 147
    }, {
      "local-name" : "StorageOSVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.StorageOSVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 149
    }, {
      "fields" : [ {
        "name" : "VolumeName",
        "type" : 8
      }, {
        "name" : "VolumeNamespace",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      }, {
        "name" : "SecretRef",
        "type" : 61
      } ],
      "name" : "struct{VolumeName string; VolumeNamespace string; FSType string; ReadOnly bool; SecretRef *k8s.io/kubernetes/pkg/apis/core.LocalObjectReference}",
      "type" : "Struct",
      "underlying" : 149
    }, {
      "elem" : 151,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.CSIVolumeSource",
      "type" : "Pointer",
      "underlying" : 150
    }, {
      "local-name" : "CSIVolumeSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.CSIVolumeSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 152
    }, {
      "fields" : [ {
        "name" : "Driver",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 53
      }, {
        "name" : "FSType",
        "type" : 64
      }, {
        "name" : "VolumeAttributes",
        "type" : 80
      }, {
        "name" : "NodePublishSecretRef",
        "type" : 61
      } ],
      "name" : "struct{Driver string; ReadOnly *bool; FSType *string; VolumeAttributes map[string]string; NodePublishSecretRef *k8s.io/kubernetes/pkg/apis/core.LocalObjectReference}",
      "type" : "Struct",
      "underlying" : 152
    }, {
      "elem" : 154,
      "name" : "*k8s.io/api/core/v1.VolumeSource",
      "type" : "Pointer",
      "underlying" : 153
    }, {
      "local-name" : "VolumeSource",
      "name" : "k8s.io/api/core/v1.VolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 155
    }, {
      "fields" : [ {
        "name" : "HostPath",
        "type" : 156
      }, {
        "name" : "EmptyDir",
        "type" : 161
      }, {
        "name" : "GCEPersistentDisk",
        "type" : 165
      }, {
        "name" : "AWSElasticBlockStore",
        "type" : 168
      }, {
        "name" : "GitRepo",
        "type" : 171
      }, {
        "name" : "Secret",
        "type" : 174
      }, {
        "name" : "NFS",
        "type" : 180
      }, {
        "name" : "ISCSI",
        "type" : 183
      }, {
        "name" : "Glusterfs",
        "type" : 189
      }, {
        "name" : "PersistentVolumeClaim",
        "type" : 192
      }, {
        "name" : "RBD",
        "type" : 195
      }, {
        "name" : "FlexVolume",
        "type" : 198
      }, {
        "name" : "Cinder",
        "type" : 201
      }, {
        "name" : "CephFS",
        "type" : 204
      }, {
        "name" : "Flocker",
        "type" : 207
      }, {
        "name" : "DownwardAPI",
        "type" : 210
      }, {
        "name" : "FC",
        "type" : 222
      }, {
        "name" : "AzureFile",
        "type" : 225
      }, {
        "name" : "ConfigMap",
        "type" : 228
      }, {
        "name" : "VsphereVolume",
        "type" : 231
      }, {
        "name" : "Quobyte",
        "type" : 234
      }, {
        "name" : "AzureDisk",
        "type" : 237
      }, {
        "name" : "PhotonPersistentDisk",
        "type" : 244
      }, {
        "name" : "Projected",
        "type" : 247
      }, {
        "name" : "PortworxVolume",
        "type" : 265
      }, {
        "name" : "ScaleIO",
        "type" : 268
      }, {
        "name" : "StorageOS",
        "type" : 271
      }, {
        "name" : "CSI",
        "type" : 274
      } ],
      "name" : "struct{HostPath *k8s.io/api/core/v1.HostPathVolumeSource \"json:\\\"hostPath,omitempty\\\" protobuf:\\\"bytes,1,opt,name=hostPath\\\"\"; EmptyDir *k8s.io/api/core/v1.EmptyDirVolumeSource \"json:\\\"emptyDir,omitempty\\\" protobuf:\\\"bytes,2,opt,name=emptyDir\\\"\"; GCEPersistentDisk *k8s.io/api/core/v1.GCEPersistentDiskVolumeSource \"json:\\\"gcePersistentDisk,omitempty\\\" protobuf:\\\"bytes,3,opt,name=gcePersistentDisk\\\"\"; AWSElasticBlockStore *k8s.io/api/core/v1.AWSElasticBlockStoreVolumeSource \"json:\\\"awsElasticBlockStore,omitempty\\\" protobuf:\\\"bytes,4,opt,name=awsElasticBlockStore\\\"\"; GitRepo *k8s.io/api/core/v1.GitRepoVolumeSource \"json:\\\"gitRepo,omitempty\\\" protobuf:\\\"bytes,5,opt,name=gitRepo\\\"\"; Secret *k8s.io/api/core/v1.SecretVolumeSource \"json:\\\"secret,omitempty\\\" protobuf:\\\"bytes,6,opt,name=secret\\\"\"; NFS *k8s.io/api/core/v1.NFSVolumeSource \"json:\\\"nfs,omitempty\\\" protobuf:\\\"bytes,7,opt,name=nfs\\\"\"; ISCSI *k8s.io/api/core/v1.ISCSIVolumeSource \"json:\\\"iscsi,omitempty\\\" protobuf:\\\"bytes,8,opt,name=iscsi\\\"\"; Glusterfs *k8s.io/api/core/v1.GlusterfsVolumeSource \"json:\\\"glusterfs,omitempty\\\" protobuf:\\\"bytes,9,opt,name=glusterfs\\\"\"; PersistentVolumeClaim *k8s.io/api/core/v1.PersistentVolumeClaimVolumeSource \"json:\\\"persistentVolumeClaim,omitempty\\\" protobuf:\\\"bytes,10,opt,name=persistentVolumeClaim\\\"\"; RBD *k8s.io/api/core/v1.RBDVolumeSource \"json:\\\"rbd,omitempty\\\" protobuf:\\\"bytes,11,opt,name=rbd\\\"\"; FlexVolume *k8s.io/api/core/v1.FlexVolumeSource \"json:\\\"flexVolume,omitempty\\\" protobuf:\\\"bytes,12,opt,name=flexVolume\\\"\"; Cinder *k8s.io/api/core/v1.CinderVolumeSource \"json:\\\"cinder,omitempty\\\" protobuf:\\\"bytes,13,opt,name=cinder\\\"\"; CephFS *k8s.io/api/core/v1.CephFSVolumeSource \"json:\\\"cephfs,omitempty\\\" protobuf:\\\"bytes,14,opt,name=cephfs\\\"\"; Flocker *k8s.io/api/core/v1.FlockerVolumeSource \"json:\\\"flocker,omitempty\\\" protobuf:\\\"bytes,15,opt,name=flocker\\\"\"; DownwardAPI *k8s.io/api/core/v1.DownwardAPIVolumeSource \"json:\\\"downwardAPI,omitempty\\\" protobuf:\\\"bytes,16,opt,name=downwardAPI\\\"\"; FC *k8s.io/api/core/v1.FCVolumeSource \"json:\\\"fc,omitempty\\\" protobuf:\\\"bytes,17,opt,name=fc\\\"\"; AzureFile *k8s.io/api/core/v1.AzureFileVolumeSource \"json:\\\"azureFile,omitempty\\\" protobuf:\\\"bytes,18,opt,name=azureFile\\\"\"; ConfigMap *k8s.io/api/core/v1.ConfigMapVolumeSource \"json:\\\"configMap,omitempty\\\" protobuf:\\\"bytes,19,opt,name=configMap\\\"\"; VsphereVolume *k8s.io/api/core/v1.VsphereVirtualDiskVolumeSource \"json:\\\"vsphereVolume,omitempty\\\" protobuf:\\\"bytes,20,opt,name=vsphereVolume\\\"\"; Quobyte *k8s.io/api/core/v1.QuobyteVolumeSource \"json:\\\"quobyte,omitempty\\\" protobuf:\\\"bytes,21,opt,name=quobyte\\\"\"; AzureDisk *k8s.io/api/core/v1.AzureDiskVolumeSource \"json:\\\"azureDisk,omitempty\\\" protobuf:\\\"bytes,22,opt,name=azureDisk\\\"\"; PhotonPersistentDisk *k8s.io/api/core/v1.PhotonPersistentDiskVolumeSource \"json:\\\"photonPersistentDisk,omitempty\\\" protobuf:\\\"bytes,23,opt,name=photonPersistentDisk\\\"\"; Projected *k8s.io/api/core/v1.ProjectedVolumeSource \"json:\\\"projected,omitempty\\\" protobuf:\\\"bytes,26,opt,name=projected\\\"\"; PortworxVolume *k8s.io/api/core/v1.PortworxVolumeSource \"json:\\\"portworxVolume,omitempty\\\" protobuf:\\\"bytes,24,opt,name=portworxVolume\\\"\"; ScaleIO *k8s.io/api/core/v1.ScaleIOVolumeSource \"json:\\\"scaleIO,omitempty\\\" protobuf:\\\"bytes,25,opt,name=scaleIO\\\"\"; StorageOS *k8s.io/api/core/v1.StorageOSVolumeSource \"json:\\\"storageos,omitempty\\\" protobuf:\\\"bytes,27,opt,name=storageos\\\"\"; CSI *k8s.io/api/core/v1.CSIVolumeSource \"json:\\\"csi,omitempty\\\" protobuf:\\\"bytes,28,opt,name=csi\\\"\"}",
      "type" : "Struct",
      "underlying" : 155
    }, {
      "elem" : 157,
      "name" : "*k8s.io/api/core/v1.HostPathVolumeSource",
      "type" : "Pointer",
      "underlying" : 156
    }, {
      "local-name" : "HostPathVolumeSource",
      "name" : "k8s.io/api/core/v1.HostPathVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 158
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "Type",
        "type" : 159
      } ],
      "name" : "struct{Path string \"json:\\\"path\\\" protobuf:\\\"bytes,1,opt,name=path\\\"\"; Type *k8s.io/api/core/v1.HostPathType \"json:\\\"type,omitempty\\\" protobuf:\\\"bytes,2,opt,name=type\\\"\"}",
      "type" : "Struct",
      "underlying" : 158
    }, {
      "elem" : 160,
      "name" : "*k8s.io/api/core/v1.HostPathType",
      "type" : "Pointer",
      "underlying" : 159
    }, {
      "local-name" : "HostPathType",
      "name" : "k8s.io/api/core/v1.HostPathType",
      "package" : 5,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 162,
      "name" : "*k8s.io/api/core/v1.EmptyDirVolumeSource",
      "type" : "Pointer",
      "underlying" : 161
    }, {
      "local-name" : "EmptyDirVolumeSource",
      "name" : "k8s.io/api/core/v1.EmptyDirVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 163
    }, {
      "fields" : [ {
        "name" : "Medium",
        "type" : 164
      }, {
        "name" : "SizeLimit",
        "type" : 15
      } ],
      "name" : "struct{Medium k8s.io/api/core/v1.StorageMedium \"json:\\\"medium,omitempty\\\" protobuf:\\\"bytes,1,opt,name=medium,casttype=StorageMedium\\\"\"; SizeLimit *k8s.io/apimachinery/pkg/api/resource.Quantity \"json:\\\"sizeLimit,omitempty\\\" protobuf:\\\"bytes,2,opt,name=sizeLimit\\\"\"}",
      "type" : "Struct",
      "underlying" : 163
    }, {
      "local-name" : "StorageMedium",
      "name" : "k8s.io/api/core/v1.StorageMedium",
      "package" : 5,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 166,
      "name" : "*k8s.io/api/core/v1.GCEPersistentDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 165
    }, {
      "local-name" : "GCEPersistentDiskVolumeSource",
      "name" : "k8s.io/api/core/v1.GCEPersistentDiskVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 167
    }, {
      "fields" : [ {
        "name" : "PDName",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "Partition",
        "type" : 22
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{PDName string \"json:\\\"pdName\\\" protobuf:\\\"bytes,1,opt,name=pdName\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; Partition int32 \"json:\\\"partition,omitempty\\\" protobuf:\\\"varint,3,opt,name=partition\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 167
    }, {
      "elem" : 169,
      "name" : "*k8s.io/api/core/v1.AWSElasticBlockStoreVolumeSource",
      "type" : "Pointer",
      "underlying" : 168
    }, {
      "local-name" : "AWSElasticBlockStoreVolumeSource",
      "name" : "k8s.io/api/core/v1.AWSElasticBlockStoreVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 170
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "Partition",
        "type" : 22
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{VolumeID string \"json:\\\"volumeID\\\" protobuf:\\\"bytes,1,opt,name=volumeID\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; Partition int32 \"json:\\\"partition,omitempty\\\" protobuf:\\\"varint,3,opt,name=partition\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 170
    }, {
      "elem" : 172,
      "name" : "*k8s.io/api/core/v1.GitRepoVolumeSource",
      "type" : "Pointer",
      "underlying" : 171
    }, {
      "local-name" : "GitRepoVolumeSource",
      "name" : "k8s.io/api/core/v1.GitRepoVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 173
    }, {
      "fields" : [ {
        "name" : "Repository",
        "type" : 8
      }, {
        "name" : "Revision",
        "type" : 8
      }, {
        "name" : "Directory",
        "type" : 8
      } ],
      "name" : "struct{Repository string \"json:\\\"repository\\\" protobuf:\\\"bytes,1,opt,name=repository\\\"\"; Revision string \"json:\\\"revision,omitempty\\\" protobuf:\\\"bytes,2,opt,name=revision\\\"\"; Directory string \"json:\\\"directory,omitempty\\\" protobuf:\\\"bytes,3,opt,name=directory\\\"\"}",
      "type" : "Struct",
      "underlying" : 173
    }, {
      "elem" : 175,
      "name" : "*k8s.io/api/core/v1.SecretVolumeSource",
      "type" : "Pointer",
      "underlying" : 174
    }, {
      "local-name" : "SecretVolumeSource",
      "name" : "k8s.io/api/core/v1.SecretVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 176
    }, {
      "fields" : [ {
        "name" : "SecretName",
        "type" : 8
      }, {
        "name" : "Items",
        "type" : 177
      }, {
        "name" : "DefaultMode",
        "type" : 52
      }, {
        "name" : "Optional",
        "type" : 53
      } ],
      "name" : "struct{SecretName string \"json:\\\"secretName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=secretName\\\"\"; Items []k8s.io/api/core/v1.KeyToPath \"json:\\\"items,omitempty\\\" protobuf:\\\"bytes,2,rep,name=items\\\"\"; DefaultMode *int32 \"json:\\\"defaultMode,omitempty\\\" protobuf:\\\"bytes,3,opt,name=defaultMode\\\"\"; Optional *bool \"json:\\\"optional,omitempty\\\" protobuf:\\\"varint,4,opt,name=optional\\\"\"}",
      "type" : "Struct",
      "underlying" : 176
    }, {
      "elem" : 178,
      "name" : "[]k8s.io/api/core/v1.KeyToPath",
      "type" : "Slice",
      "underlying" : 177
    }, {
      "local-name" : "KeyToPath",
      "name" : "k8s.io/api/core/v1.KeyToPath",
      "package" : 5,
      "type" : "Named",
      "underlying" : 179
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 8
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "Mode",
        "type" : 52
      } ],
      "name" : "struct{Key string \"json:\\\"key\\\" protobuf:\\\"bytes,1,opt,name=key\\\"\"; Path string \"json:\\\"path\\\" protobuf:\\\"bytes,2,opt,name=path\\\"\"; Mode *int32 \"json:\\\"mode,omitempty\\\" protobuf:\\\"varint,3,opt,name=mode\\\"\"}",
      "type" : "Struct",
      "underlying" : 179
    }, {
      "elem" : 181,
      "name" : "*k8s.io/api/core/v1.NFSVolumeSource",
      "type" : "Pointer",
      "underlying" : 180
    }, {
      "local-name" : "NFSVolumeSource",
      "name" : "k8s.io/api/core/v1.NFSVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 182
    }, {
      "fields" : [ {
        "name" : "Server",
        "type" : 8
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{Server string \"json:\\\"server\\\" protobuf:\\\"bytes,1,opt,name=server\\\"\"; Path string \"json:\\\"path\\\" protobuf:\\\"bytes,2,opt,name=path\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 182
    }, {
      "elem" : 184,
      "name" : "*k8s.io/api/core/v1.ISCSIVolumeSource",
      "type" : "Pointer",
      "underlying" : 183
    }, {
      "local-name" : "ISCSIVolumeSource",
      "name" : "k8s.io/api/core/v1.ISCSIVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 185
    }, {
      "fields" : [ {
        "name" : "TargetPortal",
        "type" : 8
      }, {
        "name" : "IQN",
        "type" : 8
      }, {
        "name" : "Lun",
        "type" : 22
      }, {
        "name" : "ISCSIInterface",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      }, {
        "name" : "Portals",
        "type" : 60
      }, {
        "name" : "DiscoveryCHAPAuth",
        "type" : 30
      }, {
        "name" : "SessionCHAPAuth",
        "type" : 30
      }, {
        "name" : "SecretRef",
        "type" : 186
      }, {
        "name" : "InitiatorName",
        "type" : 64
      } ],
      "name" : "struct{TargetPortal string \"json:\\\"targetPortal\\\" protobuf:\\\"bytes,1,opt,name=targetPortal\\\"\"; IQN string \"json:\\\"iqn\\\" protobuf:\\\"bytes,2,opt,name=iqn\\\"\"; Lun int32 \"json:\\\"lun\\\" protobuf:\\\"varint,3,opt,name=lun\\\"\"; ISCSIInterface string \"json:\\\"iscsiInterface,omitempty\\\" protobuf:\\\"bytes,4,opt,name=iscsiInterface\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,5,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,6,opt,name=readOnly\\\"\"; Portals []string \"json:\\\"portals,omitempty\\\" protobuf:\\\"bytes,7,opt,name=portals\\\"\"; DiscoveryCHAPAuth bool \"json:\\\"chapAuthDiscovery,omitempty\\\" protobuf:\\\"varint,8,opt,name=chapAuthDiscovery\\\"\"; SessionCHAPAuth bool \"json:\\\"chapAuthSession,omitempty\\\" protobuf:\\\"varint,11,opt,name=chapAuthSession\\\"\"; SecretRef *k8s.io/api/core/v1.LocalObjectReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,10,opt,name=secretRef\\\"\"; InitiatorName *string \"json:\\\"initiatorName,omitempty\\\" protobuf:\\\"bytes,12,opt,name=initiatorName\\\"\"}",
      "type" : "Struct",
      "underlying" : 185
    }, {
      "elem" : 187,
      "name" : "*k8s.io/api/core/v1.LocalObjectReference",
      "type" : "Pointer",
      "underlying" : 186
    }, {
      "local-name" : "LocalObjectReference",
      "name" : "k8s.io/api/core/v1.LocalObjectReference",
      "package" : 5,
      "type" : "Named",
      "underlying" : 188
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 8
      } ],
      "name" : "struct{Name string \"json:\\\"name,omitempty\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"}",
      "type" : "Struct",
      "underlying" : 188
    }, {
      "elem" : 190,
      "name" : "*k8s.io/api/core/v1.GlusterfsVolumeSource",
      "type" : "Pointer",
      "underlying" : 189
    }, {
      "local-name" : "GlusterfsVolumeSource",
      "name" : "k8s.io/api/core/v1.GlusterfsVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 191
    }, {
      "fields" : [ {
        "name" : "EndpointsName",
        "type" : 8
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{EndpointsName string \"json:\\\"endpoints\\\" protobuf:\\\"bytes,1,opt,name=endpoints\\\"\"; Path string \"json:\\\"path\\\" protobuf:\\\"bytes,2,opt,name=path\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 191
    }, {
      "elem" : 193,
      "name" : "*k8s.io/api/core/v1.PersistentVolumeClaimVolumeSource",
      "type" : "Pointer",
      "underlying" : 192
    }, {
      "local-name" : "PersistentVolumeClaimVolumeSource",
      "name" : "k8s.io/api/core/v1.PersistentVolumeClaimVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 194
    }, {
      "fields" : [ {
        "name" : "ClaimName",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{ClaimName string \"json:\\\"claimName\\\" protobuf:\\\"bytes,1,opt,name=claimName\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,2,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 194
    }, {
      "elem" : 196,
      "name" : "*k8s.io/api/core/v1.RBDVolumeSource",
      "type" : "Pointer",
      "underlying" : 195
    }, {
      "local-name" : "RBDVolumeSource",
      "name" : "k8s.io/api/core/v1.RBDVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 197
    }, {
      "fields" : [ {
        "name" : "CephMonitors",
        "type" : 60
      }, {
        "name" : "RBDImage",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "RBDPool",
        "type" : 8
      }, {
        "name" : "RadosUser",
        "type" : 8
      }, {
        "name" : "Keyring",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 186
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{CephMonitors []string \"json:\\\"monitors\\\" protobuf:\\\"bytes,1,rep,name=monitors\\\"\"; RBDImage string \"json:\\\"image\\\" protobuf:\\\"bytes,2,opt,name=image\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,3,opt,name=fsType\\\"\"; RBDPool string \"json:\\\"pool,omitempty\\\" protobuf:\\\"bytes,4,opt,name=pool\\\"\"; RadosUser string \"json:\\\"user,omitempty\\\" protobuf:\\\"bytes,5,opt,name=user\\\"\"; Keyring string \"json:\\\"keyring,omitempty\\\" protobuf:\\\"bytes,6,opt,name=keyring\\\"\"; SecretRef *k8s.io/api/core/v1.LocalObjectReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,7,opt,name=secretRef\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,8,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 197
    }, {
      "elem" : 199,
      "name" : "*k8s.io/api/core/v1.FlexVolumeSource",
      "type" : "Pointer",
      "underlying" : 198
    }, {
      "local-name" : "FlexVolumeSource",
      "name" : "k8s.io/api/core/v1.FlexVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 200
    }, {
      "fields" : [ {
        "name" : "Driver",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 186
      }, {
        "name" : "ReadOnly",
        "type" : 30
      }, {
        "name" : "Options",
        "type" : 80
      } ],
      "name" : "struct{Driver string \"json:\\\"driver\\\" protobuf:\\\"bytes,1,opt,name=driver\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; SecretRef *k8s.io/api/core/v1.LocalObjectReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,3,opt,name=secretRef\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"; Options map[string]string \"json:\\\"options,omitempty\\\" protobuf:\\\"bytes,5,rep,name=options\\\"\"}",
      "type" : "Struct",
      "underlying" : 200
    }, {
      "elem" : 202,
      "name" : "*k8s.io/api/core/v1.CinderVolumeSource",
      "type" : "Pointer",
      "underlying" : 201
    }, {
      "local-name" : "CinderVolumeSource",
      "name" : "k8s.io/api/core/v1.CinderVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 203
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      }, {
        "name" : "SecretRef",
        "type" : 186
      } ],
      "name" : "struct{VolumeID string \"json:\\\"volumeID\\\" protobuf:\\\"bytes,1,opt,name=volumeID\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"; SecretRef *k8s.io/api/core/v1.LocalObjectReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,4,opt,name=secretRef\\\"\"}",
      "type" : "Struct",
      "underlying" : 203
    }, {
      "elem" : 205,
      "name" : "*k8s.io/api/core/v1.CephFSVolumeSource",
      "type" : "Pointer",
      "underlying" : 204
    }, {
      "local-name" : "CephFSVolumeSource",
      "name" : "k8s.io/api/core/v1.CephFSVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 206
    }, {
      "fields" : [ {
        "name" : "Monitors",
        "type" : 60
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "User",
        "type" : 8
      }, {
        "name" : "SecretFile",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 186
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{Monitors []string \"json:\\\"monitors\\\" protobuf:\\\"bytes,1,rep,name=monitors\\\"\"; Path string \"json:\\\"path,omitempty\\\" protobuf:\\\"bytes,2,opt,name=path\\\"\"; User string \"json:\\\"user,omitempty\\\" protobuf:\\\"bytes,3,opt,name=user\\\"\"; SecretFile string \"json:\\\"secretFile,omitempty\\\" protobuf:\\\"bytes,4,opt,name=secretFile\\\"\"; SecretRef *k8s.io/api/core/v1.LocalObjectReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,5,opt,name=secretRef\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,6,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 206
    }, {
      "elem" : 208,
      "name" : "*k8s.io/api/core/v1.FlockerVolumeSource",
      "type" : "Pointer",
      "underlying" : 207
    }, {
      "local-name" : "FlockerVolumeSource",
      "name" : "k8s.io/api/core/v1.FlockerVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 209
    }, {
      "fields" : [ {
        "name" : "DatasetName",
        "type" : 8
      }, {
        "name" : "DatasetUUID",
        "type" : 8
      } ],
      "name" : "struct{DatasetName string \"json:\\\"datasetName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=datasetName\\\"\"; DatasetUUID string \"json:\\\"datasetUUID,omitempty\\\" protobuf:\\\"bytes,2,opt,name=datasetUUID\\\"\"}",
      "type" : "Struct",
      "underlying" : 209
    }, {
      "elem" : 211,
      "name" : "*k8s.io/api/core/v1.DownwardAPIVolumeSource",
      "type" : "Pointer",
      "underlying" : 210
    }, {
      "local-name" : "DownwardAPIVolumeSource",
      "name" : "k8s.io/api/core/v1.DownwardAPIVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 212
    }, {
      "fields" : [ {
        "name" : "Items",
        "type" : 213
      }, {
        "name" : "DefaultMode",
        "type" : 52
      } ],
      "name" : "struct{Items []k8s.io/api/core/v1.DownwardAPIVolumeFile \"json:\\\"items,omitempty\\\" protobuf:\\\"bytes,1,rep,name=items\\\"\"; DefaultMode *int32 \"json:\\\"defaultMode,omitempty\\\" protobuf:\\\"varint,2,opt,name=defaultMode\\\"\"}",
      "type" : "Struct",
      "underlying" : 212
    }, {
      "elem" : 214,
      "name" : "[]k8s.io/api/core/v1.DownwardAPIVolumeFile",
      "type" : "Slice",
      "underlying" : 213
    }, {
      "local-name" : "DownwardAPIVolumeFile",
      "name" : "k8s.io/api/core/v1.DownwardAPIVolumeFile",
      "package" : 5,
      "type" : "Named",
      "underlying" : 215
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "FieldRef",
        "type" : 216
      }, {
        "name" : "ResourceFieldRef",
        "type" : 219
      }, {
        "name" : "Mode",
        "type" : 52
      } ],
      "name" : "struct{Path string \"json:\\\"path\\\" protobuf:\\\"bytes,1,opt,name=path\\\"\"; FieldRef *k8s.io/api/core/v1.ObjectFieldSelector \"json:\\\"fieldRef,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fieldRef\\\"\"; ResourceFieldRef *k8s.io/api/core/v1.ResourceFieldSelector \"json:\\\"resourceFieldRef,omitempty\\\" protobuf:\\\"bytes,3,opt,name=resourceFieldRef\\\"\"; Mode *int32 \"json:\\\"mode,omitempty\\\" protobuf:\\\"varint,4,opt,name=mode\\\"\"}",
      "type" : "Struct",
      "underlying" : 215
    }, {
      "elem" : 217,
      "name" : "*k8s.io/api/core/v1.ObjectFieldSelector",
      "type" : "Pointer",
      "underlying" : 216
    }, {
      "local-name" : "ObjectFieldSelector",
      "name" : "k8s.io/api/core/v1.ObjectFieldSelector",
      "package" : 5,
      "type" : "Named",
      "underlying" : 218
    }, {
      "fields" : [ {
        "name" : "APIVersion",
        "type" : 8
      }, {
        "name" : "FieldPath",
        "type" : 8
      } ],
      "name" : "struct{APIVersion string \"json:\\\"apiVersion,omitempty\\\" protobuf:\\\"bytes,1,opt,name=apiVersion\\\"\"; FieldPath string \"json:\\\"fieldPath\\\" protobuf:\\\"bytes,2,opt,name=fieldPath\\\"\"}",
      "type" : "Struct",
      "underlying" : 218
    }, {
      "elem" : 220,
      "name" : "*k8s.io/api/core/v1.ResourceFieldSelector",
      "type" : "Pointer",
      "underlying" : 219
    }, {
      "local-name" : "ResourceFieldSelector",
      "name" : "k8s.io/api/core/v1.ResourceFieldSelector",
      "package" : 5,
      "type" : "Named",
      "underlying" : 221
    }, {
      "fields" : [ {
        "name" : "ContainerName",
        "type" : 8
      }, {
        "name" : "Resource",
        "type" : 8
      }, {
        "name" : "Divisor",
        "type" : 16
      } ],
      "name" : "struct{ContainerName string \"json:\\\"containerName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=containerName\\\"\"; Resource string \"json:\\\"resource\\\" protobuf:\\\"bytes,2,opt,name=resource\\\"\"; Divisor k8s.io/apimachinery/pkg/api/resource.Quantity \"json:\\\"divisor,omitempty\\\" protobuf:\\\"bytes,3,opt,name=divisor\\\"\"}",
      "type" : "Struct",
      "underlying" : 221
    }, {
      "elem" : 223,
      "name" : "*k8s.io/api/core/v1.FCVolumeSource",
      "type" : "Pointer",
      "underlying" : 222
    }, {
      "local-name" : "FCVolumeSource",
      "name" : "k8s.io/api/core/v1.FCVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 224
    }, {
      "fields" : [ {
        "name" : "TargetWWNs",
        "type" : 60
      }, {
        "name" : "Lun",
        "type" : 52
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      }, {
        "name" : "WWIDs",
        "type" : 60
      } ],
      "name" : "struct{TargetWWNs []string \"json:\\\"targetWWNs,omitempty\\\" protobuf:\\\"bytes,1,rep,name=targetWWNs\\\"\"; Lun *int32 \"json:\\\"lun,omitempty\\\" protobuf:\\\"varint,2,opt,name=lun\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,3,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"; WWIDs []string \"json:\\\"wwids,omitempty\\\" protobuf:\\\"bytes,5,rep,name=wwids\\\"\"}",
      "type" : "Struct",
      "underlying" : 224
    }, {
      "elem" : 226,
      "name" : "*k8s.io/api/core/v1.AzureFileVolumeSource",
      "type" : "Pointer",
      "underlying" : 225
    }, {
      "local-name" : "AzureFileVolumeSource",
      "name" : "k8s.io/api/core/v1.AzureFileVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 227
    }, {
      "fields" : [ {
        "name" : "SecretName",
        "type" : 8
      }, {
        "name" : "ShareName",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{SecretName string \"json:\\\"secretName\\\" protobuf:\\\"bytes,1,opt,name=secretName\\\"\"; ShareName string \"json:\\\"shareName\\\" protobuf:\\\"bytes,2,opt,name=shareName\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 227
    }, {
      "elem" : 229,
      "name" : "*k8s.io/api/core/v1.ConfigMapVolumeSource",
      "type" : "Pointer",
      "underlying" : 228
    }, {
      "local-name" : "ConfigMapVolumeSource",
      "name" : "k8s.io/api/core/v1.ConfigMapVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 230
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 187
      }, {
        "name" : "Items",
        "type" : 177
      }, {
        "name" : "DefaultMode",
        "type" : 52
      }, {
        "name" : "Optional",
        "type" : 53
      } ],
      "name" : "struct{k8s.io/api/core/v1.LocalObjectReference \"json:\\\",inline\\\" protobuf:\\\"bytes,1,opt,name=localObjectReference\\\"\"; Items []k8s.io/api/core/v1.KeyToPath \"json:\\\"items,omitempty\\\" protobuf:\\\"bytes,2,rep,name=items\\\"\"; DefaultMode *int32 \"json:\\\"defaultMode,omitempty\\\" protobuf:\\\"varint,3,opt,name=defaultMode\\\"\"; Optional *bool \"json:\\\"optional,omitempty\\\" protobuf:\\\"varint,4,opt,name=optional\\\"\"}",
      "type" : "Struct",
      "underlying" : 230
    }, {
      "elem" : 232,
      "name" : "*k8s.io/api/core/v1.VsphereVirtualDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 231
    }, {
      "local-name" : "VsphereVirtualDiskVolumeSource",
      "name" : "k8s.io/api/core/v1.VsphereVirtualDiskVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 233
    }, {
      "fields" : [ {
        "name" : "VolumePath",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "StoragePolicyName",
        "type" : 8
      }, {
        "name" : "StoragePolicyID",
        "type" : 8
      } ],
      "name" : "struct{VolumePath string \"json:\\\"volumePath\\\" protobuf:\\\"bytes,1,opt,name=volumePath\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; StoragePolicyName string \"json:\\\"storagePolicyName,omitempty\\\" protobuf:\\\"bytes,3,opt,name=storagePolicyName\\\"\"; StoragePolicyID string \"json:\\\"storagePolicyID,omitempty\\\" protobuf:\\\"bytes,4,opt,name=storagePolicyID\\\"\"}",
      "type" : "Struct",
      "underlying" : 233
    }, {
      "elem" : 235,
      "name" : "*k8s.io/api/core/v1.QuobyteVolumeSource",
      "type" : "Pointer",
      "underlying" : 234
    }, {
      "local-name" : "QuobyteVolumeSource",
      "name" : "k8s.io/api/core/v1.QuobyteVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 236
    }, {
      "fields" : [ {
        "name" : "Registry",
        "type" : 8
      }, {
        "name" : "Volume",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      }, {
        "name" : "User",
        "type" : 8
      }, {
        "name" : "Group",
        "type" : 8
      }, {
        "name" : "Tenant",
        "type" : 8
      } ],
      "name" : "struct{Registry string \"json:\\\"registry\\\" protobuf:\\\"bytes,1,opt,name=registry\\\"\"; Volume string \"json:\\\"volume\\\" protobuf:\\\"bytes,2,opt,name=volume\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"; User string \"json:\\\"user,omitempty\\\" protobuf:\\\"bytes,4,opt,name=user\\\"\"; Group string \"json:\\\"group,omitempty\\\" protobuf:\\\"bytes,5,opt,name=group\\\"\"; Tenant string \"json:\\\"tenant,omitempty\\\" protobuf:\\\"bytes,6,opt,name=tenant\\\"\"}",
      "type" : "Struct",
      "underlying" : 236
    }, {
      "elem" : 238,
      "name" : "*k8s.io/api/core/v1.AzureDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 237
    }, {
      "local-name" : "AzureDiskVolumeSource",
      "name" : "k8s.io/api/core/v1.AzureDiskVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 239
    }, {
      "fields" : [ {
        "name" : "DiskName",
        "type" : 8
      }, {
        "name" : "DataDiskURI",
        "type" : 8
      }, {
        "name" : "CachingMode",
        "type" : 240
      }, {
        "name" : "FSType",
        "type" : 64
      }, {
        "name" : "ReadOnly",
        "type" : 53
      }, {
        "name" : "Kind",
        "type" : 242
      } ],
      "name" : "struct{DiskName string \"json:\\\"diskName\\\" protobuf:\\\"bytes,1,opt,name=diskName\\\"\"; DataDiskURI string \"json:\\\"diskURI\\\" protobuf:\\\"bytes,2,opt,name=diskURI\\\"\"; CachingMode *k8s.io/api/core/v1.AzureDataDiskCachingMode \"json:\\\"cachingMode,omitempty\\\" protobuf:\\\"bytes,3,opt,name=cachingMode,casttype=AzureDataDiskCachingMode\\\"\"; FSType *string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,4,opt,name=fsType\\\"\"; ReadOnly *bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,5,opt,name=readOnly\\\"\"; Kind *k8s.io/api/core/v1.AzureDataDiskKind \"json:\\\"kind,omitempty\\\" protobuf:\\\"bytes,6,opt,name=kind,casttype=AzureDataDiskKind\\\"\"}",
      "type" : "Struct",
      "underlying" : 239
    }, {
      "elem" : 241,
      "name" : "*k8s.io/api/core/v1.AzureDataDiskCachingMode",
      "type" : "Pointer",
      "underlying" : 240
    }, {
      "local-name" : "AzureDataDiskCachingMode",
      "name" : "k8s.io/api/core/v1.AzureDataDiskCachingMode",
      "package" : 5,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 243,
      "name" : "*k8s.io/api/core/v1.AzureDataDiskKind",
      "type" : "Pointer",
      "underlying" : 242
    }, {
      "local-name" : "AzureDataDiskKind",
      "name" : "k8s.io/api/core/v1.AzureDataDiskKind",
      "package" : 5,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 245,
      "name" : "*k8s.io/api/core/v1.PhotonPersistentDiskVolumeSource",
      "type" : "Pointer",
      "underlying" : 244
    }, {
      "local-name" : "PhotonPersistentDiskVolumeSource",
      "name" : "k8s.io/api/core/v1.PhotonPersistentDiskVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 246
    }, {
      "fields" : [ {
        "name" : "PdID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      } ],
      "name" : "struct{PdID string \"json:\\\"pdID\\\" protobuf:\\\"bytes,1,opt,name=pdID\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"}",
      "type" : "Struct",
      "underlying" : 246
    }, {
      "elem" : 248,
      "name" : "*k8s.io/api/core/v1.ProjectedVolumeSource",
      "type" : "Pointer",
      "underlying" : 247
    }, {
      "local-name" : "ProjectedVolumeSource",
      "name" : "k8s.io/api/core/v1.ProjectedVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 249
    }, {
      "fields" : [ {
        "name" : "Sources",
        "type" : 250
      }, {
        "name" : "DefaultMode",
        "type" : 52
      } ],
      "name" : "struct{Sources []k8s.io/api/core/v1.VolumeProjection \"json:\\\"sources\\\" protobuf:\\\"bytes,1,rep,name=sources\\\"\"; DefaultMode *int32 \"json:\\\"defaultMode,omitempty\\\" protobuf:\\\"varint,2,opt,name=defaultMode\\\"\"}",
      "type" : "Struct",
      "underlying" : 249
    }, {
      "elem" : 251,
      "name" : "[]k8s.io/api/core/v1.VolumeProjection",
      "type" : "Slice",
      "underlying" : 250
    }, {
      "local-name" : "VolumeProjection",
      "name" : "k8s.io/api/core/v1.VolumeProjection",
      "package" : 5,
      "type" : "Named",
      "underlying" : 252
    }, {
      "fields" : [ {
        "name" : "Secret",
        "type" : 253
      }, {
        "name" : "DownwardAPI",
        "type" : 256
      }, {
        "name" : "ConfigMap",
        "type" : 259
      }, {
        "name" : "ServiceAccountToken",
        "type" : 261
      } ],
      "name" : "struct{Secret *k8s.io/api/core/v1.SecretProjection \"json:\\\"secret,omitempty\\\" protobuf:\\\"bytes,1,opt,name=secret\\\"\"; DownwardAPI *k8s.io/api/core/v1.DownwardAPIProjection \"json:\\\"downwardAPI,omitempty\\\" protobuf:\\\"bytes,2,opt,name=downwardAPI\\\"\"; ConfigMap *k8s.io/api/core/v1.ConfigMapProjection \"json:\\\"configMap,omitempty\\\" protobuf:\\\"bytes,3,opt,name=configMap\\\"\"; ServiceAccountToken *k8s.io/api/core/v1.ServiceAccountTokenProjection \"json:\\\"serviceAccountToken,omitempty\\\" protobuf:\\\"bytes,4,opt,name=serviceAccountToken\\\"\"}",
      "type" : "Struct",
      "underlying" : 252
    }, {
      "elem" : 254,
      "name" : "*k8s.io/api/core/v1.SecretProjection",
      "type" : "Pointer",
      "underlying" : 253
    }, {
      "local-name" : "SecretProjection",
      "name" : "k8s.io/api/core/v1.SecretProjection",
      "package" : 5,
      "type" : "Named",
      "underlying" : 255
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 187
      }, {
        "name" : "Items",
        "type" : 177
      }, {
        "name" : "Optional",
        "type" : 53
      } ],
      "name" : "struct{k8s.io/api/core/v1.LocalObjectReference \"json:\\\",inline\\\" protobuf:\\\"bytes,1,opt,name=localObjectReference\\\"\"; Items []k8s.io/api/core/v1.KeyToPath \"json:\\\"items,omitempty\\\" protobuf:\\\"bytes,2,rep,name=items\\\"\"; Optional *bool \"json:\\\"optional,omitempty\\\" protobuf:\\\"varint,4,opt,name=optional\\\"\"}",
      "type" : "Struct",
      "underlying" : 255
    }, {
      "elem" : 257,
      "name" : "*k8s.io/api/core/v1.DownwardAPIProjection",
      "type" : "Pointer",
      "underlying" : 256
    }, {
      "local-name" : "DownwardAPIProjection",
      "name" : "k8s.io/api/core/v1.DownwardAPIProjection",
      "package" : 5,
      "type" : "Named",
      "underlying" : 258
    }, {
      "fields" : [ {
        "name" : "Items",
        "type" : 213
      } ],
      "name" : "struct{Items []k8s.io/api/core/v1.DownwardAPIVolumeFile \"json:\\\"items,omitempty\\\" protobuf:\\\"bytes,1,rep,name=items\\\"\"}",
      "type" : "Struct",
      "underlying" : 258
    }, {
      "elem" : 260,
      "name" : "*k8s.io/api/core/v1.ConfigMapProjection",
      "type" : "Pointer",
      "underlying" : 259
    }, {
      "local-name" : "ConfigMapProjection",
      "name" : "k8s.io/api/core/v1.ConfigMapProjection",
      "package" : 5,
      "type" : "Named",
      "underlying" : 255
    }, {
      "elem" : 262,
      "name" : "*k8s.io/api/core/v1.ServiceAccountTokenProjection",
      "type" : "Pointer",
      "underlying" : 261
    }, {
      "local-name" : "ServiceAccountTokenProjection",
      "name" : "k8s.io/api/core/v1.ServiceAccountTokenProjection",
      "package" : 5,
      "type" : "Named",
      "underlying" : 263
    }, {
      "fields" : [ {
        "name" : "Audience",
        "type" : 8
      }, {
        "name" : "ExpirationSeconds",
        "type" : 264
      }, {
        "name" : "Path",
        "type" : 8
      } ],
      "name" : "struct{Audience string \"json:\\\"audience,omitempty\\\" protobuf:\\\"bytes,1,rep,name=audience\\\"\"; ExpirationSeconds *int64 \"json:\\\"expirationSeconds,omitempty\\\" protobuf:\\\"varint,2,opt,name=expirationSeconds\\\"\"; Path string \"json:\\\"path\\\" protobuf:\\\"bytes,3,opt,name=path\\\"\"}",
      "type" : "Struct",
      "underlying" : 263
    }, {
      "elem" : 20,
      "name" : "*int64",
      "type" : "Pointer",
      "underlying" : 264
    }, {
      "elem" : 266,
      "name" : "*k8s.io/api/core/v1.PortworxVolumeSource",
      "type" : "Pointer",
      "underlying" : 265
    }, {
      "local-name" : "PortworxVolumeSource",
      "name" : "k8s.io/api/core/v1.PortworxVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 267
    }, {
      "fields" : [ {
        "name" : "VolumeID",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{VolumeID string \"json:\\\"volumeID\\\" protobuf:\\\"bytes,1,opt,name=volumeID\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,2,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,3,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 267
    }, {
      "elem" : 269,
      "name" : "*k8s.io/api/core/v1.ScaleIOVolumeSource",
      "type" : "Pointer",
      "underlying" : 268
    }, {
      "local-name" : "ScaleIOVolumeSource",
      "name" : "k8s.io/api/core/v1.ScaleIOVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 270
    }, {
      "fields" : [ {
        "name" : "Gateway",
        "type" : 8
      }, {
        "name" : "System",
        "type" : 8
      }, {
        "name" : "SecretRef",
        "type" : 186
      }, {
        "name" : "SSLEnabled",
        "type" : 30
      }, {
        "name" : "ProtectionDomain",
        "type" : 8
      }, {
        "name" : "StoragePool",
        "type" : 8
      }, {
        "name" : "StorageMode",
        "type" : 8
      }, {
        "name" : "VolumeName",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      } ],
      "name" : "struct{Gateway string \"json:\\\"gateway\\\" protobuf:\\\"bytes,1,opt,name=gateway\\\"\"; System string \"json:\\\"system\\\" protobuf:\\\"bytes,2,opt,name=system\\\"\"; SecretRef *k8s.io/api/core/v1.LocalObjectReference \"json:\\\"secretRef\\\" protobuf:\\\"bytes,3,opt,name=secretRef\\\"\"; SSLEnabled bool \"json:\\\"sslEnabled,omitempty\\\" protobuf:\\\"varint,4,opt,name=sslEnabled\\\"\"; ProtectionDomain string \"json:\\\"protectionDomain,omitempty\\\" protobuf:\\\"bytes,5,opt,name=protectionDomain\\\"\"; StoragePool string \"json:\\\"storagePool,omitempty\\\" protobuf:\\\"bytes,6,opt,name=storagePool\\\"\"; StorageMode string \"json:\\\"storageMode,omitempty\\\" protobuf:\\\"bytes,7,opt,name=storageMode\\\"\"; VolumeName string \"json:\\\"volumeName,omitempty\\\" protobuf:\\\"bytes,8,opt,name=volumeName\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,9,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,10,opt,name=readOnly\\\"\"}",
      "type" : "Struct",
      "underlying" : 270
    }, {
      "elem" : 272,
      "name" : "*k8s.io/api/core/v1.StorageOSVolumeSource",
      "type" : "Pointer",
      "underlying" : 271
    }, {
      "local-name" : "StorageOSVolumeSource",
      "name" : "k8s.io/api/core/v1.StorageOSVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 273
    }, {
      "fields" : [ {
        "name" : "VolumeName",
        "type" : 8
      }, {
        "name" : "VolumeNamespace",
        "type" : 8
      }, {
        "name" : "FSType",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 30
      }, {
        "name" : "SecretRef",
        "type" : 186
      } ],
      "name" : "struct{VolumeName string \"json:\\\"volumeName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=volumeName\\\"\"; VolumeNamespace string \"json:\\\"volumeNamespace,omitempty\\\" protobuf:\\\"bytes,2,opt,name=volumeNamespace\\\"\"; FSType string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,3,opt,name=fsType\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,4,opt,name=readOnly\\\"\"; SecretRef *k8s.io/api/core/v1.LocalObjectReference \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,5,opt,name=secretRef\\\"\"}",
      "type" : "Struct",
      "underlying" : 273
    }, {
      "elem" : 275,
      "name" : "*k8s.io/api/core/v1.CSIVolumeSource",
      "type" : "Pointer",
      "underlying" : 274
    }, {
      "local-name" : "CSIVolumeSource",
      "name" : "k8s.io/api/core/v1.CSIVolumeSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 276
    }, {
      "fields" : [ {
        "name" : "Driver",
        "type" : 8
      }, {
        "name" : "ReadOnly",
        "type" : 53
      }, {
        "name" : "FSType",
        "type" : 64
      }, {
        "name" : "VolumeAttributes",
        "type" : 80
      }, {
        "name" : "NodePublishSecretRef",
        "type" : 186
      } ],
      "name" : "struct{Driver string \"json:\\\"driver\\\" protobuf:\\\"bytes,1,opt,name=driver\\\"\"; ReadOnly *bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,2,opt,name=readOnly\\\"\"; FSType *string \"json:\\\"fsType,omitempty\\\" protobuf:\\\"bytes,3,opt,name=fsType\\\"\"; VolumeAttributes map[string]string \"json:\\\"volumeAttributes,omitempty\\\" protobuf:\\\"bytes,4,rep,name=volumeAttributes\\\"\"; NodePublishSecretRef *k8s.io/api/core/v1.LocalObjectReference \"json:\\\"nodePublishSecretRef,omitempty\\\" protobuf:\\\"bytes,5,opt,name=nodePublishSecretRef\\\"\"}",
      "type" : "Struct",
      "underlying" : 276
    }, {
      "local-name" : "Scope",
      "name" : "k8s.io/apimachinery/pkg/conversion.Scope",
      "package" : 6,
      "type" : "Named",
      "underlying" : 278
    }, {
      "methods" : [ {
        "name" : "Convert",
        "type" : 279
      }, {
        "name" : "DefaultConvert",
        "type" : 279
      }, {
        "name" : "DestTag",
        "type" : 290
      }, {
        "name" : "Flags",
        "type" : 293
      }, {
        "name" : "Meta",
        "type" : 295
      }, {
        "name" : "SrcTag",
        "type" : 290
      } ],
      "name" : "interface{Convert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DefaultConvert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DestTag() reflect.StructTag; Flags() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags; Meta() *k8s.io/apimachinery/pkg/conversion.Meta; SrcTag() reflect.StructTag}",
      "type" : "Interface",
      "underlying" : 278
    }, {
      "name" : "func(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error",
      "params" : 280,
      "recv" : 1,
      "results" : 284,
      "type" : "Signature",
      "underlying" : 279,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 281
      }, {
        "name" : "dest",
        "type" : 281
      }, {
        "name" : "flags",
        "type" : 282
      } ],
      "name" : "(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 280
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 281
    }, {
      "local-name" : "FieldMatchingFlags",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "package" : 6,
      "type" : "Named",
      "underlying" : 283
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 283
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 285
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 284
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 286
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 287
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 286
    }, {
      "name" : "func() string",
      "params" : 288,
      "recv" : 0,
      "results" : 289,
      "type" : "Signature",
      "underlying" : 287,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 288
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 8
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 289
    }, {
      "name" : "func() reflect.StructTag",
      "params" : 288,
      "recv" : 2,
      "results" : 291,
      "type" : "Signature",
      "underlying" : 290,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 292
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 291
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 7,
      "type" : "Named",
      "underlying" : 8
    }, {
      "name" : "func() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "params" : 288,
      "recv" : 3,
      "results" : 294,
      "type" : "Signature",
      "underlying" : 293,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 282
      } ],
      "name" : "(k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 294
    }, {
      "name" : "func() *k8s.io/apimachinery/pkg/conversion.Meta",
      "params" : 288,
      "recv" : 4,
      "results" : 296,
      "type" : "Signature",
      "underlying" : 295,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 297
      } ],
      "name" : "(*k8s.io/apimachinery/pkg/conversion.Meta)",
      "type" : "Tuple",
      "underlying" : 296
    }, {
      "elem" : 298,
      "name" : "*k8s.io/apimachinery/pkg/conversion.Meta",
      "type" : "Pointer",
      "underlying" : 297
    }, {
      "local-name" : "Meta",
      "name" : "k8s.io/apimachinery/pkg/conversion.Meta",
      "package" : 6,
      "type" : "Named",
      "underlying" : 299
    }, {
      "fields" : [ {
        "name" : "KeyNameMapping",
        "type" : 300
      }, {
        "name" : "Context",
        "type" : 281
      } ],
      "name" : "struct{KeyNameMapping k8s.io/apimachinery/pkg/conversion.FieldMappingFunc; Context interface{}}",
      "type" : "Struct",
      "underlying" : 299
    }, {
      "local-name" : "FieldMappingFunc",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMappingFunc",
      "package" : 6,
      "type" : "Named",
      "underlying" : 301
    }, {
      "name" : "func(key string, sourceTag reflect.StructTag, destTag reflect.StructTag) (source string, dest string)",
      "params" : 302,
      "recv" : -1,
      "results" : 303,
      "type" : "Signature",
      "underlying" : 301,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 8
      }, {
        "name" : "sourceTag",
        "type" : 292
      }, {
        "name" : "destTag",
        "type" : 292
      } ],
      "name" : "(key string, sourceTag reflect.StructTag, destTag reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 302
    }, {
      "fields" : [ {
        "name" : "source",
        "type" : 8
      }, {
        "name" : "dest",
        "type" : 8
      } ],
      "name" : "(source string, dest string)",
      "type" : "Tuple",
      "underlying" : 303
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 8,
      "type" : "Basic",
      "underlying" : 304
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 305
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 306
    }, {
      "elem" : 124,
      "name" : "**k8s.io/kubernetes/pkg/apis/core.ProjectedVolumeSource",
      "type" : "Pointer",
      "underlying" : 307
    }, {
      "elem" : 247,
      "name" : "**k8s.io/api/core/v1.ProjectedVolumeSource",
      "type" : "Pointer",
      "underlying" : 308
    }, {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.ProjectedVolumeSource, out *k8s.io/api/core/v1.ProjectedVolumeSource, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 310,
      "recv" : -1,
      "results" : 284,
      "type" : "Signature",
      "underlying" : 309,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 124
      }, {
        "name" : "out",
        "type" : 247
      }, {
        "name" : "s",
        "type" : 277
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.ProjectedVolumeSource, out *k8s.io/api/core/v1.ProjectedVolumeSource, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 310
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 285,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 277,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 277,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 277,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 277,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 153,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 277,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 285,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "HostPath",
      "package" : 5,
      "type" : 156,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "HostPath",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "EmptyDir",
      "package" : 5,
      "type" : 161,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "EmptyDir",
      "package" : 1,
      "type" : 11,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "GCEPersistentDisk",
      "package" : 5,
      "type" : 165,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "GCEPersistentDisk",
      "package" : 1,
      "type" : 37,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AWSElasticBlockStore",
      "package" : 5,
      "type" : 168,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AWSElasticBlockStore",
      "package" : 1,
      "type" : 40,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "GitRepo",
      "package" : 5,
      "type" : 171,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "GitRepo",
      "package" : 1,
      "type" : 43,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Secret",
      "package" : 5,
      "type" : 174,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Secret",
      "package" : 1,
      "type" : 46,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "NFS",
      "package" : 5,
      "type" : 180,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "NFS",
      "package" : 1,
      "type" : 54,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ISCSI",
      "package" : 5,
      "type" : 183,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ISCSI",
      "package" : 1,
      "type" : 57,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Glusterfs",
      "package" : 5,
      "type" : 189,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Glusterfs",
      "package" : 1,
      "type" : 65,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "PersistentVolumeClaim",
      "package" : 5,
      "type" : 192,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "PersistentVolumeClaim",
      "package" : 1,
      "type" : 68,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "RBD",
      "package" : 5,
      "type" : 195,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "RBD",
      "package" : 1,
      "type" : 71,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Quobyte",
      "package" : 5,
      "type" : 234,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Quobyte",
      "package" : 1,
      "type" : 74,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "FlexVolume",
      "package" : 5,
      "type" : 198,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "FlexVolume",
      "package" : 1,
      "type" : 77,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Cinder",
      "package" : 5,
      "type" : 201,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Cinder",
      "package" : 1,
      "type" : 81,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "CephFS",
      "package" : 5,
      "type" : 204,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "CephFS",
      "package" : 1,
      "type" : 84,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Flocker",
      "package" : 5,
      "type" : 207,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Flocker",
      "package" : 1,
      "type" : 87,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "DownwardAPI",
      "package" : 5,
      "type" : 210,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "DownwardAPI",
      "package" : 1,
      "type" : 90,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "FC",
      "package" : 5,
      "type" : 222,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "FC",
      "package" : 1,
      "type" : 102,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AzureFile",
      "package" : 5,
      "type" : 225,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AzureFile",
      "package" : 1,
      "type" : 105,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ConfigMap",
      "package" : 5,
      "type" : 228,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ConfigMap",
      "package" : 1,
      "type" : 108,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "VsphereVolume",
      "package" : 5,
      "type" : 231,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "VsphereVolume",
      "package" : 1,
      "type" : 111,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AzureDisk",
      "package" : 5,
      "type" : 237,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AzureDisk",
      "package" : 1,
      "type" : 114,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "PhotonPersistentDisk",
      "package" : 5,
      "type" : 244,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "PhotonPersistentDisk",
      "package" : 1,
      "type" : 121,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Projected",
      "package" : 1,
      "type" : 124,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Projected",
      "package" : 5,
      "type" : 247,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 308,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 307,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 285,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "PortworxVolume",
      "package" : 5,
      "type" : 265,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "PortworxVolume",
      "package" : 1,
      "type" : 141,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ScaleIO",
      "package" : 5,
      "type" : 268,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ScaleIO",
      "package" : 1,
      "type" : 144,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "StorageOS",
      "package" : 5,
      "type" : 271,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "StorageOS",
      "package" : 1,
      "type" : 147,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "CSI",
      "package" : 5,
      "type" : 274,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "CSI",
      "package" : 1,
      "type" : 150,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}