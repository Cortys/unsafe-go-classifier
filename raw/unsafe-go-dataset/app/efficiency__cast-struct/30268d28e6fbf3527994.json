{
  "usage" : {
    "file" : "zz_generated.conversion.go",
    "label1" : "cast-struct",
    "label2" : "efficiency",
    "line" : "4817",
    "module" : "k8s.io/kubernetes",
    "pkg" : "k8s.io/kubernetes/pkg/apis/core/v1",
    "project" : "rancher/rancher",
    "snippet" : "out.PodCIDRs = *(*[]string)(unsafe.Pointer(&in.PodCIDRs))",
    "version" : "v1.18.0"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 3 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 4817,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "PodCIDRs",
            "variable" : 9
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 38,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 6,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 6,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                },
                "go-type" : 5,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 77,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 77,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 78,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 8,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 78,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 78,
              "kind" : "expression",
              "target" : {
                "go-type" : 77,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "PodCIDRs",
                    "variable" : 10
                  },
                  "go-type" : 5,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 4817,
      "code" : "out.PodCIDRs = *(*[]string)(unsafe.Pointer(&in.PodCIDRs))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 4 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 4818,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ProviderID",
            "variable" : 11
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "go-type" : 38,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ProviderID",
            "variable" : 12
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 4818,
      "code" : "out.ProviderID = in.ProviderID",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 5 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 4819,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Unschedulable",
            "variable" : 13
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 38,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Unschedulable",
            "variable" : 14
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 4819,
      "code" : "out.Unschedulable = in.Unschedulable",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 6 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 4820,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Taints",
            "variable" : 15
          },
          "go-type" : 41,
          "kind" : "expression",
          "target" : {
            "go-type" : 38,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 41,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 42,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 5,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 42,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Taint"
                  }
                },
                "go-type" : 41,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 79,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 79,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 78,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 8,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 78,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 78,
              "kind" : "expression",
              "target" : {
                "go-type" : 80,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Taints",
                    "variable" : 16
                  },
                  "go-type" : 8,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 4820,
      "code" : "out.Taints = *(*[]v1.Taint)(unsafe.Pointer(&in.Taints))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 7 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 4821,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ConfigSource",
            "variable" : 17
          },
          "go-type" : 45,
          "kind" : "expression",
          "target" : {
            "go-type" : 38,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 46,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 46,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "NodeConfigSource"
              }
            },
            "go-type" : 45,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 45,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 78,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 78,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 78,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ConfigSource",
                "variable" : 18
              },
              "go-type" : 31,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 4821,
      "code" : "out.ConfigSource = (*v1.NodeConfigSource)(unsafe.Pointer(in.ConfigSource))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 8 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 4822,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "DoNotUseExternalID",
            "variable" : 19
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "go-type" : 38,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "DoNotUseExternalID",
            "variable" : 20
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 4822,
      "code" : "out.DoNotUseExternalID = in.DoNotUseExternalID",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 4823,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 81,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 4823,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func autoConvert_core_NodeSpec_To_v1_NodeSpec(in *core.NodeSpec, out *v1.NodeSpec, s conversion.Scope) error {\n\tout.PodCIDRs = *(*[]string)(unsafe.Pointer(&in.PodCIDRs))\n\tout.ProviderID = in.ProviderID\n\tout.Unschedulable = in.Unschedulable\n\tout.Taints = *(*[]v1.Taint)(unsafe.Pointer(&in.Taints))\n\tout.ConfigSource = (*v1.NodeConfigSource)(unsafe.Pointer(in.ConfigSource))\n\tout.DoNotUseExternalID = in.DoNotUseExternalID\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "autoConvert_core_NodeSpec_To_v1_NodeSpec",
      "package" : 0,
      "type" : 0,
      "exported" : false
    } ],
    "line-end" : 4824,
    "line-start" : 4816,
    "names" : [ "autoConvert_core_NodeSpec_To_v1_NodeSpec" ],
    "package" : 0,
    "packages" : [ {
      "name" : "v1",
      "path" : "k8s.io/kubernetes/pkg/apis/core/v1"
    }, {
      "name" : "core",
      "path" : "k8s.io/kubernetes/pkg/apis/core"
    }, {
      "name" : "v1",
      "path" : "k8s.io/apimachinery/pkg/apis/meta/v1"
    }, {
      "name" : "time",
      "path" : "time"
    }, {
      "name" : "types",
      "path" : "k8s.io/apimachinery/pkg/types"
    }, {
      "name" : "v1",
      "path" : "k8s.io/api/core/v1"
    }, {
      "name" : "conversion",
      "path" : "k8s.io/apimachinery/pkg/conversion"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 5, 6, 7 ],
    "receivers" : [ ],
    "results" : [ 8 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.NodeSpec, out *k8s.io/api/core/v1.NodeSpec, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 1,
      "recv" : -1,
      "results" : 57,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 2
      }, {
        "name" : "out",
        "type" : 38
      }, {
        "name" : "s",
        "type" : 51
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.NodeSpec, out *k8s.io/api/core/v1.NodeSpec, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.NodeSpec",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "NodeSpec",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeSpec",
      "package" : 1,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "PodCIDRs",
        "type" : 5
      }, {
        "name" : "ProviderID",
        "type" : 6
      }, {
        "name" : "Unschedulable",
        "type" : 7
      }, {
        "name" : "Taints",
        "type" : 8
      }, {
        "name" : "ConfigSource",
        "type" : 31
      }, {
        "name" : "DoNotUseExternalID",
        "type" : 6
      } ],
      "name" : "struct{PodCIDRs []string; ProviderID string; Unschedulable bool; Taints []k8s.io/kubernetes/pkg/apis/core.Taint; ConfigSource *k8s.io/kubernetes/pkg/apis/core.NodeConfigSource; DoNotUseExternalID string}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "elem" : 6,
      "name" : "[]string",
      "type" : "Slice",
      "underlying" : 5
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 6
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 7
    }, {
      "elem" : 9,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.Taint",
      "type" : "Slice",
      "underlying" : 8
    }, {
      "local-name" : "Taint",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Taint",
      "package" : 1,
      "type" : "Named",
      "underlying" : 10
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 6
      }, {
        "name" : "Value",
        "type" : 6
      }, {
        "name" : "Effect",
        "type" : 11
      }, {
        "name" : "TimeAdded",
        "type" : 12
      } ],
      "name" : "struct{Key string; Value string; Effect k8s.io/kubernetes/pkg/apis/core.TaintEffect; TimeAdded *k8s.io/apimachinery/pkg/apis/meta/v1.Time}",
      "type" : "Struct",
      "underlying" : 10
    }, {
      "local-name" : "TaintEffect",
      "name" : "k8s.io/kubernetes/pkg/apis/core.TaintEffect",
      "package" : 1,
      "type" : "Named",
      "underlying" : 6
    }, {
      "elem" : 13,
      "name" : "*k8s.io/apimachinery/pkg/apis/meta/v1.Time",
      "type" : "Pointer",
      "underlying" : 12
    }, {
      "local-name" : "Time",
      "name" : "k8s.io/apimachinery/pkg/apis/meta/v1.Time",
      "package" : 2,
      "type" : "Named",
      "underlying" : 14
    }, {
      "fields" : [ {
        "name" : "Time",
        "type" : 15
      } ],
      "name" : "struct{time.Time \"protobuf:\\\"-\\\"\"}",
      "type" : "Struct",
      "underlying" : 14
    }, {
      "local-name" : "Time",
      "name" : "time.Time",
      "package" : 3,
      "type" : "Named",
      "underlying" : 16
    }, {
      "fields" : [ {
        "name" : "wall",
        "type" : 17
      }, {
        "name" : "ext",
        "type" : 18
      }, {
        "name" : "loc",
        "type" : 19
      } ],
      "name" : "struct{wall uint64; ext int64; loc *time.Location}",
      "type" : "Struct",
      "underlying" : 16
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 17
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 18
    }, {
      "elem" : 20,
      "name" : "*time.Location",
      "type" : "Pointer",
      "underlying" : 19
    }, {
      "local-name" : "Location",
      "name" : "time.Location",
      "package" : 3,
      "type" : "Named",
      "underlying" : 21
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 6
      }, {
        "name" : "zone",
        "type" : 22
      }, {
        "name" : "tx",
        "type" : 26
      }, {
        "name" : "cacheStart",
        "type" : 18
      }, {
        "name" : "cacheEnd",
        "type" : 18
      }, {
        "name" : "cacheZone",
        "type" : 30
      } ],
      "name" : "struct{name string; zone []time.zone; tx []time.zoneTrans; cacheStart int64; cacheEnd int64; cacheZone *time.zone}",
      "type" : "Struct",
      "underlying" : 21
    }, {
      "elem" : 23,
      "name" : "[]time.zone",
      "type" : "Slice",
      "underlying" : 22
    }, {
      "local-name" : "zone",
      "name" : "time.zone",
      "package" : 3,
      "type" : "Named",
      "underlying" : 24
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 6
      }, {
        "name" : "offset",
        "type" : 25
      }, {
        "name" : "isDST",
        "type" : 7
      } ],
      "name" : "struct{name string; offset int; isDST bool}",
      "type" : "Struct",
      "underlying" : 24
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 25
    }, {
      "elem" : 27,
      "name" : "[]time.zoneTrans",
      "type" : "Slice",
      "underlying" : 26
    }, {
      "local-name" : "zoneTrans",
      "name" : "time.zoneTrans",
      "package" : 3,
      "type" : "Named",
      "underlying" : 28
    }, {
      "fields" : [ {
        "name" : "when",
        "type" : 18
      }, {
        "name" : "index",
        "type" : 29
      }, {
        "name" : "isstd",
        "type" : 7
      }, {
        "name" : "isutc",
        "type" : 7
      } ],
      "name" : "struct{when int64; index uint8; isstd bool; isutc bool}",
      "type" : "Struct",
      "underlying" : 28
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 29
    }, {
      "elem" : 23,
      "name" : "*time.zone",
      "type" : "Pointer",
      "underlying" : 30
    }, {
      "elem" : 32,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.NodeConfigSource",
      "type" : "Pointer",
      "underlying" : 31
    }, {
      "local-name" : "NodeConfigSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeConfigSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 33
    }, {
      "fields" : [ {
        "name" : "ConfigMap",
        "type" : 34
      } ],
      "name" : "struct{ConfigMap *k8s.io/kubernetes/pkg/apis/core.ConfigMapNodeConfigSource}",
      "type" : "Struct",
      "underlying" : 33
    }, {
      "elem" : 35,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ConfigMapNodeConfigSource",
      "type" : "Pointer",
      "underlying" : 34
    }, {
      "local-name" : "ConfigMapNodeConfigSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ConfigMapNodeConfigSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 36
    }, {
      "fields" : [ {
        "name" : "Namespace",
        "type" : 6
      }, {
        "name" : "Name",
        "type" : 6
      }, {
        "name" : "UID",
        "type" : 37
      }, {
        "name" : "ResourceVersion",
        "type" : 6
      }, {
        "name" : "KubeletConfigKey",
        "type" : 6
      } ],
      "name" : "struct{Namespace string; Name string; UID k8s.io/apimachinery/pkg/types.UID; ResourceVersion string; KubeletConfigKey string}",
      "type" : "Struct",
      "underlying" : 36
    }, {
      "local-name" : "UID",
      "name" : "k8s.io/apimachinery/pkg/types.UID",
      "package" : 4,
      "type" : "Named",
      "underlying" : 6
    }, {
      "elem" : 39,
      "name" : "*k8s.io/api/core/v1.NodeSpec",
      "type" : "Pointer",
      "underlying" : 38
    }, {
      "local-name" : "NodeSpec",
      "name" : "k8s.io/api/core/v1.NodeSpec",
      "package" : 5,
      "type" : "Named",
      "underlying" : 40
    }, {
      "fields" : [ {
        "name" : "PodCIDR",
        "type" : 6
      }, {
        "name" : "PodCIDRs",
        "type" : 5
      }, {
        "name" : "ProviderID",
        "type" : 6
      }, {
        "name" : "Unschedulable",
        "type" : 7
      }, {
        "name" : "Taints",
        "type" : 41
      }, {
        "name" : "ConfigSource",
        "type" : 45
      }, {
        "name" : "DoNotUseExternalID",
        "type" : 6
      } ],
      "name" : "struct{PodCIDR string \"json:\\\"podCIDR,omitempty\\\" protobuf:\\\"bytes,1,opt,name=podCIDR\\\"\"; PodCIDRs []string \"json:\\\"podCIDRs,omitempty\\\" protobuf:\\\"bytes,7,opt,name=podCIDRs\\\" patchStrategy:\\\"merge\\\"\"; ProviderID string \"json:\\\"providerID,omitempty\\\" protobuf:\\\"bytes,3,opt,name=providerID\\\"\"; Unschedulable bool \"json:\\\"unschedulable,omitempty\\\" protobuf:\\\"varint,4,opt,name=unschedulable\\\"\"; Taints []k8s.io/api/core/v1.Taint \"json:\\\"taints,omitempty\\\" protobuf:\\\"bytes,5,opt,name=taints\\\"\"; ConfigSource *k8s.io/api/core/v1.NodeConfigSource \"json:\\\"configSource,omitempty\\\" protobuf:\\\"bytes,6,opt,name=configSource\\\"\"; DoNotUseExternalID string \"json:\\\"externalID,omitempty\\\" protobuf:\\\"bytes,2,opt,name=externalID\\\"\"}",
      "type" : "Struct",
      "underlying" : 40
    }, {
      "elem" : 42,
      "name" : "[]k8s.io/api/core/v1.Taint",
      "type" : "Slice",
      "underlying" : 41
    }, {
      "local-name" : "Taint",
      "name" : "k8s.io/api/core/v1.Taint",
      "package" : 5,
      "type" : "Named",
      "underlying" : 43
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 6
      }, {
        "name" : "Value",
        "type" : 6
      }, {
        "name" : "Effect",
        "type" : 44
      }, {
        "name" : "TimeAdded",
        "type" : 12
      } ],
      "name" : "struct{Key string \"json:\\\"key\\\" protobuf:\\\"bytes,1,opt,name=key\\\"\"; Value string \"json:\\\"value,omitempty\\\" protobuf:\\\"bytes,2,opt,name=value\\\"\"; Effect k8s.io/api/core/v1.TaintEffect \"json:\\\"effect\\\" protobuf:\\\"bytes,3,opt,name=effect,casttype=TaintEffect\\\"\"; TimeAdded *k8s.io/apimachinery/pkg/apis/meta/v1.Time \"json:\\\"timeAdded,omitempty\\\" protobuf:\\\"bytes,4,opt,name=timeAdded\\\"\"}",
      "type" : "Struct",
      "underlying" : 43
    }, {
      "local-name" : "TaintEffect",
      "name" : "k8s.io/api/core/v1.TaintEffect",
      "package" : 5,
      "type" : "Named",
      "underlying" : 6
    }, {
      "elem" : 46,
      "name" : "*k8s.io/api/core/v1.NodeConfigSource",
      "type" : "Pointer",
      "underlying" : 45
    }, {
      "local-name" : "NodeConfigSource",
      "name" : "k8s.io/api/core/v1.NodeConfigSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 47
    }, {
      "fields" : [ {
        "name" : "ConfigMap",
        "type" : 48
      } ],
      "name" : "struct{ConfigMap *k8s.io/api/core/v1.ConfigMapNodeConfigSource \"json:\\\"configMap,omitempty\\\" protobuf:\\\"bytes,2,opt,name=configMap\\\"\"}",
      "type" : "Struct",
      "underlying" : 47
    }, {
      "elem" : 49,
      "name" : "*k8s.io/api/core/v1.ConfigMapNodeConfigSource",
      "type" : "Pointer",
      "underlying" : 48
    }, {
      "local-name" : "ConfigMapNodeConfigSource",
      "name" : "k8s.io/api/core/v1.ConfigMapNodeConfigSource",
      "package" : 5,
      "type" : "Named",
      "underlying" : 50
    }, {
      "fields" : [ {
        "name" : "Namespace",
        "type" : 6
      }, {
        "name" : "Name",
        "type" : 6
      }, {
        "name" : "UID",
        "type" : 37
      }, {
        "name" : "ResourceVersion",
        "type" : 6
      }, {
        "name" : "KubeletConfigKey",
        "type" : 6
      } ],
      "name" : "struct{Namespace string \"json:\\\"namespace\\\" protobuf:\\\"bytes,1,opt,name=namespace\\\"\"; Name string \"json:\\\"name\\\" protobuf:\\\"bytes,2,opt,name=name\\\"\"; UID k8s.io/apimachinery/pkg/types.UID \"json:\\\"uid,omitempty\\\" protobuf:\\\"bytes,3,opt,name=uid\\\"\"; ResourceVersion string \"json:\\\"resourceVersion,omitempty\\\" protobuf:\\\"bytes,4,opt,name=resourceVersion\\\"\"; KubeletConfigKey string \"json:\\\"kubeletConfigKey\\\" protobuf:\\\"bytes,5,opt,name=kubeletConfigKey\\\"\"}",
      "type" : "Struct",
      "underlying" : 50
    }, {
      "local-name" : "Scope",
      "name" : "k8s.io/apimachinery/pkg/conversion.Scope",
      "package" : 6,
      "type" : "Named",
      "underlying" : 52
    }, {
      "methods" : [ {
        "name" : "Convert",
        "type" : 53
      }, {
        "name" : "DestTag",
        "type" : 63
      }, {
        "name" : "Flags",
        "type" : 66
      }, {
        "name" : "Meta",
        "type" : 68
      }, {
        "name" : "SrcTag",
        "type" : 63
      } ],
      "name" : "interface{Convert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DestTag() reflect.StructTag; Flags() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags; Meta() *k8s.io/apimachinery/pkg/conversion.Meta; SrcTag() reflect.StructTag}",
      "type" : "Interface",
      "underlying" : 52
    }, {
      "name" : "func(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error",
      "params" : 54,
      "recv" : 1,
      "results" : 57,
      "type" : "Signature",
      "underlying" : 53,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 55
      }, {
        "name" : "dest",
        "type" : 55
      }, {
        "name" : "flags",
        "type" : 56
      } ],
      "name" : "(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 54
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 55
    }, {
      "local-name" : "FieldMatchingFlags",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "package" : 6,
      "type" : "Named",
      "underlying" : 25
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 58
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 57
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 59
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 60
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 59
    }, {
      "name" : "func() string",
      "params" : 61,
      "recv" : 0,
      "results" : 62,
      "type" : "Signature",
      "underlying" : 60,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 61
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 6
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 62
    }, {
      "name" : "func() reflect.StructTag",
      "params" : 61,
      "recv" : 2,
      "results" : 64,
      "type" : "Signature",
      "underlying" : 63,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 65
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 64
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 7,
      "type" : "Named",
      "underlying" : 6
    }, {
      "name" : "func() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "params" : 61,
      "recv" : 3,
      "results" : 67,
      "type" : "Signature",
      "underlying" : 66,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 56
      } ],
      "name" : "(k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 67
    }, {
      "name" : "func() *k8s.io/apimachinery/pkg/conversion.Meta",
      "params" : 61,
      "recv" : 4,
      "results" : 69,
      "type" : "Signature",
      "underlying" : 68,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 70
      } ],
      "name" : "(*k8s.io/apimachinery/pkg/conversion.Meta)",
      "type" : "Tuple",
      "underlying" : 69
    }, {
      "elem" : 71,
      "name" : "*k8s.io/apimachinery/pkg/conversion.Meta",
      "type" : "Pointer",
      "underlying" : 70
    }, {
      "local-name" : "Meta",
      "name" : "k8s.io/apimachinery/pkg/conversion.Meta",
      "package" : 6,
      "type" : "Named",
      "underlying" : 72
    }, {
      "fields" : [ {
        "name" : "KeyNameMapping",
        "type" : 73
      }, {
        "name" : "Context",
        "type" : 55
      } ],
      "name" : "struct{KeyNameMapping k8s.io/apimachinery/pkg/conversion.FieldMappingFunc; Context interface{}}",
      "type" : "Struct",
      "underlying" : 72
    }, {
      "local-name" : "FieldMappingFunc",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMappingFunc",
      "package" : 6,
      "type" : "Named",
      "underlying" : 74
    }, {
      "name" : "func(key string, sourceTag reflect.StructTag, destTag reflect.StructTag) (source string, dest string)",
      "params" : 75,
      "recv" : -1,
      "results" : 76,
      "type" : "Signature",
      "underlying" : 74,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 6
      }, {
        "name" : "sourceTag",
        "type" : 65
      }, {
        "name" : "destTag",
        "type" : 65
      } ],
      "name" : "(key string, sourceTag reflect.StructTag, destTag reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 75
    }, {
      "fields" : [ {
        "name" : "source",
        "type" : 6
      }, {
        "name" : "dest",
        "type" : 6
      } ],
      "name" : "(source string, dest string)",
      "type" : "Tuple",
      "underlying" : 76
    }, {
      "elem" : 5,
      "name" : "*[]string",
      "type" : "Pointer",
      "underlying" : 77
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 8,
      "type" : "Basic",
      "underlying" : 78
    }, {
      "elem" : 41,
      "name" : "*[]k8s.io/api/core/v1.Taint",
      "type" : "Pointer",
      "underlying" : 79
    }, {
      "elem" : 8,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.Taint",
      "type" : "Pointer",
      "underlying" : 80
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 81
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 58,
      "exported" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 51,
      "exported" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 51,
      "exported" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 51,
      "exported" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 51,
      "exported" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 2,
      "exported" : false
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 38,
      "exported" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 51,
      "exported" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 58,
      "exported" : false
    }, {
      "name" : "PodCIDRs",
      "package" : 5,
      "type" : 5,
      "exported" : true
    }, {
      "name" : "PodCIDRs",
      "package" : 1,
      "type" : 5,
      "exported" : true
    }, {
      "name" : "ProviderID",
      "package" : 5,
      "type" : 6,
      "exported" : true
    }, {
      "name" : "ProviderID",
      "package" : 1,
      "type" : 6,
      "exported" : true
    }, {
      "name" : "Unschedulable",
      "package" : 5,
      "type" : 7,
      "exported" : true
    }, {
      "name" : "Unschedulable",
      "package" : 1,
      "type" : 7,
      "exported" : true
    }, {
      "name" : "Taints",
      "package" : 5,
      "type" : 41,
      "exported" : true
    }, {
      "name" : "Taints",
      "package" : 1,
      "type" : 8,
      "exported" : true
    }, {
      "name" : "ConfigSource",
      "package" : 5,
      "type" : 45,
      "exported" : true
    }, {
      "name" : "ConfigSource",
      "package" : 1,
      "type" : 31,
      "exported" : true
    }, {
      "name" : "DoNotUseExternalID",
      "package" : 5,
      "type" : 6,
      "exported" : true
    }, {
      "name" : "DoNotUseExternalID",
      "package" : 1,
      "type" : 6,
      "exported" : true
    } ]
  },
  "go-version" : "1.14.3"
}