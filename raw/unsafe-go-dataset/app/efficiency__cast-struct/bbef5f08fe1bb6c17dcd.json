{
  "usage" : {
    "file" : "bucket.go",
    "label1" : "cast-struct",
    "label2" : "efficiency",
    "line" : "620",
    "module" : "go.etcd.io/bbolt",
    "pkg" : "go.etcd.io/bbolt",
    "project" : "kubernetes/kubernetes",
    "snippet" : "var bucket = (*bucket)(unsafe.Pointer(&value[0]))",
    "version" : "v1.3.3"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ 1 ],
      "decl-vars" : [ 4, 1 ],
      "line-start" : 616,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "kind" : "decl",
          "specs" : [ {
            "comments" : [ ],
            "declared-type" : null,
            "kind" : "spec",
            "names" : [ {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "n"
            } ],
            "type" : "var",
            "values" : [ {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "rootNode",
                "variable" : 3
              },
              "go-type" : 151,
              "kind" : "expression",
              "target" : {
                "go-type" : 5,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "b",
                  "variable" : 1
                }
              },
              "type" : "selector"
            } ]
          } ],
          "type" : "var"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 616,
      "code" : "// Allocate the appropriate size.\nvar n = b.rootNode",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4 ],
      "in-vars" : [ 1 ],
      "exit" : false,
      "out-vars" : [ 4, 1 ],
      "decl-vars" : [ 4, 6 ],
      "line-start" : 617,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "kind" : "decl",
          "specs" : [ {
            "comments" : [ ],
            "declared-type" : null,
            "kind" : "spec",
            "names" : [ {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "value"
            } ],
            "type" : "var",
            "values" : [ {
              "argument" : {
                "element" : {
                  "go-type" : 4,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 4,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "byte"
                  }
                },
                "go-type" : 3,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 3,
              "kind" : "expression",
              "rest" : [ {
                "go-type" : 22,
                "kind" : "expression",
                "left" : {
                  "go-type" : 22,
                  "kind" : "constant",
                  "value" : {
                    "type" : "INT",
                    "value" : "16"
                  }
                },
                "operator" : "+",
                "right" : {
                  "arguments" : [ ],
                  "ellipsis" : false,
                  "function" : {
                    "field" : {
                      "function" : 1,
                      "ident-kind" : "Func",
                      "kind" : "ident",
                      "value" : "size"
                    },
                    "go-type" : 85,
                    "kind" : "expression",
                    "target" : {
                      "go-type" : 151,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "n",
                        "variable" : 4
                      }
                    },
                    "type" : "selector"
                  },
                  "go-type" : 22,
                  "kind" : "expression",
                  "type" : "call"
                },
                "type" : "binary"
              } ],
              "type" : "make"
            } ]
          } ],
          "type" : "var"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 617,
      "code" : "var value = make([]byte, bucketHeaderSize+n.size())",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5 ],
      "in-vars" : [ 4, 1 ],
      "exit" : false,
      "out-vars" : [ 4, 1 ],
      "decl-vars" : [ 6, 7 ],
      "line-start" : 620,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "kind" : "decl",
          "specs" : [ {
            "comments" : [ ],
            "declared-type" : null,
            "kind" : "spec",
            "names" : [ {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "bucket"
            } ],
            "type" : "var",
            "values" : [ {
              "coerced-to" : {
                "contained" : {
                  "go-type" : 9,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 9,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "bucket"
                  }
                },
                "go-type" : 8,
                "kind" : "type",
                "type" : "pointer"
              },
              "go-type" : 8,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 102,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 6,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 102,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 102,
                "kind" : "expression",
                "target" : {
                  "go-type" : 47,
                  "kind" : "expression",
                  "operator" : "&",
                  "target" : {
                    "go-type" : 4,
                    "index" : {
                      "go-type" : 22,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "0"
                      }
                    },
                    "kind" : "expression",
                    "target" : {
                      "go-type" : 3,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "value",
                        "variable" : 6
                      }
                    },
                    "type" : "index"
                  },
                  "type" : "unary"
                },
                "type" : "cast"
              },
              "type" : "cast"
            } ]
          } ],
          "type" : "var"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 620,
      "code" : "// Write a bucket header.\nvar bucket = (*bucket)(unsafe.Pointer(&value[0]))",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6 ],
      "in-vars" : [ 4, 1 ],
      "exit" : false,
      "out-vars" : [ 4 ],
      "decl-vars" : [ ],
      "line-start" : 621,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 9,
          "kind" : "expression",
          "target" : {
            "go-type" : 8,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "bucket",
              "variable" : 7
            }
          },
          "type" : "star"
        } ],
        "right" : [ {
          "go-type" : 9,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "bucket",
              "variable" : 8
            },
            "go-type" : 8,
            "kind" : "expression",
            "target" : {
              "go-type" : 5,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "b",
                "variable" : 1
              }
            },
            "type" : "selector"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 621,
      "code" : "*bucket = *b.bucket",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 7 ],
      "in-vars" : [ 4 ],
      "exit" : false,
      "out-vars" : [ 9, 6, 4 ],
      "decl-vars" : [ 6, 9 ],
      "line-start" : 624,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "kind" : "decl",
          "specs" : [ {
            "comments" : [ ],
            "declared-type" : null,
            "kind" : "spec",
            "names" : [ {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "p"
            } ],
            "type" : "var",
            "values" : [ {
              "coerced-to" : {
                "contained" : {
                  "go-type" : 145,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 145,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "page"
                  }
                },
                "go-type" : 144,
                "kind" : "type",
                "type" : "pointer"
              },
              "go-type" : 144,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 102,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 6,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 102,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 102,
                "kind" : "expression",
                "target" : {
                  "go-type" : 47,
                  "kind" : "expression",
                  "operator" : "&",
                  "target" : {
                    "go-type" : 4,
                    "index" : {
                      "go-type" : 22,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "16"
                      }
                    },
                    "kind" : "expression",
                    "target" : {
                      "go-type" : 3,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "value",
                        "variable" : 6
                      }
                    },
                    "type" : "index"
                  },
                  "type" : "unary"
                },
                "type" : "cast"
              },
              "type" : "cast"
            } ]
          } ],
          "type" : "var"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 624,
      "code" : "// Convert byte slice to a fake page and write the root node.\nvar p = (*page)(unsafe.Pointer(&value[bucketHeaderSize]))",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 8 ],
      "in-vars" : [ 6, 4, 9 ],
      "exit" : false,
      "out-vars" : [ 6 ],
      "decl-vars" : [ ],
      "line-start" : 625,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 144,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "p",
              "variable" : 9
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "function" : 2,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "write"
            },
            "go-type" : 163,
            "kind" : "expression",
            "target" : {
              "go-type" : 151,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "n",
                "variable" : 4
              }
            },
            "type" : "selector"
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 625,
      "code" : "n.write(p)",
      "entry" : false,
      "use-vars" : [ 4, 9 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 6 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 627,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "value",
            "variable" : 6
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 627,
      "code" : "return value",
      "entry" : false,
      "use-vars" : [ 6 ]
    } ],
    "code" : "// write allocates and writes a bucket to a byte slice.\nfunc (b *Bucket) write() []byte {\n\t// Allocate the appropriate size.\n\tvar n = b.rootNode\n\tvar value = make([]byte, bucketHeaderSize+n.size())\n\n\t// Write a bucket header.\n\tvar bucket = (*bucket)(unsafe.Pointer(&value[0]))\n\t*bucket = *b.bucket\n\n\t// Convert byte slice to a fake page and write the root node.\n\tvar p = (*page)(unsafe.Pointer(&value[bucketHeaderSize]))\n\tn.write(p)\n\n\treturn value\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "write",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "size",
      "package" : 0,
      "type" : 162,
      "exported" : false
    }, {
      "name" : "write",
      "package" : 0,
      "type" : 165,
      "exported" : false
    } ],
    "line-end" : 628,
    "line-start" : 614,
    "names" : [ "write" ],
    "package" : 0,
    "packages" : [ {
      "name" : "bbolt",
      "path" : "go.etcd.io/bbolt"
    }, {
      "name" : "time",
      "path" : "time"
    }, {
      "name" : "os",
      "path" : "os"
    }, {
      "name" : "poll",
      "path" : "internal/poll"
    }, {
      "name" : "syscall",
      "path" : "syscall"
    }, {
      "name" : "sync",
      "path" : "sync"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ ],
    "receivers" : [ 1 ],
    "results" : [ 2 ],
    "type" : "function",
    "types" : [ {
      "name" : "(*go.etcd.io/bbolt.Bucket) func() []byte",
      "params" : 1,
      "recv" : 1,
      "results" : 2,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 3
      } ],
      "name" : "([]byte)",
      "type" : "Tuple",
      "underlying" : 2
    }, {
      "elem" : 4,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 3
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 4
    }, {
      "elem" : 6,
      "name" : "*go.etcd.io/bbolt.Bucket",
      "type" : "Pointer",
      "underlying" : 5
    }, {
      "local-name" : "Bucket",
      "name" : "go.etcd.io/bbolt.Bucket",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "fields" : [ {
        "name" : "bucket",
        "type" : 8
      }, {
        "name" : "tx",
        "type" : 13
      }, {
        "name" : "buckets",
        "type" : 150
      }, {
        "name" : "page",
        "type" : 144
      }, {
        "name" : "rootNode",
        "type" : 151
      }, {
        "name" : "nodes",
        "type" : 160
      }, {
        "name" : "FillPercent",
        "type" : 161
      } ],
      "name" : "struct{*go.etcd.io/bbolt.bucket; tx *go.etcd.io/bbolt.Tx; buckets map[string]*go.etcd.io/bbolt.Bucket; page *go.etcd.io/bbolt.page; rootNode *go.etcd.io/bbolt.node; nodes map[go.etcd.io/bbolt.pgid]*go.etcd.io/bbolt.node; FillPercent float64}",
      "type" : "Struct",
      "underlying" : 7
    }, {
      "elem" : 9,
      "name" : "*go.etcd.io/bbolt.bucket",
      "type" : "Pointer",
      "underlying" : 8
    }, {
      "local-name" : "bucket",
      "name" : "go.etcd.io/bbolt.bucket",
      "package" : 0,
      "type" : "Named",
      "underlying" : 10
    }, {
      "fields" : [ {
        "name" : "root",
        "type" : 11
      }, {
        "name" : "sequence",
        "type" : 12
      } ],
      "name" : "struct{root go.etcd.io/bbolt.pgid; sequence uint64}",
      "type" : "Struct",
      "underlying" : 10
    }, {
      "local-name" : "pgid",
      "name" : "go.etcd.io/bbolt.pgid",
      "package" : 0,
      "type" : "Named",
      "underlying" : 12
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 12
    }, {
      "elem" : 14,
      "name" : "*go.etcd.io/bbolt.Tx",
      "type" : "Pointer",
      "underlying" : 13
    }, {
      "local-name" : "Tx",
      "name" : "go.etcd.io/bbolt.Tx",
      "package" : 0,
      "type" : "Named",
      "underlying" : 15
    }, {
      "fields" : [ {
        "name" : "writable",
        "type" : 16
      }, {
        "name" : "managed",
        "type" : 16
      }, {
        "name" : "db",
        "type" : 17
      }, {
        "name" : "meta",
        "type" : 57
      }, {
        "name" : "root",
        "type" : 6
      }, {
        "name" : "pages",
        "type" : 143
      }, {
        "name" : "stats",
        "type" : 64
      }, {
        "name" : "commitHandlers",
        "type" : 148
      }, {
        "name" : "WriteFlag",
        "type" : 22
      } ],
      "name" : "struct{writable bool; managed bool; db *go.etcd.io/bbolt.DB; meta *go.etcd.io/bbolt.meta; root go.etcd.io/bbolt.Bucket; pages map[go.etcd.io/bbolt.pgid]*go.etcd.io/bbolt.page; stats go.etcd.io/bbolt.TxStats; commitHandlers []func(); WriteFlag int}",
      "type" : "Struct",
      "underlying" : 15
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 16
    }, {
      "elem" : 18,
      "name" : "*go.etcd.io/bbolt.DB",
      "type" : "Pointer",
      "underlying" : 17
    }, {
      "local-name" : "DB",
      "name" : "go.etcd.io/bbolt.DB",
      "package" : 0,
      "type" : "Named",
      "underlying" : 19
    }, {
      "fields" : [ {
        "name" : "StrictMode",
        "type" : 16
      }, {
        "name" : "NoSync",
        "type" : 16
      }, {
        "name" : "NoFreelistSync",
        "type" : 16
      }, {
        "name" : "FreelistType",
        "type" : 20
      }, {
        "name" : "NoGrowSync",
        "type" : 16
      }, {
        "name" : "MmapFlags",
        "type" : 22
      }, {
        "name" : "MaxBatchSize",
        "type" : 22
      }, {
        "name" : "MaxBatchDelay",
        "type" : 23
      }, {
        "name" : "AllocSize",
        "type" : 22
      }, {
        "name" : "path",
        "type" : 21
      }, {
        "name" : "openFile",
        "type" : 25
      }, {
        "name" : "file",
        "type" : 30
      }, {
        "name" : "dataref",
        "type" : 3
      }, {
        "name" : "data",
        "type" : 55
      }, {
        "name" : "datasz",
        "type" : 22
      }, {
        "name" : "filesz",
        "type" : 22
      }, {
        "name" : "meta0",
        "type" : 57
      }, {
        "name" : "meta1",
        "type" : 57
      }, {
        "name" : "pageSize",
        "type" : 22
      }, {
        "name" : "opened",
        "type" : 16
      }, {
        "name" : "rwtx",
        "type" : 13
      }, {
        "name" : "txs",
        "type" : 61
      }, {
        "name" : "stats",
        "type" : 62
      }, {
        "name" : "freelist",
        "type" : 66
      }, {
        "name" : "freelistLoad",
        "type" : 94
      }, {
        "name" : "pagePool",
        "type" : 99
      }, {
        "name" : "batchMu",
        "type" : 96
      }, {
        "name" : "batch",
        "type" : 106
      }, {
        "name" : "rwlock",
        "type" : 96
      }, {
        "name" : "metalock",
        "type" : 96
      }, {
        "name" : "mmaplock",
        "type" : 137
      }, {
        "name" : "statlock",
        "type" : 137
      }, {
        "name" : "ops",
        "type" : 139
      }, {
        "name" : "readOnly",
        "type" : 16
      } ],
      "name" : "struct{StrictMode bool; NoSync bool; NoFreelistSync bool; FreelistType go.etcd.io/bbolt.FreelistType; NoGrowSync bool; MmapFlags int; MaxBatchSize int; MaxBatchDelay time.Duration; AllocSize int; path string; openFile func(string, int, os.FileMode) (*os.File, error); file *os.File; dataref []byte; data *[281474976710655]byte; datasz int; filesz int; meta0 *go.etcd.io/bbolt.meta; meta1 *go.etcd.io/bbolt.meta; pageSize int; opened bool; rwtx *go.etcd.io/bbolt.Tx; txs []*go.etcd.io/bbolt.Tx; stats go.etcd.io/bbolt.Stats; freelist *go.etcd.io/bbolt.freelist; freelistLoad sync.Once; pagePool sync.Pool; batchMu sync.Mutex; batch *go.etcd.io/bbolt.batch; rwlock sync.Mutex; metalock sync.Mutex; mmaplock sync.RWMutex; statlock sync.RWMutex; ops struct{writeAt func(b []byte, off int64) (n int, err error)}; readOnly bool}",
      "type" : "Struct",
      "underlying" : 19
    }, {
      "local-name" : "FreelistType",
      "name" : "go.etcd.io/bbolt.FreelistType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 21
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 21
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 22
    }, {
      "local-name" : "Duration",
      "name" : "time.Duration",
      "package" : 1,
      "type" : "Named",
      "underlying" : 24
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 24
    }, {
      "name" : "func(string, int, os.FileMode) (*os.File, error)",
      "params" : 26,
      "recv" : -1,
      "results" : 29,
      "type" : "Signature",
      "underlying" : 25,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 21
      }, {
        "name" : "",
        "type" : 22
      }, {
        "name" : "",
        "type" : 27
      } ],
      "name" : "(string, int, os.FileMode)",
      "type" : "Tuple",
      "underlying" : 26
    }, {
      "local-name" : "FileMode",
      "name" : "os.FileMode",
      "package" : 2,
      "type" : "Named",
      "underlying" : 28
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 28
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 30
      }, {
        "name" : "",
        "type" : 51
      } ],
      "name" : "(*os.File, error)",
      "type" : "Tuple",
      "underlying" : 29
    }, {
      "elem" : 31,
      "name" : "*os.File",
      "type" : "Pointer",
      "underlying" : 30
    }, {
      "local-name" : "File",
      "name" : "os.File",
      "package" : 2,
      "type" : "Named",
      "underlying" : 32
    }, {
      "fields" : [ {
        "name" : "file",
        "type" : 33
      } ],
      "name" : "struct{*os.file}",
      "type" : "Struct",
      "underlying" : 32
    }, {
      "elem" : 34,
      "name" : "*os.file",
      "type" : "Pointer",
      "underlying" : 33
    }, {
      "local-name" : "file",
      "name" : "os.file",
      "package" : 2,
      "type" : "Named",
      "underlying" : 35
    }, {
      "fields" : [ {
        "name" : "pfd",
        "type" : 36
      }, {
        "name" : "name",
        "type" : 21
      }, {
        "name" : "dirinfo",
        "type" : 48
      }, {
        "name" : "nonblock",
        "type" : 16
      }, {
        "name" : "stdoutOrErr",
        "type" : 16
      }, {
        "name" : "appendMode",
        "type" : 16
      } ],
      "name" : "struct{pfd internal/poll.FD; name string; dirinfo *os.dirInfo; nonblock bool; stdoutOrErr bool; appendMode bool}",
      "type" : "Struct",
      "underlying" : 35
    }, {
      "local-name" : "FD",
      "name" : "internal/poll.FD",
      "package" : 3,
      "type" : "Named",
      "underlying" : 37
    }, {
      "fields" : [ {
        "name" : "fdmu",
        "type" : 38
      }, {
        "name" : "Sysfd",
        "type" : 22
      }, {
        "name" : "pd",
        "type" : 40
      }, {
        "name" : "iovecs",
        "type" : 43
      }, {
        "name" : "csema",
        "type" : 28
      }, {
        "name" : "isBlocking",
        "type" : 28
      }, {
        "name" : "IsStream",
        "type" : 16
      }, {
        "name" : "ZeroReadIsEOF",
        "type" : 16
      }, {
        "name" : "isFile",
        "type" : 16
      } ],
      "name" : "struct{fdmu internal/poll.fdMutex; Sysfd int; pd internal/poll.pollDesc; iovecs *[]syscall.Iovec; csema uint32; isBlocking uint32; IsStream bool; ZeroReadIsEOF bool; isFile bool}",
      "type" : "Struct",
      "underlying" : 37
    }, {
      "local-name" : "fdMutex",
      "name" : "internal/poll.fdMutex",
      "package" : 3,
      "type" : "Named",
      "underlying" : 39
    }, {
      "fields" : [ {
        "name" : "state",
        "type" : 12
      }, {
        "name" : "rsema",
        "type" : 28
      }, {
        "name" : "wsema",
        "type" : 28
      } ],
      "name" : "struct{state uint64; rsema uint32; wsema uint32}",
      "type" : "Struct",
      "underlying" : 39
    }, {
      "local-name" : "pollDesc",
      "name" : "internal/poll.pollDesc",
      "package" : 3,
      "type" : "Named",
      "underlying" : 41
    }, {
      "fields" : [ {
        "name" : "runtimeCtx",
        "type" : 42
      } ],
      "name" : "struct{runtimeCtx uintptr}",
      "type" : "Struct",
      "underlying" : 41
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 42
    }, {
      "elem" : 44,
      "name" : "*[]syscall.Iovec",
      "type" : "Pointer",
      "underlying" : 43
    }, {
      "elem" : 45,
      "name" : "[]syscall.Iovec",
      "type" : "Slice",
      "underlying" : 44
    }, {
      "local-name" : "Iovec",
      "name" : "syscall.Iovec",
      "package" : 4,
      "type" : "Named",
      "underlying" : 46
    }, {
      "fields" : [ {
        "name" : "Base",
        "type" : 47
      }, {
        "name" : "Len",
        "type" : 12
      } ],
      "name" : "struct{Base *byte; Len uint64}",
      "type" : "Struct",
      "underlying" : 46
    }, {
      "elem" : 4,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 47
    }, {
      "elem" : 49,
      "name" : "*os.dirInfo",
      "type" : "Pointer",
      "underlying" : 48
    }, {
      "local-name" : "dirInfo",
      "name" : "os.dirInfo",
      "package" : 2,
      "type" : "Named",
      "underlying" : 50
    }, {
      "fields" : [ {
        "name" : "buf",
        "type" : 3
      }, {
        "name" : "nbuf",
        "type" : 22
      }, {
        "name" : "bufp",
        "type" : 22
      } ],
      "name" : "struct{buf []byte; nbuf int; bufp int}",
      "type" : "Struct",
      "underlying" : 50
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 52
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 53
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 52
    }, {
      "name" : "(error) func() string",
      "params" : 1,
      "recv" : 0,
      "results" : 54,
      "type" : "Signature",
      "underlying" : 53,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 21
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 54
    }, {
      "elem" : 56,
      "name" : "*[281474976710655]byte",
      "type" : "Pointer",
      "underlying" : 55
    }, {
      "elem" : 4,
      "name" : "[281474976710655]byte",
      "type" : "Array",
      "underlying" : 56
    }, {
      "elem" : 58,
      "name" : "*go.etcd.io/bbolt.meta",
      "type" : "Pointer",
      "underlying" : 57
    }, {
      "local-name" : "meta",
      "name" : "go.etcd.io/bbolt.meta",
      "package" : 0,
      "type" : "Named",
      "underlying" : 59
    }, {
      "fields" : [ {
        "name" : "magic",
        "type" : 28
      }, {
        "name" : "version",
        "type" : 28
      }, {
        "name" : "pageSize",
        "type" : 28
      }, {
        "name" : "flags",
        "type" : 28
      }, {
        "name" : "root",
        "type" : 9
      }, {
        "name" : "freelist",
        "type" : 11
      }, {
        "name" : "pgid",
        "type" : 11
      }, {
        "name" : "txid",
        "type" : 60
      }, {
        "name" : "checksum",
        "type" : 12
      } ],
      "name" : "struct{magic uint32; version uint32; pageSize uint32; flags uint32; root go.etcd.io/bbolt.bucket; freelist go.etcd.io/bbolt.pgid; pgid go.etcd.io/bbolt.pgid; txid go.etcd.io/bbolt.txid; checksum uint64}",
      "type" : "Struct",
      "underlying" : 59
    }, {
      "local-name" : "txid",
      "name" : "go.etcd.io/bbolt.txid",
      "package" : 0,
      "type" : "Named",
      "underlying" : 12
    }, {
      "elem" : 13,
      "name" : "[]*go.etcd.io/bbolt.Tx",
      "type" : "Slice",
      "underlying" : 61
    }, {
      "local-name" : "Stats",
      "name" : "go.etcd.io/bbolt.Stats",
      "package" : 0,
      "type" : "Named",
      "underlying" : 63
    }, {
      "fields" : [ {
        "name" : "FreePageN",
        "type" : 22
      }, {
        "name" : "PendingPageN",
        "type" : 22
      }, {
        "name" : "FreeAlloc",
        "type" : 22
      }, {
        "name" : "FreelistInuse",
        "type" : 22
      }, {
        "name" : "TxN",
        "type" : 22
      }, {
        "name" : "OpenTxN",
        "type" : 22
      }, {
        "name" : "TxStats",
        "type" : 64
      } ],
      "name" : "struct{FreePageN int; PendingPageN int; FreeAlloc int; FreelistInuse int; TxN int; OpenTxN int; TxStats go.etcd.io/bbolt.TxStats}",
      "type" : "Struct",
      "underlying" : 63
    }, {
      "local-name" : "TxStats",
      "name" : "go.etcd.io/bbolt.TxStats",
      "package" : 0,
      "type" : "Named",
      "underlying" : 65
    }, {
      "fields" : [ {
        "name" : "PageCount",
        "type" : 22
      }, {
        "name" : "PageAlloc",
        "type" : 22
      }, {
        "name" : "CursorCount",
        "type" : 22
      }, {
        "name" : "NodeCount",
        "type" : 22
      }, {
        "name" : "NodeDeref",
        "type" : 22
      }, {
        "name" : "Rebalance",
        "type" : 22
      }, {
        "name" : "RebalanceTime",
        "type" : 23
      }, {
        "name" : "Split",
        "type" : 22
      }, {
        "name" : "Spill",
        "type" : 22
      }, {
        "name" : "SpillTime",
        "type" : 23
      }, {
        "name" : "Write",
        "type" : 22
      }, {
        "name" : "WriteTime",
        "type" : 23
      } ],
      "name" : "struct{PageCount int; PageAlloc int; CursorCount int; NodeCount int; NodeDeref int; Rebalance int; RebalanceTime time.Duration; Split int; Spill int; SpillTime time.Duration; Write int; WriteTime time.Duration}",
      "type" : "Struct",
      "underlying" : 65
    }, {
      "elem" : 67,
      "name" : "*go.etcd.io/bbolt.freelist",
      "type" : "Pointer",
      "underlying" : 66
    }, {
      "local-name" : "freelist",
      "name" : "go.etcd.io/bbolt.freelist",
      "package" : 0,
      "type" : "Named",
      "underlying" : 68
    }, {
      "fields" : [ {
        "name" : "freelistType",
        "type" : 20
      }, {
        "name" : "ids",
        "type" : 69
      }, {
        "name" : "allocs",
        "type" : 70
      }, {
        "name" : "pending",
        "type" : 71
      }, {
        "name" : "cache",
        "type" : 76
      }, {
        "name" : "freemaps",
        "type" : 77
      }, {
        "name" : "forwardMap",
        "type" : 81
      }, {
        "name" : "backwardMap",
        "type" : 81
      }, {
        "name" : "allocate",
        "type" : 82
      }, {
        "name" : "free_count",
        "type" : 85
      }, {
        "name" : "mergeSpans",
        "type" : 87
      }, {
        "name" : "getFreePageIDs",
        "type" : 90
      }, {
        "name" : "readIDs",
        "type" : 92
      } ],
      "name" : "struct{freelistType go.etcd.io/bbolt.FreelistType; ids []go.etcd.io/bbolt.pgid; allocs map[go.etcd.io/bbolt.pgid]go.etcd.io/bbolt.txid; pending map[go.etcd.io/bbolt.txid]*go.etcd.io/bbolt.txPending; cache map[go.etcd.io/bbolt.pgid]bool; freemaps map[uint64]go.etcd.io/bbolt.pidSet; forwardMap map[go.etcd.io/bbolt.pgid]uint64; backwardMap map[go.etcd.io/bbolt.pgid]uint64; allocate func(txid go.etcd.io/bbolt.txid, n int) go.etcd.io/bbolt.pgid; free_count func() int; mergeSpans func(ids go.etcd.io/bbolt.pgids); getFreePageIDs func() []go.etcd.io/bbolt.pgid; readIDs func(pgids []go.etcd.io/bbolt.pgid)}",
      "type" : "Struct",
      "underlying" : 68
    }, {
      "elem" : 11,
      "name" : "[]go.etcd.io/bbolt.pgid",
      "type" : "Slice",
      "underlying" : 69
    }, {
      "elem" : 60,
      "key" : 11,
      "name" : "map[go.etcd.io/bbolt.pgid]go.etcd.io/bbolt.txid",
      "type" : "Map",
      "underlying" : 70
    }, {
      "elem" : 72,
      "key" : 60,
      "name" : "map[go.etcd.io/bbolt.txid]*go.etcd.io/bbolt.txPending",
      "type" : "Map",
      "underlying" : 71
    }, {
      "elem" : 73,
      "name" : "*go.etcd.io/bbolt.txPending",
      "type" : "Pointer",
      "underlying" : 72
    }, {
      "local-name" : "txPending",
      "name" : "go.etcd.io/bbolt.txPending",
      "package" : 0,
      "type" : "Named",
      "underlying" : 74
    }, {
      "fields" : [ {
        "name" : "ids",
        "type" : 69
      }, {
        "name" : "alloctx",
        "type" : 75
      }, {
        "name" : "lastReleaseBegin",
        "type" : 60
      } ],
      "name" : "struct{ids []go.etcd.io/bbolt.pgid; alloctx []go.etcd.io/bbolt.txid; lastReleaseBegin go.etcd.io/bbolt.txid}",
      "type" : "Struct",
      "underlying" : 74
    }, {
      "elem" : 60,
      "name" : "[]go.etcd.io/bbolt.txid",
      "type" : "Slice",
      "underlying" : 75
    }, {
      "elem" : 16,
      "key" : 11,
      "name" : "map[go.etcd.io/bbolt.pgid]bool",
      "type" : "Map",
      "underlying" : 76
    }, {
      "elem" : 78,
      "key" : 12,
      "name" : "map[uint64]go.etcd.io/bbolt.pidSet",
      "type" : "Map",
      "underlying" : 77
    }, {
      "local-name" : "pidSet",
      "name" : "go.etcd.io/bbolt.pidSet",
      "package" : 0,
      "type" : "Named",
      "underlying" : 79
    }, {
      "elem" : 80,
      "key" : 11,
      "name" : "map[go.etcd.io/bbolt.pgid]struct{}",
      "type" : "Map",
      "underlying" : 79
    }, {
      "fields" : [ ],
      "name" : "struct{}",
      "type" : "Struct",
      "underlying" : 80
    }, {
      "elem" : 12,
      "key" : 11,
      "name" : "map[go.etcd.io/bbolt.pgid]uint64",
      "type" : "Map",
      "underlying" : 81
    }, {
      "name" : "func(txid go.etcd.io/bbolt.txid, n int) go.etcd.io/bbolt.pgid",
      "params" : 83,
      "recv" : -1,
      "results" : 84,
      "type" : "Signature",
      "underlying" : 82,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "txid",
        "type" : 60
      }, {
        "name" : "n",
        "type" : 22
      } ],
      "name" : "(txid go.etcd.io/bbolt.txid, n int)",
      "type" : "Tuple",
      "underlying" : 83
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 11
      } ],
      "name" : "(go.etcd.io/bbolt.pgid)",
      "type" : "Tuple",
      "underlying" : 84
    }, {
      "name" : "func() int",
      "params" : 1,
      "recv" : -1,
      "results" : 86,
      "type" : "Signature",
      "underlying" : 85,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 22
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 86
    }, {
      "name" : "func(ids go.etcd.io/bbolt.pgids)",
      "params" : 88,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 87,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ids",
        "type" : 89
      } ],
      "name" : "(ids go.etcd.io/bbolt.pgids)",
      "type" : "Tuple",
      "underlying" : 88
    }, {
      "local-name" : "pgids",
      "name" : "go.etcd.io/bbolt.pgids",
      "package" : 0,
      "type" : "Named",
      "underlying" : 69
    }, {
      "name" : "func() []go.etcd.io/bbolt.pgid",
      "params" : 1,
      "recv" : -1,
      "results" : 91,
      "type" : "Signature",
      "underlying" : 90,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 69
      } ],
      "name" : "([]go.etcd.io/bbolt.pgid)",
      "type" : "Tuple",
      "underlying" : 91
    }, {
      "name" : "func(pgids []go.etcd.io/bbolt.pgid)",
      "params" : 93,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 92,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pgids",
        "type" : 69
      } ],
      "name" : "(pgids []go.etcd.io/bbolt.pgid)",
      "type" : "Tuple",
      "underlying" : 93
    }, {
      "local-name" : "Once",
      "name" : "sync.Once",
      "package" : 5,
      "type" : "Named",
      "underlying" : 95
    }, {
      "fields" : [ {
        "name" : "done",
        "type" : 28
      }, {
        "name" : "m",
        "type" : 96
      } ],
      "name" : "struct{done uint32; m sync.Mutex}",
      "type" : "Struct",
      "underlying" : 95
    }, {
      "local-name" : "Mutex",
      "name" : "sync.Mutex",
      "package" : 5,
      "type" : "Named",
      "underlying" : 97
    }, {
      "fields" : [ {
        "name" : "state",
        "type" : 98
      }, {
        "name" : "sema",
        "type" : 28
      } ],
      "name" : "struct{state int32; sema uint32}",
      "type" : "Struct",
      "underlying" : 97
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 98
    }, {
      "local-name" : "Pool",
      "name" : "sync.Pool",
      "package" : 5,
      "type" : "Named",
      "underlying" : 100
    }, {
      "fields" : [ {
        "name" : "noCopy",
        "type" : 101
      }, {
        "name" : "local",
        "type" : 102
      }, {
        "name" : "localSize",
        "type" : 42
      }, {
        "name" : "victim",
        "type" : 102
      }, {
        "name" : "victimSize",
        "type" : 42
      }, {
        "name" : "New",
        "type" : 103
      } ],
      "name" : "struct{noCopy sync.noCopy; local unsafe.Pointer; localSize uintptr; victim unsafe.Pointer; victimSize uintptr; New func() interface{}}",
      "type" : "Struct",
      "underlying" : 100
    }, {
      "local-name" : "noCopy",
      "name" : "sync.noCopy",
      "package" : 5,
      "type" : "Named",
      "underlying" : 80
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 6,
      "type" : "Basic",
      "underlying" : 102
    }, {
      "name" : "func() interface{}",
      "params" : 1,
      "recv" : -1,
      "results" : 104,
      "type" : "Signature",
      "underlying" : 103,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 105
      } ],
      "name" : "(interface{})",
      "type" : "Tuple",
      "underlying" : 104
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 105
    }, {
      "elem" : 107,
      "name" : "*go.etcd.io/bbolt.batch",
      "type" : "Pointer",
      "underlying" : 106
    }, {
      "local-name" : "batch",
      "name" : "go.etcd.io/bbolt.batch",
      "package" : 0,
      "type" : "Named",
      "underlying" : 108
    }, {
      "fields" : [ {
        "name" : "db",
        "type" : 17
      }, {
        "name" : "timer",
        "type" : 109
      }, {
        "name" : "start",
        "type" : 94
      }, {
        "name" : "calls",
        "type" : 130
      } ],
      "name" : "struct{db *go.etcd.io/bbolt.DB; timer *time.Timer; start sync.Once; calls []go.etcd.io/bbolt.call}",
      "type" : "Struct",
      "underlying" : 108
    }, {
      "elem" : 110,
      "name" : "*time.Timer",
      "type" : "Pointer",
      "underlying" : 109
    }, {
      "local-name" : "Timer",
      "name" : "time.Timer",
      "package" : 1,
      "type" : "Named",
      "underlying" : 111
    }, {
      "fields" : [ {
        "name" : "C",
        "type" : 112
      }, {
        "name" : "r",
        "type" : 126
      } ],
      "name" : "struct{C <-chan time.Time; r time.runtimeTimer}",
      "type" : "Struct",
      "underlying" : 111
    }, {
      "dir" : "recv",
      "elem" : 113,
      "name" : "<-chan time.Time",
      "type" : "Chan",
      "underlying" : 112
    }, {
      "local-name" : "Time",
      "name" : "time.Time",
      "package" : 1,
      "type" : "Named",
      "underlying" : 114
    }, {
      "fields" : [ {
        "name" : "wall",
        "type" : 12
      }, {
        "name" : "ext",
        "type" : 24
      }, {
        "name" : "loc",
        "type" : 115
      } ],
      "name" : "struct{wall uint64; ext int64; loc *time.Location}",
      "type" : "Struct",
      "underlying" : 114
    }, {
      "elem" : 116,
      "name" : "*time.Location",
      "type" : "Pointer",
      "underlying" : 115
    }, {
      "local-name" : "Location",
      "name" : "time.Location",
      "package" : 1,
      "type" : "Named",
      "underlying" : 117
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 21
      }, {
        "name" : "zone",
        "type" : 118
      }, {
        "name" : "tx",
        "type" : 121
      }, {
        "name" : "cacheStart",
        "type" : 24
      }, {
        "name" : "cacheEnd",
        "type" : 24
      }, {
        "name" : "cacheZone",
        "type" : 125
      } ],
      "name" : "struct{name string; zone []time.zone; tx []time.zoneTrans; cacheStart int64; cacheEnd int64; cacheZone *time.zone}",
      "type" : "Struct",
      "underlying" : 117
    }, {
      "elem" : 119,
      "name" : "[]time.zone",
      "type" : "Slice",
      "underlying" : 118
    }, {
      "local-name" : "zone",
      "name" : "time.zone",
      "package" : 1,
      "type" : "Named",
      "underlying" : 120
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 21
      }, {
        "name" : "offset",
        "type" : 22
      }, {
        "name" : "isDST",
        "type" : 16
      } ],
      "name" : "struct{name string; offset int; isDST bool}",
      "type" : "Struct",
      "underlying" : 120
    }, {
      "elem" : 122,
      "name" : "[]time.zoneTrans",
      "type" : "Slice",
      "underlying" : 121
    }, {
      "local-name" : "zoneTrans",
      "name" : "time.zoneTrans",
      "package" : 1,
      "type" : "Named",
      "underlying" : 123
    }, {
      "fields" : [ {
        "name" : "when",
        "type" : 24
      }, {
        "name" : "index",
        "type" : 124
      }, {
        "name" : "isstd",
        "type" : 16
      }, {
        "name" : "isutc",
        "type" : 16
      } ],
      "name" : "struct{when int64; index uint8; isstd bool; isutc bool}",
      "type" : "Struct",
      "underlying" : 123
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 124
    }, {
      "elem" : 119,
      "name" : "*time.zone",
      "type" : "Pointer",
      "underlying" : 125
    }, {
      "local-name" : "runtimeTimer",
      "name" : "time.runtimeTimer",
      "package" : 1,
      "type" : "Named",
      "underlying" : 127
    }, {
      "fields" : [ {
        "name" : "pp",
        "type" : 42
      }, {
        "name" : "when",
        "type" : 24
      }, {
        "name" : "period",
        "type" : 24
      }, {
        "name" : "f",
        "type" : 128
      }, {
        "name" : "arg",
        "type" : 105
      }, {
        "name" : "seq",
        "type" : 42
      }, {
        "name" : "nextwhen",
        "type" : 24
      }, {
        "name" : "status",
        "type" : 28
      } ],
      "name" : "struct{pp uintptr; when int64; period int64; f func(interface{}, uintptr); arg interface{}; seq uintptr; nextwhen int64; status uint32}",
      "type" : "Struct",
      "underlying" : 127
    }, {
      "name" : "func(interface{}, uintptr)",
      "params" : 129,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 128,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 105
      }, {
        "name" : "",
        "type" : 42
      } ],
      "name" : "(interface{}, uintptr)",
      "type" : "Tuple",
      "underlying" : 129
    }, {
      "elem" : 131,
      "name" : "[]go.etcd.io/bbolt.call",
      "type" : "Slice",
      "underlying" : 130
    }, {
      "local-name" : "call",
      "name" : "go.etcd.io/bbolt.call",
      "package" : 0,
      "type" : "Named",
      "underlying" : 132
    }, {
      "fields" : [ {
        "name" : "fn",
        "type" : 133
      }, {
        "name" : "err",
        "type" : 136
      } ],
      "name" : "struct{fn func(*go.etcd.io/bbolt.Tx) error; err chan<- error}",
      "type" : "Struct",
      "underlying" : 132
    }, {
      "name" : "func(*go.etcd.io/bbolt.Tx) error",
      "params" : 134,
      "recv" : -1,
      "results" : 135,
      "type" : "Signature",
      "underlying" : 133,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 13
      } ],
      "name" : "(*go.etcd.io/bbolt.Tx)",
      "type" : "Tuple",
      "underlying" : 134
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 51
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 135
    }, {
      "dir" : "send",
      "elem" : 51,
      "name" : "chan<- error",
      "type" : "Chan",
      "underlying" : 136
    }, {
      "local-name" : "RWMutex",
      "name" : "sync.RWMutex",
      "package" : 5,
      "type" : "Named",
      "underlying" : 138
    }, {
      "fields" : [ {
        "name" : "w",
        "type" : 96
      }, {
        "name" : "writerSem",
        "type" : 28
      }, {
        "name" : "readerSem",
        "type" : 28
      }, {
        "name" : "readerCount",
        "type" : 98
      }, {
        "name" : "readerWait",
        "type" : 98
      } ],
      "name" : "struct{w sync.Mutex; writerSem uint32; readerSem uint32; readerCount int32; readerWait int32}",
      "type" : "Struct",
      "underlying" : 138
    }, {
      "fields" : [ {
        "name" : "writeAt",
        "type" : 140
      } ],
      "name" : "struct{writeAt func(b []byte, off int64) (n int, err error)}",
      "type" : "Struct",
      "underlying" : 139
    }, {
      "name" : "func(b []byte, off int64) (n int, err error)",
      "params" : 141,
      "recv" : -1,
      "results" : 142,
      "type" : "Signature",
      "underlying" : 140,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "b",
        "type" : 3
      }, {
        "name" : "off",
        "type" : 24
      } ],
      "name" : "(b []byte, off int64)",
      "type" : "Tuple",
      "underlying" : 141
    }, {
      "fields" : [ {
        "name" : "n",
        "type" : 22
      }, {
        "name" : "err",
        "type" : 51
      } ],
      "name" : "(n int, err error)",
      "type" : "Tuple",
      "underlying" : 142
    }, {
      "elem" : 144,
      "key" : 11,
      "name" : "map[go.etcd.io/bbolt.pgid]*go.etcd.io/bbolt.page",
      "type" : "Map",
      "underlying" : 143
    }, {
      "elem" : 145,
      "name" : "*go.etcd.io/bbolt.page",
      "type" : "Pointer",
      "underlying" : 144
    }, {
      "local-name" : "page",
      "name" : "go.etcd.io/bbolt.page",
      "package" : 0,
      "type" : "Named",
      "underlying" : 146
    }, {
      "fields" : [ {
        "name" : "id",
        "type" : 11
      }, {
        "name" : "flags",
        "type" : 147
      }, {
        "name" : "count",
        "type" : 147
      }, {
        "name" : "overflow",
        "type" : 28
      }, {
        "name" : "ptr",
        "type" : 42
      } ],
      "name" : "struct{id go.etcd.io/bbolt.pgid; flags uint16; count uint16; overflow uint32; ptr uintptr}",
      "type" : "Struct",
      "underlying" : 146
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 147
    }, {
      "elem" : 149,
      "name" : "[]func()",
      "type" : "Slice",
      "underlying" : 148
    }, {
      "name" : "func()",
      "params" : 1,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 149,
      "variadic" : false
    }, {
      "elem" : 5,
      "key" : 21,
      "name" : "map[string]*go.etcd.io/bbolt.Bucket",
      "type" : "Map",
      "underlying" : 150
    }, {
      "elem" : 152,
      "name" : "*go.etcd.io/bbolt.node",
      "type" : "Pointer",
      "underlying" : 151
    }, {
      "local-name" : "node",
      "name" : "go.etcd.io/bbolt.node",
      "package" : 0,
      "type" : "Named",
      "underlying" : 153
    }, {
      "fields" : [ {
        "name" : "bucket",
        "type" : 5
      }, {
        "name" : "isLeaf",
        "type" : 16
      }, {
        "name" : "unbalanced",
        "type" : 16
      }, {
        "name" : "spilled",
        "type" : 16
      }, {
        "name" : "key",
        "type" : 3
      }, {
        "name" : "pgid",
        "type" : 11
      }, {
        "name" : "parent",
        "type" : 151
      }, {
        "name" : "children",
        "type" : 154
      }, {
        "name" : "inodes",
        "type" : 156
      } ],
      "name" : "struct{bucket *go.etcd.io/bbolt.Bucket; isLeaf bool; unbalanced bool; spilled bool; key []byte; pgid go.etcd.io/bbolt.pgid; parent *go.etcd.io/bbolt.node; children go.etcd.io/bbolt.nodes; inodes go.etcd.io/bbolt.inodes}",
      "type" : "Struct",
      "underlying" : 153
    }, {
      "local-name" : "nodes",
      "name" : "go.etcd.io/bbolt.nodes",
      "package" : 0,
      "type" : "Named",
      "underlying" : 155
    }, {
      "elem" : 151,
      "name" : "[]*go.etcd.io/bbolt.node",
      "type" : "Slice",
      "underlying" : 155
    }, {
      "local-name" : "inodes",
      "name" : "go.etcd.io/bbolt.inodes",
      "package" : 0,
      "type" : "Named",
      "underlying" : 157
    }, {
      "elem" : 158,
      "name" : "[]go.etcd.io/bbolt.inode",
      "type" : "Slice",
      "underlying" : 157
    }, {
      "local-name" : "inode",
      "name" : "go.etcd.io/bbolt.inode",
      "package" : 0,
      "type" : "Named",
      "underlying" : 159
    }, {
      "fields" : [ {
        "name" : "flags",
        "type" : 28
      }, {
        "name" : "pgid",
        "type" : 11
      }, {
        "name" : "key",
        "type" : 3
      }, {
        "name" : "value",
        "type" : 3
      } ],
      "name" : "struct{flags uint32; pgid go.etcd.io/bbolt.pgid; key []byte; value []byte}",
      "type" : "Struct",
      "underlying" : 159
    }, {
      "elem" : 151,
      "key" : 11,
      "name" : "map[go.etcd.io/bbolt.pgid]*go.etcd.io/bbolt.node",
      "type" : "Map",
      "underlying" : 160
    }, {
      "name" : "float64",
      "type" : "Basic",
      "underlying" : 161
    }, {
      "name" : "(*go.etcd.io/bbolt.node) func() int",
      "params" : 1,
      "recv" : 5,
      "results" : 86,
      "type" : "Signature",
      "underlying" : 162,
      "variadic" : false
    }, {
      "name" : "func(p *go.etcd.io/bbolt.page)",
      "params" : 164,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 163,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "p",
        "type" : 144
      } ],
      "name" : "(p *go.etcd.io/bbolt.page)",
      "type" : "Tuple",
      "underlying" : 164
    }, {
      "name" : "(*go.etcd.io/bbolt.node) func(p *go.etcd.io/bbolt.page)",
      "params" : 164,
      "recv" : 10,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 165,
      "variadic" : false
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 51,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "b",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "rootNode",
      "package" : 0,
      "type" : 151,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "n",
      "package" : 0,
      "type" : 151,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "n",
      "package" : 0,
      "type" : 151,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "value",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "bucket",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "bucket",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : true,
      "field" : true
    }, {
      "name" : "p",
      "package" : 0,
      "type" : 144,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "n",
      "package" : 0,
      "type" : 151,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}