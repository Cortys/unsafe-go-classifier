{
  "usage" : {
    "file" : "zz_generated.conversion.go",
    "label1" : "cast-struct",
    "label2" : "efficiency",
    "line" : "4851",
    "module" : "k8s.io/kubernetes",
    "pkg" : "k8s.io/kubernetes/pkg/apis/core/v1",
    "project" : "rancher/rancher",
    "snippet" : "out.Capacity = *(*v1.ResourceList)(unsafe.Pointer(&in.Capacity))",
    "version" : "v1.18.0"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 7, 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 3 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 4851,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Capacity",
            "variable" : 9
          },
          "go-type" : 85,
          "kind" : "expression",
          "target" : {
            "go-type" : 82,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 85,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "go-type" : 85,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 8,
                  "value" : "v1"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 85,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "ResourceList"
                }
              },
              "go-type" : 147,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 147,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 148,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 11,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 148,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 148,
              "kind" : "expression",
              "target" : {
                "go-type" : 149,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Capacity",
                    "variable" : 10
                  },
                  "go-type" : 5,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 4851,
      "code" : "out.Capacity = *(*v1.ResourceList)(unsafe.Pointer(&in.Capacity))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 4 ],
      "in-vars" : [ 7, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 7, 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 4852,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Allocatable",
            "variable" : 11
          },
          "go-type" : 85,
          "kind" : "expression",
          "target" : {
            "go-type" : 82,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 85,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "go-type" : 85,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 8,
                  "value" : "v1"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 85,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "ResourceList"
                }
              },
              "go-type" : 147,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 147,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 148,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 11,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 148,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 148,
              "kind" : "expression",
              "target" : {
                "go-type" : 149,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Allocatable",
                    "variable" : 12
                  },
                  "go-type" : 5,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 4852,
      "code" : "out.Allocatable = *(*v1.ResourceList)(unsafe.Pointer(&in.Allocatable))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 5 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 4853,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Phase",
            "variable" : 13
          },
          "go-type" : 88,
          "kind" : "expression",
          "target" : {
            "go-type" : 82,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 88,
            "kind" : "type",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 8,
              "value" : "v1"
            },
            "type" : "identifier",
            "value" : {
              "go-type" : 88,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "NodePhase"
            }
          },
          "go-type" : 88,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Phase",
              "variable" : 14
            },
            "go-type" : 30,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "in",
                "variable" : 5
              }
            },
            "type" : "selector"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 4853,
      "code" : "out.Phase = v1.NodePhase(in.Phase)",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 6 ],
      "in-vars" : [ 7, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 4854,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Conditions",
            "variable" : 15
          },
          "go-type" : 89,
          "kind" : "expression",
          "target" : {
            "go-type" : 82,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 89,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 90,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 8,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 90,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "NodeCondition"
                  }
                },
                "go-type" : 89,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 150,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 150,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 148,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 11,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 148,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 148,
              "kind" : "expression",
              "target" : {
                "go-type" : 151,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Conditions",
                    "variable" : 16
                  },
                  "go-type" : 31,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 4854,
      "code" : "out.Conditions = *(*[]v1.NodeCondition)(unsafe.Pointer(&in.Conditions))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 8 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 5, 7, 6 ],
      "decl-vars" : [ ],
      "line-start" : 4855,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Addresses",
            "variable" : 17
          },
          "go-type" : 94,
          "kind" : "expression",
          "target" : {
            "go-type" : 82,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 94,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 95,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 8,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 95,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "NodeAddress"
                  }
                },
                "go-type" : 94,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 152,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 152,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 148,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 11,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 148,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 148,
              "kind" : "expression",
              "target" : {
                "go-type" : 153,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Addresses",
                    "variable" : 18
                  },
                  "go-type" : 53,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 4855,
      "code" : "out.Addresses = *(*[]v1.NodeAddress)(unsafe.Pointer(&in.Addresses))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 9, 11 ],
      "in-vars" : [ 21, 7, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 21, 7 ],
      "decl-vars" : [ ],
      "line-start" : 4856,
      "ast" : {
        "condition" : {
          "go-type" : 158,
          "kind" : "expression",
          "left" : {
            "go-type" : 128,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 21
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 159,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 4858,
      "code" : "if err := Convert_core_NodeDaemonEndpoints_To_v1_NodeDaemonEndpoints(&in.DaemonEndpoints, &out.DaemonEndpoints, s); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 21 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 7 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 21, 7 ],
      "decl-vars" : [ 21 ],
      "line-start" : 4856,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 156,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "DaemonEndpoints",
                "variable" : 19
              },
              "go-type" : 57,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 157,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "DaemonEndpoints",
                "variable" : 20
              },
              "go-type" : 98,
              "kind" : "expression",
              "target" : {
                "go-type" : 82,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "out",
                  "variable" : 6
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 121,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "s",
              "variable" : 7
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 154,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Convert_core_NodeDaemonEndpoints_To_v1_NodeDaemonEndpoints"
            }
          },
          "go-type" : 128,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 4856,
      "code" : "err := Convert_core_NodeDaemonEndpoints_To_v1_NodeDaemonEndpoints(&in.DaemonEndpoints, &out.DaemonEndpoints, s)",
      "entry" : false,
      "use-vars" : [ 5, 6, 7 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 21 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 4857,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 128,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 21
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 4857,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 21 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 12, 13 ],
      "in-vars" : [ 5, 24, 6 ],
      "exit" : false,
      "out-vars" : [ 5, 24, 6 ],
      "decl-vars" : [ ],
      "line-start" : 4859,
      "ast" : {
        "condition" : {
          "go-type" : 158,
          "kind" : "expression",
          "left" : {
            "go-type" : 128,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 24
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 159,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 4861,
      "code" : "if err := Convert_core_NodeSystemInfo_To_v1_NodeSystemInfo(&in.NodeInfo, &out.NodeInfo, s); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 24 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 10 ],
      "in-vars" : [ 7, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 24 ],
      "decl-vars" : [ 24 ],
      "line-start" : 4859,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 162,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "NodeInfo",
                "variable" : 22
              },
              "go-type" : 61,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 163,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "NodeInfo",
                "variable" : 23
              },
              "go-type" : 102,
              "kind" : "expression",
              "target" : {
                "go-type" : 82,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "out",
                  "variable" : 6
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 121,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "s",
              "variable" : 7
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 160,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 2,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Convert_core_NodeSystemInfo_To_v1_NodeSystemInfo"
            }
          },
          "go-type" : 128,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 4859,
      "code" : "err := Convert_core_NodeSystemInfo_To_v1_NodeSystemInfo(&in.NodeInfo, &out.NodeInfo, s)",
      "entry" : false,
      "use-vars" : [ 7, 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 24 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 4860,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 128,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 24
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 4860,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 24 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 14 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 4862,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Images",
            "variable" : 25
          },
          "go-type" : 104,
          "kind" : "expression",
          "target" : {
            "go-type" : 82,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 104,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 105,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 8,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 105,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "ContainerImage"
                  }
                },
                "go-type" : 104,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 164,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 164,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 148,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 11,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 148,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 148,
              "kind" : "expression",
              "target" : {
                "go-type" : 165,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Images",
                    "variable" : 26
                  },
                  "go-type" : 63,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 4862,
      "code" : "out.Images = *(*[]v1.ContainerImage)(unsafe.Pointer(&in.Images))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 15 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 4863,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "VolumesInUse",
            "variable" : 27
          },
          "go-type" : 107,
          "kind" : "expression",
          "target" : {
            "go-type" : 82,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 107,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 108,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 8,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 108,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "UniqueVolumeName"
                  }
                },
                "go-type" : 107,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 166,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 166,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 148,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 11,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 148,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 148,
              "kind" : "expression",
              "target" : {
                "go-type" : 167,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "VolumesInUse",
                    "variable" : 28
                  },
                  "go-type" : 67,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 4863,
      "code" : "out.VolumesInUse = *(*[]v1.UniqueVolumeName)(unsafe.Pointer(&in.VolumesInUse))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 16 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 4864,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "VolumesAttached",
            "variable" : 29
          },
          "go-type" : 109,
          "kind" : "expression",
          "target" : {
            "go-type" : 82,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 109,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 110,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 8,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 110,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "AttachedVolume"
                  }
                },
                "go-type" : 109,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 168,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 168,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 148,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 11,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 148,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 148,
              "kind" : "expression",
              "target" : {
                "go-type" : 169,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "VolumesAttached",
                    "variable" : 30
                  },
                  "go-type" : 69,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 4864,
      "code" : "out.VolumesAttached = *(*[]v1.AttachedVolume)(unsafe.Pointer(&in.VolumesAttached))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 17 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 4865,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Config",
            "variable" : 31
          },
          "go-type" : 112,
          "kind" : "expression",
          "target" : {
            "go-type" : 82,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 113,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 113,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "NodeConfigStatus"
              }
            },
            "go-type" : 112,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 112,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 148,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 11,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 148,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 148,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Config",
                "variable" : 32
              },
              "go-type" : 72,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 4865,
      "code" : "out.Config = (*v1.NodeConfigStatus)(unsafe.Pointer(in.Config))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 4866,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 159,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 4866,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func autoConvert_core_NodeStatus_To_v1_NodeStatus(in *core.NodeStatus, out *v1.NodeStatus, s conversion.Scope) error {\n\tout.Capacity = *(*v1.ResourceList)(unsafe.Pointer(&in.Capacity))\n\tout.Allocatable = *(*v1.ResourceList)(unsafe.Pointer(&in.Allocatable))\n\tout.Phase = v1.NodePhase(in.Phase)\n\tout.Conditions = *(*[]v1.NodeCondition)(unsafe.Pointer(&in.Conditions))\n\tout.Addresses = *(*[]v1.NodeAddress)(unsafe.Pointer(&in.Addresses))\n\tif err := Convert_core_NodeDaemonEndpoints_To_v1_NodeDaemonEndpoints(&in.DaemonEndpoints, &out.DaemonEndpoints, s); err != nil {\n\t\treturn err\n\t}\n\tif err := Convert_core_NodeSystemInfo_To_v1_NodeSystemInfo(&in.NodeInfo, &out.NodeInfo, s); err != nil {\n\t\treturn err\n\t}\n\tout.Images = *(*[]v1.ContainerImage)(unsafe.Pointer(&in.Images))\n\tout.VolumesInUse = *(*[]v1.UniqueVolumeName)(unsafe.Pointer(&in.VolumesInUse))\n\tout.VolumesAttached = *(*[]v1.AttachedVolume)(unsafe.Pointer(&in.VolumesAttached))\n\tout.Config = (*v1.NodeConfigStatus)(unsafe.Pointer(in.Config))\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "autoConvert_core_NodeStatus_To_v1_NodeStatus",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "Convert_core_NodeDaemonEndpoints_To_v1_NodeDaemonEndpoints",
      "package" : 0,
      "type" : 154,
      "exported" : true
    }, {
      "name" : "Convert_core_NodeSystemInfo_To_v1_NodeSystemInfo",
      "package" : 0,
      "type" : 160,
      "exported" : true
    } ],
    "line-end" : 4867,
    "line-start" : 4850,
    "names" : [ "autoConvert_core_NodeStatus_To_v1_NodeStatus" ],
    "package" : 0,
    "packages" : [ {
      "name" : "v1",
      "path" : "k8s.io/kubernetes/pkg/apis/core/v1"
    }, {
      "name" : "core",
      "path" : "k8s.io/kubernetes/pkg/apis/core"
    }, {
      "name" : "resource",
      "path" : "k8s.io/apimachinery/pkg/api/resource"
    }, {
      "name" : "inf",
      "path" : "gopkg.in/inf.v0"
    }, {
      "name" : "big",
      "path" : "math/big"
    }, {
      "name" : "v1",
      "path" : "k8s.io/apimachinery/pkg/apis/meta/v1"
    }, {
      "name" : "time",
      "path" : "time"
    }, {
      "name" : "types",
      "path" : "k8s.io/apimachinery/pkg/types"
    }, {
      "name" : "v1",
      "path" : "k8s.io/api/core/v1"
    }, {
      "name" : "conversion",
      "path" : "k8s.io/apimachinery/pkg/conversion"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 5, 6, 7 ],
    "receivers" : [ ],
    "results" : [ 8 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.NodeStatus, out *k8s.io/api/core/v1.NodeStatus, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 1,
      "recv" : -1,
      "results" : 127,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 2
      }, {
        "name" : "out",
        "type" : 82
      }, {
        "name" : "s",
        "type" : 121
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.NodeStatus, out *k8s.io/api/core/v1.NodeStatus, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.NodeStatus",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "NodeStatus",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeStatus",
      "package" : 1,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "Capacity",
        "type" : 5
      }, {
        "name" : "Allocatable",
        "type" : 5
      }, {
        "name" : "Phase",
        "type" : 30
      }, {
        "name" : "Conditions",
        "type" : 31
      }, {
        "name" : "Addresses",
        "type" : 53
      }, {
        "name" : "DaemonEndpoints",
        "type" : 57
      }, {
        "name" : "NodeInfo",
        "type" : 61
      }, {
        "name" : "Images",
        "type" : 63
      }, {
        "name" : "VolumesInUse",
        "type" : 67
      }, {
        "name" : "VolumesAttached",
        "type" : 69
      }, {
        "name" : "Config",
        "type" : 72
      } ],
      "name" : "struct{Capacity k8s.io/kubernetes/pkg/apis/core.ResourceList; Allocatable k8s.io/kubernetes/pkg/apis/core.ResourceList; Phase k8s.io/kubernetes/pkg/apis/core.NodePhase; Conditions []k8s.io/kubernetes/pkg/apis/core.NodeCondition; Addresses []k8s.io/kubernetes/pkg/apis/core.NodeAddress; DaemonEndpoints k8s.io/kubernetes/pkg/apis/core.NodeDaemonEndpoints; NodeInfo k8s.io/kubernetes/pkg/apis/core.NodeSystemInfo; Images []k8s.io/kubernetes/pkg/apis/core.ContainerImage; VolumesInUse []k8s.io/kubernetes/pkg/apis/core.UniqueVolumeName; VolumesAttached []k8s.io/kubernetes/pkg/apis/core.AttachedVolume; Config *k8s.io/kubernetes/pkg/apis/core.NodeConfigStatus}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "local-name" : "ResourceList",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ResourceList",
      "package" : 1,
      "type" : "Named",
      "underlying" : 6
    }, {
      "elem" : 7,
      "key" : 29,
      "name" : "map[k8s.io/kubernetes/pkg/apis/core.ResourceName]k8s.io/apimachinery/pkg/api/resource.Quantity",
      "type" : "Map",
      "underlying" : 6
    }, {
      "local-name" : "Quantity",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Quantity",
      "package" : 2,
      "type" : "Named",
      "underlying" : 8
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 9
      }, {
        "name" : "d",
        "type" : 14
      }, {
        "name" : "s",
        "type" : 27
      }, {
        "name" : "Format",
        "type" : 28
      } ],
      "name" : "struct{i k8s.io/apimachinery/pkg/api/resource.int64Amount; d k8s.io/apimachinery/pkg/api/resource.infDecAmount; s string; k8s.io/apimachinery/pkg/api/resource.Format}",
      "type" : "Struct",
      "underlying" : 8
    }, {
      "local-name" : "int64Amount",
      "name" : "k8s.io/apimachinery/pkg/api/resource.int64Amount",
      "package" : 2,
      "type" : "Named",
      "underlying" : 10
    }, {
      "fields" : [ {
        "name" : "value",
        "type" : 11
      }, {
        "name" : "scale",
        "type" : 12
      } ],
      "name" : "struct{value int64; scale k8s.io/apimachinery/pkg/api/resource.Scale}",
      "type" : "Struct",
      "underlying" : 10
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 11
    }, {
      "local-name" : "Scale",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Scale",
      "package" : 2,
      "type" : "Named",
      "underlying" : 13
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "local-name" : "infDecAmount",
      "name" : "k8s.io/apimachinery/pkg/api/resource.infDecAmount",
      "package" : 2,
      "type" : "Named",
      "underlying" : 15
    }, {
      "fields" : [ {
        "name" : "Dec",
        "type" : 16
      } ],
      "name" : "struct{*gopkg.in/inf.v0.Dec}",
      "type" : "Struct",
      "underlying" : 15
    }, {
      "elem" : 17,
      "name" : "*gopkg.in/inf.v0.Dec",
      "type" : "Pointer",
      "underlying" : 16
    }, {
      "local-name" : "Dec",
      "name" : "gopkg.in/inf.v0.Dec",
      "package" : 3,
      "type" : "Named",
      "underlying" : 18
    }, {
      "fields" : [ {
        "name" : "unscaled",
        "type" : 19
      }, {
        "name" : "scale",
        "type" : 26
      } ],
      "name" : "struct{unscaled math/big.Int; scale gopkg.in/inf.v0.Scale}",
      "type" : "Struct",
      "underlying" : 18
    }, {
      "local-name" : "Int",
      "name" : "math/big.Int",
      "package" : 4,
      "type" : "Named",
      "underlying" : 20
    }, {
      "fields" : [ {
        "name" : "neg",
        "type" : 21
      }, {
        "name" : "abs",
        "type" : 22
      } ],
      "name" : "struct{neg bool; abs math/big.nat}",
      "type" : "Struct",
      "underlying" : 20
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 21
    }, {
      "local-name" : "nat",
      "name" : "math/big.nat",
      "package" : 4,
      "type" : "Named",
      "underlying" : 23
    }, {
      "elem" : 24,
      "name" : "[]math/big.Word",
      "type" : "Slice",
      "underlying" : 23
    }, {
      "local-name" : "Word",
      "name" : "math/big.Word",
      "package" : 4,
      "type" : "Named",
      "underlying" : 25
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 25
    }, {
      "local-name" : "Scale",
      "name" : "gopkg.in/inf.v0.Scale",
      "package" : 3,
      "type" : "Named",
      "underlying" : 13
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 27
    }, {
      "local-name" : "Format",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Format",
      "package" : 2,
      "type" : "Named",
      "underlying" : 27
    }, {
      "local-name" : "ResourceName",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ResourceName",
      "package" : 1,
      "type" : "Named",
      "underlying" : 27
    }, {
      "local-name" : "NodePhase",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodePhase",
      "package" : 1,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 32,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.NodeCondition",
      "type" : "Slice",
      "underlying" : 31
    }, {
      "local-name" : "NodeCondition",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeCondition",
      "package" : 1,
      "type" : "Named",
      "underlying" : 33
    }, {
      "fields" : [ {
        "name" : "Type",
        "type" : 34
      }, {
        "name" : "Status",
        "type" : 35
      }, {
        "name" : "LastHeartbeatTime",
        "type" : 36
      }, {
        "name" : "LastTransitionTime",
        "type" : 36
      }, {
        "name" : "Reason",
        "type" : 27
      }, {
        "name" : "Message",
        "type" : 27
      } ],
      "name" : "struct{Type k8s.io/kubernetes/pkg/apis/core.NodeConditionType; Status k8s.io/kubernetes/pkg/apis/core.ConditionStatus; LastHeartbeatTime k8s.io/apimachinery/pkg/apis/meta/v1.Time; LastTransitionTime k8s.io/apimachinery/pkg/apis/meta/v1.Time; Reason string; Message string}",
      "type" : "Struct",
      "underlying" : 33
    }, {
      "local-name" : "NodeConditionType",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeConditionType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 27
    }, {
      "local-name" : "ConditionStatus",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ConditionStatus",
      "package" : 1,
      "type" : "Named",
      "underlying" : 27
    }, {
      "local-name" : "Time",
      "name" : "k8s.io/apimachinery/pkg/apis/meta/v1.Time",
      "package" : 5,
      "type" : "Named",
      "underlying" : 37
    }, {
      "fields" : [ {
        "name" : "Time",
        "type" : 38
      } ],
      "name" : "struct{time.Time \"protobuf:\\\"-\\\"\"}",
      "type" : "Struct",
      "underlying" : 37
    }, {
      "local-name" : "Time",
      "name" : "time.Time",
      "package" : 6,
      "type" : "Named",
      "underlying" : 39
    }, {
      "fields" : [ {
        "name" : "wall",
        "type" : 40
      }, {
        "name" : "ext",
        "type" : 11
      }, {
        "name" : "loc",
        "type" : 41
      } ],
      "name" : "struct{wall uint64; ext int64; loc *time.Location}",
      "type" : "Struct",
      "underlying" : 39
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 40
    }, {
      "elem" : 42,
      "name" : "*time.Location",
      "type" : "Pointer",
      "underlying" : 41
    }, {
      "local-name" : "Location",
      "name" : "time.Location",
      "package" : 6,
      "type" : "Named",
      "underlying" : 43
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 27
      }, {
        "name" : "zone",
        "type" : 44
      }, {
        "name" : "tx",
        "type" : 48
      }, {
        "name" : "cacheStart",
        "type" : 11
      }, {
        "name" : "cacheEnd",
        "type" : 11
      }, {
        "name" : "cacheZone",
        "type" : 52
      } ],
      "name" : "struct{name string; zone []time.zone; tx []time.zoneTrans; cacheStart int64; cacheEnd int64; cacheZone *time.zone}",
      "type" : "Struct",
      "underlying" : 43
    }, {
      "elem" : 45,
      "name" : "[]time.zone",
      "type" : "Slice",
      "underlying" : 44
    }, {
      "local-name" : "zone",
      "name" : "time.zone",
      "package" : 6,
      "type" : "Named",
      "underlying" : 46
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 27
      }, {
        "name" : "offset",
        "type" : 47
      }, {
        "name" : "isDST",
        "type" : 21
      } ],
      "name" : "struct{name string; offset int; isDST bool}",
      "type" : "Struct",
      "underlying" : 46
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 47
    }, {
      "elem" : 49,
      "name" : "[]time.zoneTrans",
      "type" : "Slice",
      "underlying" : 48
    }, {
      "local-name" : "zoneTrans",
      "name" : "time.zoneTrans",
      "package" : 6,
      "type" : "Named",
      "underlying" : 50
    }, {
      "fields" : [ {
        "name" : "when",
        "type" : 11
      }, {
        "name" : "index",
        "type" : 51
      }, {
        "name" : "isstd",
        "type" : 21
      }, {
        "name" : "isutc",
        "type" : 21
      } ],
      "name" : "struct{when int64; index uint8; isstd bool; isutc bool}",
      "type" : "Struct",
      "underlying" : 50
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 51
    }, {
      "elem" : 45,
      "name" : "*time.zone",
      "type" : "Pointer",
      "underlying" : 52
    }, {
      "elem" : 54,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.NodeAddress",
      "type" : "Slice",
      "underlying" : 53
    }, {
      "local-name" : "NodeAddress",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeAddress",
      "package" : 1,
      "type" : "Named",
      "underlying" : 55
    }, {
      "fields" : [ {
        "name" : "Type",
        "type" : 56
      }, {
        "name" : "Address",
        "type" : 27
      } ],
      "name" : "struct{Type k8s.io/kubernetes/pkg/apis/core.NodeAddressType; Address string}",
      "type" : "Struct",
      "underlying" : 55
    }, {
      "local-name" : "NodeAddressType",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeAddressType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 27
    }, {
      "local-name" : "NodeDaemonEndpoints",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeDaemonEndpoints",
      "package" : 1,
      "type" : "Named",
      "underlying" : 58
    }, {
      "fields" : [ {
        "name" : "KubeletEndpoint",
        "type" : 59
      } ],
      "name" : "struct{KubeletEndpoint k8s.io/kubernetes/pkg/apis/core.DaemonEndpoint}",
      "type" : "Struct",
      "underlying" : 58
    }, {
      "local-name" : "DaemonEndpoint",
      "name" : "k8s.io/kubernetes/pkg/apis/core.DaemonEndpoint",
      "package" : 1,
      "type" : "Named",
      "underlying" : 60
    }, {
      "fields" : [ {
        "name" : "Port",
        "type" : 13
      } ],
      "name" : "struct{Port int32}",
      "type" : "Struct",
      "underlying" : 60
    }, {
      "local-name" : "NodeSystemInfo",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeSystemInfo",
      "package" : 1,
      "type" : "Named",
      "underlying" : 62
    }, {
      "fields" : [ {
        "name" : "MachineID",
        "type" : 27
      }, {
        "name" : "SystemUUID",
        "type" : 27
      }, {
        "name" : "BootID",
        "type" : 27
      }, {
        "name" : "KernelVersion",
        "type" : 27
      }, {
        "name" : "OSImage",
        "type" : 27
      }, {
        "name" : "ContainerRuntimeVersion",
        "type" : 27
      }, {
        "name" : "KubeletVersion",
        "type" : 27
      }, {
        "name" : "KubeProxyVersion",
        "type" : 27
      }, {
        "name" : "OperatingSystem",
        "type" : 27
      }, {
        "name" : "Architecture",
        "type" : 27
      } ],
      "name" : "struct{MachineID string; SystemUUID string; BootID string; KernelVersion string; OSImage string; ContainerRuntimeVersion string; KubeletVersion string; KubeProxyVersion string; OperatingSystem string; Architecture string}",
      "type" : "Struct",
      "underlying" : 62
    }, {
      "elem" : 64,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.ContainerImage",
      "type" : "Slice",
      "underlying" : 63
    }, {
      "local-name" : "ContainerImage",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ContainerImage",
      "package" : 1,
      "type" : "Named",
      "underlying" : 65
    }, {
      "fields" : [ {
        "name" : "Names",
        "type" : 66
      }, {
        "name" : "SizeBytes",
        "type" : 11
      } ],
      "name" : "struct{Names []string; SizeBytes int64}",
      "type" : "Struct",
      "underlying" : 65
    }, {
      "elem" : 27,
      "name" : "[]string",
      "type" : "Slice",
      "underlying" : 66
    }, {
      "elem" : 68,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.UniqueVolumeName",
      "type" : "Slice",
      "underlying" : 67
    }, {
      "local-name" : "UniqueVolumeName",
      "name" : "k8s.io/kubernetes/pkg/apis/core.UniqueVolumeName",
      "package" : 1,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 70,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.AttachedVolume",
      "type" : "Slice",
      "underlying" : 69
    }, {
      "local-name" : "AttachedVolume",
      "name" : "k8s.io/kubernetes/pkg/apis/core.AttachedVolume",
      "package" : 1,
      "type" : "Named",
      "underlying" : 71
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 68
      }, {
        "name" : "DevicePath",
        "type" : 27
      } ],
      "name" : "struct{Name k8s.io/kubernetes/pkg/apis/core.UniqueVolumeName; DevicePath string}",
      "type" : "Struct",
      "underlying" : 71
    }, {
      "elem" : 73,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.NodeConfigStatus",
      "type" : "Pointer",
      "underlying" : 72
    }, {
      "local-name" : "NodeConfigStatus",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeConfigStatus",
      "package" : 1,
      "type" : "Named",
      "underlying" : 74
    }, {
      "fields" : [ {
        "name" : "Assigned",
        "type" : 75
      }, {
        "name" : "Active",
        "type" : 75
      }, {
        "name" : "LastKnownGood",
        "type" : 75
      }, {
        "name" : "Error",
        "type" : 27
      } ],
      "name" : "struct{Assigned *k8s.io/kubernetes/pkg/apis/core.NodeConfigSource; Active *k8s.io/kubernetes/pkg/apis/core.NodeConfigSource; LastKnownGood *k8s.io/kubernetes/pkg/apis/core.NodeConfigSource; Error string}",
      "type" : "Struct",
      "underlying" : 74
    }, {
      "elem" : 76,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.NodeConfigSource",
      "type" : "Pointer",
      "underlying" : 75
    }, {
      "local-name" : "NodeConfigSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.NodeConfigSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 77
    }, {
      "fields" : [ {
        "name" : "ConfigMap",
        "type" : 78
      } ],
      "name" : "struct{ConfigMap *k8s.io/kubernetes/pkg/apis/core.ConfigMapNodeConfigSource}",
      "type" : "Struct",
      "underlying" : 77
    }, {
      "elem" : 79,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ConfigMapNodeConfigSource",
      "type" : "Pointer",
      "underlying" : 78
    }, {
      "local-name" : "ConfigMapNodeConfigSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ConfigMapNodeConfigSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 80
    }, {
      "fields" : [ {
        "name" : "Namespace",
        "type" : 27
      }, {
        "name" : "Name",
        "type" : 27
      }, {
        "name" : "UID",
        "type" : 81
      }, {
        "name" : "ResourceVersion",
        "type" : 27
      }, {
        "name" : "KubeletConfigKey",
        "type" : 27
      } ],
      "name" : "struct{Namespace string; Name string; UID k8s.io/apimachinery/pkg/types.UID; ResourceVersion string; KubeletConfigKey string}",
      "type" : "Struct",
      "underlying" : 80
    }, {
      "local-name" : "UID",
      "name" : "k8s.io/apimachinery/pkg/types.UID",
      "package" : 7,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 83,
      "name" : "*k8s.io/api/core/v1.NodeStatus",
      "type" : "Pointer",
      "underlying" : 82
    }, {
      "local-name" : "NodeStatus",
      "name" : "k8s.io/api/core/v1.NodeStatus",
      "package" : 8,
      "type" : "Named",
      "underlying" : 84
    }, {
      "fields" : [ {
        "name" : "Capacity",
        "type" : 85
      }, {
        "name" : "Allocatable",
        "type" : 85
      }, {
        "name" : "Phase",
        "type" : 88
      }, {
        "name" : "Conditions",
        "type" : 89
      }, {
        "name" : "Addresses",
        "type" : 94
      }, {
        "name" : "DaemonEndpoints",
        "type" : 98
      }, {
        "name" : "NodeInfo",
        "type" : 102
      }, {
        "name" : "Images",
        "type" : 104
      }, {
        "name" : "VolumesInUse",
        "type" : 107
      }, {
        "name" : "VolumesAttached",
        "type" : 109
      }, {
        "name" : "Config",
        "type" : 112
      } ],
      "name" : "struct{Capacity k8s.io/api/core/v1.ResourceList \"json:\\\"capacity,omitempty\\\" protobuf:\\\"bytes,1,rep,name=capacity,casttype=ResourceList,castkey=ResourceName\\\"\"; Allocatable k8s.io/api/core/v1.ResourceList \"json:\\\"allocatable,omitempty\\\" protobuf:\\\"bytes,2,rep,name=allocatable,casttype=ResourceList,castkey=ResourceName\\\"\"; Phase k8s.io/api/core/v1.NodePhase \"json:\\\"phase,omitempty\\\" protobuf:\\\"bytes,3,opt,name=phase,casttype=NodePhase\\\"\"; Conditions []k8s.io/api/core/v1.NodeCondition \"json:\\\"conditions,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"type\\\" protobuf:\\\"bytes,4,rep,name=conditions\\\"\"; Addresses []k8s.io/api/core/v1.NodeAddress \"json:\\\"addresses,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"type\\\" protobuf:\\\"bytes,5,rep,name=addresses\\\"\"; DaemonEndpoints k8s.io/api/core/v1.NodeDaemonEndpoints \"json:\\\"daemonEndpoints,omitempty\\\" protobuf:\\\"bytes,6,opt,name=daemonEndpoints\\\"\"; NodeInfo k8s.io/api/core/v1.NodeSystemInfo \"json:\\\"nodeInfo,omitempty\\\" protobuf:\\\"bytes,7,opt,name=nodeInfo\\\"\"; Images []k8s.io/api/core/v1.ContainerImage \"json:\\\"images,omitempty\\\" protobuf:\\\"bytes,8,rep,name=images\\\"\"; VolumesInUse []k8s.io/api/core/v1.UniqueVolumeName \"json:\\\"volumesInUse,omitempty\\\" protobuf:\\\"bytes,9,rep,name=volumesInUse\\\"\"; VolumesAttached []k8s.io/api/core/v1.AttachedVolume \"json:\\\"volumesAttached,omitempty\\\" protobuf:\\\"bytes,10,rep,name=volumesAttached\\\"\"; Config *k8s.io/api/core/v1.NodeConfigStatus \"json:\\\"config,omitempty\\\" protobuf:\\\"bytes,11,opt,name=config\\\"\"}",
      "type" : "Struct",
      "underlying" : 84
    }, {
      "local-name" : "ResourceList",
      "name" : "k8s.io/api/core/v1.ResourceList",
      "package" : 8,
      "type" : "Named",
      "underlying" : 86
    }, {
      "elem" : 7,
      "key" : 87,
      "name" : "map[k8s.io/api/core/v1.ResourceName]k8s.io/apimachinery/pkg/api/resource.Quantity",
      "type" : "Map",
      "underlying" : 86
    }, {
      "local-name" : "ResourceName",
      "name" : "k8s.io/api/core/v1.ResourceName",
      "package" : 8,
      "type" : "Named",
      "underlying" : 27
    }, {
      "local-name" : "NodePhase",
      "name" : "k8s.io/api/core/v1.NodePhase",
      "package" : 8,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 90,
      "name" : "[]k8s.io/api/core/v1.NodeCondition",
      "type" : "Slice",
      "underlying" : 89
    }, {
      "local-name" : "NodeCondition",
      "name" : "k8s.io/api/core/v1.NodeCondition",
      "package" : 8,
      "type" : "Named",
      "underlying" : 91
    }, {
      "fields" : [ {
        "name" : "Type",
        "type" : 92
      }, {
        "name" : "Status",
        "type" : 93
      }, {
        "name" : "LastHeartbeatTime",
        "type" : 36
      }, {
        "name" : "LastTransitionTime",
        "type" : 36
      }, {
        "name" : "Reason",
        "type" : 27
      }, {
        "name" : "Message",
        "type" : 27
      } ],
      "name" : "struct{Type k8s.io/api/core/v1.NodeConditionType \"json:\\\"type\\\" protobuf:\\\"bytes,1,opt,name=type,casttype=NodeConditionType\\\"\"; Status k8s.io/api/core/v1.ConditionStatus \"json:\\\"status\\\" protobuf:\\\"bytes,2,opt,name=status,casttype=ConditionStatus\\\"\"; LastHeartbeatTime k8s.io/apimachinery/pkg/apis/meta/v1.Time \"json:\\\"lastHeartbeatTime,omitempty\\\" protobuf:\\\"bytes,3,opt,name=lastHeartbeatTime\\\"\"; LastTransitionTime k8s.io/apimachinery/pkg/apis/meta/v1.Time \"json:\\\"lastTransitionTime,omitempty\\\" protobuf:\\\"bytes,4,opt,name=lastTransitionTime\\\"\"; Reason string \"json:\\\"reason,omitempty\\\" protobuf:\\\"bytes,5,opt,name=reason\\\"\"; Message string \"json:\\\"message,omitempty\\\" protobuf:\\\"bytes,6,opt,name=message\\\"\"}",
      "type" : "Struct",
      "underlying" : 91
    }, {
      "local-name" : "NodeConditionType",
      "name" : "k8s.io/api/core/v1.NodeConditionType",
      "package" : 8,
      "type" : "Named",
      "underlying" : 27
    }, {
      "local-name" : "ConditionStatus",
      "name" : "k8s.io/api/core/v1.ConditionStatus",
      "package" : 8,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 95,
      "name" : "[]k8s.io/api/core/v1.NodeAddress",
      "type" : "Slice",
      "underlying" : 94
    }, {
      "local-name" : "NodeAddress",
      "name" : "k8s.io/api/core/v1.NodeAddress",
      "package" : 8,
      "type" : "Named",
      "underlying" : 96
    }, {
      "fields" : [ {
        "name" : "Type",
        "type" : 97
      }, {
        "name" : "Address",
        "type" : 27
      } ],
      "name" : "struct{Type k8s.io/api/core/v1.NodeAddressType \"json:\\\"type\\\" protobuf:\\\"bytes,1,opt,name=type,casttype=NodeAddressType\\\"\"; Address string \"json:\\\"address\\\" protobuf:\\\"bytes,2,opt,name=address\\\"\"}",
      "type" : "Struct",
      "underlying" : 96
    }, {
      "local-name" : "NodeAddressType",
      "name" : "k8s.io/api/core/v1.NodeAddressType",
      "package" : 8,
      "type" : "Named",
      "underlying" : 27
    }, {
      "local-name" : "NodeDaemonEndpoints",
      "name" : "k8s.io/api/core/v1.NodeDaemonEndpoints",
      "package" : 8,
      "type" : "Named",
      "underlying" : 99
    }, {
      "fields" : [ {
        "name" : "KubeletEndpoint",
        "type" : 100
      } ],
      "name" : "struct{KubeletEndpoint k8s.io/api/core/v1.DaemonEndpoint \"json:\\\"kubeletEndpoint,omitempty\\\" protobuf:\\\"bytes,1,opt,name=kubeletEndpoint\\\"\"}",
      "type" : "Struct",
      "underlying" : 99
    }, {
      "local-name" : "DaemonEndpoint",
      "name" : "k8s.io/api/core/v1.DaemonEndpoint",
      "package" : 8,
      "type" : "Named",
      "underlying" : 101
    }, {
      "fields" : [ {
        "name" : "Port",
        "type" : 13
      } ],
      "name" : "struct{Port int32 \"json:\\\"Port\\\" protobuf:\\\"varint,1,opt,name=Port\\\"\"}",
      "type" : "Struct",
      "underlying" : 101
    }, {
      "local-name" : "NodeSystemInfo",
      "name" : "k8s.io/api/core/v1.NodeSystemInfo",
      "package" : 8,
      "type" : "Named",
      "underlying" : 103
    }, {
      "fields" : [ {
        "name" : "MachineID",
        "type" : 27
      }, {
        "name" : "SystemUUID",
        "type" : 27
      }, {
        "name" : "BootID",
        "type" : 27
      }, {
        "name" : "KernelVersion",
        "type" : 27
      }, {
        "name" : "OSImage",
        "type" : 27
      }, {
        "name" : "ContainerRuntimeVersion",
        "type" : 27
      }, {
        "name" : "KubeletVersion",
        "type" : 27
      }, {
        "name" : "KubeProxyVersion",
        "type" : 27
      }, {
        "name" : "OperatingSystem",
        "type" : 27
      }, {
        "name" : "Architecture",
        "type" : 27
      } ],
      "name" : "struct{MachineID string \"json:\\\"machineID\\\" protobuf:\\\"bytes,1,opt,name=machineID\\\"\"; SystemUUID string \"json:\\\"systemUUID\\\" protobuf:\\\"bytes,2,opt,name=systemUUID\\\"\"; BootID string \"json:\\\"bootID\\\" protobuf:\\\"bytes,3,opt,name=bootID\\\"\"; KernelVersion string \"json:\\\"kernelVersion\\\" protobuf:\\\"bytes,4,opt,name=kernelVersion\\\"\"; OSImage string \"json:\\\"osImage\\\" protobuf:\\\"bytes,5,opt,name=osImage\\\"\"; ContainerRuntimeVersion string \"json:\\\"containerRuntimeVersion\\\" protobuf:\\\"bytes,6,opt,name=containerRuntimeVersion\\\"\"; KubeletVersion string \"json:\\\"kubeletVersion\\\" protobuf:\\\"bytes,7,opt,name=kubeletVersion\\\"\"; KubeProxyVersion string \"json:\\\"kubeProxyVersion\\\" protobuf:\\\"bytes,8,opt,name=kubeProxyVersion\\\"\"; OperatingSystem string \"json:\\\"operatingSystem\\\" protobuf:\\\"bytes,9,opt,name=operatingSystem\\\"\"; Architecture string \"json:\\\"architecture\\\" protobuf:\\\"bytes,10,opt,name=architecture\\\"\"}",
      "type" : "Struct",
      "underlying" : 103
    }, {
      "elem" : 105,
      "name" : "[]k8s.io/api/core/v1.ContainerImage",
      "type" : "Slice",
      "underlying" : 104
    }, {
      "local-name" : "ContainerImage",
      "name" : "k8s.io/api/core/v1.ContainerImage",
      "package" : 8,
      "type" : "Named",
      "underlying" : 106
    }, {
      "fields" : [ {
        "name" : "Names",
        "type" : 66
      }, {
        "name" : "SizeBytes",
        "type" : 11
      } ],
      "name" : "struct{Names []string \"json:\\\"names\\\" protobuf:\\\"bytes,1,rep,name=names\\\"\"; SizeBytes int64 \"json:\\\"sizeBytes,omitempty\\\" protobuf:\\\"varint,2,opt,name=sizeBytes\\\"\"}",
      "type" : "Struct",
      "underlying" : 106
    }, {
      "elem" : 108,
      "name" : "[]k8s.io/api/core/v1.UniqueVolumeName",
      "type" : "Slice",
      "underlying" : 107
    }, {
      "local-name" : "UniqueVolumeName",
      "name" : "k8s.io/api/core/v1.UniqueVolumeName",
      "package" : 8,
      "type" : "Named",
      "underlying" : 27
    }, {
      "elem" : 110,
      "name" : "[]k8s.io/api/core/v1.AttachedVolume",
      "type" : "Slice",
      "underlying" : 109
    }, {
      "local-name" : "AttachedVolume",
      "name" : "k8s.io/api/core/v1.AttachedVolume",
      "package" : 8,
      "type" : "Named",
      "underlying" : 111
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 108
      }, {
        "name" : "DevicePath",
        "type" : 27
      } ],
      "name" : "struct{Name k8s.io/api/core/v1.UniqueVolumeName \"json:\\\"name\\\" protobuf:\\\"bytes,1,rep,name=name\\\"\"; DevicePath string \"json:\\\"devicePath\\\" protobuf:\\\"bytes,2,rep,name=devicePath\\\"\"}",
      "type" : "Struct",
      "underlying" : 111
    }, {
      "elem" : 113,
      "name" : "*k8s.io/api/core/v1.NodeConfigStatus",
      "type" : "Pointer",
      "underlying" : 112
    }, {
      "local-name" : "NodeConfigStatus",
      "name" : "k8s.io/api/core/v1.NodeConfigStatus",
      "package" : 8,
      "type" : "Named",
      "underlying" : 114
    }, {
      "fields" : [ {
        "name" : "Assigned",
        "type" : 115
      }, {
        "name" : "Active",
        "type" : 115
      }, {
        "name" : "LastKnownGood",
        "type" : 115
      }, {
        "name" : "Error",
        "type" : 27
      } ],
      "name" : "struct{Assigned *k8s.io/api/core/v1.NodeConfigSource \"json:\\\"assigned,omitempty\\\" protobuf:\\\"bytes,1,opt,name=assigned\\\"\"; Active *k8s.io/api/core/v1.NodeConfigSource \"json:\\\"active,omitempty\\\" protobuf:\\\"bytes,2,opt,name=active\\\"\"; LastKnownGood *k8s.io/api/core/v1.NodeConfigSource \"json:\\\"lastKnownGood,omitempty\\\" protobuf:\\\"bytes,3,opt,name=lastKnownGood\\\"\"; Error string \"json:\\\"error,omitempty\\\" protobuf:\\\"bytes,4,opt,name=error\\\"\"}",
      "type" : "Struct",
      "underlying" : 114
    }, {
      "elem" : 116,
      "name" : "*k8s.io/api/core/v1.NodeConfigSource",
      "type" : "Pointer",
      "underlying" : 115
    }, {
      "local-name" : "NodeConfigSource",
      "name" : "k8s.io/api/core/v1.NodeConfigSource",
      "package" : 8,
      "type" : "Named",
      "underlying" : 117
    }, {
      "fields" : [ {
        "name" : "ConfigMap",
        "type" : 118
      } ],
      "name" : "struct{ConfigMap *k8s.io/api/core/v1.ConfigMapNodeConfigSource \"json:\\\"configMap,omitempty\\\" protobuf:\\\"bytes,2,opt,name=configMap\\\"\"}",
      "type" : "Struct",
      "underlying" : 117
    }, {
      "elem" : 119,
      "name" : "*k8s.io/api/core/v1.ConfigMapNodeConfigSource",
      "type" : "Pointer",
      "underlying" : 118
    }, {
      "local-name" : "ConfigMapNodeConfigSource",
      "name" : "k8s.io/api/core/v1.ConfigMapNodeConfigSource",
      "package" : 8,
      "type" : "Named",
      "underlying" : 120
    }, {
      "fields" : [ {
        "name" : "Namespace",
        "type" : 27
      }, {
        "name" : "Name",
        "type" : 27
      }, {
        "name" : "UID",
        "type" : 81
      }, {
        "name" : "ResourceVersion",
        "type" : 27
      }, {
        "name" : "KubeletConfigKey",
        "type" : 27
      } ],
      "name" : "struct{Namespace string \"json:\\\"namespace\\\" protobuf:\\\"bytes,1,opt,name=namespace\\\"\"; Name string \"json:\\\"name\\\" protobuf:\\\"bytes,2,opt,name=name\\\"\"; UID k8s.io/apimachinery/pkg/types.UID \"json:\\\"uid,omitempty\\\" protobuf:\\\"bytes,3,opt,name=uid\\\"\"; ResourceVersion string \"json:\\\"resourceVersion,omitempty\\\" protobuf:\\\"bytes,4,opt,name=resourceVersion\\\"\"; KubeletConfigKey string \"json:\\\"kubeletConfigKey\\\" protobuf:\\\"bytes,5,opt,name=kubeletConfigKey\\\"\"}",
      "type" : "Struct",
      "underlying" : 120
    }, {
      "local-name" : "Scope",
      "name" : "k8s.io/apimachinery/pkg/conversion.Scope",
      "package" : 9,
      "type" : "Named",
      "underlying" : 122
    }, {
      "methods" : [ {
        "name" : "Convert",
        "type" : 123
      }, {
        "name" : "DestTag",
        "type" : 133
      }, {
        "name" : "Flags",
        "type" : 136
      }, {
        "name" : "Meta",
        "type" : 138
      }, {
        "name" : "SrcTag",
        "type" : 133
      } ],
      "name" : "interface{Convert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DestTag() reflect.StructTag; Flags() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags; Meta() *k8s.io/apimachinery/pkg/conversion.Meta; SrcTag() reflect.StructTag}",
      "type" : "Interface",
      "underlying" : 122
    }, {
      "name" : "func(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error",
      "params" : 124,
      "recv" : 1,
      "results" : 127,
      "type" : "Signature",
      "underlying" : 123,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 125
      }, {
        "name" : "dest",
        "type" : 125
      }, {
        "name" : "flags",
        "type" : 126
      } ],
      "name" : "(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 124
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 125
    }, {
      "local-name" : "FieldMatchingFlags",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "package" : 9,
      "type" : "Named",
      "underlying" : 47
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 128
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 127
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 129
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 130
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 129
    }, {
      "name" : "func() string",
      "params" : 131,
      "recv" : 0,
      "results" : 132,
      "type" : "Signature",
      "underlying" : 130,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 131
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 27
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 132
    }, {
      "name" : "func() reflect.StructTag",
      "params" : 131,
      "recv" : 2,
      "results" : 134,
      "type" : "Signature",
      "underlying" : 133,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 135
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 134
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 10,
      "type" : "Named",
      "underlying" : 27
    }, {
      "name" : "func() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "params" : 131,
      "recv" : 3,
      "results" : 137,
      "type" : "Signature",
      "underlying" : 136,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 126
      } ],
      "name" : "(k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 137
    }, {
      "name" : "func() *k8s.io/apimachinery/pkg/conversion.Meta",
      "params" : 131,
      "recv" : 4,
      "results" : 139,
      "type" : "Signature",
      "underlying" : 138,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 140
      } ],
      "name" : "(*k8s.io/apimachinery/pkg/conversion.Meta)",
      "type" : "Tuple",
      "underlying" : 139
    }, {
      "elem" : 141,
      "name" : "*k8s.io/apimachinery/pkg/conversion.Meta",
      "type" : "Pointer",
      "underlying" : 140
    }, {
      "local-name" : "Meta",
      "name" : "k8s.io/apimachinery/pkg/conversion.Meta",
      "package" : 9,
      "type" : "Named",
      "underlying" : 142
    }, {
      "fields" : [ {
        "name" : "KeyNameMapping",
        "type" : 143
      }, {
        "name" : "Context",
        "type" : 125
      } ],
      "name" : "struct{KeyNameMapping k8s.io/apimachinery/pkg/conversion.FieldMappingFunc; Context interface{}}",
      "type" : "Struct",
      "underlying" : 142
    }, {
      "local-name" : "FieldMappingFunc",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMappingFunc",
      "package" : 9,
      "type" : "Named",
      "underlying" : 144
    }, {
      "name" : "func(key string, sourceTag reflect.StructTag, destTag reflect.StructTag) (source string, dest string)",
      "params" : 145,
      "recv" : -1,
      "results" : 146,
      "type" : "Signature",
      "underlying" : 144,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 27
      }, {
        "name" : "sourceTag",
        "type" : 135
      }, {
        "name" : "destTag",
        "type" : 135
      } ],
      "name" : "(key string, sourceTag reflect.StructTag, destTag reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 145
    }, {
      "fields" : [ {
        "name" : "source",
        "type" : 27
      }, {
        "name" : "dest",
        "type" : 27
      } ],
      "name" : "(source string, dest string)",
      "type" : "Tuple",
      "underlying" : 146
    }, {
      "elem" : 85,
      "name" : "*k8s.io/api/core/v1.ResourceList",
      "type" : "Pointer",
      "underlying" : 147
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 11,
      "type" : "Basic",
      "underlying" : 148
    }, {
      "elem" : 5,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ResourceList",
      "type" : "Pointer",
      "underlying" : 149
    }, {
      "elem" : 89,
      "name" : "*[]k8s.io/api/core/v1.NodeCondition",
      "type" : "Pointer",
      "underlying" : 150
    }, {
      "elem" : 31,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.NodeCondition",
      "type" : "Pointer",
      "underlying" : 151
    }, {
      "elem" : 94,
      "name" : "*[]k8s.io/api/core/v1.NodeAddress",
      "type" : "Pointer",
      "underlying" : 152
    }, {
      "elem" : 53,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.NodeAddress",
      "type" : "Pointer",
      "underlying" : 153
    }, {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.NodeDaemonEndpoints, out *k8s.io/api/core/v1.NodeDaemonEndpoints, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 155,
      "recv" : -1,
      "results" : 127,
      "type" : "Signature",
      "underlying" : 154,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 156
      }, {
        "name" : "out",
        "type" : 157
      }, {
        "name" : "s",
        "type" : 121
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.NodeDaemonEndpoints, out *k8s.io/api/core/v1.NodeDaemonEndpoints, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 155
    }, {
      "elem" : 57,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.NodeDaemonEndpoints",
      "type" : "Pointer",
      "underlying" : 156
    }, {
      "elem" : 98,
      "name" : "*k8s.io/api/core/v1.NodeDaemonEndpoints",
      "type" : "Pointer",
      "underlying" : 157
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 158
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 159
    }, {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.NodeSystemInfo, out *k8s.io/api/core/v1.NodeSystemInfo, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 161,
      "recv" : -1,
      "results" : 127,
      "type" : "Signature",
      "underlying" : 160,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 162
      }, {
        "name" : "out",
        "type" : 163
      }, {
        "name" : "s",
        "type" : 121
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.NodeSystemInfo, out *k8s.io/api/core/v1.NodeSystemInfo, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 161
    }, {
      "elem" : 61,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.NodeSystemInfo",
      "type" : "Pointer",
      "underlying" : 162
    }, {
      "elem" : 102,
      "name" : "*k8s.io/api/core/v1.NodeSystemInfo",
      "type" : "Pointer",
      "underlying" : 163
    }, {
      "elem" : 104,
      "name" : "*[]k8s.io/api/core/v1.ContainerImage",
      "type" : "Pointer",
      "underlying" : 164
    }, {
      "elem" : 63,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.ContainerImage",
      "type" : "Pointer",
      "underlying" : 165
    }, {
      "elem" : 107,
      "name" : "*[]k8s.io/api/core/v1.UniqueVolumeName",
      "type" : "Pointer",
      "underlying" : 166
    }, {
      "elem" : 67,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.UniqueVolumeName",
      "type" : "Pointer",
      "underlying" : 167
    }, {
      "elem" : 109,
      "name" : "*[]k8s.io/api/core/v1.AttachedVolume",
      "type" : "Pointer",
      "underlying" : 168
    }, {
      "elem" : 69,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.AttachedVolume",
      "type" : "Pointer",
      "underlying" : 169
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 128,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 9,
      "type" : 121,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 9,
      "type" : 121,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 9,
      "type" : 121,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 9,
      "type" : 121,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 82,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 121,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 128,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Capacity",
      "package" : 8,
      "type" : 85,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Capacity",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Allocatable",
      "package" : 8,
      "type" : 85,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Allocatable",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Phase",
      "package" : 8,
      "type" : 88,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Phase",
      "package" : 1,
      "type" : 30,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Conditions",
      "package" : 8,
      "type" : 89,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Conditions",
      "package" : 1,
      "type" : 31,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Addresses",
      "package" : 8,
      "type" : 94,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Addresses",
      "package" : 1,
      "type" : 53,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "DaemonEndpoints",
      "package" : 1,
      "type" : 57,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "DaemonEndpoints",
      "package" : 8,
      "type" : 98,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 128,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "NodeInfo",
      "package" : 1,
      "type" : 61,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "NodeInfo",
      "package" : 8,
      "type" : 102,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 128,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Images",
      "package" : 8,
      "type" : 104,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Images",
      "package" : 1,
      "type" : 63,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "VolumesInUse",
      "package" : 8,
      "type" : 107,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "VolumesInUse",
      "package" : 1,
      "type" : 67,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "VolumesAttached",
      "package" : 8,
      "type" : 109,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "VolumesAttached",
      "package" : 1,
      "type" : 69,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Config",
      "package" : 8,
      "type" : 112,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Config",
      "package" : 1,
      "type" : 72,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}