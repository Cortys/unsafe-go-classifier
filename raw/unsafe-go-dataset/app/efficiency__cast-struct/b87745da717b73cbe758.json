{
  "usage" : {
    "file" : "zz_generated.conversion.go",
    "label1" : "cast-struct",
    "label2" : "efficiency",
    "line" : "358",
    "module" : "k8s.io/kubernetes",
    "pkg" : "k8s.io/kubernetes/pkg/apis/admissionregistration/v1beta1",
    "project" : "kubernetes/kubernetes",
    "snippet" : "out.Rules = *(*[]admissionregistration.RuleWithOperations)(unsafe.Pointer(&in.Rules))",
    "version" : "project"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 4 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 354,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Name",
            "variable" : 9
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 40,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Name",
            "variable" : 10
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 354,
      "code" : "out.Name = in.Name",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5, 6 ],
      "in-vars" : [ 13, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 13, 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 355,
      "ast" : {
        "condition" : {
          "go-type" : 94,
          "kind" : "expression",
          "left" : {
            "go-type" : 71,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 13
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 95,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 357,
      "code" : "if err := Convert_v1beta1_WebhookClientConfig_To_admissionregistration_WebhookClientConfig(&in.ClientConfig, &out.ClientConfig, s); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 13 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 13, 6, 5 ],
      "decl-vars" : [ 13 ],
      "line-start" : 355,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 92,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ClientConfig",
                "variable" : 11
              },
              "go-type" : 6,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 93,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ClientConfig",
                "variable" : 12
              },
              "go-type" : 43,
              "kind" : "expression",
              "target" : {
                "go-type" : 40,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "out",
                  "variable" : 6
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 63,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "s",
              "variable" : 7
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 90,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Convert_v1beta1_WebhookClientConfig_To_admissionregistration_WebhookClientConfig"
            }
          },
          "go-type" : 71,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 355,
      "code" : "err := Convert_v1beta1_WebhookClientConfig_To_admissionregistration_WebhookClientConfig(&in.ClientConfig, &out.ClientConfig, s)",
      "entry" : false,
      "use-vars" : [ 7, 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 13 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 356,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 71,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 13
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 356,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 13 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 7 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 358,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Rules",
            "variable" : 14
          },
          "go-type" : 48,
          "kind" : "expression",
          "target" : {
            "go-type" : 40,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 48,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 49,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 3,
                    "value" : "admissionregistration"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 49,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "RuleWithOperations"
                  }
                },
                "go-type" : 48,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 96,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 96,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 97,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 6,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 97,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 97,
              "kind" : "expression",
              "target" : {
                "go-type" : 98,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Rules",
                    "variable" : 15
                  },
                  "go-type" : 16,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 358,
      "code" : "out.Rules = *(*[]admissionregistration.RuleWithOperations)(unsafe.Pointer(&in.Rules))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 8 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 359,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "FailurePolicy",
            "variable" : 16
          },
          "go-type" : 57,
          "kind" : "expression",
          "target" : {
            "go-type" : 40,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 58,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "admissionregistration"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 58,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "FailurePolicyType"
              }
            },
            "go-type" : 57,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 57,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 97,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 97,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 97,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "FailurePolicy",
                "variable" : 17
              },
              "go-type" : 26,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 359,
      "code" : "out.FailurePolicy = (*admissionregistration.FailurePolicyType)(unsafe.Pointer(in.FailurePolicy))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 9 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 360,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "MatchPolicy",
            "variable" : 18
          },
          "go-type" : 59,
          "kind" : "expression",
          "target" : {
            "go-type" : 40,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 60,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "admissionregistration"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 60,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "MatchPolicyType"
              }
            },
            "go-type" : 59,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 59,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 97,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 97,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 97,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "MatchPolicy",
                "variable" : 19
              },
              "go-type" : 28,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 360,
      "code" : "out.MatchPolicy = (*admissionregistration.MatchPolicyType)(unsafe.Pointer(in.MatchPolicy))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 10 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 361,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "NamespaceSelector",
            "variable" : 20
          },
          "go-type" : 30,
          "kind" : "expression",
          "target" : {
            "go-type" : 40,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 31,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 2,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 31,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "LabelSelector"
              }
            },
            "go-type" : 30,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 30,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 97,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 97,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 97,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "NamespaceSelector",
                "variable" : 21
              },
              "go-type" : 30,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 361,
      "code" : "out.NamespaceSelector = (*v1.LabelSelector)(unsafe.Pointer(in.NamespaceSelector))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 11 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 362,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ObjectSelector",
            "variable" : 22
          },
          "go-type" : 30,
          "kind" : "expression",
          "target" : {
            "go-type" : 40,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 31,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 2,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 31,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "LabelSelector"
              }
            },
            "go-type" : 30,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 30,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 97,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 97,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 97,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ObjectSelector",
                "variable" : 23
              },
              "go-type" : 30,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 362,
      "code" : "out.ObjectSelector = (*v1.LabelSelector)(unsafe.Pointer(in.ObjectSelector))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 12 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 363,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "SideEffects",
            "variable" : 24
          },
          "go-type" : 61,
          "kind" : "expression",
          "target" : {
            "go-type" : 40,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 62,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "admissionregistration"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 62,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "SideEffectClass"
              }
            },
            "go-type" : 61,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 61,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 97,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 97,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 97,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "SideEffects",
                "variable" : 25
              },
              "go-type" : 38,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 363,
      "code" : "out.SideEffects = (*admissionregistration.SideEffectClass)(unsafe.Pointer(in.SideEffects))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 13 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 364,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "TimeoutSeconds",
            "variable" : 26
          },
          "go-type" : 12,
          "kind" : "expression",
          "target" : {
            "go-type" : 40,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 13,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 13,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "int32"
              }
            },
            "go-type" : 12,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 12,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 97,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 97,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 97,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "TimeoutSeconds",
                "variable" : 27
              },
              "go-type" : 12,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 364,
      "code" : "out.TimeoutSeconds = (*int32)(unsafe.Pointer(in.TimeoutSeconds))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 14 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 365,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "AdmissionReviewVersions",
            "variable" : 28
          },
          "go-type" : 23,
          "kind" : "expression",
          "target" : {
            "go-type" : 40,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 23,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 5,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 5,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                },
                "go-type" : 23,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 99,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 99,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 97,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 6,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 97,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 97,
              "kind" : "expression",
              "target" : {
                "go-type" : 99,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "AdmissionReviewVersions",
                    "variable" : 29
                  },
                  "go-type" : 23,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 365,
      "code" : "out.AdmissionReviewVersions = *(*[]string)(unsafe.Pointer(&in.AdmissionReviewVersions))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 366,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 95,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 366,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func autoConvert_v1beta1_ValidatingWebhook_To_admissionregistration_ValidatingWebhook(in *v1beta1.ValidatingWebhook, out *admissionregistration.ValidatingWebhook, s conversion.Scope) error {\n\tout.Name = in.Name\n\tif err := Convert_v1beta1_WebhookClientConfig_To_admissionregistration_WebhookClientConfig(&in.ClientConfig, &out.ClientConfig, s); err != nil {\n\t\treturn err\n\t}\n\tout.Rules = *(*[]admissionregistration.RuleWithOperations)(unsafe.Pointer(&in.Rules))\n\tout.FailurePolicy = (*admissionregistration.FailurePolicyType)(unsafe.Pointer(in.FailurePolicy))\n\tout.MatchPolicy = (*admissionregistration.MatchPolicyType)(unsafe.Pointer(in.MatchPolicy))\n\tout.NamespaceSelector = (*v1.LabelSelector)(unsafe.Pointer(in.NamespaceSelector))\n\tout.ObjectSelector = (*v1.LabelSelector)(unsafe.Pointer(in.ObjectSelector))\n\tout.SideEffects = (*admissionregistration.SideEffectClass)(unsafe.Pointer(in.SideEffects))\n\tout.TimeoutSeconds = (*int32)(unsafe.Pointer(in.TimeoutSeconds))\n\tout.AdmissionReviewVersions = *(*[]string)(unsafe.Pointer(&in.AdmissionReviewVersions))\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "autoConvert_v1beta1_ValidatingWebhook_To_admissionregistration_ValidatingWebhook",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "Convert_v1beta1_WebhookClientConfig_To_admissionregistration_WebhookClientConfig",
      "package" : 0,
      "type" : 90,
      "exported" : true
    } ],
    "line-end" : 367,
    "line-start" : 353,
    "names" : [ "autoConvert_v1beta1_ValidatingWebhook_To_admissionregistration_ValidatingWebhook" ],
    "package" : 0,
    "packages" : [ {
      "name" : "v1beta1",
      "path" : "k8s.io/kubernetes/pkg/apis/admissionregistration/v1beta1"
    }, {
      "name" : "v1beta1",
      "path" : "k8s.io/api/admissionregistration/v1beta1"
    }, {
      "name" : "v1",
      "path" : "k8s.io/apimachinery/pkg/apis/meta/v1"
    }, {
      "name" : "admissionregistration",
      "path" : "k8s.io/kubernetes/pkg/apis/admissionregistration"
    }, {
      "name" : "conversion",
      "path" : "k8s.io/apimachinery/pkg/conversion"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 5, 6, 7 ],
    "receivers" : [ ],
    "results" : [ 8 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(in *k8s.io/api/admissionregistration/v1beta1.ValidatingWebhook, out *k8s.io/kubernetes/pkg/apis/admissionregistration.ValidatingWebhook, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 1,
      "recv" : -1,
      "results" : 70,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 2
      }, {
        "name" : "out",
        "type" : 40
      }, {
        "name" : "s",
        "type" : 63
      } ],
      "name" : "(in *k8s.io/api/admissionregistration/v1beta1.ValidatingWebhook, out *k8s.io/kubernetes/pkg/apis/admissionregistration.ValidatingWebhook, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*k8s.io/api/admissionregistration/v1beta1.ValidatingWebhook",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "ValidatingWebhook",
      "name" : "k8s.io/api/admissionregistration/v1beta1.ValidatingWebhook",
      "package" : 1,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "ClientConfig",
        "type" : 6
      }, {
        "name" : "Rules",
        "type" : 16
      }, {
        "name" : "FailurePolicy",
        "type" : 26
      }, {
        "name" : "MatchPolicy",
        "type" : 28
      }, {
        "name" : "NamespaceSelector",
        "type" : 30
      }, {
        "name" : "ObjectSelector",
        "type" : 30
      }, {
        "name" : "SideEffects",
        "type" : 38
      }, {
        "name" : "TimeoutSeconds",
        "type" : 12
      }, {
        "name" : "AdmissionReviewVersions",
        "type" : 23
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; ClientConfig k8s.io/api/admissionregistration/v1beta1.WebhookClientConfig \"json:\\\"clientConfig\\\" protobuf:\\\"bytes,2,opt,name=clientConfig\\\"\"; Rules []k8s.io/api/admissionregistration/v1beta1.RuleWithOperations \"json:\\\"rules,omitempty\\\" protobuf:\\\"bytes,3,rep,name=rules\\\"\"; FailurePolicy *k8s.io/api/admissionregistration/v1beta1.FailurePolicyType \"json:\\\"failurePolicy,omitempty\\\" protobuf:\\\"bytes,4,opt,name=failurePolicy,casttype=FailurePolicyType\\\"\"; MatchPolicy *k8s.io/api/admissionregistration/v1beta1.MatchPolicyType \"json:\\\"matchPolicy,omitempty\\\" protobuf:\\\"bytes,9,opt,name=matchPolicy,casttype=MatchPolicyType\\\"\"; NamespaceSelector *k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector \"json:\\\"namespaceSelector,omitempty\\\" protobuf:\\\"bytes,5,opt,name=namespaceSelector\\\"\"; ObjectSelector *k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector \"json:\\\"objectSelector,omitempty\\\" protobuf:\\\"bytes,10,opt,name=objectSelector\\\"\"; SideEffects *k8s.io/api/admissionregistration/v1beta1.SideEffectClass \"json:\\\"sideEffects,omitempty\\\" protobuf:\\\"bytes,6,opt,name=sideEffects,casttype=SideEffectClass\\\"\"; TimeoutSeconds *int32 \"json:\\\"timeoutSeconds,omitempty\\\" protobuf:\\\"varint,7,opt,name=timeoutSeconds\\\"\"; AdmissionReviewVersions []string \"json:\\\"admissionReviewVersions,omitempty\\\" protobuf:\\\"bytes,8,rep,name=admissionReviewVersions\\\"\"}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 5
    }, {
      "local-name" : "WebhookClientConfig",
      "name" : "k8s.io/api/admissionregistration/v1beta1.WebhookClientConfig",
      "package" : 1,
      "type" : "Named",
      "underlying" : 7
    }, {
      "fields" : [ {
        "name" : "URL",
        "type" : 8
      }, {
        "name" : "Service",
        "type" : 9
      }, {
        "name" : "CABundle",
        "type" : 14
      } ],
      "name" : "struct{URL *string \"json:\\\"url,omitempty\\\" protobuf:\\\"bytes,3,opt,name=url\\\"\"; Service *k8s.io/api/admissionregistration/v1beta1.ServiceReference \"json:\\\"service,omitempty\\\" protobuf:\\\"bytes,1,opt,name=service\\\"\"; CABundle []byte \"json:\\\"caBundle,omitempty\\\" protobuf:\\\"bytes,2,opt,name=caBundle\\\"\"}",
      "type" : "Struct",
      "underlying" : 7
    }, {
      "elem" : 5,
      "name" : "*string",
      "type" : "Pointer",
      "underlying" : 8
    }, {
      "elem" : 10,
      "name" : "*k8s.io/api/admissionregistration/v1beta1.ServiceReference",
      "type" : "Pointer",
      "underlying" : 9
    }, {
      "local-name" : "ServiceReference",
      "name" : "k8s.io/api/admissionregistration/v1beta1.ServiceReference",
      "package" : 1,
      "type" : "Named",
      "underlying" : 11
    }, {
      "fields" : [ {
        "name" : "Namespace",
        "type" : 5
      }, {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "Port",
        "type" : 12
      } ],
      "name" : "struct{Namespace string \"json:\\\"namespace\\\" protobuf:\\\"bytes,1,opt,name=namespace\\\"\"; Name string \"json:\\\"name\\\" protobuf:\\\"bytes,2,opt,name=name\\\"\"; Path *string \"json:\\\"path,omitempty\\\" protobuf:\\\"bytes,3,opt,name=path\\\"\"; Port *int32 \"json:\\\"port,omitempty\\\" protobuf:\\\"varint,4,opt,name=port\\\"\"}",
      "type" : "Struct",
      "underlying" : 11
    }, {
      "elem" : 13,
      "name" : "*int32",
      "type" : "Pointer",
      "underlying" : 12
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "elem" : 15,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 14
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 15
    }, {
      "elem" : 17,
      "name" : "[]k8s.io/api/admissionregistration/v1beta1.RuleWithOperations",
      "type" : "Slice",
      "underlying" : 16
    }, {
      "local-name" : "RuleWithOperations",
      "name" : "k8s.io/api/admissionregistration/v1beta1.RuleWithOperations",
      "package" : 1,
      "type" : "Named",
      "underlying" : 18
    }, {
      "fields" : [ {
        "name" : "Operations",
        "type" : 19
      }, {
        "name" : "Rule",
        "type" : 21
      } ],
      "name" : "struct{Operations []k8s.io/api/admissionregistration/v1beta1.OperationType \"json:\\\"operations,omitempty\\\" protobuf:\\\"bytes,1,rep,name=operations,casttype=OperationType\\\"\"; k8s.io/api/admissionregistration/v1beta1.Rule \"json:\\\",inline\\\" protobuf:\\\"bytes,2,opt,name=rule\\\"\"}",
      "type" : "Struct",
      "underlying" : 18
    }, {
      "elem" : 20,
      "name" : "[]k8s.io/api/admissionregistration/v1beta1.OperationType",
      "type" : "Slice",
      "underlying" : 19
    }, {
      "local-name" : "OperationType",
      "name" : "k8s.io/api/admissionregistration/v1beta1.OperationType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "local-name" : "Rule",
      "name" : "k8s.io/api/admissionregistration/v1beta1.Rule",
      "package" : 1,
      "type" : "Named",
      "underlying" : 22
    }, {
      "fields" : [ {
        "name" : "APIGroups",
        "type" : 23
      }, {
        "name" : "APIVersions",
        "type" : 23
      }, {
        "name" : "Resources",
        "type" : 23
      }, {
        "name" : "Scope",
        "type" : 24
      } ],
      "name" : "struct{APIGroups []string \"json:\\\"apiGroups,omitempty\\\" protobuf:\\\"bytes,1,rep,name=apiGroups\\\"\"; APIVersions []string \"json:\\\"apiVersions,omitempty\\\" protobuf:\\\"bytes,2,rep,name=apiVersions\\\"\"; Resources []string \"json:\\\"resources,omitempty\\\" protobuf:\\\"bytes,3,rep,name=resources\\\"\"; Scope *k8s.io/api/admissionregistration/v1beta1.ScopeType \"json:\\\"scope,omitempty\\\" protobuf:\\\"bytes,4,rep,name=scope\\\"\"}",
      "type" : "Struct",
      "underlying" : 22
    }, {
      "elem" : 5,
      "name" : "[]string",
      "type" : "Slice",
      "underlying" : 23
    }, {
      "elem" : 25,
      "name" : "*k8s.io/api/admissionregistration/v1beta1.ScopeType",
      "type" : "Pointer",
      "underlying" : 24
    }, {
      "local-name" : "ScopeType",
      "name" : "k8s.io/api/admissionregistration/v1beta1.ScopeType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 27,
      "name" : "*k8s.io/api/admissionregistration/v1beta1.FailurePolicyType",
      "type" : "Pointer",
      "underlying" : 26
    }, {
      "local-name" : "FailurePolicyType",
      "name" : "k8s.io/api/admissionregistration/v1beta1.FailurePolicyType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 29,
      "name" : "*k8s.io/api/admissionregistration/v1beta1.MatchPolicyType",
      "type" : "Pointer",
      "underlying" : 28
    }, {
      "local-name" : "MatchPolicyType",
      "name" : "k8s.io/api/admissionregistration/v1beta1.MatchPolicyType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 31,
      "name" : "*k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector",
      "type" : "Pointer",
      "underlying" : 30
    }, {
      "local-name" : "LabelSelector",
      "name" : "k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector",
      "package" : 2,
      "type" : "Named",
      "underlying" : 32
    }, {
      "fields" : [ {
        "name" : "MatchLabels",
        "type" : 33
      }, {
        "name" : "MatchExpressions",
        "type" : 34
      } ],
      "name" : "struct{MatchLabels map[string]string \"json:\\\"matchLabels,omitempty\\\" protobuf:\\\"bytes,1,rep,name=matchLabels\\\"\"; MatchExpressions []k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelectorRequirement \"json:\\\"matchExpressions,omitempty\\\" protobuf:\\\"bytes,2,rep,name=matchExpressions\\\"\"}",
      "type" : "Struct",
      "underlying" : 32
    }, {
      "elem" : 5,
      "key" : 5,
      "name" : "map[string]string",
      "type" : "Map",
      "underlying" : 33
    }, {
      "elem" : 35,
      "name" : "[]k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelectorRequirement",
      "type" : "Slice",
      "underlying" : 34
    }, {
      "local-name" : "LabelSelectorRequirement",
      "name" : "k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelectorRequirement",
      "package" : 2,
      "type" : "Named",
      "underlying" : 36
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 5
      }, {
        "name" : "Operator",
        "type" : 37
      }, {
        "name" : "Values",
        "type" : 23
      } ],
      "name" : "struct{Key string \"json:\\\"key\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"key\\\" protobuf:\\\"bytes,1,opt,name=key\\\"\"; Operator k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelectorOperator \"json:\\\"operator\\\" protobuf:\\\"bytes,2,opt,name=operator,casttype=LabelSelectorOperator\\\"\"; Values []string \"json:\\\"values,omitempty\\\" protobuf:\\\"bytes,3,rep,name=values\\\"\"}",
      "type" : "Struct",
      "underlying" : 36
    }, {
      "local-name" : "LabelSelectorOperator",
      "name" : "k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelectorOperator",
      "package" : 2,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 39,
      "name" : "*k8s.io/api/admissionregistration/v1beta1.SideEffectClass",
      "type" : "Pointer",
      "underlying" : 38
    }, {
      "local-name" : "SideEffectClass",
      "name" : "k8s.io/api/admissionregistration/v1beta1.SideEffectClass",
      "package" : 1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 41,
      "name" : "*k8s.io/kubernetes/pkg/apis/admissionregistration.ValidatingWebhook",
      "type" : "Pointer",
      "underlying" : 40
    }, {
      "local-name" : "ValidatingWebhook",
      "name" : "k8s.io/kubernetes/pkg/apis/admissionregistration.ValidatingWebhook",
      "package" : 3,
      "type" : "Named",
      "underlying" : 42
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "ClientConfig",
        "type" : 43
      }, {
        "name" : "Rules",
        "type" : 48
      }, {
        "name" : "FailurePolicy",
        "type" : 57
      }, {
        "name" : "MatchPolicy",
        "type" : 59
      }, {
        "name" : "NamespaceSelector",
        "type" : 30
      }, {
        "name" : "ObjectSelector",
        "type" : 30
      }, {
        "name" : "SideEffects",
        "type" : 61
      }, {
        "name" : "TimeoutSeconds",
        "type" : 12
      }, {
        "name" : "AdmissionReviewVersions",
        "type" : 23
      } ],
      "name" : "struct{Name string; ClientConfig k8s.io/kubernetes/pkg/apis/admissionregistration.WebhookClientConfig; Rules []k8s.io/kubernetes/pkg/apis/admissionregistration.RuleWithOperations; FailurePolicy *k8s.io/kubernetes/pkg/apis/admissionregistration.FailurePolicyType; MatchPolicy *k8s.io/kubernetes/pkg/apis/admissionregistration.MatchPolicyType; NamespaceSelector *k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector; ObjectSelector *k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector; SideEffects *k8s.io/kubernetes/pkg/apis/admissionregistration.SideEffectClass; TimeoutSeconds *int32; AdmissionReviewVersions []string}",
      "type" : "Struct",
      "underlying" : 42
    }, {
      "local-name" : "WebhookClientConfig",
      "name" : "k8s.io/kubernetes/pkg/apis/admissionregistration.WebhookClientConfig",
      "package" : 3,
      "type" : "Named",
      "underlying" : 44
    }, {
      "fields" : [ {
        "name" : "URL",
        "type" : 8
      }, {
        "name" : "Service",
        "type" : 45
      }, {
        "name" : "CABundle",
        "type" : 14
      } ],
      "name" : "struct{URL *string; Service *k8s.io/kubernetes/pkg/apis/admissionregistration.ServiceReference; CABundle []byte}",
      "type" : "Struct",
      "underlying" : 44
    }, {
      "elem" : 46,
      "name" : "*k8s.io/kubernetes/pkg/apis/admissionregistration.ServiceReference",
      "type" : "Pointer",
      "underlying" : 45
    }, {
      "local-name" : "ServiceReference",
      "name" : "k8s.io/kubernetes/pkg/apis/admissionregistration.ServiceReference",
      "package" : 3,
      "type" : "Named",
      "underlying" : 47
    }, {
      "fields" : [ {
        "name" : "Namespace",
        "type" : 5
      }, {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "Path",
        "type" : 8
      }, {
        "name" : "Port",
        "type" : 13
      } ],
      "name" : "struct{Namespace string; Name string; Path *string; Port int32}",
      "type" : "Struct",
      "underlying" : 47
    }, {
      "elem" : 49,
      "name" : "[]k8s.io/kubernetes/pkg/apis/admissionregistration.RuleWithOperations",
      "type" : "Slice",
      "underlying" : 48
    }, {
      "local-name" : "RuleWithOperations",
      "name" : "k8s.io/kubernetes/pkg/apis/admissionregistration.RuleWithOperations",
      "package" : 3,
      "type" : "Named",
      "underlying" : 50
    }, {
      "fields" : [ {
        "name" : "Operations",
        "type" : 51
      }, {
        "name" : "Rule",
        "type" : 53
      } ],
      "name" : "struct{Operations []k8s.io/kubernetes/pkg/apis/admissionregistration.OperationType; k8s.io/kubernetes/pkg/apis/admissionregistration.Rule}",
      "type" : "Struct",
      "underlying" : 50
    }, {
      "elem" : 52,
      "name" : "[]k8s.io/kubernetes/pkg/apis/admissionregistration.OperationType",
      "type" : "Slice",
      "underlying" : 51
    }, {
      "local-name" : "OperationType",
      "name" : "k8s.io/kubernetes/pkg/apis/admissionregistration.OperationType",
      "package" : 3,
      "type" : "Named",
      "underlying" : 5
    }, {
      "local-name" : "Rule",
      "name" : "k8s.io/kubernetes/pkg/apis/admissionregistration.Rule",
      "package" : 3,
      "type" : "Named",
      "underlying" : 54
    }, {
      "fields" : [ {
        "name" : "APIGroups",
        "type" : 23
      }, {
        "name" : "APIVersions",
        "type" : 23
      }, {
        "name" : "Resources",
        "type" : 23
      }, {
        "name" : "Scope",
        "type" : 55
      } ],
      "name" : "struct{APIGroups []string; APIVersions []string; Resources []string; Scope *k8s.io/kubernetes/pkg/apis/admissionregistration.ScopeType}",
      "type" : "Struct",
      "underlying" : 54
    }, {
      "elem" : 56,
      "name" : "*k8s.io/kubernetes/pkg/apis/admissionregistration.ScopeType",
      "type" : "Pointer",
      "underlying" : 55
    }, {
      "local-name" : "ScopeType",
      "name" : "k8s.io/kubernetes/pkg/apis/admissionregistration.ScopeType",
      "package" : 3,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 58,
      "name" : "*k8s.io/kubernetes/pkg/apis/admissionregistration.FailurePolicyType",
      "type" : "Pointer",
      "underlying" : 57
    }, {
      "local-name" : "FailurePolicyType",
      "name" : "k8s.io/kubernetes/pkg/apis/admissionregistration.FailurePolicyType",
      "package" : 3,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 60,
      "name" : "*k8s.io/kubernetes/pkg/apis/admissionregistration.MatchPolicyType",
      "type" : "Pointer",
      "underlying" : 59
    }, {
      "local-name" : "MatchPolicyType",
      "name" : "k8s.io/kubernetes/pkg/apis/admissionregistration.MatchPolicyType",
      "package" : 3,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 62,
      "name" : "*k8s.io/kubernetes/pkg/apis/admissionregistration.SideEffectClass",
      "type" : "Pointer",
      "underlying" : 61
    }, {
      "local-name" : "SideEffectClass",
      "name" : "k8s.io/kubernetes/pkg/apis/admissionregistration.SideEffectClass",
      "package" : 3,
      "type" : "Named",
      "underlying" : 5
    }, {
      "local-name" : "Scope",
      "name" : "k8s.io/apimachinery/pkg/conversion.Scope",
      "package" : 4,
      "type" : "Named",
      "underlying" : 64
    }, {
      "methods" : [ {
        "name" : "Convert",
        "type" : 65
      }, {
        "name" : "DestTag",
        "type" : 76
      }, {
        "name" : "Flags",
        "type" : 79
      }, {
        "name" : "Meta",
        "type" : 81
      }, {
        "name" : "SrcTag",
        "type" : 76
      } ],
      "name" : "interface{Convert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DestTag() reflect.StructTag; Flags() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags; Meta() *k8s.io/apimachinery/pkg/conversion.Meta; SrcTag() reflect.StructTag}",
      "type" : "Interface",
      "underlying" : 64
    }, {
      "name" : "func(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error",
      "params" : 66,
      "recv" : 1,
      "results" : 70,
      "type" : "Signature",
      "underlying" : 65,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 67
      }, {
        "name" : "dest",
        "type" : 67
      }, {
        "name" : "flags",
        "type" : 68
      } ],
      "name" : "(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 66
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 67
    }, {
      "local-name" : "FieldMatchingFlags",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "package" : 4,
      "type" : "Named",
      "underlying" : 69
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 69
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 71
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 70
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 72
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 73
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 72
    }, {
      "name" : "func() string",
      "params" : 74,
      "recv" : 0,
      "results" : 75,
      "type" : "Signature",
      "underlying" : 73,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 74
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 5
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 75
    }, {
      "name" : "func() reflect.StructTag",
      "params" : 74,
      "recv" : 2,
      "results" : 77,
      "type" : "Signature",
      "underlying" : 76,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 78
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 77
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 5,
      "type" : "Named",
      "underlying" : 5
    }, {
      "name" : "func() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "params" : 74,
      "recv" : 3,
      "results" : 80,
      "type" : "Signature",
      "underlying" : 79,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 68
      } ],
      "name" : "(k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 80
    }, {
      "name" : "func() *k8s.io/apimachinery/pkg/conversion.Meta",
      "params" : 74,
      "recv" : 4,
      "results" : 82,
      "type" : "Signature",
      "underlying" : 81,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 83
      } ],
      "name" : "(*k8s.io/apimachinery/pkg/conversion.Meta)",
      "type" : "Tuple",
      "underlying" : 82
    }, {
      "elem" : 84,
      "name" : "*k8s.io/apimachinery/pkg/conversion.Meta",
      "type" : "Pointer",
      "underlying" : 83
    }, {
      "local-name" : "Meta",
      "name" : "k8s.io/apimachinery/pkg/conversion.Meta",
      "package" : 4,
      "type" : "Named",
      "underlying" : 85
    }, {
      "fields" : [ {
        "name" : "KeyNameMapping",
        "type" : 86
      }, {
        "name" : "Context",
        "type" : 67
      } ],
      "name" : "struct{KeyNameMapping k8s.io/apimachinery/pkg/conversion.FieldMappingFunc; Context interface{}}",
      "type" : "Struct",
      "underlying" : 85
    }, {
      "local-name" : "FieldMappingFunc",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMappingFunc",
      "package" : 4,
      "type" : "Named",
      "underlying" : 87
    }, {
      "name" : "func(key string, sourceTag reflect.StructTag, destTag reflect.StructTag) (source string, dest string)",
      "params" : 88,
      "recv" : -1,
      "results" : 89,
      "type" : "Signature",
      "underlying" : 87,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 5
      }, {
        "name" : "sourceTag",
        "type" : 78
      }, {
        "name" : "destTag",
        "type" : 78
      } ],
      "name" : "(key string, sourceTag reflect.StructTag, destTag reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 88
    }, {
      "fields" : [ {
        "name" : "source",
        "type" : 5
      }, {
        "name" : "dest",
        "type" : 5
      } ],
      "name" : "(source string, dest string)",
      "type" : "Tuple",
      "underlying" : 89
    }, {
      "name" : "func(in *k8s.io/api/admissionregistration/v1beta1.WebhookClientConfig, out *k8s.io/kubernetes/pkg/apis/admissionregistration.WebhookClientConfig, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 91,
      "recv" : -1,
      "results" : 70,
      "type" : "Signature",
      "underlying" : 90,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 92
      }, {
        "name" : "out",
        "type" : 93
      }, {
        "name" : "s",
        "type" : 63
      } ],
      "name" : "(in *k8s.io/api/admissionregistration/v1beta1.WebhookClientConfig, out *k8s.io/kubernetes/pkg/apis/admissionregistration.WebhookClientConfig, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 91
    }, {
      "elem" : 6,
      "name" : "*k8s.io/api/admissionregistration/v1beta1.WebhookClientConfig",
      "type" : "Pointer",
      "underlying" : 92
    }, {
      "elem" : 43,
      "name" : "*k8s.io/kubernetes/pkg/apis/admissionregistration.WebhookClientConfig",
      "type" : "Pointer",
      "underlying" : 93
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 94
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 95
    }, {
      "elem" : 48,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/admissionregistration.RuleWithOperations",
      "type" : "Pointer",
      "underlying" : 96
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 6,
      "type" : "Basic",
      "underlying" : 97
    }, {
      "elem" : 16,
      "name" : "*[]k8s.io/api/admissionregistration/v1beta1.RuleWithOperations",
      "type" : "Pointer",
      "underlying" : 98
    }, {
      "elem" : 23,
      "name" : "*[]string",
      "type" : "Pointer",
      "underlying" : 99
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 71,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 63,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 63,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 63,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 63,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 40,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 63,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 71,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Name",
      "package" : 3,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Name",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ClientConfig",
      "package" : 1,
      "type" : 6,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ClientConfig",
      "package" : 3,
      "type" : 43,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 71,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Rules",
      "package" : 3,
      "type" : 48,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Rules",
      "package" : 1,
      "type" : 16,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "FailurePolicy",
      "package" : 3,
      "type" : 57,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "FailurePolicy",
      "package" : 1,
      "type" : 26,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "MatchPolicy",
      "package" : 3,
      "type" : 59,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "MatchPolicy",
      "package" : 1,
      "type" : 28,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "NamespaceSelector",
      "package" : 3,
      "type" : 30,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "NamespaceSelector",
      "package" : 1,
      "type" : 30,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ObjectSelector",
      "package" : 3,
      "type" : 30,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ObjectSelector",
      "package" : 1,
      "type" : 30,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "SideEffects",
      "package" : 3,
      "type" : 61,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "SideEffects",
      "package" : 1,
      "type" : 38,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "TimeoutSeconds",
      "package" : 3,
      "type" : 12,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "TimeoutSeconds",
      "package" : 1,
      "type" : 12,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AdmissionReviewVersions",
      "package" : 3,
      "type" : 23,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AdmissionReviewVersions",
      "package" : 1,
      "type" : 23,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}