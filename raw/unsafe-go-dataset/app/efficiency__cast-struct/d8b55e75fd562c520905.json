{
  "usage" : {
    "file" : "freelist.go",
    "label1" : "cast-struct",
    "label2" : "efficiency",
    "line" : "289",
    "module" : "github.com/coreos/bbolt",
    "pkg" : "github.com/coreos/bbolt",
    "project" : "elastic/beats",
    "snippet" : "f.copyall(((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[1:])",
    "version" : "v1.3.1-coreos.6.0.20180318001526-af9db2027c98"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 2, 1 ],
      "exit" : false,
      "out-vars" : [ 2, 1 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 2 ],
      "successors" : [ 3 ],
      "in-vars" : [ 2, 1 ],
      "exit" : false,
      "out-vars" : [ 2, 1 ],
      "decl-vars" : [ ],
      "line-start" : 276,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "flags",
            "variable" : 4
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "p",
              "variable" : 2
            }
          },
          "type" : "selector"
        } ],
        "operator" : "|",
        "right" : [ {
          "go-type" : 7,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "16"
          }
        } ],
        "type" : "assign-operator"
      },
      "assign-vars" : [ ],
      "line-end" : 276,
      "code" : "p.flags |= freelistPageFlag",
      "entry" : false,
      "use-vars" : [ 2 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4 ],
      "in-vars" : [ 2, 1 ],
      "exit" : false,
      "out-vars" : [ 2, 5, 1 ],
      "decl-vars" : [ 5 ],
      "line-start" : 280,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "lenids"
          }
        } ],
        "right" : [ {
          "arguments" : [ ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "count"
            },
            "go-type" : 31,
            "kind" : "expression",
            "target" : {
              "go-type" : 17,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "f",
                "variable" : 1
              }
            },
            "type" : "selector"
          },
          "go-type" : 30,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 280,
      "code" : "lenids := f.count()",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5, 6 ],
      "in-vars" : [ 2, 5, 1 ],
      "exit" : false,
      "out-vars" : [ 2, 5, 1 ],
      "decl-vars" : [ ],
      "line-start" : 281,
      "ast" : {
        "condition" : {
          "go-type" : 33,
          "kind" : "expression",
          "left" : {
            "go-type" : 30,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "lenids",
              "variable" : 5
            }
          },
          "operator" : "==",
          "right" : {
            "go-type" : 30,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 290,
      "code" : "if lenids == 0 {\n\tp.count = uint16(lenids)\n} else if lenids < 0xFFFF {\n\tp.count = uint16(lenids)\n\tf.copyall(((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[:])\n} else {\n\tp.count = 0xFFFF\n\t((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[0] = pgid(lenids)\n\tf.copyall(((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[1:])\n}",
      "entry" : false,
      "use-vars" : [ 5 ]
    }, {
      "update-vars" : [ 2 ],
      "successors" : [ 12 ],
      "in-vars" : [ 2, 5 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 282,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "count",
            "variable" : 6
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "p",
              "variable" : 2
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 7,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 7,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "uint16"
            }
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 30,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "lenids",
              "variable" : 5
            }
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 282,
      "code" : "p.count = uint16(lenids)",
      "entry" : false,
      "use-vars" : [ 5, 2 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 7, 9 ],
      "in-vars" : [ 1, 2, 5 ],
      "exit" : false,
      "out-vars" : [ 2, 5, 1 ],
      "decl-vars" : [ ],
      "line-start" : 283,
      "ast" : {
        "condition" : {
          "go-type" : 33,
          "kind" : "expression",
          "left" : {
            "go-type" : 30,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "lenids",
              "variable" : 5
            }
          },
          "operator" : "<",
          "right" : {
            "go-type" : 30,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "65535"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 290,
      "code" : "if lenids < 0xFFFF {\n\tp.count = uint16(lenids)\n\tf.copyall(((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[:])\n} else {\n\tp.count = 0xFFFF\n\t((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[0] = pgid(lenids)\n\tf.copyall(((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[1:])\n}",
      "entry" : false,
      "use-vars" : [ 5 ]
    }, {
      "update-vars" : [ 2 ],
      "successors" : [ 8 ],
      "in-vars" : [ 2, 5, 1 ],
      "exit" : false,
      "out-vars" : [ 2, 1 ],
      "decl-vars" : [ ],
      "line-start" : 284,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "count",
            "variable" : 6
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "p",
              "variable" : 2
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 7,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 7,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "uint16"
            }
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 30,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "lenids",
              "variable" : 5
            }
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 284,
      "code" : "p.count = uint16(lenids)",
      "entry" : false,
      "use-vars" : [ 2, 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 12 ],
      "in-vars" : [ 1, 2 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 285,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 20,
            "type" : "slice",
            "three" : false,
            "high" : null,
            "max" : null,
            "kind" : "expression",
            "low" : null,
            "target" : {
              "go-type" : 36,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "contained" : {
                    "element" : {
                      "go-type" : 5,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 5,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "pgid"
                      }
                    },
                    "go-type" : 37,
                    "kind" : "type",
                    "length" : {
                      "go-type" : 38,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "2147483647"
                      }
                    },
                    "type" : "array"
                  },
                  "go-type" : 36,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "go-type" : 36,
                "kind" : "expression",
                "target" : {
                  "coerced-to" : {
                    "go-type" : 39,
                    "kind" : "type",
                    "qualifier" : {
                      "ident-kind" : "PkgName",
                      "kind" : "ident",
                      "package" : 1,
                      "value" : "unsafe"
                    },
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 39,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "Pointer"
                    }
                  },
                  "go-type" : 39,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 40,
                    "kind" : "expression",
                    "operator" : "&",
                    "target" : {
                      "field" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "ptr",
                        "variable" : 7
                      },
                      "go-type" : 9,
                      "kind" : "expression",
                      "target" : {
                        "go-type" : 2,
                        "kind" : "expression",
                        "type" : "identifier",
                        "value" : {
                          "ident-kind" : "Var",
                          "kind" : "ident",
                          "value" : "p",
                          "variable" : 2
                        }
                      },
                      "type" : "selector"
                    },
                    "type" : "unary"
                  },
                  "type" : "cast"
                },
                "type" : "cast"
              },
              "type" : "paren"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "function" : 2,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "copyall"
            },
            "go-type" : 34,
            "kind" : "expression",
            "target" : {
              "go-type" : 17,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "f",
                "variable" : 1
              }
            },
            "type" : "selector"
          },
          "go-type" : 14,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 285,
      "code" : "f.copyall(((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[:])",
      "entry" : false,
      "use-vars" : [ 1, 2 ]
    }, {
      "update-vars" : [ 2 ],
      "successors" : [ 10 ],
      "in-vars" : [ 2, 5, 1 ],
      "exit" : false,
      "out-vars" : [ 2, 5, 1 ],
      "decl-vars" : [ ],
      "line-start" : 287,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "count",
            "variable" : 6
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "p",
              "variable" : 2
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 7,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "65535"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 287,
      "code" : "p.count = 0xFFFF",
      "entry" : false,
      "use-vars" : [ 2 ]
    }, {
      "update-vars" : [ 2 ],
      "successors" : [ 11 ],
      "in-vars" : [ 2, 5, 1 ],
      "exit" : false,
      "out-vars" : [ 2, 1 ],
      "decl-vars" : [ ],
      "line-start" : 288,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 5,
          "index" : {
            "go-type" : 30,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "kind" : "expression",
          "target" : {
            "go-type" : 36,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "contained" : {
                  "element" : {
                    "go-type" : 5,
                    "kind" : "type",
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 5,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "pgid"
                    }
                  },
                  "go-type" : 37,
                  "kind" : "type",
                  "length" : {
                    "go-type" : 38,
                    "kind" : "constant",
                    "value" : {
                      "type" : "INT",
                      "value" : "2147483647"
                    }
                  },
                  "type" : "array"
                },
                "go-type" : 36,
                "kind" : "type",
                "type" : "pointer"
              },
              "go-type" : 36,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 39,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 39,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 39,
                "kind" : "expression",
                "target" : {
                  "go-type" : 40,
                  "kind" : "expression",
                  "operator" : "&",
                  "target" : {
                    "field" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "ptr",
                      "variable" : 7
                    },
                    "go-type" : 9,
                    "kind" : "expression",
                    "target" : {
                      "go-type" : 2,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "p",
                        "variable" : 2
                      }
                    },
                    "type" : "selector"
                  },
                  "type" : "unary"
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "paren"
          },
          "type" : "index"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 5,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 5,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "pgid"
            }
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 30,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "lenids",
              "variable" : 5
            }
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 288,
      "code" : "((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[0] = pgid(lenids)",
      "entry" : false,
      "use-vars" : [ 5, 2 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 12 ],
      "in-vars" : [ 1, 2 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 289,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 20,
            "type" : "slice",
            "three" : false,
            "high" : null,
            "max" : null,
            "kind" : "expression",
            "low" : {
              "go-type" : 30,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "1"
              }
            },
            "target" : {
              "go-type" : 36,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "contained" : {
                    "element" : {
                      "go-type" : 5,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 5,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "pgid"
                      }
                    },
                    "go-type" : 37,
                    "kind" : "type",
                    "length" : {
                      "go-type" : 38,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "2147483647"
                      }
                    },
                    "type" : "array"
                  },
                  "go-type" : 36,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "go-type" : 36,
                "kind" : "expression",
                "target" : {
                  "coerced-to" : {
                    "go-type" : 39,
                    "kind" : "type",
                    "qualifier" : {
                      "ident-kind" : "PkgName",
                      "kind" : "ident",
                      "package" : 1,
                      "value" : "unsafe"
                    },
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 39,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "Pointer"
                    }
                  },
                  "go-type" : 39,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 40,
                    "kind" : "expression",
                    "operator" : "&",
                    "target" : {
                      "field" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "ptr",
                        "variable" : 7
                      },
                      "go-type" : 9,
                      "kind" : "expression",
                      "target" : {
                        "go-type" : 2,
                        "kind" : "expression",
                        "type" : "identifier",
                        "value" : {
                          "ident-kind" : "Var",
                          "kind" : "ident",
                          "value" : "p",
                          "variable" : 2
                        }
                      },
                      "type" : "selector"
                    },
                    "type" : "unary"
                  },
                  "type" : "cast"
                },
                "type" : "cast"
              },
              "type" : "paren"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "function" : 2,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "copyall"
            },
            "go-type" : 34,
            "kind" : "expression",
            "target" : {
              "go-type" : 17,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "f",
                "variable" : 1
              }
            },
            "type" : "selector"
          },
          "go-type" : 14,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 289,
      "code" : "f.copyall(((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[1:])",
      "entry" : false,
      "use-vars" : [ 2, 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 292,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 41,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 292,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "// write writes the page ids onto a freelist page. All free and pending ids are\n// saved to disk since in the event of a program crash, all pending ids will\n// become free.\nfunc (f *freelist) write(p *page) error {\n\n\tp.flags |= freelistPageFlag\n\n\tlenids := f.count()\n\tif lenids == 0 {\n\t\tp.count = uint16(lenids)\n\t} else if lenids < 0xFFFF {\n\t\tp.count = uint16(lenids)\n\t\tf.copyall(((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[:])\n\t} else {\n\t\tp.count = 0xFFFF\n\t\t((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[0] = pgid(lenids)\n\t\tf.copyall(((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[1:])\n\t}\n\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "write",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "count",
      "package" : 0,
      "type" : 31,
      "exported" : false
    }, {
      "name" : "copyall",
      "package" : 0,
      "type" : 34,
      "exported" : false
    } ],
    "line-end" : 293,
    "line-start" : 272,
    "names" : [ "write" ],
    "package" : 0,
    "packages" : [ {
      "name" : "bolt",
      "path" : "github.com/coreos/bbolt"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 2 ],
    "receivers" : [ 1 ],
    "results" : [ 3 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(p *github.com/coreos/bbolt.page) error",
      "params" : 1,
      "recv" : 1,
      "results" : 10,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "p",
        "type" : 2
      } ],
      "name" : "(p *github.com/coreos/bbolt.page)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*github.com/coreos/bbolt.page",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "page",
      "name" : "github.com/coreos/bbolt.page",
      "package" : 0,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "id",
        "type" : 5
      }, {
        "name" : "flags",
        "type" : 7
      }, {
        "name" : "count",
        "type" : 7
      }, {
        "name" : "overflow",
        "type" : 8
      }, {
        "name" : "ptr",
        "type" : 9
      } ],
      "name" : "struct{id github.com/coreos/bbolt.pgid; flags uint16; count uint16; overflow uint32; ptr uintptr}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "local-name" : "pgid",
      "name" : "github.com/coreos/bbolt.pgid",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 6
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 7
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 8
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 9
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 11
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 10
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 12
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 13
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 12
    }, {
      "name" : "func() string",
      "params" : 14,
      "recv" : 0,
      "results" : 15,
      "type" : "Signature",
      "underlying" : 13,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 14
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 16
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 15
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 16
    }, {
      "elem" : 18,
      "name" : "*github.com/coreos/bbolt.freelist",
      "type" : "Pointer",
      "underlying" : 17
    }, {
      "local-name" : "freelist",
      "name" : "github.com/coreos/bbolt.freelist",
      "package" : 0,
      "type" : "Named",
      "underlying" : 19
    }, {
      "fields" : [ {
        "name" : "ids",
        "type" : 20
      }, {
        "name" : "allocs",
        "type" : 21
      }, {
        "name" : "pending",
        "type" : 23
      }, {
        "name" : "cache",
        "type" : 28
      } ],
      "name" : "struct{ids []github.com/coreos/bbolt.pgid; allocs map[github.com/coreos/bbolt.pgid]github.com/coreos/bbolt.txid; pending map[github.com/coreos/bbolt.txid]*github.com/coreos/bbolt.txPending; cache map[github.com/coreos/bbolt.pgid]bool}",
      "type" : "Struct",
      "underlying" : 19
    }, {
      "elem" : 5,
      "name" : "[]github.com/coreos/bbolt.pgid",
      "type" : "Slice",
      "underlying" : 20
    }, {
      "elem" : 22,
      "key" : 5,
      "name" : "map[github.com/coreos/bbolt.pgid]github.com/coreos/bbolt.txid",
      "type" : "Map",
      "underlying" : 21
    }, {
      "local-name" : "txid",
      "name" : "github.com/coreos/bbolt.txid",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "elem" : 24,
      "key" : 22,
      "name" : "map[github.com/coreos/bbolt.txid]*github.com/coreos/bbolt.txPending",
      "type" : "Map",
      "underlying" : 23
    }, {
      "elem" : 25,
      "name" : "*github.com/coreos/bbolt.txPending",
      "type" : "Pointer",
      "underlying" : 24
    }, {
      "local-name" : "txPending",
      "name" : "github.com/coreos/bbolt.txPending",
      "package" : 0,
      "type" : "Named",
      "underlying" : 26
    }, {
      "fields" : [ {
        "name" : "ids",
        "type" : 20
      }, {
        "name" : "alloctx",
        "type" : 27
      }, {
        "name" : "lastReleaseBegin",
        "type" : 22
      } ],
      "name" : "struct{ids []github.com/coreos/bbolt.pgid; alloctx []github.com/coreos/bbolt.txid; lastReleaseBegin github.com/coreos/bbolt.txid}",
      "type" : "Struct",
      "underlying" : 26
    }, {
      "elem" : 22,
      "name" : "[]github.com/coreos/bbolt.txid",
      "type" : "Slice",
      "underlying" : 27
    }, {
      "elem" : 29,
      "key" : 5,
      "name" : "map[github.com/coreos/bbolt.pgid]bool",
      "type" : "Map",
      "underlying" : 28
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 29
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 30
    }, {
      "name" : "func() int",
      "params" : 14,
      "recv" : -1,
      "results" : 32,
      "type" : "Signature",
      "underlying" : 31,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 30
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 32
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 33
    }, {
      "name" : "func(dst []github.com/coreos/bbolt.pgid)",
      "params" : 35,
      "recv" : -1,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 34,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dst",
        "type" : 20
      } ],
      "name" : "(dst []github.com/coreos/bbolt.pgid)",
      "type" : "Tuple",
      "underlying" : 35
    }, {
      "elem" : 37,
      "name" : "*[2147483647]github.com/coreos/bbolt.pgid",
      "type" : "Pointer",
      "underlying" : 36
    }, {
      "elem" : 5,
      "name" : "[2147483647]github.com/coreos/bbolt.pgid",
      "type" : "Array",
      "underlying" : 37
    }, {
      "name" : "untyped int",
      "type" : "Basic",
      "underlying" : 38
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 39
    }, {
      "elem" : 9,
      "name" : "*uintptr",
      "type" : "Pointer",
      "underlying" : 40
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 41
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 11,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "f",
      "package" : 0,
      "type" : 17,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "p",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 11,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "flags",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "lenids",
      "package" : 0,
      "type" : 30,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "count",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ptr",
      "package" : 0,
      "type" : 9,
      "exported" : false,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}