{
  "usage" : {
    "file" : "zz_generated.conversion.go",
    "label1" : "cast-struct",
    "label2" : "efficiency",
    "line" : "1164",
    "module" : "k8s.io/kubernetes",
    "pkg" : "k8s.io/kubernetes/pkg/apis/extensions/v1beta1",
    "project" : "kubernetes/kubernetes",
    "snippet" : "out.PathType = (*networking.PathType)(unsafe.Pointer(in.PathType))",
    "version" : "project"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 3 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 7, 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 1163,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Path",
            "variable" : 9
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 19,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Path",
            "variable" : 10
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 1163,
      "code" : "out.Path = in.Path",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 5 ],
      "in-vars" : [ 7, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 1164,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "PathType",
            "variable" : 11
          },
          "go-type" : 22,
          "kind" : "expression",
          "target" : {
            "go-type" : 19,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 23,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 4,
                "value" : "networking"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 23,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "PathType"
              }
            },
            "go-type" : 22,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 22,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 56,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 8,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 56,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 56,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "PathType",
                "variable" : 12
              },
              "go-type" : 6,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 1164,
      "code" : "out.PathType = (*networking.PathType)(unsafe.Pointer(in.PathType))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6, 7 ],
      "in-vars" : [ 15 ],
      "exit" : false,
      "out-vars" : [ 15 ],
      "decl-vars" : [ ],
      "line-start" : 1165,
      "ast" : {
        "condition" : {
          "go-type" : 61,
          "kind" : "expression",
          "left" : {
            "go-type" : 37,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 15
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 62,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 1167,
      "code" : "if err := Convert_v1beta1_IngressBackend_To_networking_IngressBackend(&in.Backend, &out.Backend, s); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 15 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 15 ],
      "decl-vars" : [ 15 ],
      "line-start" : 1165,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 59,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Backend",
                "variable" : 13
              },
              "go-type" : 8,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 60,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Backend",
                "variable" : 14
              },
              "go-type" : 24,
              "kind" : "expression",
              "target" : {
                "go-type" : 19,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "out",
                  "variable" : 6
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 29,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "s",
              "variable" : 7
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 57,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Convert_v1beta1_IngressBackend_To_networking_IngressBackend"
            }
          },
          "go-type" : 37,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 1165,
      "code" : "err := Convert_v1beta1_IngressBackend_To_networking_IngressBackend(&in.Backend, &out.Backend, s)",
      "entry" : false,
      "use-vars" : [ 5, 6, 7 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 15 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 1166,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 37,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 15
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 1166,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 15 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 1168,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 62,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 1168,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func autoConvert_v1beta1_HTTPIngressPath_To_networking_HTTPIngressPath(in *v1beta1.HTTPIngressPath, out *networking.HTTPIngressPath, s conversion.Scope) error {\n\tout.Path = in.Path\n\tout.PathType = (*networking.PathType)(unsafe.Pointer(in.PathType))\n\tif err := Convert_v1beta1_IngressBackend_To_networking_IngressBackend(&in.Backend, &out.Backend, s); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "autoConvert_v1beta1_HTTPIngressPath_To_networking_HTTPIngressPath",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "Convert_v1beta1_IngressBackend_To_networking_IngressBackend",
      "package" : 0,
      "type" : 57,
      "exported" : true
    } ],
    "line-end" : 1169,
    "line-start" : 1162,
    "names" : [ "autoConvert_v1beta1_HTTPIngressPath_To_networking_HTTPIngressPath" ],
    "package" : 0,
    "packages" : [ {
      "name" : "v1beta1",
      "path" : "k8s.io/kubernetes/pkg/apis/extensions/v1beta1"
    }, {
      "name" : "v1beta1",
      "path" : "k8s.io/api/extensions/v1beta1"
    }, {
      "name" : "intstr",
      "path" : "k8s.io/apimachinery/pkg/util/intstr"
    }, {
      "name" : "v1",
      "path" : "k8s.io/api/core/v1"
    }, {
      "name" : "networking",
      "path" : "k8s.io/kubernetes/pkg/apis/networking"
    }, {
      "name" : "core",
      "path" : "k8s.io/kubernetes/pkg/apis/core"
    }, {
      "name" : "conversion",
      "path" : "k8s.io/apimachinery/pkg/conversion"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 5, 6, 7 ],
    "receivers" : [ ],
    "results" : [ 8 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(in *k8s.io/api/extensions/v1beta1.HTTPIngressPath, out *k8s.io/kubernetes/pkg/apis/networking.HTTPIngressPath, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 1,
      "recv" : -1,
      "results" : 36,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 2
      }, {
        "name" : "out",
        "type" : 19
      }, {
        "name" : "s",
        "type" : 29
      } ],
      "name" : "(in *k8s.io/api/extensions/v1beta1.HTTPIngressPath, out *k8s.io/kubernetes/pkg/apis/networking.HTTPIngressPath, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*k8s.io/api/extensions/v1beta1.HTTPIngressPath",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "HTTPIngressPath",
      "name" : "k8s.io/api/extensions/v1beta1.HTTPIngressPath",
      "package" : 1,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 5
      }, {
        "name" : "PathType",
        "type" : 6
      }, {
        "name" : "Backend",
        "type" : 8
      } ],
      "name" : "struct{Path string \"json:\\\"path,omitempty\\\" protobuf:\\\"bytes,1,opt,name=path\\\"\"; PathType *k8s.io/api/extensions/v1beta1.PathType \"json:\\\"pathType,omitempty\\\" protobuf:\\\"bytes,3,opt,name=pathType\\\"\"; Backend k8s.io/api/extensions/v1beta1.IngressBackend \"json:\\\"backend\\\" protobuf:\\\"bytes,2,opt,name=backend\\\"\"}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 5
    }, {
      "elem" : 7,
      "name" : "*k8s.io/api/extensions/v1beta1.PathType",
      "type" : "Pointer",
      "underlying" : 6
    }, {
      "local-name" : "PathType",
      "name" : "k8s.io/api/extensions/v1beta1.PathType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "local-name" : "IngressBackend",
      "name" : "k8s.io/api/extensions/v1beta1.IngressBackend",
      "package" : 1,
      "type" : "Named",
      "underlying" : 9
    }, {
      "fields" : [ {
        "name" : "ServiceName",
        "type" : 5
      }, {
        "name" : "ServicePort",
        "type" : 10
      }, {
        "name" : "Resource",
        "type" : 15
      } ],
      "name" : "struct{ServiceName string \"json:\\\"serviceName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=serviceName\\\"\"; ServicePort k8s.io/apimachinery/pkg/util/intstr.IntOrString \"json:\\\"servicePort,omitempty\\\" protobuf:\\\"bytes,2,opt,name=servicePort\\\"\"; Resource *k8s.io/api/core/v1.TypedLocalObjectReference \"json:\\\"resource,omitempty\\\" protobuf:\\\"bytes,3,opt,name=resource\\\"\"}",
      "type" : "Struct",
      "underlying" : 9
    }, {
      "local-name" : "IntOrString",
      "name" : "k8s.io/apimachinery/pkg/util/intstr.IntOrString",
      "package" : 2,
      "type" : "Named",
      "underlying" : 11
    }, {
      "fields" : [ {
        "name" : "Type",
        "type" : 12
      }, {
        "name" : "IntVal",
        "type" : 14
      }, {
        "name" : "StrVal",
        "type" : 5
      } ],
      "name" : "struct{Type k8s.io/apimachinery/pkg/util/intstr.Type \"protobuf:\\\"varint,1,opt,name=type,casttype=Type\\\"\"; IntVal int32 \"protobuf:\\\"varint,2,opt,name=intVal\\\"\"; StrVal string \"protobuf:\\\"bytes,3,opt,name=strVal\\\"\"}",
      "type" : "Struct",
      "underlying" : 11
    }, {
      "local-name" : "Type",
      "name" : "k8s.io/apimachinery/pkg/util/intstr.Type",
      "package" : 2,
      "type" : "Named",
      "underlying" : 13
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 14
    }, {
      "elem" : 16,
      "name" : "*k8s.io/api/core/v1.TypedLocalObjectReference",
      "type" : "Pointer",
      "underlying" : 15
    }, {
      "local-name" : "TypedLocalObjectReference",
      "name" : "k8s.io/api/core/v1.TypedLocalObjectReference",
      "package" : 3,
      "type" : "Named",
      "underlying" : 17
    }, {
      "fields" : [ {
        "name" : "APIGroup",
        "type" : 18
      }, {
        "name" : "Kind",
        "type" : 5
      }, {
        "name" : "Name",
        "type" : 5
      } ],
      "name" : "struct{APIGroup *string \"json:\\\"apiGroup\\\" protobuf:\\\"bytes,1,opt,name=apiGroup\\\"\"; Kind string \"json:\\\"kind\\\" protobuf:\\\"bytes,2,opt,name=kind\\\"\"; Name string \"json:\\\"name\\\" protobuf:\\\"bytes,3,opt,name=name\\\"\"}",
      "type" : "Struct",
      "underlying" : 17
    }, {
      "elem" : 5,
      "name" : "*string",
      "type" : "Pointer",
      "underlying" : 18
    }, {
      "elem" : 20,
      "name" : "*k8s.io/kubernetes/pkg/apis/networking.HTTPIngressPath",
      "type" : "Pointer",
      "underlying" : 19
    }, {
      "local-name" : "HTTPIngressPath",
      "name" : "k8s.io/kubernetes/pkg/apis/networking.HTTPIngressPath",
      "package" : 4,
      "type" : "Named",
      "underlying" : 21
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 5
      }, {
        "name" : "PathType",
        "type" : 22
      }, {
        "name" : "Backend",
        "type" : 24
      } ],
      "name" : "struct{Path string; PathType *k8s.io/kubernetes/pkg/apis/networking.PathType; Backend k8s.io/kubernetes/pkg/apis/networking.IngressBackend}",
      "type" : "Struct",
      "underlying" : 21
    }, {
      "elem" : 23,
      "name" : "*k8s.io/kubernetes/pkg/apis/networking.PathType",
      "type" : "Pointer",
      "underlying" : 22
    }, {
      "local-name" : "PathType",
      "name" : "k8s.io/kubernetes/pkg/apis/networking.PathType",
      "package" : 4,
      "type" : "Named",
      "underlying" : 5
    }, {
      "local-name" : "IngressBackend",
      "name" : "k8s.io/kubernetes/pkg/apis/networking.IngressBackend",
      "package" : 4,
      "type" : "Named",
      "underlying" : 25
    }, {
      "fields" : [ {
        "name" : "ServiceName",
        "type" : 5
      }, {
        "name" : "ServicePort",
        "type" : 10
      }, {
        "name" : "Resource",
        "type" : 26
      } ],
      "name" : "struct{ServiceName string; ServicePort k8s.io/apimachinery/pkg/util/intstr.IntOrString; Resource *k8s.io/kubernetes/pkg/apis/core.TypedLocalObjectReference}",
      "type" : "Struct",
      "underlying" : 25
    }, {
      "elem" : 27,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.TypedLocalObjectReference",
      "type" : "Pointer",
      "underlying" : 26
    }, {
      "local-name" : "TypedLocalObjectReference",
      "name" : "k8s.io/kubernetes/pkg/apis/core.TypedLocalObjectReference",
      "package" : 5,
      "type" : "Named",
      "underlying" : 28
    }, {
      "fields" : [ {
        "name" : "APIGroup",
        "type" : 18
      }, {
        "name" : "Kind",
        "type" : 5
      }, {
        "name" : "Name",
        "type" : 5
      } ],
      "name" : "struct{APIGroup *string; Kind string; Name string}",
      "type" : "Struct",
      "underlying" : 28
    }, {
      "local-name" : "Scope",
      "name" : "k8s.io/apimachinery/pkg/conversion.Scope",
      "package" : 6,
      "type" : "Named",
      "underlying" : 30
    }, {
      "methods" : [ {
        "name" : "Convert",
        "type" : 31
      }, {
        "name" : "DestTag",
        "type" : 42
      }, {
        "name" : "Flags",
        "type" : 45
      }, {
        "name" : "Meta",
        "type" : 47
      }, {
        "name" : "SrcTag",
        "type" : 42
      } ],
      "name" : "interface{Convert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DestTag() reflect.StructTag; Flags() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags; Meta() *k8s.io/apimachinery/pkg/conversion.Meta; SrcTag() reflect.StructTag}",
      "type" : "Interface",
      "underlying" : 30
    }, {
      "name" : "func(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error",
      "params" : 32,
      "recv" : 1,
      "results" : 36,
      "type" : "Signature",
      "underlying" : 31,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 33
      }, {
        "name" : "dest",
        "type" : 33
      }, {
        "name" : "flags",
        "type" : 34
      } ],
      "name" : "(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 32
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 33
    }, {
      "local-name" : "FieldMatchingFlags",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "package" : 6,
      "type" : "Named",
      "underlying" : 35
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 35
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 37
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 36
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 38
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 39
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 38
    }, {
      "name" : "func() string",
      "params" : 40,
      "recv" : 0,
      "results" : 41,
      "type" : "Signature",
      "underlying" : 39,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 40
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 5
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 41
    }, {
      "name" : "func() reflect.StructTag",
      "params" : 40,
      "recv" : 2,
      "results" : 43,
      "type" : "Signature",
      "underlying" : 42,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 44
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 43
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 7,
      "type" : "Named",
      "underlying" : 5
    }, {
      "name" : "func() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "params" : 40,
      "recv" : 3,
      "results" : 46,
      "type" : "Signature",
      "underlying" : 45,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 34
      } ],
      "name" : "(k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 46
    }, {
      "name" : "func() *k8s.io/apimachinery/pkg/conversion.Meta",
      "params" : 40,
      "recv" : 4,
      "results" : 48,
      "type" : "Signature",
      "underlying" : 47,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 49
      } ],
      "name" : "(*k8s.io/apimachinery/pkg/conversion.Meta)",
      "type" : "Tuple",
      "underlying" : 48
    }, {
      "elem" : 50,
      "name" : "*k8s.io/apimachinery/pkg/conversion.Meta",
      "type" : "Pointer",
      "underlying" : 49
    }, {
      "local-name" : "Meta",
      "name" : "k8s.io/apimachinery/pkg/conversion.Meta",
      "package" : 6,
      "type" : "Named",
      "underlying" : 51
    }, {
      "fields" : [ {
        "name" : "KeyNameMapping",
        "type" : 52
      }, {
        "name" : "Context",
        "type" : 33
      } ],
      "name" : "struct{KeyNameMapping k8s.io/apimachinery/pkg/conversion.FieldMappingFunc; Context interface{}}",
      "type" : "Struct",
      "underlying" : 51
    }, {
      "local-name" : "FieldMappingFunc",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMappingFunc",
      "package" : 6,
      "type" : "Named",
      "underlying" : 53
    }, {
      "name" : "func(key string, sourceTag reflect.StructTag, destTag reflect.StructTag) (source string, dest string)",
      "params" : 54,
      "recv" : -1,
      "results" : 55,
      "type" : "Signature",
      "underlying" : 53,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 5
      }, {
        "name" : "sourceTag",
        "type" : 44
      }, {
        "name" : "destTag",
        "type" : 44
      } ],
      "name" : "(key string, sourceTag reflect.StructTag, destTag reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 54
    }, {
      "fields" : [ {
        "name" : "source",
        "type" : 5
      }, {
        "name" : "dest",
        "type" : 5
      } ],
      "name" : "(source string, dest string)",
      "type" : "Tuple",
      "underlying" : 55
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 8,
      "type" : "Basic",
      "underlying" : 56
    }, {
      "name" : "func(in *k8s.io/api/extensions/v1beta1.IngressBackend, out *k8s.io/kubernetes/pkg/apis/networking.IngressBackend, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 58,
      "recv" : -1,
      "results" : 36,
      "type" : "Signature",
      "underlying" : 57,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 59
      }, {
        "name" : "out",
        "type" : 60
      }, {
        "name" : "s",
        "type" : 29
      } ],
      "name" : "(in *k8s.io/api/extensions/v1beta1.IngressBackend, out *k8s.io/kubernetes/pkg/apis/networking.IngressBackend, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 58
    }, {
      "elem" : 8,
      "name" : "*k8s.io/api/extensions/v1beta1.IngressBackend",
      "type" : "Pointer",
      "underlying" : 59
    }, {
      "elem" : 24,
      "name" : "*k8s.io/kubernetes/pkg/apis/networking.IngressBackend",
      "type" : "Pointer",
      "underlying" : 60
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 61
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 62
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 37,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 6,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 37,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Path",
      "package" : 4,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Path",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "PathType",
      "package" : 4,
      "type" : 22,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "PathType",
      "package" : 1,
      "type" : 6,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Backend",
      "package" : 1,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Backend",
      "package" : 4,
      "type" : 24,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 37,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}