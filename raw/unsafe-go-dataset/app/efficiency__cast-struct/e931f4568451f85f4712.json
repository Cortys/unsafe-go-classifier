{
  "usage" : {
    "file" : "zz_generated.conversion.go",
    "label1" : "cast-struct",
    "label2" : "efficiency",
    "line" : "3427",
    "module" : "k8s.io/kubernetes",
    "pkg" : "k8s.io/kubernetes/pkg/apis/core/v1",
    "project" : "rook/rook",
    "snippet" : "out.VolumeMounts = *(*[]core.VolumeMount)(unsafe.Pointer(&in.VolumeMounts))",
    "version" : "v1.17.2"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 3 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 3416,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Name",
            "variable" : 9
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Name",
            "variable" : 10
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3416,
      "code" : "out.Name = in.Name",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 4 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 3417,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Image",
            "variable" : 11
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Image",
            "variable" : 12
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3417,
      "code" : "out.Image = in.Image",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 5 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 3418,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Command",
            "variable" : 13
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 5,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 5,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                },
                "go-type" : 6,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 232,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 232,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 233,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 9,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 233,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 233,
              "kind" : "expression",
              "target" : {
                "go-type" : 232,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Command",
                    "variable" : 14
                  },
                  "go-type" : 6,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3418,
      "code" : "out.Command = *(*[]string)(unsafe.Pointer(&in.Command))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 6 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 5, 7, 6 ],
      "decl-vars" : [ ],
      "line-start" : 3419,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Args",
            "variable" : 15
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 5,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 5,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                },
                "go-type" : 6,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 232,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 232,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 233,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 9,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 233,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 233,
              "kind" : "expression",
              "target" : {
                "go-type" : 232,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Args",
                    "variable" : 16
                  },
                  "go-type" : 6,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3419,
      "code" : "out.Args = *(*[]string)(unsafe.Pointer(&in.Args))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 7 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 3420,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "WorkingDir",
            "variable" : 17
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "WorkingDir",
            "variable" : 18
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3420,
      "code" : "out.WorkingDir = in.WorkingDir",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 8 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 3421,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Ports",
            "variable" : 19
          },
          "go-type" : 121,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 121,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 122,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 6,
                    "value" : "core"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 122,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "ContainerPort"
                  }
                },
                "go-type" : 121,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 234,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 234,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 233,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 9,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 233,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 233,
              "kind" : "expression",
              "target" : {
                "go-type" : 235,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Ports",
                    "variable" : 20
                  },
                  "go-type" : 7,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3421,
      "code" : "out.Ports = *(*[]core.ContainerPort)(unsafe.Pointer(&in.Ports))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 9 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 7, 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 3422,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "EnvFrom",
            "variable" : 21
          },
          "go-type" : 125,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 125,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 126,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 6,
                    "value" : "core"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 126,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "EnvFromSource"
                  }
                },
                "go-type" : 125,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 236,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 236,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 233,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 9,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 233,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 233,
              "kind" : "expression",
              "target" : {
                "go-type" : 237,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "EnvFrom",
                    "variable" : 22
                  },
                  "go-type" : 12,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3422,
      "code" : "out.EnvFrom = *(*[]core.EnvFromSource)(unsafe.Pointer(&in.EnvFrom))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 11 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 3423,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Env",
            "variable" : 23
          },
          "go-type" : 135,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 135,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 136,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 6,
                    "value" : "core"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 136,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "EnvVar"
                  }
                },
                "go-type" : 135,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 238,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 238,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 233,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 9,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 233,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 233,
              "kind" : "expression",
              "target" : {
                "go-type" : 239,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Env",
                    "variable" : 24
                  },
                  "go-type" : 24,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3423,
      "code" : "out.Env = *(*[]core.EnvVar)(unsafe.Pointer(&in.Env))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 12, 13 ],
      "in-vars" : [ 5, 27, 6 ],
      "exit" : false,
      "out-vars" : [ 27, 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 3424,
      "ast" : {
        "condition" : {
          "go-type" : 244,
          "kind" : "expression",
          "left" : {
            "go-type" : 213,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 27
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 245,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 3426,
      "code" : "if err := Convert_v1_ResourceRequirements_To_core_ResourceRequirements(&in.Resources, &out.Resources, s); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 27 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 10 ],
      "in-vars" : [ 7, 6, 5 ],
      "exit" : false,
      "out-vars" : [ 27, 6, 5 ],
      "decl-vars" : [ 27 ],
      "line-start" : 3424,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 242,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Resources",
                "variable" : 25
              },
              "go-type" : 60,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 243,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Resources",
                "variable" : 26
              },
              "go-type" : 152,
              "kind" : "expression",
              "target" : {
                "go-type" : 118,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "out",
                  "variable" : 6
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 205,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "s",
              "variable" : 7
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 240,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Convert_v1_ResourceRequirements_To_core_ResourceRequirements"
            }
          },
          "go-type" : 213,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 3424,
      "code" : "err := Convert_v1_ResourceRequirements_To_core_ResourceRequirements(&in.Resources, &out.Resources, s)",
      "entry" : false,
      "use-vars" : [ 5, 6, 7 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 27 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 3425,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 213,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 27
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 3425,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 27 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 14 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 3427,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "VolumeMounts",
            "variable" : 28
          },
          "go-type" : 157,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 157,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 158,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 6,
                    "value" : "core"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 158,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "VolumeMount"
                  }
                },
                "go-type" : 157,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 246,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 246,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 233,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 9,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 233,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 233,
              "kind" : "expression",
              "target" : {
                "go-type" : 247,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "VolumeMounts",
                    "variable" : 29
                  },
                  "go-type" : 65,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3427,
      "code" : "out.VolumeMounts = *(*[]core.VolumeMount)(unsafe.Pointer(&in.VolumeMounts))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 15 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 3428,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "VolumeDevices",
            "variable" : 30
          },
          "go-type" : 162,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 162,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 163,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 6,
                    "value" : "core"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 163,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "VolumeDevice"
                  }
                },
                "go-type" : 162,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 248,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 248,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 233,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 9,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 233,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 233,
              "kind" : "expression",
              "target" : {
                "go-type" : 249,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "VolumeDevices",
                    "variable" : 31
                  },
                  "go-type" : 70,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3428,
      "code" : "out.VolumeDevices = *(*[]core.VolumeDevice)(unsafe.Pointer(&in.VolumeDevices))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 16 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 3429,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "LivenessProbe",
            "variable" : 32
          },
          "go-type" : 165,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 166,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 166,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Probe"
              }
            },
            "go-type" : 165,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 165,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 233,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 9,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 233,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 233,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "LivenessProbe",
                "variable" : 33
              },
              "go-type" : 73,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3429,
      "code" : "out.LivenessProbe = (*core.Probe)(unsafe.Pointer(in.LivenessProbe))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 17 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 3430,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ReadinessProbe",
            "variable" : 34
          },
          "go-type" : 165,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 166,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 166,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Probe"
              }
            },
            "go-type" : 165,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 165,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 233,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 9,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 233,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 233,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ReadinessProbe",
                "variable" : 35
              },
              "go-type" : 73,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3430,
      "code" : "out.ReadinessProbe = (*core.Probe)(unsafe.Pointer(in.ReadinessProbe))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 18 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 3431,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "StartupProbe",
            "variable" : 36
          },
          "go-type" : 165,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 166,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 166,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Probe"
              }
            },
            "go-type" : 165,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 165,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 233,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 9,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 233,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 233,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "StartupProbe",
                "variable" : 37
              },
              "go-type" : 73,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3431,
      "code" : "out.StartupProbe = (*core.Probe)(unsafe.Pointer(in.StartupProbe))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 19 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 3432,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Lifecycle",
            "variable" : 38
          },
          "go-type" : 183,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 184,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 184,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Lifecycle"
              }
            },
            "go-type" : 183,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 183,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 233,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 9,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 233,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 233,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Lifecycle",
                "variable" : 39
              },
              "go-type" : 94,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3432,
      "code" : "out.Lifecycle = (*core.Lifecycle)(unsafe.Pointer(in.Lifecycle))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 20 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 3433,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "TerminationMessagePath",
            "variable" : 40
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "TerminationMessagePath",
            "variable" : 41
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3433,
      "code" : "out.TerminationMessagePath = in.TerminationMessagePath",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 21 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 3434,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "TerminationMessagePolicy",
            "variable" : 42
          },
          "go-type" : 187,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 187,
            "kind" : "type",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 6,
              "value" : "core"
            },
            "type" : "identifier",
            "value" : {
              "go-type" : 187,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "TerminationMessagePolicy"
            }
          },
          "go-type" : 187,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "TerminationMessagePolicy",
              "variable" : 43
            },
            "go-type" : 98,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "in",
                "variable" : 5
              }
            },
            "type" : "selector"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3434,
      "code" : "out.TerminationMessagePolicy = core.TerminationMessagePolicy(in.TerminationMessagePolicy)",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 22 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 3435,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ImagePullPolicy",
            "variable" : 44
          },
          "go-type" : 188,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 188,
            "kind" : "type",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 6,
              "value" : "core"
            },
            "type" : "identifier",
            "value" : {
              "go-type" : 188,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "PullPolicy"
            }
          },
          "go-type" : 188,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "ImagePullPolicy",
              "variable" : 45
            },
            "go-type" : 99,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "in",
                "variable" : 5
              }
            },
            "type" : "selector"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3435,
      "code" : "out.ImagePullPolicy = core.PullPolicy(in.ImagePullPolicy)",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 23 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 3436,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "SecurityContext",
            "variable" : 46
          },
          "go-type" : 189,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 190,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "core"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 190,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "SecurityContext"
              }
            },
            "go-type" : 189,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 189,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 233,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 9,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 233,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 233,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "SecurityContext",
                "variable" : 47
              },
              "go-type" : 100,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3436,
      "code" : "out.SecurityContext = (*core.SecurityContext)(unsafe.Pointer(in.SecurityContext))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 24 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 3437,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Stdin",
            "variable" : 48
          },
          "go-type" : 21,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Stdin",
            "variable" : 49
          },
          "go-type" : 21,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3437,
      "code" : "out.Stdin = in.Stdin",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 25 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 3438,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "StdinOnce",
            "variable" : 50
          },
          "go-type" : 21,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "StdinOnce",
            "variable" : 51
          },
          "go-type" : 21,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3438,
      "code" : "out.StdinOnce = in.StdinOnce",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 26 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 3439,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "TTY",
            "variable" : 52
          },
          "go-type" : 21,
          "kind" : "expression",
          "target" : {
            "go-type" : 118,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "TTY",
            "variable" : 53
          },
          "go-type" : 21,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3439,
      "code" : "out.TTY = in.TTY",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 3440,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 245,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 3440,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func autoConvert_v1_EphemeralContainerCommon_To_core_EphemeralContainerCommon(in *v1.EphemeralContainerCommon, out *core.EphemeralContainerCommon, s conversion.Scope) error {\n\tout.Name = in.Name\n\tout.Image = in.Image\n\tout.Command = *(*[]string)(unsafe.Pointer(&in.Command))\n\tout.Args = *(*[]string)(unsafe.Pointer(&in.Args))\n\tout.WorkingDir = in.WorkingDir\n\tout.Ports = *(*[]core.ContainerPort)(unsafe.Pointer(&in.Ports))\n\tout.EnvFrom = *(*[]core.EnvFromSource)(unsafe.Pointer(&in.EnvFrom))\n\tout.Env = *(*[]core.EnvVar)(unsafe.Pointer(&in.Env))\n\tif err := Convert_v1_ResourceRequirements_To_core_ResourceRequirements(&in.Resources, &out.Resources, s); err != nil {\n\t\treturn err\n\t}\n\tout.VolumeMounts = *(*[]core.VolumeMount)(unsafe.Pointer(&in.VolumeMounts))\n\tout.VolumeDevices = *(*[]core.VolumeDevice)(unsafe.Pointer(&in.VolumeDevices))\n\tout.LivenessProbe = (*core.Probe)(unsafe.Pointer(in.LivenessProbe))\n\tout.ReadinessProbe = (*core.Probe)(unsafe.Pointer(in.ReadinessProbe))\n\tout.StartupProbe = (*core.Probe)(unsafe.Pointer(in.StartupProbe))\n\tout.Lifecycle = (*core.Lifecycle)(unsafe.Pointer(in.Lifecycle))\n\tout.TerminationMessagePath = in.TerminationMessagePath\n\tout.TerminationMessagePolicy = core.TerminationMessagePolicy(in.TerminationMessagePolicy)\n\tout.ImagePullPolicy = core.PullPolicy(in.ImagePullPolicy)\n\tout.SecurityContext = (*core.SecurityContext)(unsafe.Pointer(in.SecurityContext))\n\tout.Stdin = in.Stdin\n\tout.StdinOnce = in.StdinOnce\n\tout.TTY = in.TTY\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "autoConvert_v1_EphemeralContainerCommon_To_core_EphemeralContainerCommon",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "Convert_v1_ResourceRequirements_To_core_ResourceRequirements",
      "package" : 0,
      "type" : 240,
      "exported" : true
    } ],
    "line-end" : 3441,
    "line-start" : 3415,
    "names" : [ "autoConvert_v1_EphemeralContainerCommon_To_core_EphemeralContainerCommon" ],
    "package" : 0,
    "packages" : [ {
      "name" : "v1",
      "path" : "k8s.io/kubernetes/pkg/apis/core/v1"
    }, {
      "name" : "v1",
      "path" : "k8s.io/api/core/v1"
    }, {
      "name" : "resource",
      "path" : "k8s.io/apimachinery/pkg/api/resource"
    }, {
      "name" : "inf",
      "path" : "gopkg.in/inf.v0"
    }, {
      "name" : "big",
      "path" : "math/big"
    }, {
      "name" : "intstr",
      "path" : "k8s.io/apimachinery/pkg/util/intstr"
    }, {
      "name" : "core",
      "path" : "k8s.io/kubernetes/pkg/apis/core"
    }, {
      "name" : "conversion",
      "path" : "k8s.io/apimachinery/pkg/conversion"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 5, 6, 7 ],
    "receivers" : [ ],
    "results" : [ 8 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(in *k8s.io/api/core/v1.EphemeralContainerCommon, out *k8s.io/kubernetes/pkg/apis/core.EphemeralContainerCommon, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 1,
      "recv" : -1,
      "results" : 212,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 2
      }, {
        "name" : "out",
        "type" : 118
      }, {
        "name" : "s",
        "type" : 205
      } ],
      "name" : "(in *k8s.io/api/core/v1.EphemeralContainerCommon, out *k8s.io/kubernetes/pkg/apis/core.EphemeralContainerCommon, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*k8s.io/api/core/v1.EphemeralContainerCommon",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "EphemeralContainerCommon",
      "name" : "k8s.io/api/core/v1.EphemeralContainerCommon",
      "package" : 1,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "Image",
        "type" : 5
      }, {
        "name" : "Command",
        "type" : 6
      }, {
        "name" : "Args",
        "type" : 6
      }, {
        "name" : "WorkingDir",
        "type" : 5
      }, {
        "name" : "Ports",
        "type" : 7
      }, {
        "name" : "EnvFrom",
        "type" : 12
      }, {
        "name" : "Env",
        "type" : 24
      }, {
        "name" : "Resources",
        "type" : 60
      }, {
        "name" : "VolumeMounts",
        "type" : 65
      }, {
        "name" : "VolumeDevices",
        "type" : 70
      }, {
        "name" : "LivenessProbe",
        "type" : 73
      }, {
        "name" : "ReadinessProbe",
        "type" : 73
      }, {
        "name" : "StartupProbe",
        "type" : 73
      }, {
        "name" : "Lifecycle",
        "type" : 94
      }, {
        "name" : "TerminationMessagePath",
        "type" : 5
      }, {
        "name" : "TerminationMessagePolicy",
        "type" : 98
      }, {
        "name" : "ImagePullPolicy",
        "type" : 99
      }, {
        "name" : "SecurityContext",
        "type" : 100
      }, {
        "name" : "Stdin",
        "type" : 21
      }, {
        "name" : "StdinOnce",
        "type" : 21
      }, {
        "name" : "TTY",
        "type" : 21
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; Image string \"json:\\\"image,omitempty\\\" protobuf:\\\"bytes,2,opt,name=image\\\"\"; Command []string \"json:\\\"command,omitempty\\\" protobuf:\\\"bytes,3,rep,name=command\\\"\"; Args []string \"json:\\\"args,omitempty\\\" protobuf:\\\"bytes,4,rep,name=args\\\"\"; WorkingDir string \"json:\\\"workingDir,omitempty\\\" protobuf:\\\"bytes,5,opt,name=workingDir\\\"\"; Ports []k8s.io/api/core/v1.ContainerPort \"json:\\\"ports,omitempty\\\" protobuf:\\\"bytes,6,rep,name=ports\\\"\"; EnvFrom []k8s.io/api/core/v1.EnvFromSource \"json:\\\"envFrom,omitempty\\\" protobuf:\\\"bytes,19,rep,name=envFrom\\\"\"; Env []k8s.io/api/core/v1.EnvVar \"json:\\\"env,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"name\\\" protobuf:\\\"bytes,7,rep,name=env\\\"\"; Resources k8s.io/api/core/v1.ResourceRequirements \"json:\\\"resources,omitempty\\\" protobuf:\\\"bytes,8,opt,name=resources\\\"\"; VolumeMounts []k8s.io/api/core/v1.VolumeMount \"json:\\\"volumeMounts,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"mountPath\\\" protobuf:\\\"bytes,9,rep,name=volumeMounts\\\"\"; VolumeDevices []k8s.io/api/core/v1.VolumeDevice \"json:\\\"volumeDevices,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"devicePath\\\" protobuf:\\\"bytes,21,rep,name=volumeDevices\\\"\"; LivenessProbe *k8s.io/api/core/v1.Probe \"json:\\\"livenessProbe,omitempty\\\" protobuf:\\\"bytes,10,opt,name=livenessProbe\\\"\"; ReadinessProbe *k8s.io/api/core/v1.Probe \"json:\\\"readinessProbe,omitempty\\\" protobuf:\\\"bytes,11,opt,name=readinessProbe\\\"\"; StartupProbe *k8s.io/api/core/v1.Probe \"json:\\\"startupProbe,omitempty\\\" protobuf:\\\"bytes,22,opt,name=startupProbe\\\"\"; Lifecycle *k8s.io/api/core/v1.Lifecycle \"json:\\\"lifecycle,omitempty\\\" protobuf:\\\"bytes,12,opt,name=lifecycle\\\"\"; TerminationMessagePath string \"json:\\\"terminationMessagePath,omitempty\\\" protobuf:\\\"bytes,13,opt,name=terminationMessagePath\\\"\"; TerminationMessagePolicy k8s.io/api/core/v1.TerminationMessagePolicy \"json:\\\"terminationMessagePolicy,omitempty\\\" protobuf:\\\"bytes,20,opt,name=terminationMessagePolicy,casttype=TerminationMessagePolicy\\\"\"; ImagePullPolicy k8s.io/api/core/v1.PullPolicy \"json:\\\"imagePullPolicy,omitempty\\\" protobuf:\\\"bytes,14,opt,name=imagePullPolicy,casttype=PullPolicy\\\"\"; SecurityContext *k8s.io/api/core/v1.SecurityContext \"json:\\\"securityContext,omitempty\\\" protobuf:\\\"bytes,15,opt,name=securityContext\\\"\"; Stdin bool \"json:\\\"stdin,omitempty\\\" protobuf:\\\"varint,16,opt,name=stdin\\\"\"; StdinOnce bool \"json:\\\"stdinOnce,omitempty\\\" protobuf:\\\"varint,17,opt,name=stdinOnce\\\"\"; TTY bool \"json:\\\"tty,omitempty\\\" protobuf:\\\"varint,18,opt,name=tty\\\"\"}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 5
    }, {
      "elem" : 5,
      "name" : "[]string",
      "type" : "Slice",
      "underlying" : 6
    }, {
      "elem" : 8,
      "name" : "[]k8s.io/api/core/v1.ContainerPort",
      "type" : "Slice",
      "underlying" : 7
    }, {
      "local-name" : "ContainerPort",
      "name" : "k8s.io/api/core/v1.ContainerPort",
      "package" : 1,
      "type" : "Named",
      "underlying" : 9
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "HostPort",
        "type" : 10
      }, {
        "name" : "ContainerPort",
        "type" : 10
      }, {
        "name" : "Protocol",
        "type" : 11
      }, {
        "name" : "HostIP",
        "type" : 5
      } ],
      "name" : "struct{Name string \"json:\\\"name,omitempty\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; HostPort int32 \"json:\\\"hostPort,omitempty\\\" protobuf:\\\"varint,2,opt,name=hostPort\\\"\"; ContainerPort int32 \"json:\\\"containerPort\\\" protobuf:\\\"varint,3,opt,name=containerPort\\\"\"; Protocol k8s.io/api/core/v1.Protocol \"json:\\\"protocol,omitempty\\\" protobuf:\\\"bytes,4,opt,name=protocol,casttype=Protocol\\\"\"; HostIP string \"json:\\\"hostIP,omitempty\\\" protobuf:\\\"bytes,5,opt,name=hostIP\\\"\"}",
      "type" : "Struct",
      "underlying" : 9
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 10
    }, {
      "local-name" : "Protocol",
      "name" : "k8s.io/api/core/v1.Protocol",
      "package" : 1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 13,
      "name" : "[]k8s.io/api/core/v1.EnvFromSource",
      "type" : "Slice",
      "underlying" : 12
    }, {
      "local-name" : "EnvFromSource",
      "name" : "k8s.io/api/core/v1.EnvFromSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 14
    }, {
      "fields" : [ {
        "name" : "Prefix",
        "type" : 5
      }, {
        "name" : "ConfigMapRef",
        "type" : 15
      }, {
        "name" : "SecretRef",
        "type" : 22
      } ],
      "name" : "struct{Prefix string \"json:\\\"prefix,omitempty\\\" protobuf:\\\"bytes,1,opt,name=prefix\\\"\"; ConfigMapRef *k8s.io/api/core/v1.ConfigMapEnvSource \"json:\\\"configMapRef,omitempty\\\" protobuf:\\\"bytes,2,opt,name=configMapRef\\\"\"; SecretRef *k8s.io/api/core/v1.SecretEnvSource \"json:\\\"secretRef,omitempty\\\" protobuf:\\\"bytes,3,opt,name=secretRef\\\"\"}",
      "type" : "Struct",
      "underlying" : 14
    }, {
      "elem" : 16,
      "name" : "*k8s.io/api/core/v1.ConfigMapEnvSource",
      "type" : "Pointer",
      "underlying" : 15
    }, {
      "local-name" : "ConfigMapEnvSource",
      "name" : "k8s.io/api/core/v1.ConfigMapEnvSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 17
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 18
      }, {
        "name" : "Optional",
        "type" : 20
      } ],
      "name" : "struct{k8s.io/api/core/v1.LocalObjectReference \"json:\\\",inline\\\" protobuf:\\\"bytes,1,opt,name=localObjectReference\\\"\"; Optional *bool \"json:\\\"optional,omitempty\\\" protobuf:\\\"varint,2,opt,name=optional\\\"\"}",
      "type" : "Struct",
      "underlying" : 17
    }, {
      "local-name" : "LocalObjectReference",
      "name" : "k8s.io/api/core/v1.LocalObjectReference",
      "package" : 1,
      "type" : "Named",
      "underlying" : 19
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      } ],
      "name" : "struct{Name string \"json:\\\"name,omitempty\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"}",
      "type" : "Struct",
      "underlying" : 19
    }, {
      "elem" : 21,
      "name" : "*bool",
      "type" : "Pointer",
      "underlying" : 20
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 21
    }, {
      "elem" : 23,
      "name" : "*k8s.io/api/core/v1.SecretEnvSource",
      "type" : "Pointer",
      "underlying" : 22
    }, {
      "local-name" : "SecretEnvSource",
      "name" : "k8s.io/api/core/v1.SecretEnvSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 17
    }, {
      "elem" : 25,
      "name" : "[]k8s.io/api/core/v1.EnvVar",
      "type" : "Slice",
      "underlying" : 24
    }, {
      "local-name" : "EnvVar",
      "name" : "k8s.io/api/core/v1.EnvVar",
      "package" : 1,
      "type" : "Named",
      "underlying" : 26
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "Value",
        "type" : 5
      }, {
        "name" : "ValueFrom",
        "type" : 27
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; Value string \"json:\\\"value,omitempty\\\" protobuf:\\\"bytes,2,opt,name=value\\\"\"; ValueFrom *k8s.io/api/core/v1.EnvVarSource \"json:\\\"valueFrom,omitempty\\\" protobuf:\\\"bytes,3,opt,name=valueFrom\\\"\"}",
      "type" : "Struct",
      "underlying" : 26
    }, {
      "elem" : 28,
      "name" : "*k8s.io/api/core/v1.EnvVarSource",
      "type" : "Pointer",
      "underlying" : 27
    }, {
      "local-name" : "EnvVarSource",
      "name" : "k8s.io/api/core/v1.EnvVarSource",
      "package" : 1,
      "type" : "Named",
      "underlying" : 29
    }, {
      "fields" : [ {
        "name" : "FieldRef",
        "type" : 30
      }, {
        "name" : "ResourceFieldRef",
        "type" : 33
      }, {
        "name" : "ConfigMapKeyRef",
        "type" : 55
      }, {
        "name" : "SecretKeyRef",
        "type" : 58
      } ],
      "name" : "struct{FieldRef *k8s.io/api/core/v1.ObjectFieldSelector \"json:\\\"fieldRef,omitempty\\\" protobuf:\\\"bytes,1,opt,name=fieldRef\\\"\"; ResourceFieldRef *k8s.io/api/core/v1.ResourceFieldSelector \"json:\\\"resourceFieldRef,omitempty\\\" protobuf:\\\"bytes,2,opt,name=resourceFieldRef\\\"\"; ConfigMapKeyRef *k8s.io/api/core/v1.ConfigMapKeySelector \"json:\\\"configMapKeyRef,omitempty\\\" protobuf:\\\"bytes,3,opt,name=configMapKeyRef\\\"\"; SecretKeyRef *k8s.io/api/core/v1.SecretKeySelector \"json:\\\"secretKeyRef,omitempty\\\" protobuf:\\\"bytes,4,opt,name=secretKeyRef\\\"\"}",
      "type" : "Struct",
      "underlying" : 29
    }, {
      "elem" : 31,
      "name" : "*k8s.io/api/core/v1.ObjectFieldSelector",
      "type" : "Pointer",
      "underlying" : 30
    }, {
      "local-name" : "ObjectFieldSelector",
      "name" : "k8s.io/api/core/v1.ObjectFieldSelector",
      "package" : 1,
      "type" : "Named",
      "underlying" : 32
    }, {
      "fields" : [ {
        "name" : "APIVersion",
        "type" : 5
      }, {
        "name" : "FieldPath",
        "type" : 5
      } ],
      "name" : "struct{APIVersion string \"json:\\\"apiVersion,omitempty\\\" protobuf:\\\"bytes,1,opt,name=apiVersion\\\"\"; FieldPath string \"json:\\\"fieldPath\\\" protobuf:\\\"bytes,2,opt,name=fieldPath\\\"\"}",
      "type" : "Struct",
      "underlying" : 32
    }, {
      "elem" : 34,
      "name" : "*k8s.io/api/core/v1.ResourceFieldSelector",
      "type" : "Pointer",
      "underlying" : 33
    }, {
      "local-name" : "ResourceFieldSelector",
      "name" : "k8s.io/api/core/v1.ResourceFieldSelector",
      "package" : 1,
      "type" : "Named",
      "underlying" : 35
    }, {
      "fields" : [ {
        "name" : "ContainerName",
        "type" : 5
      }, {
        "name" : "Resource",
        "type" : 5
      }, {
        "name" : "Divisor",
        "type" : 36
      } ],
      "name" : "struct{ContainerName string \"json:\\\"containerName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=containerName\\\"\"; Resource string \"json:\\\"resource\\\" protobuf:\\\"bytes,2,opt,name=resource\\\"\"; Divisor k8s.io/apimachinery/pkg/api/resource.Quantity \"json:\\\"divisor,omitempty\\\" protobuf:\\\"bytes,3,opt,name=divisor\\\"\"}",
      "type" : "Struct",
      "underlying" : 35
    }, {
      "local-name" : "Quantity",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Quantity",
      "package" : 2,
      "type" : "Named",
      "underlying" : 37
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 38
      }, {
        "name" : "d",
        "type" : 42
      }, {
        "name" : "s",
        "type" : 5
      }, {
        "name" : "Format",
        "type" : 54
      } ],
      "name" : "struct{i k8s.io/apimachinery/pkg/api/resource.int64Amount; d k8s.io/apimachinery/pkg/api/resource.infDecAmount; s string; k8s.io/apimachinery/pkg/api/resource.Format}",
      "type" : "Struct",
      "underlying" : 37
    }, {
      "local-name" : "int64Amount",
      "name" : "k8s.io/apimachinery/pkg/api/resource.int64Amount",
      "package" : 2,
      "type" : "Named",
      "underlying" : 39
    }, {
      "fields" : [ {
        "name" : "value",
        "type" : 40
      }, {
        "name" : "scale",
        "type" : 41
      } ],
      "name" : "struct{value int64; scale k8s.io/apimachinery/pkg/api/resource.Scale}",
      "type" : "Struct",
      "underlying" : 39
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 40
    }, {
      "local-name" : "Scale",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Scale",
      "package" : 2,
      "type" : "Named",
      "underlying" : 10
    }, {
      "local-name" : "infDecAmount",
      "name" : "k8s.io/apimachinery/pkg/api/resource.infDecAmount",
      "package" : 2,
      "type" : "Named",
      "underlying" : 43
    }, {
      "fields" : [ {
        "name" : "Dec",
        "type" : 44
      } ],
      "name" : "struct{*gopkg.in/inf.v0.Dec}",
      "type" : "Struct",
      "underlying" : 43
    }, {
      "elem" : 45,
      "name" : "*gopkg.in/inf.v0.Dec",
      "type" : "Pointer",
      "underlying" : 44
    }, {
      "local-name" : "Dec",
      "name" : "gopkg.in/inf.v0.Dec",
      "package" : 3,
      "type" : "Named",
      "underlying" : 46
    }, {
      "fields" : [ {
        "name" : "unscaled",
        "type" : 47
      }, {
        "name" : "scale",
        "type" : 53
      } ],
      "name" : "struct{unscaled math/big.Int; scale gopkg.in/inf.v0.Scale}",
      "type" : "Struct",
      "underlying" : 46
    }, {
      "local-name" : "Int",
      "name" : "math/big.Int",
      "package" : 4,
      "type" : "Named",
      "underlying" : 48
    }, {
      "fields" : [ {
        "name" : "neg",
        "type" : 21
      }, {
        "name" : "abs",
        "type" : 49
      } ],
      "name" : "struct{neg bool; abs math/big.nat}",
      "type" : "Struct",
      "underlying" : 48
    }, {
      "local-name" : "nat",
      "name" : "math/big.nat",
      "package" : 4,
      "type" : "Named",
      "underlying" : 50
    }, {
      "elem" : 51,
      "name" : "[]math/big.Word",
      "type" : "Slice",
      "underlying" : 50
    }, {
      "local-name" : "Word",
      "name" : "math/big.Word",
      "package" : 4,
      "type" : "Named",
      "underlying" : 52
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 52
    }, {
      "local-name" : "Scale",
      "name" : "gopkg.in/inf.v0.Scale",
      "package" : 3,
      "type" : "Named",
      "underlying" : 10
    }, {
      "local-name" : "Format",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Format",
      "package" : 2,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 56,
      "name" : "*k8s.io/api/core/v1.ConfigMapKeySelector",
      "type" : "Pointer",
      "underlying" : 55
    }, {
      "local-name" : "ConfigMapKeySelector",
      "name" : "k8s.io/api/core/v1.ConfigMapKeySelector",
      "package" : 1,
      "type" : "Named",
      "underlying" : 57
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 18
      }, {
        "name" : "Key",
        "type" : 5
      }, {
        "name" : "Optional",
        "type" : 20
      } ],
      "name" : "struct{k8s.io/api/core/v1.LocalObjectReference \"json:\\\",inline\\\" protobuf:\\\"bytes,1,opt,name=localObjectReference\\\"\"; Key string \"json:\\\"key\\\" protobuf:\\\"bytes,2,opt,name=key\\\"\"; Optional *bool \"json:\\\"optional,omitempty\\\" protobuf:\\\"varint,3,opt,name=optional\\\"\"}",
      "type" : "Struct",
      "underlying" : 57
    }, {
      "elem" : 59,
      "name" : "*k8s.io/api/core/v1.SecretKeySelector",
      "type" : "Pointer",
      "underlying" : 58
    }, {
      "local-name" : "SecretKeySelector",
      "name" : "k8s.io/api/core/v1.SecretKeySelector",
      "package" : 1,
      "type" : "Named",
      "underlying" : 57
    }, {
      "local-name" : "ResourceRequirements",
      "name" : "k8s.io/api/core/v1.ResourceRequirements",
      "package" : 1,
      "type" : "Named",
      "underlying" : 61
    }, {
      "fields" : [ {
        "name" : "Limits",
        "type" : 62
      }, {
        "name" : "Requests",
        "type" : 62
      } ],
      "name" : "struct{Limits k8s.io/api/core/v1.ResourceList \"json:\\\"limits,omitempty\\\" protobuf:\\\"bytes,1,rep,name=limits,casttype=ResourceList,castkey=ResourceName\\\"\"; Requests k8s.io/api/core/v1.ResourceList \"json:\\\"requests,omitempty\\\" protobuf:\\\"bytes,2,rep,name=requests,casttype=ResourceList,castkey=ResourceName\\\"\"}",
      "type" : "Struct",
      "underlying" : 61
    }, {
      "local-name" : "ResourceList",
      "name" : "k8s.io/api/core/v1.ResourceList",
      "package" : 1,
      "type" : "Named",
      "underlying" : 63
    }, {
      "elem" : 36,
      "key" : 64,
      "name" : "map[k8s.io/api/core/v1.ResourceName]k8s.io/apimachinery/pkg/api/resource.Quantity",
      "type" : "Map",
      "underlying" : 63
    }, {
      "local-name" : "ResourceName",
      "name" : "k8s.io/api/core/v1.ResourceName",
      "package" : 1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 66,
      "name" : "[]k8s.io/api/core/v1.VolumeMount",
      "type" : "Slice",
      "underlying" : 65
    }, {
      "local-name" : "VolumeMount",
      "name" : "k8s.io/api/core/v1.VolumeMount",
      "package" : 1,
      "type" : "Named",
      "underlying" : 67
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "MountPath",
        "type" : 5
      }, {
        "name" : "SubPath",
        "type" : 5
      }, {
        "name" : "MountPropagation",
        "type" : 68
      }, {
        "name" : "SubPathExpr",
        "type" : 5
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; ReadOnly bool \"json:\\\"readOnly,omitempty\\\" protobuf:\\\"varint,2,opt,name=readOnly\\\"\"; MountPath string \"json:\\\"mountPath\\\" protobuf:\\\"bytes,3,opt,name=mountPath\\\"\"; SubPath string \"json:\\\"subPath,omitempty\\\" protobuf:\\\"bytes,4,opt,name=subPath\\\"\"; MountPropagation *k8s.io/api/core/v1.MountPropagationMode \"json:\\\"mountPropagation,omitempty\\\" protobuf:\\\"bytes,5,opt,name=mountPropagation,casttype=MountPropagationMode\\\"\"; SubPathExpr string \"json:\\\"subPathExpr,omitempty\\\" protobuf:\\\"bytes,6,opt,name=subPathExpr\\\"\"}",
      "type" : "Struct",
      "underlying" : 67
    }, {
      "elem" : 69,
      "name" : "*k8s.io/api/core/v1.MountPropagationMode",
      "type" : "Pointer",
      "underlying" : 68
    }, {
      "local-name" : "MountPropagationMode",
      "name" : "k8s.io/api/core/v1.MountPropagationMode",
      "package" : 1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 71,
      "name" : "[]k8s.io/api/core/v1.VolumeDevice",
      "type" : "Slice",
      "underlying" : 70
    }, {
      "local-name" : "VolumeDevice",
      "name" : "k8s.io/api/core/v1.VolumeDevice",
      "package" : 1,
      "type" : "Named",
      "underlying" : 72
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "DevicePath",
        "type" : 5
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; DevicePath string \"json:\\\"devicePath\\\" protobuf:\\\"bytes,2,opt,name=devicePath\\\"\"}",
      "type" : "Struct",
      "underlying" : 72
    }, {
      "elem" : 74,
      "name" : "*k8s.io/api/core/v1.Probe",
      "type" : "Pointer",
      "underlying" : 73
    }, {
      "local-name" : "Probe",
      "name" : "k8s.io/api/core/v1.Probe",
      "package" : 1,
      "type" : "Named",
      "underlying" : 75
    }, {
      "fields" : [ {
        "name" : "Handler",
        "type" : 76
      }, {
        "name" : "InitialDelaySeconds",
        "type" : 10
      }, {
        "name" : "TimeoutSeconds",
        "type" : 10
      }, {
        "name" : "PeriodSeconds",
        "type" : 10
      }, {
        "name" : "SuccessThreshold",
        "type" : 10
      }, {
        "name" : "FailureThreshold",
        "type" : 10
      } ],
      "name" : "struct{k8s.io/api/core/v1.Handler \"json:\\\",inline\\\" protobuf:\\\"bytes,1,opt,name=handler\\\"\"; InitialDelaySeconds int32 \"json:\\\"initialDelaySeconds,omitempty\\\" protobuf:\\\"varint,2,opt,name=initialDelaySeconds\\\"\"; TimeoutSeconds int32 \"json:\\\"timeoutSeconds,omitempty\\\" protobuf:\\\"varint,3,opt,name=timeoutSeconds\\\"\"; PeriodSeconds int32 \"json:\\\"periodSeconds,omitempty\\\" protobuf:\\\"varint,4,opt,name=periodSeconds\\\"\"; SuccessThreshold int32 \"json:\\\"successThreshold,omitempty\\\" protobuf:\\\"varint,5,opt,name=successThreshold\\\"\"; FailureThreshold int32 \"json:\\\"failureThreshold,omitempty\\\" protobuf:\\\"varint,6,opt,name=failureThreshold\\\"\"}",
      "type" : "Struct",
      "underlying" : 75
    }, {
      "local-name" : "Handler",
      "name" : "k8s.io/api/core/v1.Handler",
      "package" : 1,
      "type" : "Named",
      "underlying" : 77
    }, {
      "fields" : [ {
        "name" : "Exec",
        "type" : 78
      }, {
        "name" : "HTTPGet",
        "type" : 81
      }, {
        "name" : "TCPSocket",
        "type" : 91
      } ],
      "name" : "struct{Exec *k8s.io/api/core/v1.ExecAction \"json:\\\"exec,omitempty\\\" protobuf:\\\"bytes,1,opt,name=exec\\\"\"; HTTPGet *k8s.io/api/core/v1.HTTPGetAction \"json:\\\"httpGet,omitempty\\\" protobuf:\\\"bytes,2,opt,name=httpGet\\\"\"; TCPSocket *k8s.io/api/core/v1.TCPSocketAction \"json:\\\"tcpSocket,omitempty\\\" protobuf:\\\"bytes,3,opt,name=tcpSocket\\\"\"}",
      "type" : "Struct",
      "underlying" : 77
    }, {
      "elem" : 79,
      "name" : "*k8s.io/api/core/v1.ExecAction",
      "type" : "Pointer",
      "underlying" : 78
    }, {
      "local-name" : "ExecAction",
      "name" : "k8s.io/api/core/v1.ExecAction",
      "package" : 1,
      "type" : "Named",
      "underlying" : 80
    }, {
      "fields" : [ {
        "name" : "Command",
        "type" : 6
      } ],
      "name" : "struct{Command []string \"json:\\\"command,omitempty\\\" protobuf:\\\"bytes,1,rep,name=command\\\"\"}",
      "type" : "Struct",
      "underlying" : 80
    }, {
      "elem" : 82,
      "name" : "*k8s.io/api/core/v1.HTTPGetAction",
      "type" : "Pointer",
      "underlying" : 81
    }, {
      "local-name" : "HTTPGetAction",
      "name" : "k8s.io/api/core/v1.HTTPGetAction",
      "package" : 1,
      "type" : "Named",
      "underlying" : 83
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 5
      }, {
        "name" : "Port",
        "type" : 84
      }, {
        "name" : "Host",
        "type" : 5
      }, {
        "name" : "Scheme",
        "type" : 87
      }, {
        "name" : "HTTPHeaders",
        "type" : 88
      } ],
      "name" : "struct{Path string \"json:\\\"path,omitempty\\\" protobuf:\\\"bytes,1,opt,name=path\\\"\"; Port k8s.io/apimachinery/pkg/util/intstr.IntOrString \"json:\\\"port\\\" protobuf:\\\"bytes,2,opt,name=port\\\"\"; Host string \"json:\\\"host,omitempty\\\" protobuf:\\\"bytes,3,opt,name=host\\\"\"; Scheme k8s.io/api/core/v1.URIScheme \"json:\\\"scheme,omitempty\\\" protobuf:\\\"bytes,4,opt,name=scheme,casttype=URIScheme\\\"\"; HTTPHeaders []k8s.io/api/core/v1.HTTPHeader \"json:\\\"httpHeaders,omitempty\\\" protobuf:\\\"bytes,5,rep,name=httpHeaders\\\"\"}",
      "type" : "Struct",
      "underlying" : 83
    }, {
      "local-name" : "IntOrString",
      "name" : "k8s.io/apimachinery/pkg/util/intstr.IntOrString",
      "package" : 5,
      "type" : "Named",
      "underlying" : 85
    }, {
      "fields" : [ {
        "name" : "Type",
        "type" : 86
      }, {
        "name" : "IntVal",
        "type" : 10
      }, {
        "name" : "StrVal",
        "type" : 5
      } ],
      "name" : "struct{Type k8s.io/apimachinery/pkg/util/intstr.Type \"protobuf:\\\"varint,1,opt,name=type,casttype=Type\\\"\"; IntVal int32 \"protobuf:\\\"varint,2,opt,name=intVal\\\"\"; StrVal string \"protobuf:\\\"bytes,3,opt,name=strVal\\\"\"}",
      "type" : "Struct",
      "underlying" : 85
    }, {
      "local-name" : "Type",
      "name" : "k8s.io/apimachinery/pkg/util/intstr.Type",
      "package" : 5,
      "type" : "Named",
      "underlying" : 40
    }, {
      "local-name" : "URIScheme",
      "name" : "k8s.io/api/core/v1.URIScheme",
      "package" : 1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 89,
      "name" : "[]k8s.io/api/core/v1.HTTPHeader",
      "type" : "Slice",
      "underlying" : 88
    }, {
      "local-name" : "HTTPHeader",
      "name" : "k8s.io/api/core/v1.HTTPHeader",
      "package" : 1,
      "type" : "Named",
      "underlying" : 90
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "Value",
        "type" : 5
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; Value string \"json:\\\"value\\\" protobuf:\\\"bytes,2,opt,name=value\\\"\"}",
      "type" : "Struct",
      "underlying" : 90
    }, {
      "elem" : 92,
      "name" : "*k8s.io/api/core/v1.TCPSocketAction",
      "type" : "Pointer",
      "underlying" : 91
    }, {
      "local-name" : "TCPSocketAction",
      "name" : "k8s.io/api/core/v1.TCPSocketAction",
      "package" : 1,
      "type" : "Named",
      "underlying" : 93
    }, {
      "fields" : [ {
        "name" : "Port",
        "type" : 84
      }, {
        "name" : "Host",
        "type" : 5
      } ],
      "name" : "struct{Port k8s.io/apimachinery/pkg/util/intstr.IntOrString \"json:\\\"port\\\" protobuf:\\\"bytes,1,opt,name=port\\\"\"; Host string \"json:\\\"host,omitempty\\\" protobuf:\\\"bytes,2,opt,name=host\\\"\"}",
      "type" : "Struct",
      "underlying" : 93
    }, {
      "elem" : 95,
      "name" : "*k8s.io/api/core/v1.Lifecycle",
      "type" : "Pointer",
      "underlying" : 94
    }, {
      "local-name" : "Lifecycle",
      "name" : "k8s.io/api/core/v1.Lifecycle",
      "package" : 1,
      "type" : "Named",
      "underlying" : 96
    }, {
      "fields" : [ {
        "name" : "PostStart",
        "type" : 97
      }, {
        "name" : "PreStop",
        "type" : 97
      } ],
      "name" : "struct{PostStart *k8s.io/api/core/v1.Handler \"json:\\\"postStart,omitempty\\\" protobuf:\\\"bytes,1,opt,name=postStart\\\"\"; PreStop *k8s.io/api/core/v1.Handler \"json:\\\"preStop,omitempty\\\" protobuf:\\\"bytes,2,opt,name=preStop\\\"\"}",
      "type" : "Struct",
      "underlying" : 96
    }, {
      "elem" : 76,
      "name" : "*k8s.io/api/core/v1.Handler",
      "type" : "Pointer",
      "underlying" : 97
    }, {
      "local-name" : "TerminationMessagePolicy",
      "name" : "k8s.io/api/core/v1.TerminationMessagePolicy",
      "package" : 1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "local-name" : "PullPolicy",
      "name" : "k8s.io/api/core/v1.PullPolicy",
      "package" : 1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 101,
      "name" : "*k8s.io/api/core/v1.SecurityContext",
      "type" : "Pointer",
      "underlying" : 100
    }, {
      "local-name" : "SecurityContext",
      "name" : "k8s.io/api/core/v1.SecurityContext",
      "package" : 1,
      "type" : "Named",
      "underlying" : 102
    }, {
      "fields" : [ {
        "name" : "Capabilities",
        "type" : 103
      }, {
        "name" : "Privileged",
        "type" : 20
      }, {
        "name" : "SELinuxOptions",
        "type" : 108
      }, {
        "name" : "WindowsOptions",
        "type" : 111
      }, {
        "name" : "RunAsUser",
        "type" : 115
      }, {
        "name" : "RunAsGroup",
        "type" : 115
      }, {
        "name" : "RunAsNonRoot",
        "type" : 20
      }, {
        "name" : "ReadOnlyRootFilesystem",
        "type" : 20
      }, {
        "name" : "AllowPrivilegeEscalation",
        "type" : 20
      }, {
        "name" : "ProcMount",
        "type" : 116
      } ],
      "name" : "struct{Capabilities *k8s.io/api/core/v1.Capabilities \"json:\\\"capabilities,omitempty\\\" protobuf:\\\"bytes,1,opt,name=capabilities\\\"\"; Privileged *bool \"json:\\\"privileged,omitempty\\\" protobuf:\\\"varint,2,opt,name=privileged\\\"\"; SELinuxOptions *k8s.io/api/core/v1.SELinuxOptions \"json:\\\"seLinuxOptions,omitempty\\\" protobuf:\\\"bytes,3,opt,name=seLinuxOptions\\\"\"; WindowsOptions *k8s.io/api/core/v1.WindowsSecurityContextOptions \"json:\\\"windowsOptions,omitempty\\\" protobuf:\\\"bytes,10,opt,name=windowsOptions\\\"\"; RunAsUser *int64 \"json:\\\"runAsUser,omitempty\\\" protobuf:\\\"varint,4,opt,name=runAsUser\\\"\"; RunAsGroup *int64 \"json:\\\"runAsGroup,omitempty\\\" protobuf:\\\"varint,8,opt,name=runAsGroup\\\"\"; RunAsNonRoot *bool \"json:\\\"runAsNonRoot,omitempty\\\" protobuf:\\\"varint,5,opt,name=runAsNonRoot\\\"\"; ReadOnlyRootFilesystem *bool \"json:\\\"readOnlyRootFilesystem,omitempty\\\" protobuf:\\\"varint,6,opt,name=readOnlyRootFilesystem\\\"\"; AllowPrivilegeEscalation *bool \"json:\\\"allowPrivilegeEscalation,omitempty\\\" protobuf:\\\"varint,7,opt,name=allowPrivilegeEscalation\\\"\"; ProcMount *k8s.io/api/core/v1.ProcMountType \"json:\\\"procMount,omitempty\\\" protobuf:\\\"bytes,9,opt,name=procMount\\\"\"}",
      "type" : "Struct",
      "underlying" : 102
    }, {
      "elem" : 104,
      "name" : "*k8s.io/api/core/v1.Capabilities",
      "type" : "Pointer",
      "underlying" : 103
    }, {
      "local-name" : "Capabilities",
      "name" : "k8s.io/api/core/v1.Capabilities",
      "package" : 1,
      "type" : "Named",
      "underlying" : 105
    }, {
      "fields" : [ {
        "name" : "Add",
        "type" : 106
      }, {
        "name" : "Drop",
        "type" : 106
      } ],
      "name" : "struct{Add []k8s.io/api/core/v1.Capability \"json:\\\"add,omitempty\\\" protobuf:\\\"bytes,1,rep,name=add,casttype=Capability\\\"\"; Drop []k8s.io/api/core/v1.Capability \"json:\\\"drop,omitempty\\\" protobuf:\\\"bytes,2,rep,name=drop,casttype=Capability\\\"\"}",
      "type" : "Struct",
      "underlying" : 105
    }, {
      "elem" : 107,
      "name" : "[]k8s.io/api/core/v1.Capability",
      "type" : "Slice",
      "underlying" : 106
    }, {
      "local-name" : "Capability",
      "name" : "k8s.io/api/core/v1.Capability",
      "package" : 1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 109,
      "name" : "*k8s.io/api/core/v1.SELinuxOptions",
      "type" : "Pointer",
      "underlying" : 108
    }, {
      "local-name" : "SELinuxOptions",
      "name" : "k8s.io/api/core/v1.SELinuxOptions",
      "package" : 1,
      "type" : "Named",
      "underlying" : 110
    }, {
      "fields" : [ {
        "name" : "User",
        "type" : 5
      }, {
        "name" : "Role",
        "type" : 5
      }, {
        "name" : "Type",
        "type" : 5
      }, {
        "name" : "Level",
        "type" : 5
      } ],
      "name" : "struct{User string \"json:\\\"user,omitempty\\\" protobuf:\\\"bytes,1,opt,name=user\\\"\"; Role string \"json:\\\"role,omitempty\\\" protobuf:\\\"bytes,2,opt,name=role\\\"\"; Type string \"json:\\\"type,omitempty\\\" protobuf:\\\"bytes,3,opt,name=type\\\"\"; Level string \"json:\\\"level,omitempty\\\" protobuf:\\\"bytes,4,opt,name=level\\\"\"}",
      "type" : "Struct",
      "underlying" : 110
    }, {
      "elem" : 112,
      "name" : "*k8s.io/api/core/v1.WindowsSecurityContextOptions",
      "type" : "Pointer",
      "underlying" : 111
    }, {
      "local-name" : "WindowsSecurityContextOptions",
      "name" : "k8s.io/api/core/v1.WindowsSecurityContextOptions",
      "package" : 1,
      "type" : "Named",
      "underlying" : 113
    }, {
      "fields" : [ {
        "name" : "GMSACredentialSpecName",
        "type" : 114
      }, {
        "name" : "GMSACredentialSpec",
        "type" : 114
      }, {
        "name" : "RunAsUserName",
        "type" : 114
      } ],
      "name" : "struct{GMSACredentialSpecName *string \"json:\\\"gmsaCredentialSpecName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=gmsaCredentialSpecName\\\"\"; GMSACredentialSpec *string \"json:\\\"gmsaCredentialSpec,omitempty\\\" protobuf:\\\"bytes,2,opt,name=gmsaCredentialSpec\\\"\"; RunAsUserName *string \"json:\\\"runAsUserName,omitempty\\\" protobuf:\\\"bytes,3,opt,name=runAsUserName\\\"\"}",
      "type" : "Struct",
      "underlying" : 113
    }, {
      "elem" : 5,
      "name" : "*string",
      "type" : "Pointer",
      "underlying" : 114
    }, {
      "elem" : 40,
      "name" : "*int64",
      "type" : "Pointer",
      "underlying" : 115
    }, {
      "elem" : 117,
      "name" : "*k8s.io/api/core/v1.ProcMountType",
      "type" : "Pointer",
      "underlying" : 116
    }, {
      "local-name" : "ProcMountType",
      "name" : "k8s.io/api/core/v1.ProcMountType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 119,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.EphemeralContainerCommon",
      "type" : "Pointer",
      "underlying" : 118
    }, {
      "local-name" : "EphemeralContainerCommon",
      "name" : "k8s.io/kubernetes/pkg/apis/core.EphemeralContainerCommon",
      "package" : 6,
      "type" : "Named",
      "underlying" : 120
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "Image",
        "type" : 5
      }, {
        "name" : "Command",
        "type" : 6
      }, {
        "name" : "Args",
        "type" : 6
      }, {
        "name" : "WorkingDir",
        "type" : 5
      }, {
        "name" : "Ports",
        "type" : 121
      }, {
        "name" : "EnvFrom",
        "type" : 125
      }, {
        "name" : "Env",
        "type" : 135
      }, {
        "name" : "Resources",
        "type" : 152
      }, {
        "name" : "VolumeMounts",
        "type" : 157
      }, {
        "name" : "VolumeDevices",
        "type" : 162
      }, {
        "name" : "LivenessProbe",
        "type" : 165
      }, {
        "name" : "ReadinessProbe",
        "type" : 165
      }, {
        "name" : "StartupProbe",
        "type" : 165
      }, {
        "name" : "Lifecycle",
        "type" : 183
      }, {
        "name" : "TerminationMessagePath",
        "type" : 5
      }, {
        "name" : "TerminationMessagePolicy",
        "type" : 187
      }, {
        "name" : "ImagePullPolicy",
        "type" : 188
      }, {
        "name" : "SecurityContext",
        "type" : 189
      }, {
        "name" : "Stdin",
        "type" : 21
      }, {
        "name" : "StdinOnce",
        "type" : 21
      }, {
        "name" : "TTY",
        "type" : 21
      } ],
      "name" : "struct{Name string; Image string; Command []string; Args []string; WorkingDir string; Ports []k8s.io/kubernetes/pkg/apis/core.ContainerPort; EnvFrom []k8s.io/kubernetes/pkg/apis/core.EnvFromSource; Env []k8s.io/kubernetes/pkg/apis/core.EnvVar; Resources k8s.io/kubernetes/pkg/apis/core.ResourceRequirements; VolumeMounts []k8s.io/kubernetes/pkg/apis/core.VolumeMount; VolumeDevices []k8s.io/kubernetes/pkg/apis/core.VolumeDevice; LivenessProbe *k8s.io/kubernetes/pkg/apis/core.Probe; ReadinessProbe *k8s.io/kubernetes/pkg/apis/core.Probe; StartupProbe *k8s.io/kubernetes/pkg/apis/core.Probe; Lifecycle *k8s.io/kubernetes/pkg/apis/core.Lifecycle; TerminationMessagePath string; TerminationMessagePolicy k8s.io/kubernetes/pkg/apis/core.TerminationMessagePolicy; ImagePullPolicy k8s.io/kubernetes/pkg/apis/core.PullPolicy; SecurityContext *k8s.io/kubernetes/pkg/apis/core.SecurityContext; Stdin bool; StdinOnce bool; TTY bool}",
      "type" : "Struct",
      "underlying" : 120
    }, {
      "elem" : 122,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.ContainerPort",
      "type" : "Slice",
      "underlying" : 121
    }, {
      "local-name" : "ContainerPort",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ContainerPort",
      "package" : 6,
      "type" : "Named",
      "underlying" : 123
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "HostPort",
        "type" : 10
      }, {
        "name" : "ContainerPort",
        "type" : 10
      }, {
        "name" : "Protocol",
        "type" : 124
      }, {
        "name" : "HostIP",
        "type" : 5
      } ],
      "name" : "struct{Name string; HostPort int32; ContainerPort int32; Protocol k8s.io/kubernetes/pkg/apis/core.Protocol; HostIP string}",
      "type" : "Struct",
      "underlying" : 123
    }, {
      "local-name" : "Protocol",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Protocol",
      "package" : 6,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 126,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.EnvFromSource",
      "type" : "Slice",
      "underlying" : 125
    }, {
      "local-name" : "EnvFromSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.EnvFromSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 127
    }, {
      "fields" : [ {
        "name" : "Prefix",
        "type" : 5
      }, {
        "name" : "ConfigMapRef",
        "type" : 128
      }, {
        "name" : "SecretRef",
        "type" : 133
      } ],
      "name" : "struct{Prefix string; ConfigMapRef *k8s.io/kubernetes/pkg/apis/core.ConfigMapEnvSource; SecretRef *k8s.io/kubernetes/pkg/apis/core.SecretEnvSource}",
      "type" : "Struct",
      "underlying" : 127
    }, {
      "elem" : 129,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ConfigMapEnvSource",
      "type" : "Pointer",
      "underlying" : 128
    }, {
      "local-name" : "ConfigMapEnvSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ConfigMapEnvSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 130
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 131
      }, {
        "name" : "Optional",
        "type" : 20
      } ],
      "name" : "struct{k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; Optional *bool}",
      "type" : "Struct",
      "underlying" : 130
    }, {
      "local-name" : "LocalObjectReference",
      "name" : "k8s.io/kubernetes/pkg/apis/core.LocalObjectReference",
      "package" : 6,
      "type" : "Named",
      "underlying" : 132
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      } ],
      "name" : "struct{Name string}",
      "type" : "Struct",
      "underlying" : 132
    }, {
      "elem" : 134,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.SecretEnvSource",
      "type" : "Pointer",
      "underlying" : 133
    }, {
      "local-name" : "SecretEnvSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.SecretEnvSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 130
    }, {
      "elem" : 136,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.EnvVar",
      "type" : "Slice",
      "underlying" : 135
    }, {
      "local-name" : "EnvVar",
      "name" : "k8s.io/kubernetes/pkg/apis/core.EnvVar",
      "package" : 6,
      "type" : "Named",
      "underlying" : 137
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "Value",
        "type" : 5
      }, {
        "name" : "ValueFrom",
        "type" : 138
      } ],
      "name" : "struct{Name string; Value string; ValueFrom *k8s.io/kubernetes/pkg/apis/core.EnvVarSource}",
      "type" : "Struct",
      "underlying" : 137
    }, {
      "elem" : 139,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.EnvVarSource",
      "type" : "Pointer",
      "underlying" : 138
    }, {
      "local-name" : "EnvVarSource",
      "name" : "k8s.io/kubernetes/pkg/apis/core.EnvVarSource",
      "package" : 6,
      "type" : "Named",
      "underlying" : 140
    }, {
      "fields" : [ {
        "name" : "FieldRef",
        "type" : 141
      }, {
        "name" : "ResourceFieldRef",
        "type" : 144
      }, {
        "name" : "ConfigMapKeyRef",
        "type" : 147
      }, {
        "name" : "SecretKeyRef",
        "type" : 150
      } ],
      "name" : "struct{FieldRef *k8s.io/kubernetes/pkg/apis/core.ObjectFieldSelector; ResourceFieldRef *k8s.io/kubernetes/pkg/apis/core.ResourceFieldSelector; ConfigMapKeyRef *k8s.io/kubernetes/pkg/apis/core.ConfigMapKeySelector; SecretKeyRef *k8s.io/kubernetes/pkg/apis/core.SecretKeySelector}",
      "type" : "Struct",
      "underlying" : 140
    }, {
      "elem" : 142,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ObjectFieldSelector",
      "type" : "Pointer",
      "underlying" : 141
    }, {
      "local-name" : "ObjectFieldSelector",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ObjectFieldSelector",
      "package" : 6,
      "type" : "Named",
      "underlying" : 143
    }, {
      "fields" : [ {
        "name" : "APIVersion",
        "type" : 5
      }, {
        "name" : "FieldPath",
        "type" : 5
      } ],
      "name" : "struct{APIVersion string; FieldPath string}",
      "type" : "Struct",
      "underlying" : 143
    }, {
      "elem" : 145,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ResourceFieldSelector",
      "type" : "Pointer",
      "underlying" : 144
    }, {
      "local-name" : "ResourceFieldSelector",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ResourceFieldSelector",
      "package" : 6,
      "type" : "Named",
      "underlying" : 146
    }, {
      "fields" : [ {
        "name" : "ContainerName",
        "type" : 5
      }, {
        "name" : "Resource",
        "type" : 5
      }, {
        "name" : "Divisor",
        "type" : 36
      } ],
      "name" : "struct{ContainerName string; Resource string; Divisor k8s.io/apimachinery/pkg/api/resource.Quantity}",
      "type" : "Struct",
      "underlying" : 146
    }, {
      "elem" : 148,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ConfigMapKeySelector",
      "type" : "Pointer",
      "underlying" : 147
    }, {
      "local-name" : "ConfigMapKeySelector",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ConfigMapKeySelector",
      "package" : 6,
      "type" : "Named",
      "underlying" : 149
    }, {
      "fields" : [ {
        "name" : "LocalObjectReference",
        "type" : 131
      }, {
        "name" : "Key",
        "type" : 5
      }, {
        "name" : "Optional",
        "type" : 20
      } ],
      "name" : "struct{k8s.io/kubernetes/pkg/apis/core.LocalObjectReference; Key string; Optional *bool}",
      "type" : "Struct",
      "underlying" : 149
    }, {
      "elem" : 151,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.SecretKeySelector",
      "type" : "Pointer",
      "underlying" : 150
    }, {
      "local-name" : "SecretKeySelector",
      "name" : "k8s.io/kubernetes/pkg/apis/core.SecretKeySelector",
      "package" : 6,
      "type" : "Named",
      "underlying" : 149
    }, {
      "local-name" : "ResourceRequirements",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ResourceRequirements",
      "package" : 6,
      "type" : "Named",
      "underlying" : 153
    }, {
      "fields" : [ {
        "name" : "Limits",
        "type" : 154
      }, {
        "name" : "Requests",
        "type" : 154
      } ],
      "name" : "struct{Limits k8s.io/kubernetes/pkg/apis/core.ResourceList; Requests k8s.io/kubernetes/pkg/apis/core.ResourceList}",
      "type" : "Struct",
      "underlying" : 153
    }, {
      "local-name" : "ResourceList",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ResourceList",
      "package" : 6,
      "type" : "Named",
      "underlying" : 155
    }, {
      "elem" : 36,
      "key" : 156,
      "name" : "map[k8s.io/kubernetes/pkg/apis/core.ResourceName]k8s.io/apimachinery/pkg/api/resource.Quantity",
      "type" : "Map",
      "underlying" : 155
    }, {
      "local-name" : "ResourceName",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ResourceName",
      "package" : 6,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 158,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.VolumeMount",
      "type" : "Slice",
      "underlying" : 157
    }, {
      "local-name" : "VolumeMount",
      "name" : "k8s.io/kubernetes/pkg/apis/core.VolumeMount",
      "package" : 6,
      "type" : "Named",
      "underlying" : 159
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "ReadOnly",
        "type" : 21
      }, {
        "name" : "MountPath",
        "type" : 5
      }, {
        "name" : "SubPath",
        "type" : 5
      }, {
        "name" : "MountPropagation",
        "type" : 160
      }, {
        "name" : "SubPathExpr",
        "type" : 5
      } ],
      "name" : "struct{Name string; ReadOnly bool; MountPath string; SubPath string; MountPropagation *k8s.io/kubernetes/pkg/apis/core.MountPropagationMode; SubPathExpr string}",
      "type" : "Struct",
      "underlying" : 159
    }, {
      "elem" : 161,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.MountPropagationMode",
      "type" : "Pointer",
      "underlying" : 160
    }, {
      "local-name" : "MountPropagationMode",
      "name" : "k8s.io/kubernetes/pkg/apis/core.MountPropagationMode",
      "package" : 6,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 163,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.VolumeDevice",
      "type" : "Slice",
      "underlying" : 162
    }, {
      "local-name" : "VolumeDevice",
      "name" : "k8s.io/kubernetes/pkg/apis/core.VolumeDevice",
      "package" : 6,
      "type" : "Named",
      "underlying" : 164
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "DevicePath",
        "type" : 5
      } ],
      "name" : "struct{Name string; DevicePath string}",
      "type" : "Struct",
      "underlying" : 164
    }, {
      "elem" : 166,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.Probe",
      "type" : "Pointer",
      "underlying" : 165
    }, {
      "local-name" : "Probe",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Probe",
      "package" : 6,
      "type" : "Named",
      "underlying" : 167
    }, {
      "fields" : [ {
        "name" : "Handler",
        "type" : 168
      }, {
        "name" : "InitialDelaySeconds",
        "type" : 10
      }, {
        "name" : "TimeoutSeconds",
        "type" : 10
      }, {
        "name" : "PeriodSeconds",
        "type" : 10
      }, {
        "name" : "SuccessThreshold",
        "type" : 10
      }, {
        "name" : "FailureThreshold",
        "type" : 10
      } ],
      "name" : "struct{k8s.io/kubernetes/pkg/apis/core.Handler; InitialDelaySeconds int32; TimeoutSeconds int32; PeriodSeconds int32; SuccessThreshold int32; FailureThreshold int32}",
      "type" : "Struct",
      "underlying" : 167
    }, {
      "local-name" : "Handler",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Handler",
      "package" : 6,
      "type" : "Named",
      "underlying" : 169
    }, {
      "fields" : [ {
        "name" : "Exec",
        "type" : 170
      }, {
        "name" : "HTTPGet",
        "type" : 173
      }, {
        "name" : "TCPSocket",
        "type" : 180
      } ],
      "name" : "struct{Exec *k8s.io/kubernetes/pkg/apis/core.ExecAction; HTTPGet *k8s.io/kubernetes/pkg/apis/core.HTTPGetAction; TCPSocket *k8s.io/kubernetes/pkg/apis/core.TCPSocketAction}",
      "type" : "Struct",
      "underlying" : 169
    }, {
      "elem" : 171,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ExecAction",
      "type" : "Pointer",
      "underlying" : 170
    }, {
      "local-name" : "ExecAction",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ExecAction",
      "package" : 6,
      "type" : "Named",
      "underlying" : 172
    }, {
      "fields" : [ {
        "name" : "Command",
        "type" : 6
      } ],
      "name" : "struct{Command []string}",
      "type" : "Struct",
      "underlying" : 172
    }, {
      "elem" : 174,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.HTTPGetAction",
      "type" : "Pointer",
      "underlying" : 173
    }, {
      "local-name" : "HTTPGetAction",
      "name" : "k8s.io/kubernetes/pkg/apis/core.HTTPGetAction",
      "package" : 6,
      "type" : "Named",
      "underlying" : 175
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 5
      }, {
        "name" : "Port",
        "type" : 84
      }, {
        "name" : "Host",
        "type" : 5
      }, {
        "name" : "Scheme",
        "type" : 176
      }, {
        "name" : "HTTPHeaders",
        "type" : 177
      } ],
      "name" : "struct{Path string; Port k8s.io/apimachinery/pkg/util/intstr.IntOrString; Host string; Scheme k8s.io/kubernetes/pkg/apis/core.URIScheme; HTTPHeaders []k8s.io/kubernetes/pkg/apis/core.HTTPHeader}",
      "type" : "Struct",
      "underlying" : 175
    }, {
      "local-name" : "URIScheme",
      "name" : "k8s.io/kubernetes/pkg/apis/core.URIScheme",
      "package" : 6,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 178,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.HTTPHeader",
      "type" : "Slice",
      "underlying" : 177
    }, {
      "local-name" : "HTTPHeader",
      "name" : "k8s.io/kubernetes/pkg/apis/core.HTTPHeader",
      "package" : 6,
      "type" : "Named",
      "underlying" : 179
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "Value",
        "type" : 5
      } ],
      "name" : "struct{Name string; Value string}",
      "type" : "Struct",
      "underlying" : 179
    }, {
      "elem" : 181,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.TCPSocketAction",
      "type" : "Pointer",
      "underlying" : 180
    }, {
      "local-name" : "TCPSocketAction",
      "name" : "k8s.io/kubernetes/pkg/apis/core.TCPSocketAction",
      "package" : 6,
      "type" : "Named",
      "underlying" : 182
    }, {
      "fields" : [ {
        "name" : "Port",
        "type" : 84
      }, {
        "name" : "Host",
        "type" : 5
      } ],
      "name" : "struct{Port k8s.io/apimachinery/pkg/util/intstr.IntOrString; Host string}",
      "type" : "Struct",
      "underlying" : 182
    }, {
      "elem" : 184,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.Lifecycle",
      "type" : "Pointer",
      "underlying" : 183
    }, {
      "local-name" : "Lifecycle",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Lifecycle",
      "package" : 6,
      "type" : "Named",
      "underlying" : 185
    }, {
      "fields" : [ {
        "name" : "PostStart",
        "type" : 186
      }, {
        "name" : "PreStop",
        "type" : 186
      } ],
      "name" : "struct{PostStart *k8s.io/kubernetes/pkg/apis/core.Handler; PreStop *k8s.io/kubernetes/pkg/apis/core.Handler}",
      "type" : "Struct",
      "underlying" : 185
    }, {
      "elem" : 168,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.Handler",
      "type" : "Pointer",
      "underlying" : 186
    }, {
      "local-name" : "TerminationMessagePolicy",
      "name" : "k8s.io/kubernetes/pkg/apis/core.TerminationMessagePolicy",
      "package" : 6,
      "type" : "Named",
      "underlying" : 5
    }, {
      "local-name" : "PullPolicy",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PullPolicy",
      "package" : 6,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 190,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.SecurityContext",
      "type" : "Pointer",
      "underlying" : 189
    }, {
      "local-name" : "SecurityContext",
      "name" : "k8s.io/kubernetes/pkg/apis/core.SecurityContext",
      "package" : 6,
      "type" : "Named",
      "underlying" : 191
    }, {
      "fields" : [ {
        "name" : "Capabilities",
        "type" : 192
      }, {
        "name" : "Privileged",
        "type" : 20
      }, {
        "name" : "SELinuxOptions",
        "type" : 197
      }, {
        "name" : "WindowsOptions",
        "type" : 200
      }, {
        "name" : "RunAsUser",
        "type" : 115
      }, {
        "name" : "RunAsGroup",
        "type" : 115
      }, {
        "name" : "RunAsNonRoot",
        "type" : 20
      }, {
        "name" : "ReadOnlyRootFilesystem",
        "type" : 20
      }, {
        "name" : "AllowPrivilegeEscalation",
        "type" : 20
      }, {
        "name" : "ProcMount",
        "type" : 203
      } ],
      "name" : "struct{Capabilities *k8s.io/kubernetes/pkg/apis/core.Capabilities; Privileged *bool; SELinuxOptions *k8s.io/kubernetes/pkg/apis/core.SELinuxOptions; WindowsOptions *k8s.io/kubernetes/pkg/apis/core.WindowsSecurityContextOptions; RunAsUser *int64; RunAsGroup *int64; RunAsNonRoot *bool; ReadOnlyRootFilesystem *bool; AllowPrivilegeEscalation *bool; ProcMount *k8s.io/kubernetes/pkg/apis/core.ProcMountType}",
      "type" : "Struct",
      "underlying" : 191
    }, {
      "elem" : 193,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.Capabilities",
      "type" : "Pointer",
      "underlying" : 192
    }, {
      "local-name" : "Capabilities",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Capabilities",
      "package" : 6,
      "type" : "Named",
      "underlying" : 194
    }, {
      "fields" : [ {
        "name" : "Add",
        "type" : 195
      }, {
        "name" : "Drop",
        "type" : 195
      } ],
      "name" : "struct{Add []k8s.io/kubernetes/pkg/apis/core.Capability; Drop []k8s.io/kubernetes/pkg/apis/core.Capability}",
      "type" : "Struct",
      "underlying" : 194
    }, {
      "elem" : 196,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.Capability",
      "type" : "Slice",
      "underlying" : 195
    }, {
      "local-name" : "Capability",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Capability",
      "package" : 6,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 198,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.SELinuxOptions",
      "type" : "Pointer",
      "underlying" : 197
    }, {
      "local-name" : "SELinuxOptions",
      "name" : "k8s.io/kubernetes/pkg/apis/core.SELinuxOptions",
      "package" : 6,
      "type" : "Named",
      "underlying" : 199
    }, {
      "fields" : [ {
        "name" : "User",
        "type" : 5
      }, {
        "name" : "Role",
        "type" : 5
      }, {
        "name" : "Type",
        "type" : 5
      }, {
        "name" : "Level",
        "type" : 5
      } ],
      "name" : "struct{User string; Role string; Type string; Level string}",
      "type" : "Struct",
      "underlying" : 199
    }, {
      "elem" : 201,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.WindowsSecurityContextOptions",
      "type" : "Pointer",
      "underlying" : 200
    }, {
      "local-name" : "WindowsSecurityContextOptions",
      "name" : "k8s.io/kubernetes/pkg/apis/core.WindowsSecurityContextOptions",
      "package" : 6,
      "type" : "Named",
      "underlying" : 202
    }, {
      "fields" : [ {
        "name" : "GMSACredentialSpecName",
        "type" : 114
      }, {
        "name" : "GMSACredentialSpec",
        "type" : 114
      }, {
        "name" : "RunAsUserName",
        "type" : 114
      } ],
      "name" : "struct{GMSACredentialSpecName *string; GMSACredentialSpec *string; RunAsUserName *string}",
      "type" : "Struct",
      "underlying" : 202
    }, {
      "elem" : 204,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ProcMountType",
      "type" : "Pointer",
      "underlying" : 203
    }, {
      "local-name" : "ProcMountType",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ProcMountType",
      "package" : 6,
      "type" : "Named",
      "underlying" : 5
    }, {
      "local-name" : "Scope",
      "name" : "k8s.io/apimachinery/pkg/conversion.Scope",
      "package" : 7,
      "type" : "Named",
      "underlying" : 206
    }, {
      "methods" : [ {
        "name" : "Convert",
        "type" : 207
      }, {
        "name" : "DefaultConvert",
        "type" : 207
      }, {
        "name" : "DestTag",
        "type" : 218
      }, {
        "name" : "Flags",
        "type" : 221
      }, {
        "name" : "Meta",
        "type" : 223
      }, {
        "name" : "SrcTag",
        "type" : 218
      } ],
      "name" : "interface{Convert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DefaultConvert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DestTag() reflect.StructTag; Flags() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags; Meta() *k8s.io/apimachinery/pkg/conversion.Meta; SrcTag() reflect.StructTag}",
      "type" : "Interface",
      "underlying" : 206
    }, {
      "name" : "func(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error",
      "params" : 208,
      "recv" : 1,
      "results" : 212,
      "type" : "Signature",
      "underlying" : 207,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 209
      }, {
        "name" : "dest",
        "type" : 209
      }, {
        "name" : "flags",
        "type" : 210
      } ],
      "name" : "(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 208
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 209
    }, {
      "local-name" : "FieldMatchingFlags",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "package" : 7,
      "type" : "Named",
      "underlying" : 211
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 211
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 213
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 212
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 214
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 215
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 214
    }, {
      "name" : "func() string",
      "params" : 216,
      "recv" : 0,
      "results" : 217,
      "type" : "Signature",
      "underlying" : 215,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 216
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 5
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 217
    }, {
      "name" : "func() reflect.StructTag",
      "params" : 216,
      "recv" : 2,
      "results" : 219,
      "type" : "Signature",
      "underlying" : 218,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 220
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 219
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 8,
      "type" : "Named",
      "underlying" : 5
    }, {
      "name" : "func() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "params" : 216,
      "recv" : 3,
      "results" : 222,
      "type" : "Signature",
      "underlying" : 221,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 210
      } ],
      "name" : "(k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 222
    }, {
      "name" : "func() *k8s.io/apimachinery/pkg/conversion.Meta",
      "params" : 216,
      "recv" : 4,
      "results" : 224,
      "type" : "Signature",
      "underlying" : 223,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 225
      } ],
      "name" : "(*k8s.io/apimachinery/pkg/conversion.Meta)",
      "type" : "Tuple",
      "underlying" : 224
    }, {
      "elem" : 226,
      "name" : "*k8s.io/apimachinery/pkg/conversion.Meta",
      "type" : "Pointer",
      "underlying" : 225
    }, {
      "local-name" : "Meta",
      "name" : "k8s.io/apimachinery/pkg/conversion.Meta",
      "package" : 7,
      "type" : "Named",
      "underlying" : 227
    }, {
      "fields" : [ {
        "name" : "KeyNameMapping",
        "type" : 228
      }, {
        "name" : "Context",
        "type" : 209
      } ],
      "name" : "struct{KeyNameMapping k8s.io/apimachinery/pkg/conversion.FieldMappingFunc; Context interface{}}",
      "type" : "Struct",
      "underlying" : 227
    }, {
      "local-name" : "FieldMappingFunc",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMappingFunc",
      "package" : 7,
      "type" : "Named",
      "underlying" : 229
    }, {
      "name" : "func(key string, sourceTag reflect.StructTag, destTag reflect.StructTag) (source string, dest string)",
      "params" : 230,
      "recv" : -1,
      "results" : 231,
      "type" : "Signature",
      "underlying" : 229,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 5
      }, {
        "name" : "sourceTag",
        "type" : 220
      }, {
        "name" : "destTag",
        "type" : 220
      } ],
      "name" : "(key string, sourceTag reflect.StructTag, destTag reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 230
    }, {
      "fields" : [ {
        "name" : "source",
        "type" : 5
      }, {
        "name" : "dest",
        "type" : 5
      } ],
      "name" : "(source string, dest string)",
      "type" : "Tuple",
      "underlying" : 231
    }, {
      "elem" : 6,
      "name" : "*[]string",
      "type" : "Pointer",
      "underlying" : 232
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 9,
      "type" : "Basic",
      "underlying" : 233
    }, {
      "elem" : 121,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.ContainerPort",
      "type" : "Pointer",
      "underlying" : 234
    }, {
      "elem" : 7,
      "name" : "*[]k8s.io/api/core/v1.ContainerPort",
      "type" : "Pointer",
      "underlying" : 235
    }, {
      "elem" : 125,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.EnvFromSource",
      "type" : "Pointer",
      "underlying" : 236
    }, {
      "elem" : 12,
      "name" : "*[]k8s.io/api/core/v1.EnvFromSource",
      "type" : "Pointer",
      "underlying" : 237
    }, {
      "elem" : 135,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.EnvVar",
      "type" : "Pointer",
      "underlying" : 238
    }, {
      "elem" : 24,
      "name" : "*[]k8s.io/api/core/v1.EnvVar",
      "type" : "Pointer",
      "underlying" : 239
    }, {
      "name" : "func(in *k8s.io/api/core/v1.ResourceRequirements, out *k8s.io/kubernetes/pkg/apis/core.ResourceRequirements, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 241,
      "recv" : -1,
      "results" : 212,
      "type" : "Signature",
      "underlying" : 240,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 242
      }, {
        "name" : "out",
        "type" : 243
      }, {
        "name" : "s",
        "type" : 205
      } ],
      "name" : "(in *k8s.io/api/core/v1.ResourceRequirements, out *k8s.io/kubernetes/pkg/apis/core.ResourceRequirements, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 241
    }, {
      "elem" : 60,
      "name" : "*k8s.io/api/core/v1.ResourceRequirements",
      "type" : "Pointer",
      "underlying" : 242
    }, {
      "elem" : 152,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ResourceRequirements",
      "type" : "Pointer",
      "underlying" : 243
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 244
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 245
    }, {
      "elem" : 157,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.VolumeMount",
      "type" : "Pointer",
      "underlying" : 246
    }, {
      "elem" : 65,
      "name" : "*[]k8s.io/api/core/v1.VolumeMount",
      "type" : "Pointer",
      "underlying" : 247
    }, {
      "elem" : 162,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.VolumeDevice",
      "type" : "Pointer",
      "underlying" : 248
    }, {
      "elem" : 70,
      "name" : "*[]k8s.io/api/core/v1.VolumeDevice",
      "type" : "Pointer",
      "underlying" : 249
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 213,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 7,
      "type" : 205,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 7,
      "type" : 205,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 7,
      "type" : 205,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 7,
      "type" : 205,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 118,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 205,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 213,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Name",
      "package" : 6,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Name",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Image",
      "package" : 6,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Image",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Command",
      "package" : 6,
      "type" : 6,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Command",
      "package" : 1,
      "type" : 6,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Args",
      "package" : 6,
      "type" : 6,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Args",
      "package" : 1,
      "type" : 6,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "WorkingDir",
      "package" : 6,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "WorkingDir",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Ports",
      "package" : 6,
      "type" : 121,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Ports",
      "package" : 1,
      "type" : 7,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "EnvFrom",
      "package" : 6,
      "type" : 125,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "EnvFrom",
      "package" : 1,
      "type" : 12,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Env",
      "package" : 6,
      "type" : 135,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Env",
      "package" : 1,
      "type" : 24,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Resources",
      "package" : 1,
      "type" : 60,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Resources",
      "package" : 6,
      "type" : 152,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 213,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "VolumeMounts",
      "package" : 6,
      "type" : 157,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "VolumeMounts",
      "package" : 1,
      "type" : 65,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "VolumeDevices",
      "package" : 6,
      "type" : 162,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "VolumeDevices",
      "package" : 1,
      "type" : 70,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "LivenessProbe",
      "package" : 6,
      "type" : 165,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "LivenessProbe",
      "package" : 1,
      "type" : 73,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ReadinessProbe",
      "package" : 6,
      "type" : 165,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ReadinessProbe",
      "package" : 1,
      "type" : 73,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "StartupProbe",
      "package" : 6,
      "type" : 165,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "StartupProbe",
      "package" : 1,
      "type" : 73,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Lifecycle",
      "package" : 6,
      "type" : 183,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Lifecycle",
      "package" : 1,
      "type" : 94,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "TerminationMessagePath",
      "package" : 6,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "TerminationMessagePath",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "TerminationMessagePolicy",
      "package" : 6,
      "type" : 187,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "TerminationMessagePolicy",
      "package" : 1,
      "type" : 98,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ImagePullPolicy",
      "package" : 6,
      "type" : 188,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ImagePullPolicy",
      "package" : 1,
      "type" : 99,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "SecurityContext",
      "package" : 6,
      "type" : 189,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "SecurityContext",
      "package" : 1,
      "type" : 100,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Stdin",
      "package" : 6,
      "type" : 21,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Stdin",
      "package" : 1,
      "type" : 21,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "StdinOnce",
      "package" : 6,
      "type" : 21,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "StdinOnce",
      "package" : 1,
      "type" : 21,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "TTY",
      "package" : 6,
      "type" : 21,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "TTY",
      "package" : 1,
      "type" : 21,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}