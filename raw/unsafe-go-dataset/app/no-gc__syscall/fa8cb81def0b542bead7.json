{
  "usage" : {
    "file" : "syscall_linux.go",
    "label1" : "syscall",
    "label2" : "no-gc",
    "line" : "26",
    "module" : "github.com/syndtr/gocapability",
    "pkg" : "github.com/syndtr/gocapability/capability",
    "project" : "kubernetes/kubernetes",
    "snippet" : "_, _, e1 := syscall.Syscall(syscall.SYS_CAPGET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)",
    "version" : "v0.0.0-20180916011248-d98352740cb2"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 1, 2 ],
      "exit" : false,
      "out-vars" : [ 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 1, 2 ],
      "exit" : false,
      "out-vars" : [ 4 ],
      "decl-vars" : [ 4, 5, 6 ],
      "line-start" : 26,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "_"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "_"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "e1"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 18,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "125"
            }
          }, {
            "coerced-to" : {
              "go-type" : 18,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 18,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uintptr"
              }
            },
            "go-type" : 18,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 22,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 2,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 22,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 22,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "hdr",
                  "variable" : 1
                }
              },
              "type" : "cast"
            },
            "type" : "cast"
          }, {
            "coerced-to" : {
              "go-type" : 18,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 18,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uintptr"
              }
            },
            "go-type" : 18,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 22,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 2,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 22,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 22,
              "kind" : "expression",
              "target" : {
                "go-type" : 7,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "data",
                  "variable" : 2
                }
              },
              "type" : "cast"
            },
            "type" : "cast"
          }, {
            "go-type" : 18,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 20,
            "kind" : "expression",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 1,
              "value" : "syscall"
            },
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Syscall"
            }
          },
          "go-type" : 17,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 26,
      "code" : "_, _, e1 := syscall.Syscall(syscall.SYS_CAPGET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)",
      "entry" : false,
      "use-vars" : [ 2, 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4, 5 ],
      "in-vars" : [ 4 ],
      "exit" : false,
      "out-vars" : [ 4 ],
      "decl-vars" : [ ],
      "line-start" : 27,
      "ast" : {
        "condition" : {
          "go-type" : 23,
          "kind" : "expression",
          "left" : {
            "go-type" : 19,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "e1",
              "variable" : 4
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 19,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 29,
      "code" : "if e1 != 0 {\n\terr = e1\n}",
      "entry" : false,
      "use-vars" : [ 4 ]
    }, {
      "update-vars" : [ 3 ],
      "successors" : [ 5 ],
      "in-vars" : [ 4 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 28,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 11,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 3
          }
        } ],
        "right" : [ {
          "go-type" : 19,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "e1",
            "variable" : 4
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 3 ],
      "line-end" : 28,
      "code" : "err = e1",
      "entry" : false,
      "use-vars" : [ 4 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 30,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ ]
      },
      "assign-vars" : [ ],
      "line-end" : 30,
      "code" : "return",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func capget(hdr *capHeader, data *capData) (err error) {\n\t_, _, e1 := syscall.Syscall(syscall.SYS_CAPGET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)\n\tif e1 != 0 {\n\t\terr = e1\n\t}\n\treturn\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "capget",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "Syscall",
      "package" : 1,
      "type" : 20,
      "exported" : true
    } ],
    "line-end" : 31,
    "line-start" : 25,
    "names" : [ "capget" ],
    "package" : 0,
    "packages" : [ {
      "name" : "capability",
      "path" : "github.com/syndtr/gocapability/capability"
    }, {
      "name" : "syscall",
      "path" : "syscall"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 1, 2 ],
    "receivers" : [ ],
    "results" : [ 3 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(hdr *github.com/syndtr/gocapability/capability.capHeader, data *github.com/syndtr/gocapability/capability.capData) (err error)",
      "params" : 1,
      "recv" : -1,
      "results" : 10,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hdr",
        "type" : 2
      }, {
        "name" : "data",
        "type" : 7
      } ],
      "name" : "(hdr *github.com/syndtr/gocapability/capability.capHeader, data *github.com/syndtr/gocapability/capability.capData)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*github.com/syndtr/gocapability/capability.capHeader",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "capHeader",
      "name" : "github.com/syndtr/gocapability/capability.capHeader",
      "package" : 0,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "version",
        "type" : 5
      }, {
        "name" : "pid",
        "type" : 6
      } ],
      "name" : "struct{version uint32; pid int32}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 5
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 6
    }, {
      "elem" : 8,
      "name" : "*github.com/syndtr/gocapability/capability.capData",
      "type" : "Pointer",
      "underlying" : 7
    }, {
      "local-name" : "capData",
      "name" : "github.com/syndtr/gocapability/capability.capData",
      "package" : 0,
      "type" : "Named",
      "underlying" : 9
    }, {
      "fields" : [ {
        "name" : "effective",
        "type" : 5
      }, {
        "name" : "permitted",
        "type" : 5
      }, {
        "name" : "inheritable",
        "type" : 5
      } ],
      "name" : "struct{effective uint32; permitted uint32; inheritable uint32}",
      "type" : "Struct",
      "underlying" : 9
    }, {
      "fields" : [ {
        "name" : "err",
        "type" : 11
      } ],
      "name" : "(err error)",
      "type" : "Tuple",
      "underlying" : 10
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 12
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 13
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 12
    }, {
      "name" : "func() string",
      "params" : 14,
      "recv" : 0,
      "results" : 15,
      "type" : "Signature",
      "underlying" : 13,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 14
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 16
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 15
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 16
    }, {
      "fields" : [ {
        "name" : "r1",
        "type" : 18
      }, {
        "name" : "r2",
        "type" : 18
      }, {
        "name" : "err",
        "type" : 19
      } ],
      "name" : "(r1 uintptr, r2 uintptr, err syscall.Errno)",
      "type" : "Tuple",
      "underlying" : 17
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 18
    }, {
      "local-name" : "Errno",
      "name" : "syscall.Errno",
      "package" : 1,
      "type" : "Named",
      "underlying" : 18
    }, {
      "name" : "func(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)",
      "params" : 21,
      "recv" : -1,
      "results" : 17,
      "type" : "Signature",
      "underlying" : 20,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "trap",
        "type" : 18
      }, {
        "name" : "a1",
        "type" : 18
      }, {
        "name" : "a2",
        "type" : 18
      }, {
        "name" : "a3",
        "type" : 18
      } ],
      "name" : "(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr)",
      "type" : "Tuple",
      "underlying" : 21
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 2,
      "type" : "Basic",
      "underlying" : 22
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 23
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 11,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "hdr",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "data",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 11,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "e1",
      "package" : 0,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "_",
      "package" : 0,
      "type" : 18,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "_",
      "package" : 0,
      "type" : 18,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}