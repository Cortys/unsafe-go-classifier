{
  "usage" : {
    "file" : "utils_linux.go",
    "label1" : "syscall",
    "label2" : "no-gc",
    "line" : "34",
    "module" : "go.elastic.co/apm",
    "pkg" : "go.elastic.co/apm",
    "project" : "elastic/beats",
    "snippet" : "uintptr(unsafe.Pointer(&buf[0])),",
    "version" : "v1.7.2"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ 3 ],
      "decl-vars" : [ 3 ],
      "line-start" : 31,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "kind" : "decl",
          "specs" : [ {
            "comments" : [ ],
            "declared-type" : {
              "element" : {
                "go-type" : 9,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 9,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "byte"
                }
              },
              "go-type" : 8,
              "kind" : "type",
              "length" : {
                "go-type" : 10,
                "kind" : "constant",
                "value" : {
                  "type" : "INT",
                  "value" : "16"
                }
              },
              "type" : "array"
            },
            "kind" : "spec",
            "names" : [ {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "buf"
            } ],
            "type" : "var",
            "values" : [ ]
          } ],
          "type" : "var"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 31,
      "code" : "// PR_GET_NAME (since Linux 2.6.11)\n// Return the name of the calling thread, in the buffer pointed to by\n// (char *) arg2.  The buffer should allow space for up to 16 bytes;\n// the returned string will be null-terminated.\nvar buf [16]byte",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5, 6 ],
      "in-vars" : [ 3, 4 ],
      "exit" : false,
      "out-vars" : [ 3, 4 ],
      "decl-vars" : [ ],
      "line-start" : 32,
      "ast" : {
        "condition" : {
          "go-type" : 19,
          "kind" : "expression",
          "left" : {
            "go-type" : 13,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "errno",
              "variable" : 4
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 13,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 38,
      "code" : "if _, _, errno := syscall.RawSyscall6(\n\tsyscall.SYS_PRCTL, syscall.PR_GET_NAME,\n\tuintptr(unsafe.Pointer(&buf[0])),\n\t0, 0, 0, 0,\n); errno != 0 {\n\treturn \"\", errno\n}",
      "entry" : false,
      "use-vars" : [ 4 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 3 ],
      "exit" : false,
      "out-vars" : [ 3, 4 ],
      "decl-vars" : [ 5, 6, 4 ],
      "line-start" : 32,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "_"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "_"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "errno"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 12,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "157"
            }
          }, {
            "go-type" : 12,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "16"
            }
          }, {
            "coerced-to" : {
              "go-type" : 12,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 12,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uintptr"
              }
            },
            "go-type" : 12,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 16,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 2,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 16,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 16,
              "kind" : "expression",
              "target" : {
                "go-type" : 17,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "go-type" : 9,
                  "index" : {
                    "go-type" : 18,
                    "kind" : "constant",
                    "value" : {
                      "type" : "INT",
                      "value" : "0"
                    }
                  },
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 8,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "buf",
                      "variable" : 3
                    }
                  },
                  "type" : "index"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          }, {
            "go-type" : 12,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          }, {
            "go-type" : 12,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          }, {
            "go-type" : 12,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          }, {
            "go-type" : 12,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 14,
            "kind" : "expression",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 1,
              "value" : "syscall"
            },
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "RawSyscall6"
            }
          },
          "go-type" : 11,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 36,
      "code" : "_, _, errno := syscall.RawSyscall6(\n\tsyscall.SYS_PRCTL, syscall.PR_GET_NAME,\n\tuintptr(unsafe.Pointer(&buf[0])),\n\t0, 0, 0, 0,\n)",
      "entry" : false,
      "use-vars" : [ 3 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 4 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 37,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "constant",
          "value" : {
            "type" : "STRING",
            "value" : ""
          }
        }, {
          "go-type" : 13,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "errno",
            "variable" : 4
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 37,
      "code" : "return \"\", errno",
      "entry" : false,
      "use-vars" : [ 4 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 3 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 39,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "coerced-to" : {
            "go-type" : 3,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 3,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "string"
            }
          },
          "go-type" : 3,
          "kind" : "expression",
          "target" : {
            "go-type" : 20,
            "type" : "slice",
            "three" : false,
            "high" : {
              "arguments" : [ {
                "go-type" : 20,
                "type" : "slice",
                "three" : false,
                "high" : null,
                "max" : null,
                "kind" : "expression",
                "low" : null,
                "target" : {
                  "go-type" : 8,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "buf",
                    "variable" : 3
                  }
                }
              }, {
                "go-type" : 9,
                "kind" : "constant",
                "value" : {
                  "type" : "INT",
                  "value" : "0"
                }
              } ],
              "ellipsis" : false,
              "function" : {
                "go-type" : 21,
                "kind" : "expression",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 3,
                  "value" : "bytes"
                },
                "type" : "identifier",
                "value" : {
                  "function" : 2,
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "IndexByte"
                }
              },
              "go-type" : 18,
              "kind" : "expression",
              "type" : "call"
            },
            "max" : null,
            "kind" : "expression",
            "low" : null,
            "target" : {
              "go-type" : 8,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "buf",
                "variable" : 3
              }
            }
          },
          "type" : "cast"
        }, {
          "go-type" : 24,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 39,
      "code" : "return string(buf[:bytes.IndexByte(buf[:], 0)]), nil",
      "entry" : false,
      "use-vars" : [ 3 ]
    } ],
    "code" : "func currentProcessTitle() (string, error) {\n\t// PR_GET_NAME (since Linux 2.6.11)\n\t// Return the name of the calling thread, in the buffer pointed to by\n\t// (char *) arg2.  The buffer should allow space for up to 16 bytes;\n\t// the returned string will be null-terminated.\n\tvar buf [16]byte\n\tif _, _, errno := syscall.RawSyscall6(\n\t\tsyscall.SYS_PRCTL, syscall.PR_GET_NAME,\n\t\tuintptr(unsafe.Pointer(&buf[0])),\n\t\t0, 0, 0, 0,\n\t); errno != 0 {\n\t\treturn \"\", errno\n\t}\n\treturn string(buf[:bytes.IndexByte(buf[:], 0)]), nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "currentProcessTitle",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "RawSyscall6",
      "package" : 1,
      "type" : 14,
      "exported" : true
    }, {
      "name" : "IndexByte",
      "package" : 3,
      "type" : 21,
      "exported" : true
    } ],
    "line-end" : 40,
    "line-start" : 26,
    "names" : [ "currentProcessTitle" ],
    "package" : 0,
    "packages" : [ {
      "name" : "apm",
      "path" : "go.elastic.co/apm"
    }, {
      "name" : "syscall",
      "path" : "syscall"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "bytes",
      "path" : "bytes"
    } ],
    "params" : [ ],
    "receivers" : [ ],
    "results" : [ 1, 2 ],
    "type" : "function",
    "types" : [ {
      "name" : "func() (string, error)",
      "params" : 1,
      "recv" : -1,
      "results" : 2,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 3
      }, {
        "name" : "",
        "type" : 4
      } ],
      "name" : "(string, error)",
      "type" : "Tuple",
      "underlying" : 2
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 3
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 6
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 5
    }, {
      "name" : "func() string",
      "params" : 1,
      "recv" : 0,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 6,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 3
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 7
    }, {
      "elem" : 9,
      "name" : "[16]byte",
      "type" : "Array",
      "underlying" : 8
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 9
    }, {
      "name" : "untyped int",
      "type" : "Basic",
      "underlying" : 10
    }, {
      "fields" : [ {
        "name" : "r1",
        "type" : 12
      }, {
        "name" : "r2",
        "type" : 12
      }, {
        "name" : "err",
        "type" : 13
      } ],
      "name" : "(r1 uintptr, r2 uintptr, err syscall.Errno)",
      "type" : "Tuple",
      "underlying" : 11
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 12
    }, {
      "local-name" : "Errno",
      "name" : "syscall.Errno",
      "package" : 1,
      "type" : "Named",
      "underlying" : 12
    }, {
      "name" : "func(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr, a4 uintptr, a5 uintptr, a6 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)",
      "params" : 15,
      "recv" : -1,
      "results" : 11,
      "type" : "Signature",
      "underlying" : 14,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "trap",
        "type" : 12
      }, {
        "name" : "a1",
        "type" : 12
      }, {
        "name" : "a2",
        "type" : 12
      }, {
        "name" : "a3",
        "type" : 12
      }, {
        "name" : "a4",
        "type" : 12
      }, {
        "name" : "a5",
        "type" : 12
      }, {
        "name" : "a6",
        "type" : 12
      } ],
      "name" : "(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr, a4 uintptr, a5 uintptr, a6 uintptr)",
      "type" : "Tuple",
      "underlying" : 15
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 2,
      "type" : "Basic",
      "underlying" : 16
    }, {
      "elem" : 9,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 17
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 18
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 19
    }, {
      "elem" : 9,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 20
    }, {
      "name" : "func(b []byte, c byte) int",
      "params" : 22,
      "recv" : -1,
      "results" : 23,
      "type" : "Signature",
      "underlying" : 21,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "b",
        "type" : 20
      }, {
        "name" : "c",
        "type" : 9
      } ],
      "name" : "(b []byte, c byte)",
      "type" : "Tuple",
      "underlying" : 22
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 18
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 23
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 24
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res1]",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "buf",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "errno",
      "package" : 0,
      "type" : 13,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "_",
      "package" : 0,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "_",
      "package" : 0,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}