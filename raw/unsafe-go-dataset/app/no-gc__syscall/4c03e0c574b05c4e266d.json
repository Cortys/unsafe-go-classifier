{
  "usage" : {
    "file" : "link_linux.go",
    "label1" : "syscall",
    "label2" : "no-gc",
    "line" : "2971",
    "module" : "github.com/vishvananda/netlink",
    "pkg" : "github.com/vishvananda/netlink",
    "project" : "cilium/cilium",
    "snippet" : "ifreq.Data = uintptr(unsafe.Pointer(&buffer[0]))",
    "version" : "v1.1.1-0.20200210222539-bfba8e4149db"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 2 ],
      "exit" : false,
      "out-vars" : [ 2 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ 5 ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 2 ],
      "exit" : false,
      "out-vars" : [ 6, 2, 5 ],
      "decl-vars" : [ 6, 5 ],
      "line-start" : 2949,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "fd"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 41,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "getSocketUDP"
            }
          },
          "go-type" : 37,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 2949,
      "code" : "fd, err := getSocketUDP()",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4, 5 ],
      "in-vars" : [ 6, 2, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 2, 5 ],
      "decl-vars" : [ ],
      "line-start" : 2950,
      "ast" : {
        "condition" : {
          "go-type" : 42,
          "kind" : "expression",
          "left" : {
            "go-type" : 38,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 6
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 43,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 2952,
      "code" : "if err != nil {\n\treturn -1, err\n}",
      "entry" : false,
      "use-vars" : [ 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5 ],
      "decl-vars" : [ ],
      "line-start" : 2951,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 7,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "-1"
          }
        }, {
          "go-type" : 38,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 6
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 2951,
      "code" : "return -1, err",
      "entry" : false,
      "use-vars" : [ 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6 ],
      "in-vars" : [ 2, 5 ],
      "exit" : false,
      "out-vars" : [ 8, 9, 2, 5 ],
      "decl-vars" : [ 8, 9 ],
      "line-start" : 2955,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "ifreq"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "sSet"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Name",
              "variable" : 7
            },
            "go-type" : 8,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "link",
                "variable" : 2
              }
            },
            "type" : "selector"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 54,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 2,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "newIocltStringSetReq"
            }
          },
          "go-type" : 44,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 2955,
      "code" : "ifreq, sSet := newIocltStringSetReq(link.Name)",
      "entry" : false,
      "use-vars" : [ 2 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 7 ],
      "in-vars" : [ 8, 9, 2, 5 ],
      "exit" : false,
      "out-vars" : [ 8, 9, 2, 10, 5 ],
      "decl-vars" : [ 10, 11, 12 ],
      "line-start" : 2956,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "_"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "_"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "errno"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 49,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "16"
            }
          }, {
            "coerced-to" : {
              "go-type" : 49,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 49,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uintptr"
              }
            },
            "go-type" : 49,
            "kind" : "expression",
            "target" : {
              "go-type" : 7,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "fd",
                "variable" : 5
              }
            },
            "type" : "cast"
          }, {
            "go-type" : 49,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "35142"
            }
          }, {
            "coerced-to" : {
              "go-type" : 49,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 49,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uintptr"
              }
            },
            "go-type" : 49,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 60,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 3,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 60,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 60,
              "kind" : "expression",
              "target" : {
                "go-type" : 45,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "ifreq",
                  "variable" : 8
                }
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 58,
            "kind" : "expression",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 2,
              "value" : "syscall"
            },
            "type" : "identifier",
            "value" : {
              "function" : 3,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Syscall"
            }
          },
          "go-type" : 56,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 2956,
      "code" : "_, _, errno := syscall.Syscall(syscall.SYS_IOCTL, uintptr(fd), SIOCETHTOOL, uintptr(unsafe.Pointer(ifreq)))",
      "entry" : false,
      "use-vars" : [ 8, 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 8, 9 ],
      "in-vars" : [ 9, 2, 10, 5, 8 ],
      "exit" : false,
      "out-vars" : [ 8, 9, 2, 10, 5 ],
      "decl-vars" : [ ],
      "line-start" : 2957,
      "ast" : {
        "condition" : {
          "go-type" : 42,
          "kind" : "expression",
          "left" : {
            "go-type" : 57,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "errno",
              "variable" : 10
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 57,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 2959,
      "code" : "if errno != 0 {\n\treturn -1, fmt.Errorf(\"SIOCETHTOOL request for %q failed, errno=%v\", link.Attrs().Name, errno)\n}",
      "entry" : false,
      "use-vars" : [ 10 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 2, 10, 5 ],
      "exit" : false,
      "out-vars" : [ 5 ],
      "decl-vars" : [ ],
      "line-start" : 2958,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 7,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "-1"
          }
        }, {
          "arguments" : [ {
            "go-type" : 8,
            "kind" : "constant",
            "value" : {
              "type" : "STRING",
              "value" : "SIOCETHTOOL request for %q failed, errno=%v"
            }
          }, {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Name",
              "variable" : 7
            },
            "go-type" : 8,
            "kind" : "expression",
            "target" : {
              "arguments" : [ ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "function" : 5,
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "Attrs"
                },
                "go-type" : 66,
                "kind" : "expression",
                "target" : {
                  "go-type" : 2,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "link",
                    "variable" : 2
                  }
                },
                "type" : "selector"
              },
              "go-type" : 65,
              "kind" : "expression",
              "type" : "call"
            },
            "type" : "selector"
          }, {
            "go-type" : 57,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "errno",
              "variable" : 10
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 61,
            "kind" : "expression",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 4,
              "value" : "fmt"
            },
            "type" : "identifier",
            "value" : {
              "function" : 4,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Errorf"
            }
          },
          "go-type" : 38,
          "kind" : "expression",
          "type" : "call"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 2958,
      "code" : "return -1, fmt.Errorf(\"SIOCETHTOOL request for %q failed, errno=%v\", link.Attrs().Name, errno)",
      "entry" : false,
      "use-vars" : [ 2, 10 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 10 ],
      "in-vars" : [ 8, 9, 2, 5 ],
      "exit" : false,
      "out-vars" : [ 8, 2, 17, 5 ],
      "decl-vars" : [ 17 ],
      "line-start" : 2961,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "stats"
          }
        } ],
        "right" : [ {
          "declared" : {
            "go-type" : 69,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 69,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "ethtoolStats"
            }
          },
          "go-type" : 69,
          "kind" : "literal",
          "type" : "composite",
          "values" : [ {
            "go-type" : -1,
            "key" : {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "cmd",
                "variable" : 14
              }
            },
            "kind" : "expression",
            "type" : "key-value",
            "value" : {
              "go-type" : 14,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "29"
              }
            }
          }, {
            "go-type" : -1,
            "key" : {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "nStats",
                "variable" : 15
              }
            },
            "kind" : "expression",
            "type" : "key-value",
            "value" : {
              "go-type" : 14,
              "index" : {
                "go-type" : 7,
                "kind" : "constant",
                "value" : {
                  "type" : "INT",
                  "value" : "0"
                }
              },
              "kind" : "expression",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "data",
                  "variable" : 16
                },
                "go-type" : 53,
                "kind" : "expression",
                "target" : {
                  "go-type" : 50,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "sSet",
                    "variable" : 9
                  }
                },
                "type" : "selector"
              },
              "type" : "index"
            }
          } ]
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 2964,
      "code" : "stats := ethtoolStats{\n\tcmd:    ETHTOOL_GSTATS,\n\tnStats: sSet.data[0],\n}",
      "entry" : false,
      "use-vars" : [ 9 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 11 ],
      "in-vars" : [ 8, 2, 17, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 8, 2, 18, 5 ],
      "decl-vars" : [ 6, 18 ],
      "line-start" : 2966,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "buffer"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 6
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 69,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "stats",
              "variable" : 17
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 72,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 6,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "vethStatsSerialize"
            }
          },
          "go-type" : 71,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 2966,
      "code" : "buffer, err := vethStatsSerialize(stats)",
      "entry" : false,
      "use-vars" : [ 17 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 12, 13 ],
      "in-vars" : [ 5, 6, 8, 2, 18 ],
      "exit" : false,
      "out-vars" : [ 6, 8, 2, 18, 5 ],
      "decl-vars" : [ ],
      "line-start" : 2967,
      "ast" : {
        "condition" : {
          "go-type" : 42,
          "kind" : "expression",
          "left" : {
            "go-type" : 38,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 6
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 43,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 2969,
      "code" : "if err != nil {\n\treturn -1, err\n}",
      "entry" : false,
      "use-vars" : [ 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5 ],
      "decl-vars" : [ ],
      "line-start" : 2968,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 7,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "-1"
          }
        }, {
          "go-type" : 38,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 6
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 2968,
      "code" : "return -1, err",
      "entry" : false,
      "use-vars" : [ 6 ]
    }, {
      "update-vars" : [ 8 ],
      "successors" : [ 14 ],
      "in-vars" : [ 8, 2, 18, 5 ],
      "exit" : false,
      "out-vars" : [ 8, 2, 18, 5 ],
      "decl-vars" : [ ],
      "line-start" : 2971,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Data",
            "variable" : 19
          },
          "go-type" : 49,
          "kind" : "expression",
          "target" : {
            "go-type" : 45,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "ifreq",
              "variable" : 8
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 49,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 49,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "uintptr"
            }
          },
          "go-type" : 49,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 60,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 3,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 60,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 60,
            "kind" : "expression",
            "target" : {
              "go-type" : 74,
              "kind" : "expression",
              "operator" : "&",
              "target" : {
                "go-type" : 11,
                "index" : {
                  "go-type" : 7,
                  "kind" : "constant",
                  "value" : {
                    "type" : "INT",
                    "value" : "0"
                  }
                },
                "kind" : "expression",
                "target" : {
                  "go-type" : 10,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "buffer",
                    "variable" : 18
                  }
                },
                "type" : "index"
              },
              "type" : "unary"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 2971,
      "code" : "ifreq.Data = uintptr(unsafe.Pointer(&buffer[0]))",
      "entry" : false,
      "use-vars" : [ 18, 8 ]
    }, {
      "update-vars" : [ 10 ],
      "successors" : [ 15 ],
      "in-vars" : [ 8, 2, 18, 5 ],
      "exit" : false,
      "out-vars" : [ 2, 10, 18, 5 ],
      "decl-vars" : [ ],
      "line-start" : 2972,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "_"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "_"
          }
        }, {
          "go-type" : 57,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "errno",
            "variable" : 10
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 49,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "16"
            }
          }, {
            "coerced-to" : {
              "go-type" : 49,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 49,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uintptr"
              }
            },
            "go-type" : 49,
            "kind" : "expression",
            "target" : {
              "go-type" : 7,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "fd",
                "variable" : 5
              }
            },
            "type" : "cast"
          }, {
            "go-type" : 49,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "35142"
            }
          }, {
            "coerced-to" : {
              "go-type" : 49,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 49,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uintptr"
              }
            },
            "go-type" : 49,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 60,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 3,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 60,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 60,
              "kind" : "expression",
              "target" : {
                "go-type" : 45,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "ifreq",
                  "variable" : 8
                }
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 58,
            "kind" : "expression",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 2,
              "value" : "syscall"
            },
            "type" : "identifier",
            "value" : {
              "function" : 3,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Syscall"
            }
          },
          "go-type" : 56,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 10 ],
      "line-end" : 2972,
      "code" : "_, _, errno = syscall.Syscall(syscall.SYS_IOCTL, uintptr(fd), SIOCETHTOOL, uintptr(unsafe.Pointer(ifreq)))",
      "entry" : false,
      "use-vars" : [ 5, 8 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 16, 17 ],
      "in-vars" : [ 10, 18, 5, 2 ],
      "exit" : false,
      "out-vars" : [ 2, 10, 18, 5 ],
      "decl-vars" : [ ],
      "line-start" : 2973,
      "ast" : {
        "condition" : {
          "go-type" : 42,
          "kind" : "expression",
          "left" : {
            "go-type" : 57,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "errno",
              "variable" : 10
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 57,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 2975,
      "code" : "if errno != 0 {\n\treturn -1, fmt.Errorf(\"SIOCETHTOOL request for %q failed, errno=%v\", link.Attrs().Name, errno)\n}",
      "entry" : false,
      "use-vars" : [ 10 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 2, 10, 5 ],
      "exit" : false,
      "out-vars" : [ 5 ],
      "decl-vars" : [ ],
      "line-start" : 2974,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 7,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "-1"
          }
        }, {
          "arguments" : [ {
            "go-type" : 8,
            "kind" : "constant",
            "value" : {
              "type" : "STRING",
              "value" : "SIOCETHTOOL request for %q failed, errno=%v"
            }
          }, {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Name",
              "variable" : 7
            },
            "go-type" : 8,
            "kind" : "expression",
            "target" : {
              "arguments" : [ ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "function" : 5,
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "Attrs"
                },
                "go-type" : 66,
                "kind" : "expression",
                "target" : {
                  "go-type" : 2,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "link",
                    "variable" : 2
                  }
                },
                "type" : "selector"
              },
              "go-type" : 65,
              "kind" : "expression",
              "type" : "call"
            },
            "type" : "selector"
          }, {
            "go-type" : 57,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "errno",
              "variable" : 10
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 61,
            "kind" : "expression",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 4,
              "value" : "fmt"
            },
            "type" : "identifier",
            "value" : {
              "function" : 4,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Errorf"
            }
          },
          "go-type" : 38,
          "kind" : "expression",
          "type" : "call"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 2974,
      "code" : "return -1, fmt.Errorf(\"SIOCETHTOOL request for %q failed, errno=%v\", link.Attrs().Name, errno)",
      "entry" : false,
      "use-vars" : [ 10, 2 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 18 ],
      "in-vars" : [ 18, 5 ],
      "exit" : false,
      "out-vars" : [ 20, 5, 6 ],
      "decl-vars" : [ 6, 20 ],
      "line-start" : 2977,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "vstats"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 6
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 10,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "buffer",
              "variable" : 18
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 78,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 7,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "vethStatsDeserialize"
            }
          },
          "go-type" : 75,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 2977,
      "code" : "vstats, err := vethStatsDeserialize(buffer)",
      "entry" : false,
      "use-vars" : [ 18 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 19, 20 ],
      "in-vars" : [ 6, 20, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 20, 5 ],
      "decl-vars" : [ ],
      "line-start" : 2978,
      "ast" : {
        "condition" : {
          "go-type" : 42,
          "kind" : "expression",
          "left" : {
            "go-type" : 38,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 6
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 43,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 2980,
      "code" : "if err != nil {\n\treturn -1, err\n}",
      "entry" : false,
      "use-vars" : [ 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5 ],
      "decl-vars" : [ ],
      "line-start" : 2979,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 7,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "-1"
          }
        }, {
          "go-type" : 38,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 6
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 2979,
      "code" : "return -1, err",
      "entry" : false,
      "use-vars" : [ 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 20, 5 ],
      "exit" : false,
      "out-vars" : [ 5 ],
      "decl-vars" : [ ],
      "line-start" : 2982,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "coerced-to" : {
            "go-type" : 7,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 7,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "int"
            }
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Peer",
              "variable" : 21
            },
            "go-type" : 19,
            "kind" : "expression",
            "target" : {
              "go-type" : 76,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "vstats",
                "variable" : 20
              }
            },
            "type" : "selector"
          },
          "type" : "cast"
        }, {
          "go-type" : 43,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 2982,
      "code" : "return int(vstats.Peer), nil",
      "entry" : false,
      "use-vars" : [ 20 ]
    } ],
    "code" : "// VethPeerIndex get veth peer index.\nfunc VethPeerIndex(link *Veth) (int, error) {\n\tfd, err := getSocketUDP()\n\tif err != nil {\n\t\treturn -1, err\n\t}\n\tdefer syscall.Close(fd)\n\n\tifreq, sSet := newIocltStringSetReq(link.Name)\n\t_, _, errno := syscall.Syscall(syscall.SYS_IOCTL, uintptr(fd), SIOCETHTOOL, uintptr(unsafe.Pointer(ifreq)))\n\tif errno != 0 {\n\t\treturn -1, fmt.Errorf(\"SIOCETHTOOL request for %q failed, errno=%v\", link.Attrs().Name, errno)\n\t}\n\n\tstats := ethtoolStats{\n\t\tcmd:    ETHTOOL_GSTATS,\n\t\tnStats: sSet.data[0],\n\t}\n\n\tbuffer, err := vethStatsSerialize(stats)\n\tif err != nil {\n\t\treturn -1, err\n\t}\n\n\tifreq.Data = uintptr(unsafe.Pointer(&buffer[0]))\n\t_, _, errno = syscall.Syscall(syscall.SYS_IOCTL, uintptr(fd), SIOCETHTOOL, uintptr(unsafe.Pointer(ifreq)))\n\tif errno != 0 {\n\t\treturn -1, fmt.Errorf(\"SIOCETHTOOL request for %q failed, errno=%v\", link.Attrs().Name, errno)\n\t}\n\n\tvstats, err := vethStatsDeserialize(buffer)\n\tif err != nil {\n\t\treturn -1, err\n\t}\n\n\treturn int(vstats.Peer), nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "VethPeerIndex",
      "package" : 0,
      "type" : 0,
      "exported" : true
    }, {
      "name" : "getSocketUDP",
      "package" : 0,
      "type" : 41,
      "exported" : false
    }, {
      "name" : "newIocltStringSetReq",
      "package" : 0,
      "type" : 54,
      "exported" : false
    }, {
      "name" : "Syscall",
      "package" : 2,
      "type" : 58,
      "exported" : true
    }, {
      "name" : "Errorf",
      "package" : 4,
      "type" : 61,
      "exported" : true
    }, {
      "name" : "Attrs",
      "package" : 0,
      "type" : 68,
      "exported" : true
    }, {
      "name" : "vethStatsSerialize",
      "package" : 0,
      "type" : 72,
      "exported" : false
    }, {
      "name" : "vethStatsDeserialize",
      "package" : 0,
      "type" : 78,
      "exported" : false
    } ],
    "line-end" : 2983,
    "line-start" : 2948,
    "names" : [ "VethPeerIndex" ],
    "package" : 0,
    "packages" : [ {
      "name" : "netlink",
      "path" : "github.com/vishvananda/netlink"
    }, {
      "name" : "net",
      "path" : "net"
    }, {
      "name" : "syscall",
      "path" : "syscall"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "fmt",
      "path" : "fmt"
    } ],
    "params" : [ 2 ],
    "receivers" : [ ],
    "results" : [ 3, 4 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(link *github.com/vishvananda/netlink.Veth) (int, error)",
      "params" : 1,
      "recv" : -1,
      "results" : 37,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "link",
        "type" : 2
      } ],
      "name" : "(link *github.com/vishvananda/netlink.Veth)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*github.com/vishvananda/netlink.Veth",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "Veth",
      "name" : "github.com/vishvananda/netlink.Veth",
      "package" : 0,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "LinkAttrs",
        "type" : 5
      }, {
        "name" : "PeerName",
        "type" : 8
      }, {
        "name" : "PeerHardwareAddr",
        "type" : 9
      } ],
      "name" : "struct{github.com/vishvananda/netlink.LinkAttrs; PeerName string; PeerHardwareAddr net.HardwareAddr}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "local-name" : "LinkAttrs",
      "name" : "github.com/vishvananda/netlink.LinkAttrs",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "fields" : [ {
        "name" : "Index",
        "type" : 7
      }, {
        "name" : "MTU",
        "type" : 7
      }, {
        "name" : "TxQLen",
        "type" : 7
      }, {
        "name" : "Name",
        "type" : 8
      }, {
        "name" : "HardwareAddr",
        "type" : 9
      }, {
        "name" : "Flags",
        "type" : 12
      }, {
        "name" : "RawFlags",
        "type" : 14
      }, {
        "name" : "ParentIndex",
        "type" : 7
      }, {
        "name" : "MasterIndex",
        "type" : 7
      }, {
        "name" : "Namespace",
        "type" : 15
      }, {
        "name" : "Alias",
        "type" : 8
      }, {
        "name" : "Statistics",
        "type" : 16
      }, {
        "name" : "Promisc",
        "type" : 7
      }, {
        "name" : "Xdp",
        "type" : 20
      }, {
        "name" : "EncapType",
        "type" : 8
      }, {
        "name" : "Protinfo",
        "type" : 24
      }, {
        "name" : "OperState",
        "type" : 27
      }, {
        "name" : "NetNsID",
        "type" : 7
      }, {
        "name" : "NumTxQueues",
        "type" : 7
      }, {
        "name" : "NumRxQueues",
        "type" : 7
      }, {
        "name" : "GSOMaxSize",
        "type" : 14
      }, {
        "name" : "GSOMaxSegs",
        "type" : 14
      }, {
        "name" : "Vfs",
        "type" : 29
      }, {
        "name" : "Group",
        "type" : 14
      }, {
        "name" : "Slave",
        "type" : 32
      } ],
      "name" : "struct{Index int; MTU int; TxQLen int; Name string; HardwareAddr net.HardwareAddr; Flags net.Flags; RawFlags uint32; ParentIndex int; MasterIndex int; Namespace interface{}; Alias string; Statistics *github.com/vishvananda/netlink.LinkStatistics; Promisc int; Xdp *github.com/vishvananda/netlink.LinkXdp; EncapType string; Protinfo *github.com/vishvananda/netlink.Protinfo; OperState github.com/vishvananda/netlink.LinkOperState; NetNsID int; NumTxQueues int; NumRxQueues int; GSOMaxSize uint32; GSOMaxSegs uint32; Vfs []github.com/vishvananda/netlink.VfInfo; Group uint32; Slave github.com/vishvananda/netlink.LinkSlave}",
      "type" : "Struct",
      "underlying" : 6
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 7
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 8
    }, {
      "local-name" : "HardwareAddr",
      "name" : "net.HardwareAddr",
      "package" : 1,
      "type" : "Named",
      "underlying" : 10
    }, {
      "elem" : 11,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 10
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 11
    }, {
      "local-name" : "Flags",
      "name" : "net.Flags",
      "package" : 1,
      "type" : "Named",
      "underlying" : 13
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 14
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 15
    }, {
      "elem" : 17,
      "name" : "*github.com/vishvananda/netlink.LinkStatistics",
      "type" : "Pointer",
      "underlying" : 16
    }, {
      "local-name" : "LinkStatistics",
      "name" : "github.com/vishvananda/netlink.LinkStatistics",
      "package" : 0,
      "type" : "Named",
      "underlying" : 18
    }, {
      "fields" : [ {
        "name" : "RxPackets",
        "type" : 19
      }, {
        "name" : "TxPackets",
        "type" : 19
      }, {
        "name" : "RxBytes",
        "type" : 19
      }, {
        "name" : "TxBytes",
        "type" : 19
      }, {
        "name" : "RxErrors",
        "type" : 19
      }, {
        "name" : "TxErrors",
        "type" : 19
      }, {
        "name" : "RxDropped",
        "type" : 19
      }, {
        "name" : "TxDropped",
        "type" : 19
      }, {
        "name" : "Multicast",
        "type" : 19
      }, {
        "name" : "Collisions",
        "type" : 19
      }, {
        "name" : "RxLengthErrors",
        "type" : 19
      }, {
        "name" : "RxOverErrors",
        "type" : 19
      }, {
        "name" : "RxCrcErrors",
        "type" : 19
      }, {
        "name" : "RxFrameErrors",
        "type" : 19
      }, {
        "name" : "RxFifoErrors",
        "type" : 19
      }, {
        "name" : "RxMissedErrors",
        "type" : 19
      }, {
        "name" : "TxAbortedErrors",
        "type" : 19
      }, {
        "name" : "TxCarrierErrors",
        "type" : 19
      }, {
        "name" : "TxFifoErrors",
        "type" : 19
      }, {
        "name" : "TxHeartbeatErrors",
        "type" : 19
      }, {
        "name" : "TxWindowErrors",
        "type" : 19
      }, {
        "name" : "RxCompressed",
        "type" : 19
      }, {
        "name" : "TxCompressed",
        "type" : 19
      } ],
      "name" : "struct{RxPackets uint64; TxPackets uint64; RxBytes uint64; TxBytes uint64; RxErrors uint64; TxErrors uint64; RxDropped uint64; TxDropped uint64; Multicast uint64; Collisions uint64; RxLengthErrors uint64; RxOverErrors uint64; RxCrcErrors uint64; RxFrameErrors uint64; RxFifoErrors uint64; RxMissedErrors uint64; TxAbortedErrors uint64; TxCarrierErrors uint64; TxFifoErrors uint64; TxHeartbeatErrors uint64; TxWindowErrors uint64; RxCompressed uint64; TxCompressed uint64}",
      "type" : "Struct",
      "underlying" : 18
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 19
    }, {
      "elem" : 21,
      "name" : "*github.com/vishvananda/netlink.LinkXdp",
      "type" : "Pointer",
      "underlying" : 20
    }, {
      "local-name" : "LinkXdp",
      "name" : "github.com/vishvananda/netlink.LinkXdp",
      "package" : 0,
      "type" : "Named",
      "underlying" : 22
    }, {
      "fields" : [ {
        "name" : "Fd",
        "type" : 7
      }, {
        "name" : "Attached",
        "type" : 23
      }, {
        "name" : "AttachMode",
        "type" : 14
      }, {
        "name" : "Flags",
        "type" : 14
      }, {
        "name" : "ProgId",
        "type" : 14
      } ],
      "name" : "struct{Fd int; Attached bool; AttachMode uint32; Flags uint32; ProgId uint32}",
      "type" : "Struct",
      "underlying" : 22
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 23
    }, {
      "elem" : 25,
      "name" : "*github.com/vishvananda/netlink.Protinfo",
      "type" : "Pointer",
      "underlying" : 24
    }, {
      "local-name" : "Protinfo",
      "name" : "github.com/vishvananda/netlink.Protinfo",
      "package" : 0,
      "type" : "Named",
      "underlying" : 26
    }, {
      "fields" : [ {
        "name" : "Hairpin",
        "type" : 23
      }, {
        "name" : "Guard",
        "type" : 23
      }, {
        "name" : "FastLeave",
        "type" : 23
      }, {
        "name" : "RootBlock",
        "type" : 23
      }, {
        "name" : "Learning",
        "type" : 23
      }, {
        "name" : "Flood",
        "type" : 23
      }, {
        "name" : "ProxyArp",
        "type" : 23
      }, {
        "name" : "ProxyArpWiFi",
        "type" : 23
      } ],
      "name" : "struct{Hairpin bool; Guard bool; FastLeave bool; RootBlock bool; Learning bool; Flood bool; ProxyArp bool; ProxyArpWiFi bool}",
      "type" : "Struct",
      "underlying" : 26
    }, {
      "local-name" : "LinkOperState",
      "name" : "github.com/vishvananda/netlink.LinkOperState",
      "package" : 0,
      "type" : "Named",
      "underlying" : 28
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 28
    }, {
      "elem" : 30,
      "name" : "[]github.com/vishvananda/netlink.VfInfo",
      "type" : "Slice",
      "underlying" : 29
    }, {
      "local-name" : "VfInfo",
      "name" : "github.com/vishvananda/netlink.VfInfo",
      "package" : 0,
      "type" : "Named",
      "underlying" : 31
    }, {
      "fields" : [ {
        "name" : "ID",
        "type" : 7
      }, {
        "name" : "Mac",
        "type" : 9
      }, {
        "name" : "Vlan",
        "type" : 7
      }, {
        "name" : "Qos",
        "type" : 7
      }, {
        "name" : "TxRate",
        "type" : 7
      }, {
        "name" : "Spoofchk",
        "type" : 23
      }, {
        "name" : "LinkState",
        "type" : 14
      }, {
        "name" : "MaxTxRate",
        "type" : 14
      }, {
        "name" : "MinTxRate",
        "type" : 14
      } ],
      "name" : "struct{ID int; Mac net.HardwareAddr; Vlan int; Qos int; TxRate int; Spoofchk bool; LinkState uint32; MaxTxRate uint32; MinTxRate uint32}",
      "type" : "Struct",
      "underlying" : 31
    }, {
      "local-name" : "LinkSlave",
      "name" : "github.com/vishvananda/netlink.LinkSlave",
      "package" : 0,
      "type" : "Named",
      "underlying" : 33
    }, {
      "methods" : [ {
        "name" : "SlaveType",
        "type" : 34
      } ],
      "name" : "interface{SlaveType() string}",
      "type" : "Interface",
      "underlying" : 33
    }, {
      "name" : "(github.com/vishvananda/netlink.LinkSlave) func() string",
      "params" : 35,
      "recv" : 0,
      "results" : 36,
      "type" : "Signature",
      "underlying" : 34,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 35
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 8
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 36
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 7
      }, {
        "name" : "",
        "type" : 38
      } ],
      "name" : "(int, error)",
      "type" : "Tuple",
      "underlying" : 37
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 39
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 40
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 39
    }, {
      "name" : "(error) func() string",
      "params" : 35,
      "recv" : 1,
      "results" : 36,
      "type" : "Signature",
      "underlying" : 40,
      "variadic" : false
    }, {
      "name" : "func() (int, error)",
      "params" : 35,
      "recv" : -1,
      "results" : 37,
      "type" : "Signature",
      "underlying" : 41,
      "variadic" : false
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 42
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 43
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 45
      }, {
        "name" : "",
        "type" : 50
      } ],
      "name" : "(*github.com/vishvananda/netlink.Ifreq, *github.com/vishvananda/netlink.ethtoolSset)",
      "type" : "Tuple",
      "underlying" : 44
    }, {
      "elem" : 46,
      "name" : "*github.com/vishvananda/netlink.Ifreq",
      "type" : "Pointer",
      "underlying" : 45
    }, {
      "local-name" : "Ifreq",
      "name" : "github.com/vishvananda/netlink.Ifreq",
      "package" : 0,
      "type" : "Named",
      "underlying" : 47
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 48
      }, {
        "name" : "Data",
        "type" : 49
      } ],
      "name" : "struct{Name [16]byte; Data uintptr}",
      "type" : "Struct",
      "underlying" : 47
    }, {
      "elem" : 11,
      "name" : "[16]byte",
      "type" : "Array",
      "underlying" : 48
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 49
    }, {
      "elem" : 51,
      "name" : "*github.com/vishvananda/netlink.ethtoolSset",
      "type" : "Pointer",
      "underlying" : 50
    }, {
      "local-name" : "ethtoolSset",
      "name" : "github.com/vishvananda/netlink.ethtoolSset",
      "package" : 0,
      "type" : "Named",
      "underlying" : 52
    }, {
      "fields" : [ {
        "name" : "cmd",
        "type" : 14
      }, {
        "name" : "reserved",
        "type" : 14
      }, {
        "name" : "mask",
        "type" : 19
      }, {
        "name" : "data",
        "type" : 53
      } ],
      "name" : "struct{cmd uint32; reserved uint32; mask uint64; data [1]uint32}",
      "type" : "Struct",
      "underlying" : 52
    }, {
      "elem" : 14,
      "name" : "[1]uint32",
      "type" : "Array",
      "underlying" : 53
    }, {
      "name" : "func(linkName string) (*github.com/vishvananda/netlink.Ifreq, *github.com/vishvananda/netlink.ethtoolSset)",
      "params" : 55,
      "recv" : -1,
      "results" : 44,
      "type" : "Signature",
      "underlying" : 54,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "linkName",
        "type" : 8
      } ],
      "name" : "(linkName string)",
      "type" : "Tuple",
      "underlying" : 55
    }, {
      "fields" : [ {
        "name" : "r1",
        "type" : 49
      }, {
        "name" : "r2",
        "type" : 49
      }, {
        "name" : "err",
        "type" : 57
      } ],
      "name" : "(r1 uintptr, r2 uintptr, err syscall.Errno)",
      "type" : "Tuple",
      "underlying" : 56
    }, {
      "local-name" : "Errno",
      "name" : "syscall.Errno",
      "package" : 2,
      "type" : "Named",
      "underlying" : 49
    }, {
      "name" : "func(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)",
      "params" : 59,
      "recv" : -1,
      "results" : 56,
      "type" : "Signature",
      "underlying" : 58,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "trap",
        "type" : 49
      }, {
        "name" : "a1",
        "type" : 49
      }, {
        "name" : "a2",
        "type" : 49
      }, {
        "name" : "a3",
        "type" : 49
      } ],
      "name" : "(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr)",
      "type" : "Tuple",
      "underlying" : 59
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 3,
      "type" : "Basic",
      "underlying" : 60
    }, {
      "name" : "func(format string, a ...interface{}) error",
      "params" : 62,
      "recv" : -1,
      "results" : 64,
      "type" : "Signature",
      "underlying" : 61,
      "variadic" : true
    }, {
      "fields" : [ {
        "name" : "format",
        "type" : 8
      }, {
        "name" : "a",
        "type" : 63
      } ],
      "name" : "(format string, a []interface{})",
      "type" : "Tuple",
      "underlying" : 62
    }, {
      "elem" : 15,
      "name" : "[]interface{}",
      "type" : "Slice",
      "underlying" : 63
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 38
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 64
    }, {
      "elem" : 5,
      "name" : "*github.com/vishvananda/netlink.LinkAttrs",
      "type" : "Pointer",
      "underlying" : 65
    }, {
      "name" : "func() *github.com/vishvananda/netlink.LinkAttrs",
      "params" : 35,
      "recv" : -1,
      "results" : 67,
      "type" : "Signature",
      "underlying" : 66,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 65
      } ],
      "name" : "(*github.com/vishvananda/netlink.LinkAttrs)",
      "type" : "Tuple",
      "underlying" : 67
    }, {
      "name" : "(*github.com/vishvananda/netlink.Veth) func() *github.com/vishvananda/netlink.LinkAttrs",
      "params" : 35,
      "recv" : 13,
      "results" : 67,
      "type" : "Signature",
      "underlying" : 68,
      "variadic" : false
    }, {
      "local-name" : "ethtoolStats",
      "name" : "github.com/vishvananda/netlink.ethtoolStats",
      "package" : 0,
      "type" : "Named",
      "underlying" : 70
    }, {
      "fields" : [ {
        "name" : "cmd",
        "type" : 14
      }, {
        "name" : "nStats",
        "type" : 14
      } ],
      "name" : "struct{cmd uint32; nStats uint32}",
      "type" : "Struct",
      "underlying" : 70
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 10
      }, {
        "name" : "",
        "type" : 38
      } ],
      "name" : "([]byte, error)",
      "type" : "Tuple",
      "underlying" : 71
    }, {
      "name" : "func(stats github.com/vishvananda/netlink.ethtoolStats) ([]byte, error)",
      "params" : 73,
      "recv" : -1,
      "results" : 71,
      "type" : "Signature",
      "underlying" : 72,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "stats",
        "type" : 69
      } ],
      "name" : "(stats github.com/vishvananda/netlink.ethtoolStats)",
      "type" : "Tuple",
      "underlying" : 73
    }, {
      "elem" : 11,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 74
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 76
      }, {
        "name" : "",
        "type" : 38
      } ],
      "name" : "(github.com/vishvananda/netlink.vethEthtoolStats, error)",
      "type" : "Tuple",
      "underlying" : 75
    }, {
      "local-name" : "vethEthtoolStats",
      "name" : "github.com/vishvananda/netlink.vethEthtoolStats",
      "package" : 0,
      "type" : "Named",
      "underlying" : 77
    }, {
      "fields" : [ {
        "name" : "Cmd",
        "type" : 14
      }, {
        "name" : "NStats",
        "type" : 14
      }, {
        "name" : "Peer",
        "type" : 19
      } ],
      "name" : "struct{Cmd uint32; NStats uint32; Peer uint64}",
      "type" : "Struct",
      "underlying" : 77
    }, {
      "name" : "func(b []byte) (github.com/vishvananda/netlink.vethEthtoolStats, error)",
      "params" : 79,
      "recv" : -1,
      "results" : 75,
      "type" : "Signature",
      "underlying" : 78,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "b",
        "type" : 10
      } ],
      "name" : "(b []byte)",
      "type" : "Tuple",
      "underlying" : 79
    } ],
    "variables" : [ {
      "name" : "",
      "package" : 0,
      "type" : 32,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : -1,
      "type" : 38,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "link",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res1]",
      "package" : 0,
      "type" : 38,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "fd",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 38,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Name",
      "package" : 0,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ifreq",
      "package" : 0,
      "type" : 45,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "sSet",
      "package" : 0,
      "type" : 50,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "errno",
      "package" : 0,
      "type" : 57,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "_",
      "package" : 0,
      "type" : 49,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "_",
      "package" : 0,
      "type" : 49,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "veth",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "cmd",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "nStats",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "data",
      "package" : 0,
      "type" : 53,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "stats",
      "package" : 0,
      "type" : 69,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "buffer",
      "package" : 0,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Data",
      "package" : 0,
      "type" : 49,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "vstats",
      "package" : 0,
      "type" : 76,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Peer",
      "package" : 0,
      "type" : 19,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}