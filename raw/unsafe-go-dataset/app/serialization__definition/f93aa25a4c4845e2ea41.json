{
  "usage" : {
    "file" : "reflect2.go",
    "label1" : "definition",
    "label2" : "serialization",
    "line" : "61",
    "module" : "github.com/modern-go/reflect2",
    "pkg" : "github.com/modern-go/reflect2",
    "project" : "kubernetes/kubernetes",
    "snippet" : "UnsafeSetNil(ptr unsafe.Pointer)",
    "version" : "v1.0.1"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 50,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "binds" : [ {
            "name" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "SliceType"
            },
            "value" : {
              "go-type" : 1,
              "incomplete" : false,
              "kind" : "type",
              "methods" : [ {
                "declared-type" : {
                  "go-type" : 0,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 0,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "ListType"
                  }
                },
                "kind" : "field",
                "names" : [ ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 103,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 41,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 41,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "int"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "length"
                    } ],
                    "tag" : null
                  }, {
                    "declared-type" : {
                      "go-type" : 41,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 41,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "int"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "cap"
                    } ],
                    "tag" : null
                  } ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 4,
                      "incomplete" : false,
                      "kind" : "type",
                      "methods" : [ ],
                      "type" : "interface"
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "MakeSlice"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 111,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 41,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 41,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "int"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "length"
                    } ],
                    "tag" : null
                  }, {
                    "declared-type" : {
                      "go-type" : 41,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 41,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "int"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "cap"
                    } ],
                    "tag" : null
                  } ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 26,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 2,
                        "value" : "unsafe"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 26,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Pointer"
                      }
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "UnsafeMakeSlice"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 101,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 4,
                      "incomplete" : false,
                      "kind" : "type",
                      "methods" : [ ],
                      "type" : "interface"
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "obj"
                    } ],
                    "tag" : null
                  }, {
                    "declared-type" : {
                      "go-type" : 41,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 41,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "int"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "newLength"
                    } ],
                    "tag" : null
                  } ],
                  "results" : null,
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "Grow"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 109,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 26,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 2,
                        "value" : "unsafe"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 26,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Pointer"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "ptr"
                    } ],
                    "tag" : null
                  }, {
                    "declared-type" : {
                      "go-type" : 41,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 41,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "int"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "newLength"
                    } ],
                    "tag" : null
                  } ],
                  "results" : null,
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "UnsafeGrow"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 2,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 4,
                      "incomplete" : false,
                      "kind" : "type",
                      "methods" : [ ],
                      "type" : "interface"
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "obj"
                    } ],
                    "tag" : null
                  }, {
                    "declared-type" : {
                      "go-type" : 4,
                      "incomplete" : false,
                      "kind" : "type",
                      "methods" : [ ],
                      "type" : "interface"
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "elem"
                    } ],
                    "tag" : null
                  } ],
                  "results" : null,
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "Append"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 106,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 26,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 2,
                        "value" : "unsafe"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 26,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Pointer"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "obj"
                    } ],
                    "tag" : null
                  }, {
                    "declared-type" : {
                      "go-type" : 26,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 2,
                        "value" : "unsafe"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 26,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Pointer"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "elem"
                    } ],
                    "tag" : null
                  } ],
                  "results" : null,
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "UnsafeAppend"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 98,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 4,
                      "incomplete" : false,
                      "kind" : "type",
                      "methods" : [ ],
                      "type" : "interface"
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "obj"
                    } ],
                    "tag" : null
                  } ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 41,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 41,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "int"
                      }
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "LengthOf"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 108,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 26,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 2,
                        "value" : "unsafe"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 26,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Pointer"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "ptr"
                    } ],
                    "tag" : null
                  } ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 41,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 41,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "int"
                      }
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "UnsafeLengthOf"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 105,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 4,
                      "incomplete" : false,
                      "kind" : "type",
                      "methods" : [ ],
                      "type" : "interface"
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "obj"
                    } ],
                    "tag" : null
                  } ],
                  "results" : null,
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "SetNil"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 112,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 26,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 2,
                        "value" : "unsafe"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 26,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Pointer"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "ptr"
                    } ],
                    "tag" : null
                  } ],
                  "results" : null,
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "UnsafeSetNil"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 98,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 4,
                      "incomplete" : false,
                      "kind" : "type",
                      "methods" : [ ],
                      "type" : "interface"
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "obj"
                    } ],
                    "tag" : null
                  } ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 41,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 41,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "int"
                      }
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "Cap"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 108,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 26,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 2,
                        "value" : "unsafe"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 26,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Pointer"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "ptr"
                    } ],
                    "tag" : null
                  } ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 41,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 41,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "int"
                      }
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "UnsafeCap"
                } ],
                "tag" : null
              } ],
              "type" : "interface"
            }
          } ],
          "kind" : "decl",
          "type" : "type-alias"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 64,
      "code" : "type SliceType interface {\n\tListType\n\tMakeSlice(length int, cap int) interface{}\n\tUnsafeMakeSlice(length int, cap int) unsafe.Pointer\n\tGrow(obj interface{}, newLength int)\n\tUnsafeGrow(ptr unsafe.Pointer, newLength int)\n\tAppend(obj interface{}, elem interface{})\n\tUnsafeAppend(obj unsafe.Pointer, elem unsafe.Pointer)\n\tLengthOf(obj interface{}) int\n\tUnsafeLengthOf(ptr unsafe.Pointer) int\n\tSetNil(obj interface{})\n\tUnsafeSetNil(ptr unsafe.Pointer)\n\tCap(obj interface{}) int\n\tUnsafeCap(ptr unsafe.Pointer) int\n}",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "type SliceType interface {\n\tListType\n\tMakeSlice(length int, cap int) interface{}\n\tUnsafeMakeSlice(length int, cap int) unsafe.Pointer\n\tGrow(obj interface{}, newLength int)\n\tUnsafeGrow(ptr unsafe.Pointer, newLength int)\n\tAppend(obj interface{}, elem interface{})\n\tUnsafeAppend(obj unsafe.Pointer, elem unsafe.Pointer)\n\tLengthOf(obj interface{}) int\n\tUnsafeLengthOf(ptr unsafe.Pointer) int\n\tSetNil(obj interface{})\n\tUnsafeSetNil(ptr unsafe.Pointer)\n\tCap(obj interface{}) int\n\tUnsafeCap(ptr unsafe.Pointer) int\n}",
    "defines" : [ 0 ],
    "functions" : [ ],
    "line-end" : 64,
    "line-start" : 50,
    "names" : [ "SliceType" ],
    "package" : 0,
    "packages" : [ {
      "name" : "reflect2",
      "path" : "github.com/modern-go/reflect2"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ ],
    "receivers" : [ ],
    "results" : [ ],
    "type" : "type",
    "types" : [ {
      "local-name" : "SliceType",
      "name" : "github.com/modern-go/reflect2.SliceType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 1
    }, {
      "methods" : [ {
        "name" : "Append",
        "type" : 2
      }, {
        "name" : "AssignableTo",
        "type" : 6
      }, {
        "name" : "Cap",
        "type" : 98
      }, {
        "name" : "Elem",
        "type" : 99
      }, {
        "name" : "GetIndex",
        "type" : 2
      }, {
        "name" : "Grow",
        "type" : 101
      }, {
        "name" : "Implements",
        "type" : 10
      }, {
        "name" : "Indirect",
        "type" : 14
      }, {
        "name" : "IsNil",
        "type" : 17
      }, {
        "name" : "IsNullable",
        "type" : 18
      }, {
        "name" : "Kind",
        "type" : 19
      }, {
        "name" : "LengthOf",
        "type" : 98
      }, {
        "name" : "LikePtr",
        "type" : 18
      }, {
        "name" : "MakeSlice",
        "type" : 103
      }, {
        "name" : "New",
        "type" : 23
      }, {
        "name" : "PackEFace",
        "type" : 24
      }, {
        "name" : "RType",
        "type" : 27
      }, {
        "name" : "Set",
        "type" : 30
      }, {
        "name" : "SetIndex",
        "type" : 4
      }, {
        "name" : "SetNil",
        "type" : 105
      }, {
        "name" : "String",
        "type" : 32
      }, {
        "name" : "Type1",
        "type" : 35
      }, {
        "name" : "UnsafeAppend",
        "type" : 106
      }, {
        "name" : "UnsafeCap",
        "type" : 108
      }, {
        "name" : "UnsafeGetIndex",
        "type" : 6
      }, {
        "name" : "UnsafeGrow",
        "type" : 109
      }, {
        "name" : "UnsafeIndirect",
        "type" : 24
      }, {
        "name" : "UnsafeIsNil",
        "type" : 93
      }, {
        "name" : "UnsafeLengthOf",
        "type" : 108
      }, {
        "name" : "UnsafeMakeSlice",
        "type" : 111
      }, {
        "name" : "UnsafeNew",
        "type" : 94
      }, {
        "name" : "UnsafeSet",
        "type" : 96
      }, {
        "name" : "UnsafeSetIndex",
        "type" : 8
      }, {
        "name" : "UnsafeSetNil",
        "type" : 112
      } ],
      "name" : "interface{Append(obj interface{}, elem interface{}); Cap(obj interface{}) int; Grow(obj interface{}, newLength int); LengthOf(obj interface{}) int; MakeSlice(length int, cap int) interface{}; SetNil(obj interface{}); UnsafeAppend(obj unsafe.Pointer, elem unsafe.Pointer); UnsafeCap(ptr unsafe.Pointer) int; UnsafeGrow(ptr unsafe.Pointer, newLength int); UnsafeLengthOf(ptr unsafe.Pointer) int; UnsafeMakeSlice(length int, cap int) unsafe.Pointer; UnsafeSetNil(ptr unsafe.Pointer); github.com/modern-go/reflect2.ListType}",
      "type" : "Interface",
      "underlying" : 1
    }, {
      "name" : "func(obj interface{}, elem interface{})",
      "params" : 3,
      "recv" : 0,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 2,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "obj",
        "type" : 4
      }, {
        "name" : "elem",
        "type" : 4
      } ],
      "name" : "(obj interface{}, elem interface{})",
      "type" : "Tuple",
      "underlying" : 3
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 4
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 5
    }, {
      "name" : "func(anotherType github.com/modern-go/reflect2.Type) bool",
      "params" : 7,
      "recv" : 27,
      "results" : 12,
      "type" : "Signature",
      "underlying" : 6,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "anotherType",
        "type" : 8
      } ],
      "name" : "(anotherType github.com/modern-go/reflect2.Type)",
      "type" : "Tuple",
      "underlying" : 7
    }, {
      "local-name" : "Type",
      "name" : "github.com/modern-go/reflect2.Type",
      "package" : 0,
      "type" : "Named",
      "underlying" : 9
    }, {
      "methods" : [ {
        "name" : "AssignableTo",
        "type" : 6
      }, {
        "name" : "Implements",
        "type" : 10
      }, {
        "name" : "Indirect",
        "type" : 14
      }, {
        "name" : "IsNil",
        "type" : 17
      }, {
        "name" : "IsNullable",
        "type" : 18
      }, {
        "name" : "Kind",
        "type" : 19
      }, {
        "name" : "LikePtr",
        "type" : 18
      }, {
        "name" : "New",
        "type" : 23
      }, {
        "name" : "PackEFace",
        "type" : 24
      }, {
        "name" : "RType",
        "type" : 27
      }, {
        "name" : "Set",
        "type" : 30
      }, {
        "name" : "String",
        "type" : 32
      }, {
        "name" : "Type1",
        "type" : 35
      }, {
        "name" : "UnsafeIndirect",
        "type" : 24
      }, {
        "name" : "UnsafeIsNil",
        "type" : 93
      }, {
        "name" : "UnsafeNew",
        "type" : 94
      }, {
        "name" : "UnsafeSet",
        "type" : 96
      } ],
      "name" : "interface{AssignableTo(anotherType github.com/modern-go/reflect2.Type) bool; Implements(thatType github.com/modern-go/reflect2.Type) bool; Indirect(obj interface{}) interface{}; IsNil(obj interface{}) bool; IsNullable() bool; Kind() reflect.Kind; LikePtr() bool; New() interface{}; PackEFace(ptr unsafe.Pointer) interface{}; RType() uintptr; Set(obj interface{}, val interface{}); String() string; Type1() reflect.Type; UnsafeIndirect(ptr unsafe.Pointer) interface{}; UnsafeIsNil(ptr unsafe.Pointer) bool; UnsafeNew() unsafe.Pointer; UnsafeSet(ptr unsafe.Pointer, val unsafe.Pointer)}",
      "type" : "Interface",
      "underlying" : 9
    }, {
      "name" : "func(thatType github.com/modern-go/reflect2.Type) bool",
      "params" : 11,
      "recv" : 1,
      "results" : 12,
      "type" : "Signature",
      "underlying" : 10,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "thatType",
        "type" : 8
      } ],
      "name" : "(thatType github.com/modern-go/reflect2.Type)",
      "type" : "Tuple",
      "underlying" : 11
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 13
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 12
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "name" : "func(obj interface{}) interface{}",
      "params" : 15,
      "recv" : 2,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 14,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "obj",
        "type" : 4
      } ],
      "name" : "(obj interface{})",
      "type" : "Tuple",
      "underlying" : 15
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 4
      } ],
      "name" : "(interface{})",
      "type" : "Tuple",
      "underlying" : 16
    }, {
      "name" : "func(obj interface{}) bool",
      "params" : 15,
      "recv" : 3,
      "results" : 12,
      "type" : "Signature",
      "underlying" : 17,
      "variadic" : false
    }, {
      "name" : "func() bool",
      "params" : 5,
      "recv" : 4,
      "results" : 12,
      "type" : "Signature",
      "underlying" : 18,
      "variadic" : false
    }, {
      "name" : "func() reflect.Kind",
      "params" : 5,
      "recv" : 5,
      "results" : 20,
      "type" : "Signature",
      "underlying" : 19,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 21
      } ],
      "name" : "(reflect.Kind)",
      "type" : "Tuple",
      "underlying" : 20
    }, {
      "local-name" : "Kind",
      "name" : "reflect.Kind",
      "package" : 1,
      "type" : "Named",
      "underlying" : 22
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 22
    }, {
      "name" : "func() interface{}",
      "params" : 5,
      "recv" : 6,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 23,
      "variadic" : false
    }, {
      "name" : "func(ptr unsafe.Pointer) interface{}",
      "params" : 25,
      "recv" : 7,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 24,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ptr",
        "type" : 26
      } ],
      "name" : "(ptr unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 25
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 2,
      "type" : "Basic",
      "underlying" : 26
    }, {
      "name" : "func() uintptr",
      "params" : 5,
      "recv" : 8,
      "results" : 28,
      "type" : "Signature",
      "underlying" : 27,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 29
      } ],
      "name" : "(uintptr)",
      "type" : "Tuple",
      "underlying" : 28
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 29
    }, {
      "name" : "func(obj interface{}, val interface{})",
      "params" : 31,
      "recv" : 9,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 30,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "obj",
        "type" : 4
      }, {
        "name" : "val",
        "type" : 4
      } ],
      "name" : "(obj interface{}, val interface{})",
      "type" : "Tuple",
      "underlying" : 31
    }, {
      "name" : "func() string",
      "params" : 5,
      "recv" : 10,
      "results" : 33,
      "type" : "Signature",
      "underlying" : 32,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 34
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 33
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 34
    }, {
      "name" : "func() reflect.Type",
      "params" : 5,
      "recv" : 23,
      "results" : 36,
      "type" : "Signature",
      "underlying" : 35,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 37
      } ],
      "name" : "(reflect.Type)",
      "type" : "Tuple",
      "underlying" : 36
    }, {
      "local-name" : "Type",
      "name" : "reflect.Type",
      "package" : 1,
      "type" : "Named",
      "underlying" : 38
    }, {
      "methods" : [ {
        "name" : "Align",
        "type" : 39
      }, {
        "name" : "AssignableTo",
        "type" : 42
      }, {
        "name" : "Bits",
        "type" : 39
      }, {
        "name" : "ChanDir",
        "type" : 44
      }, {
        "name" : "Comparable",
        "type" : 18
      }, {
        "name" : "ConvertibleTo",
        "type" : 42
      }, {
        "name" : "Elem",
        "type" : 35
      }, {
        "name" : "Field",
        "type" : 47
      }, {
        "name" : "FieldAlign",
        "type" : 39
      }, {
        "name" : "FieldByIndex",
        "type" : 54
      }, {
        "name" : "FieldByName",
        "type" : 56
      }, {
        "name" : "FieldByNameFunc",
        "type" : 59
      }, {
        "name" : "Implements",
        "type" : 42
      }, {
        "name" : "In",
        "type" : 62
      }, {
        "name" : "IsVariadic",
        "type" : 18
      }, {
        "name" : "Key",
        "type" : 35
      }, {
        "name" : "Kind",
        "type" : 19
      }, {
        "name" : "Len",
        "type" : 39
      }, {
        "name" : "Method",
        "type" : 63
      }, {
        "name" : "MethodByName",
        "type" : 83
      }, {
        "name" : "Name",
        "type" : 32
      }, {
        "name" : "NumField",
        "type" : 39
      }, {
        "name" : "NumIn",
        "type" : 39
      }, {
        "name" : "NumMethod",
        "type" : 39
      }, {
        "name" : "NumOut",
        "type" : 39
      }, {
        "name" : "Out",
        "type" : 62
      }, {
        "name" : "PkgPath",
        "type" : 32
      }, {
        "name" : "Size",
        "type" : 27
      }, {
        "name" : "String",
        "type" : 32
      }, {
        "name" : "common",
        "type" : 85
      }, {
        "name" : "uncommon",
        "type" : 87
      } ],
      "name" : "interface{Align() int; AssignableTo(u reflect.Type) bool; Bits() int; ChanDir() reflect.ChanDir; Comparable() bool; ConvertibleTo(u reflect.Type) bool; Elem() reflect.Type; Field(i int) reflect.StructField; FieldAlign() int; FieldByIndex(index []int) reflect.StructField; FieldByName(name string) (reflect.StructField, bool); FieldByNameFunc(match func(string) bool) (reflect.StructField, bool); Implements(u reflect.Type) bool; In(i int) reflect.Type; IsVariadic() bool; Key() reflect.Type; Kind() reflect.Kind; Len() int; Method(int) reflect.Method; MethodByName(string) (reflect.Method, bool); Name() string; NumField() int; NumIn() int; NumMethod() int; NumOut() int; Out(i int) reflect.Type; PkgPath() string; Size() uintptr; String() string; common() *reflect.rtype; uncommon() *reflect.uncommonType}",
      "type" : "Interface",
      "underlying" : 38
    }, {
      "name" : "func() int",
      "params" : 5,
      "recv" : 11,
      "results" : 40,
      "type" : "Signature",
      "underlying" : 39,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 41
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 40
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 41
    }, {
      "name" : "func(u reflect.Type) bool",
      "params" : 43,
      "recv" : 12,
      "results" : 12,
      "type" : "Signature",
      "underlying" : 42,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "u",
        "type" : 37
      } ],
      "name" : "(u reflect.Type)",
      "type" : "Tuple",
      "underlying" : 43
    }, {
      "name" : "func() reflect.ChanDir",
      "params" : 5,
      "recv" : 13,
      "results" : 45,
      "type" : "Signature",
      "underlying" : 44,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 46
      } ],
      "name" : "(reflect.ChanDir)",
      "type" : "Tuple",
      "underlying" : 45
    }, {
      "local-name" : "ChanDir",
      "name" : "reflect.ChanDir",
      "package" : 1,
      "type" : "Named",
      "underlying" : 41
    }, {
      "name" : "func(i int) reflect.StructField",
      "params" : 48,
      "recv" : 14,
      "results" : 49,
      "type" : "Signature",
      "underlying" : 47,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 41
      } ],
      "name" : "(i int)",
      "type" : "Tuple",
      "underlying" : 48
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 50
      } ],
      "name" : "(reflect.StructField)",
      "type" : "Tuple",
      "underlying" : 49
    }, {
      "local-name" : "StructField",
      "name" : "reflect.StructField",
      "package" : 1,
      "type" : "Named",
      "underlying" : 51
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 34
      }, {
        "name" : "PkgPath",
        "type" : 34
      }, {
        "name" : "Type",
        "type" : 37
      }, {
        "name" : "Tag",
        "type" : 52
      }, {
        "name" : "Offset",
        "type" : 29
      }, {
        "name" : "Index",
        "type" : 53
      }, {
        "name" : "Anonymous",
        "type" : 13
      } ],
      "name" : "struct{Name string; PkgPath string; Type reflect.Type; Tag reflect.StructTag; Offset uintptr; Index []int; Anonymous bool}",
      "type" : "Struct",
      "underlying" : 51
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 1,
      "type" : "Named",
      "underlying" : 34
    }, {
      "elem" : 41,
      "name" : "[]int",
      "type" : "Slice",
      "underlying" : 53
    }, {
      "name" : "func(index []int) reflect.StructField",
      "params" : 55,
      "recv" : 15,
      "results" : 49,
      "type" : "Signature",
      "underlying" : 54,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "index",
        "type" : 53
      } ],
      "name" : "(index []int)",
      "type" : "Tuple",
      "underlying" : 55
    }, {
      "name" : "func(name string) (reflect.StructField, bool)",
      "params" : 57,
      "recv" : 16,
      "results" : 58,
      "type" : "Signature",
      "underlying" : 56,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 34
      } ],
      "name" : "(name string)",
      "type" : "Tuple",
      "underlying" : 57
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 50
      }, {
        "name" : "",
        "type" : 13
      } ],
      "name" : "(reflect.StructField, bool)",
      "type" : "Tuple",
      "underlying" : 58
    }, {
      "name" : "func(match func(string) bool) (reflect.StructField, bool)",
      "params" : 60,
      "recv" : 17,
      "results" : 58,
      "type" : "Signature",
      "underlying" : 59,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "match",
        "type" : 61
      } ],
      "name" : "(match func(string) bool)",
      "type" : "Tuple",
      "underlying" : 60
    }, {
      "name" : "func(string) bool",
      "params" : 33,
      "recv" : -1,
      "results" : 12,
      "type" : "Signature",
      "underlying" : 61,
      "variadic" : false
    }, {
      "name" : "func(i int) reflect.Type",
      "params" : 48,
      "recv" : 18,
      "results" : 36,
      "type" : "Signature",
      "underlying" : 62,
      "variadic" : false
    }, {
      "name" : "func(int) reflect.Method",
      "params" : 40,
      "recv" : 19,
      "results" : 64,
      "type" : "Signature",
      "underlying" : 63,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 65
      } ],
      "name" : "(reflect.Method)",
      "type" : "Tuple",
      "underlying" : 64
    }, {
      "local-name" : "Method",
      "name" : "reflect.Method",
      "package" : 1,
      "type" : "Named",
      "underlying" : 66
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 34
      }, {
        "name" : "PkgPath",
        "type" : 34
      }, {
        "name" : "Type",
        "type" : 37
      }, {
        "name" : "Func",
        "type" : 67
      }, {
        "name" : "Index",
        "type" : 41
      } ],
      "name" : "struct{Name string; PkgPath string; Type reflect.Type; Func reflect.Value; Index int}",
      "type" : "Struct",
      "underlying" : 66
    }, {
      "local-name" : "Value",
      "name" : "reflect.Value",
      "package" : 1,
      "type" : "Named",
      "underlying" : 68
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 69
      }, {
        "name" : "ptr",
        "type" : 26
      }, {
        "name" : "flag",
        "type" : 82
      } ],
      "name" : "struct{typ *reflect.rtype; ptr unsafe.Pointer; reflect.flag}",
      "type" : "Struct",
      "underlying" : 68
    }, {
      "elem" : 70,
      "name" : "*reflect.rtype",
      "type" : "Pointer",
      "underlying" : 69
    }, {
      "local-name" : "rtype",
      "name" : "reflect.rtype",
      "package" : 1,
      "type" : "Named",
      "underlying" : 71
    }, {
      "fields" : [ {
        "name" : "size",
        "type" : 29
      }, {
        "name" : "ptrdata",
        "type" : 29
      }, {
        "name" : "hash",
        "type" : 72
      }, {
        "name" : "tflag",
        "type" : 73
      }, {
        "name" : "align",
        "type" : 74
      }, {
        "name" : "fieldAlign",
        "type" : 74
      }, {
        "name" : "kind",
        "type" : 74
      }, {
        "name" : "equal",
        "type" : 75
      }, {
        "name" : "gcdata",
        "type" : 77
      }, {
        "name" : "str",
        "type" : 79
      }, {
        "name" : "ptrToThis",
        "type" : 81
      } ],
      "name" : "struct{size uintptr; ptrdata uintptr; hash uint32; tflag reflect.tflag; align uint8; fieldAlign uint8; kind uint8; equal func(unsafe.Pointer, unsafe.Pointer) bool; gcdata *byte; str reflect.nameOff; ptrToThis reflect.typeOff}",
      "type" : "Struct",
      "underlying" : 71
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 72
    }, {
      "local-name" : "tflag",
      "name" : "reflect.tflag",
      "package" : 1,
      "type" : "Named",
      "underlying" : 74
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 74
    }, {
      "name" : "func(unsafe.Pointer, unsafe.Pointer) bool",
      "params" : 76,
      "recv" : -1,
      "results" : 12,
      "type" : "Signature",
      "underlying" : 75,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 26
      }, {
        "name" : "",
        "type" : 26
      } ],
      "name" : "(unsafe.Pointer, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 76
    }, {
      "elem" : 78,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 77
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 78
    }, {
      "local-name" : "nameOff",
      "name" : "reflect.nameOff",
      "package" : 1,
      "type" : "Named",
      "underlying" : 80
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 80
    }, {
      "local-name" : "typeOff",
      "name" : "reflect.typeOff",
      "package" : 1,
      "type" : "Named",
      "underlying" : 80
    }, {
      "local-name" : "flag",
      "name" : "reflect.flag",
      "package" : 1,
      "type" : "Named",
      "underlying" : 29
    }, {
      "name" : "func(string) (reflect.Method, bool)",
      "params" : 33,
      "recv" : 20,
      "results" : 84,
      "type" : "Signature",
      "underlying" : 83,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 65
      }, {
        "name" : "",
        "type" : 13
      } ],
      "name" : "(reflect.Method, bool)",
      "type" : "Tuple",
      "underlying" : 84
    }, {
      "name" : "func() *reflect.rtype",
      "params" : 5,
      "recv" : 21,
      "results" : 86,
      "type" : "Signature",
      "underlying" : 85,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 69
      } ],
      "name" : "(*reflect.rtype)",
      "type" : "Tuple",
      "underlying" : 86
    }, {
      "name" : "func() *reflect.uncommonType",
      "params" : 5,
      "recv" : 22,
      "results" : 88,
      "type" : "Signature",
      "underlying" : 87,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 89
      } ],
      "name" : "(*reflect.uncommonType)",
      "type" : "Tuple",
      "underlying" : 88
    }, {
      "elem" : 90,
      "name" : "*reflect.uncommonType",
      "type" : "Pointer",
      "underlying" : 89
    }, {
      "local-name" : "uncommonType",
      "name" : "reflect.uncommonType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 91
    }, {
      "fields" : [ {
        "name" : "pkgPath",
        "type" : 79
      }, {
        "name" : "mcount",
        "type" : 92
      }, {
        "name" : "xcount",
        "type" : 92
      }, {
        "name" : "moff",
        "type" : 72
      }, {
        "name" : "_",
        "type" : 72
      } ],
      "name" : "struct{pkgPath reflect.nameOff; mcount uint16; xcount uint16; moff uint32; _ uint32}",
      "type" : "Struct",
      "underlying" : 91
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 92
    }, {
      "name" : "func(ptr unsafe.Pointer) bool",
      "params" : 25,
      "recv" : 24,
      "results" : 12,
      "type" : "Signature",
      "underlying" : 93,
      "variadic" : false
    }, {
      "name" : "func() unsafe.Pointer",
      "params" : 5,
      "recv" : 25,
      "results" : 95,
      "type" : "Signature",
      "underlying" : 94,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 26
      } ],
      "name" : "(unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 95
    }, {
      "name" : "func(ptr unsafe.Pointer, val unsafe.Pointer)",
      "params" : 97,
      "recv" : 26,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 96,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ptr",
        "type" : 26
      }, {
        "name" : "val",
        "type" : 26
      } ],
      "name" : "(ptr unsafe.Pointer, val unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 97
    }, {
      "name" : "func(obj interface{}) int",
      "params" : 15,
      "recv" : 28,
      "results" : 40,
      "type" : "Signature",
      "underlying" : 98,
      "variadic" : false
    }, {
      "name" : "func() github.com/modern-go/reflect2.Type",
      "params" : 5,
      "recv" : 29,
      "results" : 100,
      "type" : "Signature",
      "underlying" : 99,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 8
      } ],
      "name" : "(github.com/modern-go/reflect2.Type)",
      "type" : "Tuple",
      "underlying" : 100
    }, {
      "name" : "func(obj interface{}, newLength int)",
      "params" : 102,
      "recv" : 30,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 101,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "obj",
        "type" : 4
      }, {
        "name" : "newLength",
        "type" : 41
      } ],
      "name" : "(obj interface{}, newLength int)",
      "type" : "Tuple",
      "underlying" : 102
    }, {
      "name" : "func(length int, cap int) interface{}",
      "params" : 104,
      "recv" : 31,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 103,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "length",
        "type" : 41
      }, {
        "name" : "cap",
        "type" : 41
      } ],
      "name" : "(length int, cap int)",
      "type" : "Tuple",
      "underlying" : 104
    }, {
      "name" : "func(obj interface{})",
      "params" : 15,
      "recv" : 32,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 105,
      "variadic" : false
    }, {
      "name" : "func(obj unsafe.Pointer, elem unsafe.Pointer)",
      "params" : 107,
      "recv" : 33,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 106,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "obj",
        "type" : 26
      }, {
        "name" : "elem",
        "type" : 26
      } ],
      "name" : "(obj unsafe.Pointer, elem unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 107
    }, {
      "name" : "func(ptr unsafe.Pointer) int",
      "params" : 25,
      "recv" : 34,
      "results" : 40,
      "type" : "Signature",
      "underlying" : 108,
      "variadic" : false
    }, {
      "name" : "func(ptr unsafe.Pointer, newLength int)",
      "params" : 110,
      "recv" : 35,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 109,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ptr",
        "type" : 26
      }, {
        "name" : "newLength",
        "type" : 41
      } ],
      "name" : "(ptr unsafe.Pointer, newLength int)",
      "type" : "Tuple",
      "underlying" : 110
    }, {
      "name" : "func(length int, cap int) unsafe.Pointer",
      "params" : 104,
      "recv" : 36,
      "results" : 95,
      "type" : "Signature",
      "underlying" : 111,
      "variadic" : false
    }, {
      "name" : "func(ptr unsafe.Pointer)",
      "params" : 25,
      "recv" : 37,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 112,
      "variadic" : false
    } ],
    "variables" : [ {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 37,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 37,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 37,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 37,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 37,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 37,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 37,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 37,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 37,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 37,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 37,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 37,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false
    } ]
  },
  "go-version" : "1.14.3"
}