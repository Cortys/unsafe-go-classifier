{
  "usage" : {
    "file" : "reflect2.go",
    "label1" : "definition",
    "label2" : "serialization",
    "line" : "30",
    "module" : "github.com/modern-go/reflect2",
    "pkg" : "github.com/modern-go/reflect2",
    "project" : "kubernetes/kubernetes",
    "snippet" : "UnsafeIsNil(ptr unsafe.Pointer) bool",
    "version" : "v1.0.1"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 9,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "binds" : [ {
            "name" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "Type"
            },
            "value" : {
              "go-type" : 1,
              "incomplete" : false,
              "kind" : "type",
              "methods" : [ {
                "declared-type" : {
                  "go-type" : 15,
                  "kind" : "type",
                  "params" : [ ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 17,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 1,
                        "value" : "reflect"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 17,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Kind"
                      }
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "Kind"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 19,
                  "kind" : "type",
                  "params" : [ ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 10,
                      "incomplete" : false,
                      "kind" : "type",
                      "methods" : [ ],
                      "type" : "interface"
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "New"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 95,
                  "kind" : "type",
                  "params" : [ ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 22,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 2,
                        "value" : "unsafe"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 22,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Pointer"
                      }
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "UnsafeNew"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 20,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 22,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 2,
                        "value" : "unsafe"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 22,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Pointer"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "ptr"
                    } ],
                    "tag" : null
                  } ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 10,
                      "incomplete" : false,
                      "kind" : "type",
                      "methods" : [ ],
                      "type" : "interface"
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "PackEFace"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 8,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 10,
                      "incomplete" : false,
                      "kind" : "type",
                      "methods" : [ ],
                      "type" : "interface"
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "obj"
                    } ],
                    "tag" : null
                  } ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 10,
                      "incomplete" : false,
                      "kind" : "type",
                      "methods" : [ ],
                      "type" : "interface"
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "Indirect"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 20,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 22,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 2,
                        "value" : "unsafe"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 22,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Pointer"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "ptr"
                    } ],
                    "tag" : null
                  } ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 10,
                      "incomplete" : false,
                      "kind" : "type",
                      "methods" : [ ],
                      "type" : "interface"
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "UnsafeIndirect"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 31,
                  "kind" : "type",
                  "params" : [ ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 33,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 1,
                        "value" : "reflect"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 33,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Type"
                      }
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "Type1"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 6,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 0,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 0,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Type"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "thatType"
                    } ],
                    "tag" : null
                  } ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 5,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 5,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "bool"
                      }
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "Implements"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 28,
                  "kind" : "type",
                  "params" : [ ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 30,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 30,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "string"
                      }
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "String"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 23,
                  "kind" : "type",
                  "params" : [ ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 25,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 25,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "uintptr"
                      }
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "RType"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 13,
                  "kind" : "type",
                  "params" : [ ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 5,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 5,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "bool"
                      }
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "LikePtr"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 13,
                  "kind" : "type",
                  "params" : [ ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 5,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 5,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "bool"
                      }
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "IsNullable"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 12,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 10,
                      "incomplete" : false,
                      "kind" : "type",
                      "methods" : [ ],
                      "type" : "interface"
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "obj"
                    } ],
                    "tag" : null
                  } ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 5,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 5,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "bool"
                      }
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "IsNil"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 94,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 22,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 2,
                        "value" : "unsafe"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 22,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Pointer"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "ptr"
                    } ],
                    "tag" : null
                  } ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 5,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 5,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "bool"
                      }
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "UnsafeIsNil"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 26,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 10,
                      "incomplete" : false,
                      "kind" : "type",
                      "methods" : [ ],
                      "type" : "interface"
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "obj"
                    } ],
                    "tag" : null
                  }, {
                    "declared-type" : {
                      "go-type" : 10,
                      "incomplete" : false,
                      "kind" : "type",
                      "methods" : [ ],
                      "type" : "interface"
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "val"
                    } ],
                    "tag" : null
                  } ],
                  "results" : null,
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "Set"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 97,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 22,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 2,
                        "value" : "unsafe"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 22,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Pointer"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "ptr"
                    } ],
                    "tag" : null
                  }, {
                    "declared-type" : {
                      "go-type" : 22,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 2,
                        "value" : "unsafe"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 22,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Pointer"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "val"
                    } ],
                    "tag" : null
                  } ],
                  "results" : null,
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "UnsafeSet"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 2,
                  "kind" : "type",
                  "params" : [ {
                    "declared-type" : {
                      "go-type" : 0,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 0,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Type"
                      }
                    },
                    "kind" : "field",
                    "names" : [ {
                      "ident-kind" : "NoKind",
                      "kind" : "ident",
                      "value" : "anotherType"
                    } ],
                    "tag" : null
                  } ],
                  "results" : [ {
                    "declared-type" : {
                      "go-type" : 5,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 5,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "bool"
                      }
                    },
                    "kind" : "field",
                    "names" : [ ],
                    "tag" : null
                  } ],
                  "type" : "function",
                  "variadic" : null
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "AssignableTo"
                } ],
                "tag" : null
              } ],
              "type" : "interface"
            }
          } ],
          "kind" : "decl",
          "type" : "type-alias"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 34,
      "code" : "type Type interface {\n\tKind() reflect.Kind\n\t// New return pointer to data of this type\n\tNew() interface{}\n\t// UnsafeNew return the allocated space pointed by unsafe.Pointer\n\tUnsafeNew() unsafe.Pointer\n\t// PackEFace cast a unsafe pointer to object represented pointer\n\tPackEFace(ptr unsafe.Pointer) interface{}\n\t// Indirect dereference object represented pointer to this type\n\tIndirect(obj interface{}) interface{}\n\t// UnsafeIndirect dereference pointer to this type\n\tUnsafeIndirect(ptr unsafe.Pointer) interface{}\n\t// Type1 returns reflect.Type\n\tType1() reflect.Type\n\tImplements(thatType Type) bool\n\tString() string\n\tRType() uintptr\n\t// interface{} of this type has pointer like behavior\n\tLikePtr() bool\n\tIsNullable() bool\n\tIsNil(obj interface{}) bool\n\tUnsafeIsNil(ptr unsafe.Pointer) bool\n\tSet(obj interface{}, val interface{})\n\tUnsafeSet(ptr unsafe.Pointer, val unsafe.Pointer)\n\tAssignableTo(anotherType Type) bool\n}",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "type Type interface {\n\tKind() reflect.Kind\n\t// New return pointer to data of this type\n\tNew() interface{}\n\t// UnsafeNew return the allocated space pointed by unsafe.Pointer\n\tUnsafeNew() unsafe.Pointer\n\t// PackEFace cast a unsafe pointer to object represented pointer\n\tPackEFace(ptr unsafe.Pointer) interface{}\n\t// Indirect dereference object represented pointer to this type\n\tIndirect(obj interface{}) interface{}\n\t// UnsafeIndirect dereference pointer to this type\n\tUnsafeIndirect(ptr unsafe.Pointer) interface{}\n\t// Type1 returns reflect.Type\n\tType1() reflect.Type\n\tImplements(thatType Type) bool\n\tString() string\n\tRType() uintptr\n\t// interface{} of this type has pointer like behavior\n\tLikePtr() bool\n\tIsNullable() bool\n\tIsNil(obj interface{}) bool\n\tUnsafeIsNil(ptr unsafe.Pointer) bool\n\tSet(obj interface{}, val interface{})\n\tUnsafeSet(ptr unsafe.Pointer, val unsafe.Pointer)\n\tAssignableTo(anotherType Type) bool\n}",
    "defines" : [ 0 ],
    "functions" : [ ],
    "line-end" : 34,
    "line-start" : 9,
    "names" : [ "Type" ],
    "package" : 0,
    "packages" : [ {
      "name" : "reflect2",
      "path" : "github.com/modern-go/reflect2"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ ],
    "receivers" : [ ],
    "results" : [ ],
    "type" : "type",
    "types" : [ {
      "local-name" : "Type",
      "name" : "github.com/modern-go/reflect2.Type",
      "package" : 0,
      "type" : "Named",
      "underlying" : 1
    }, {
      "methods" : [ {
        "name" : "AssignableTo",
        "type" : 2
      }, {
        "name" : "Implements",
        "type" : 6
      }, {
        "name" : "Indirect",
        "type" : 8
      }, {
        "name" : "IsNil",
        "type" : 12
      }, {
        "name" : "IsNullable",
        "type" : 13
      }, {
        "name" : "Kind",
        "type" : 15
      }, {
        "name" : "LikePtr",
        "type" : 13
      }, {
        "name" : "New",
        "type" : 19
      }, {
        "name" : "PackEFace",
        "type" : 20
      }, {
        "name" : "RType",
        "type" : 23
      }, {
        "name" : "Set",
        "type" : 26
      }, {
        "name" : "String",
        "type" : 28
      }, {
        "name" : "Type1",
        "type" : 31
      }, {
        "name" : "UnsafeIndirect",
        "type" : 20
      }, {
        "name" : "UnsafeIsNil",
        "type" : 94
      }, {
        "name" : "UnsafeNew",
        "type" : 95
      }, {
        "name" : "UnsafeSet",
        "type" : 97
      } ],
      "name" : "interface{AssignableTo(anotherType github.com/modern-go/reflect2.Type) bool; Implements(thatType github.com/modern-go/reflect2.Type) bool; Indirect(obj interface{}) interface{}; IsNil(obj interface{}) bool; IsNullable() bool; Kind() reflect.Kind; LikePtr() bool; New() interface{}; PackEFace(ptr unsafe.Pointer) interface{}; RType() uintptr; Set(obj interface{}, val interface{}); String() string; Type1() reflect.Type; UnsafeIndirect(ptr unsafe.Pointer) interface{}; UnsafeIsNil(ptr unsafe.Pointer) bool; UnsafeNew() unsafe.Pointer; UnsafeSet(ptr unsafe.Pointer, val unsafe.Pointer)}",
      "type" : "Interface",
      "underlying" : 1
    }, {
      "name" : "(github.com/modern-go/reflect2.Type) func(anotherType github.com/modern-go/reflect2.Type) bool",
      "params" : 3,
      "recv" : 0,
      "results" : 4,
      "type" : "Signature",
      "underlying" : 2,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "anotherType",
        "type" : 0
      } ],
      "name" : "(anotherType github.com/modern-go/reflect2.Type)",
      "type" : "Tuple",
      "underlying" : 3
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 5
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 4
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 5
    }, {
      "name" : "(github.com/modern-go/reflect2.Type) func(thatType github.com/modern-go/reflect2.Type) bool",
      "params" : 7,
      "recv" : 1,
      "results" : 4,
      "type" : "Signature",
      "underlying" : 6,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "thatType",
        "type" : 0
      } ],
      "name" : "(thatType github.com/modern-go/reflect2.Type)",
      "type" : "Tuple",
      "underlying" : 7
    }, {
      "name" : "(github.com/modern-go/reflect2.Type) func(obj interface{}) interface{}",
      "params" : 9,
      "recv" : 2,
      "results" : 11,
      "type" : "Signature",
      "underlying" : 8,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "obj",
        "type" : 10
      } ],
      "name" : "(obj interface{})",
      "type" : "Tuple",
      "underlying" : 9
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 10
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 10
      } ],
      "name" : "(interface{})",
      "type" : "Tuple",
      "underlying" : 11
    }, {
      "name" : "(github.com/modern-go/reflect2.Type) func(obj interface{}) bool",
      "params" : 9,
      "recv" : 3,
      "results" : 4,
      "type" : "Signature",
      "underlying" : 12,
      "variadic" : false
    }, {
      "name" : "(github.com/modern-go/reflect2.Type) func() bool",
      "params" : 14,
      "recv" : 4,
      "results" : 4,
      "type" : "Signature",
      "underlying" : 13,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 14
    }, {
      "name" : "(github.com/modern-go/reflect2.Type) func() reflect.Kind",
      "params" : 14,
      "recv" : 5,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 15,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 17
      } ],
      "name" : "(reflect.Kind)",
      "type" : "Tuple",
      "underlying" : 16
    }, {
      "local-name" : "Kind",
      "name" : "reflect.Kind",
      "package" : 1,
      "type" : "Named",
      "underlying" : 18
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 18
    }, {
      "name" : "(github.com/modern-go/reflect2.Type) func() interface{}",
      "params" : 14,
      "recv" : 6,
      "results" : 11,
      "type" : "Signature",
      "underlying" : 19,
      "variadic" : false
    }, {
      "name" : "(github.com/modern-go/reflect2.Type) func(ptr unsafe.Pointer) interface{}",
      "params" : 21,
      "recv" : 7,
      "results" : 11,
      "type" : "Signature",
      "underlying" : 20,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ptr",
        "type" : 22
      } ],
      "name" : "(ptr unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 21
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 2,
      "type" : "Basic",
      "underlying" : 22
    }, {
      "name" : "(github.com/modern-go/reflect2.Type) func() uintptr",
      "params" : 14,
      "recv" : 8,
      "results" : 24,
      "type" : "Signature",
      "underlying" : 23,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 25
      } ],
      "name" : "(uintptr)",
      "type" : "Tuple",
      "underlying" : 24
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 25
    }, {
      "name" : "(github.com/modern-go/reflect2.Type) func(obj interface{}, val interface{})",
      "params" : 27,
      "recv" : 9,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 26,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "obj",
        "type" : 10
      }, {
        "name" : "val",
        "type" : 10
      } ],
      "name" : "(obj interface{}, val interface{})",
      "type" : "Tuple",
      "underlying" : 27
    }, {
      "name" : "(github.com/modern-go/reflect2.Type) func() string",
      "params" : 14,
      "recv" : 10,
      "results" : 29,
      "type" : "Signature",
      "underlying" : 28,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 30
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 29
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 30
    }, {
      "name" : "(github.com/modern-go/reflect2.Type) func() reflect.Type",
      "params" : 14,
      "recv" : 28,
      "results" : 32,
      "type" : "Signature",
      "underlying" : 31,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 33
      } ],
      "name" : "(reflect.Type)",
      "type" : "Tuple",
      "underlying" : 32
    }, {
      "local-name" : "Type",
      "name" : "reflect.Type",
      "package" : 1,
      "type" : "Named",
      "underlying" : 34
    }, {
      "methods" : [ {
        "name" : "Align",
        "type" : 35
      }, {
        "name" : "AssignableTo",
        "type" : 38
      }, {
        "name" : "Bits",
        "type" : 35
      }, {
        "name" : "ChanDir",
        "type" : 40
      }, {
        "name" : "Comparable",
        "type" : 43
      }, {
        "name" : "ConvertibleTo",
        "type" : 38
      }, {
        "name" : "Elem",
        "type" : 44
      }, {
        "name" : "Field",
        "type" : 45
      }, {
        "name" : "FieldAlign",
        "type" : 35
      }, {
        "name" : "FieldByIndex",
        "type" : 52
      }, {
        "name" : "FieldByName",
        "type" : 54
      }, {
        "name" : "FieldByNameFunc",
        "type" : 57
      }, {
        "name" : "Implements",
        "type" : 38
      }, {
        "name" : "In",
        "type" : 60
      }, {
        "name" : "IsVariadic",
        "type" : 43
      }, {
        "name" : "Key",
        "type" : 44
      }, {
        "name" : "Kind",
        "type" : 61
      }, {
        "name" : "Len",
        "type" : 35
      }, {
        "name" : "Method",
        "type" : 62
      }, {
        "name" : "MethodByName",
        "type" : 82
      }, {
        "name" : "Name",
        "type" : 84
      }, {
        "name" : "NumField",
        "type" : 35
      }, {
        "name" : "NumIn",
        "type" : 35
      }, {
        "name" : "NumMethod",
        "type" : 35
      }, {
        "name" : "NumOut",
        "type" : 35
      }, {
        "name" : "Out",
        "type" : 60
      }, {
        "name" : "PkgPath",
        "type" : 84
      }, {
        "name" : "Size",
        "type" : 85
      }, {
        "name" : "String",
        "type" : 84
      }, {
        "name" : "common",
        "type" : 86
      }, {
        "name" : "uncommon",
        "type" : 88
      } ],
      "name" : "interface{Align() int; AssignableTo(u reflect.Type) bool; Bits() int; ChanDir() reflect.ChanDir; Comparable() bool; ConvertibleTo(u reflect.Type) bool; Elem() reflect.Type; Field(i int) reflect.StructField; FieldAlign() int; FieldByIndex(index []int) reflect.StructField; FieldByName(name string) (reflect.StructField, bool); FieldByNameFunc(match func(string) bool) (reflect.StructField, bool); Implements(u reflect.Type) bool; In(i int) reflect.Type; IsVariadic() bool; Key() reflect.Type; Kind() reflect.Kind; Len() int; Method(int) reflect.Method; MethodByName(string) (reflect.Method, bool); Name() string; NumField() int; NumIn() int; NumMethod() int; NumOut() int; Out(i int) reflect.Type; PkgPath() string; Size() uintptr; String() string; common() *reflect.rtype; uncommon() *reflect.uncommonType}",
      "type" : "Interface",
      "underlying" : 34
    }, {
      "name" : "(reflect.Type) func() int",
      "params" : 14,
      "recv" : 11,
      "results" : 36,
      "type" : "Signature",
      "underlying" : 35,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 37
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 36
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 37
    }, {
      "name" : "(reflect.Type) func(u reflect.Type) bool",
      "params" : 39,
      "recv" : 12,
      "results" : 4,
      "type" : "Signature",
      "underlying" : 38,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "u",
        "type" : 33
      } ],
      "name" : "(u reflect.Type)",
      "type" : "Tuple",
      "underlying" : 39
    }, {
      "name" : "(reflect.Type) func() reflect.ChanDir",
      "params" : 14,
      "recv" : 13,
      "results" : 41,
      "type" : "Signature",
      "underlying" : 40,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 42
      } ],
      "name" : "(reflect.ChanDir)",
      "type" : "Tuple",
      "underlying" : 41
    }, {
      "local-name" : "ChanDir",
      "name" : "reflect.ChanDir",
      "package" : 1,
      "type" : "Named",
      "underlying" : 37
    }, {
      "name" : "(reflect.Type) func() bool",
      "params" : 14,
      "recv" : 14,
      "results" : 4,
      "type" : "Signature",
      "underlying" : 43,
      "variadic" : false
    }, {
      "name" : "(reflect.Type) func() reflect.Type",
      "params" : 14,
      "recv" : 15,
      "results" : 32,
      "type" : "Signature",
      "underlying" : 44,
      "variadic" : false
    }, {
      "name" : "(reflect.Type) func(i int) reflect.StructField",
      "params" : 46,
      "recv" : 16,
      "results" : 47,
      "type" : "Signature",
      "underlying" : 45,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 37
      } ],
      "name" : "(i int)",
      "type" : "Tuple",
      "underlying" : 46
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 48
      } ],
      "name" : "(reflect.StructField)",
      "type" : "Tuple",
      "underlying" : 47
    }, {
      "local-name" : "StructField",
      "name" : "reflect.StructField",
      "package" : 1,
      "type" : "Named",
      "underlying" : 49
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 30
      }, {
        "name" : "PkgPath",
        "type" : 30
      }, {
        "name" : "Type",
        "type" : 33
      }, {
        "name" : "Tag",
        "type" : 50
      }, {
        "name" : "Offset",
        "type" : 25
      }, {
        "name" : "Index",
        "type" : 51
      }, {
        "name" : "Anonymous",
        "type" : 5
      } ],
      "name" : "struct{Name string; PkgPath string; Type reflect.Type; Tag reflect.StructTag; Offset uintptr; Index []int; Anonymous bool}",
      "type" : "Struct",
      "underlying" : 49
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 1,
      "type" : "Named",
      "underlying" : 30
    }, {
      "elem" : 37,
      "name" : "[]int",
      "type" : "Slice",
      "underlying" : 51
    }, {
      "name" : "(reflect.Type) func(index []int) reflect.StructField",
      "params" : 53,
      "recv" : 17,
      "results" : 47,
      "type" : "Signature",
      "underlying" : 52,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "index",
        "type" : 51
      } ],
      "name" : "(index []int)",
      "type" : "Tuple",
      "underlying" : 53
    }, {
      "name" : "(reflect.Type) func(name string) (reflect.StructField, bool)",
      "params" : 55,
      "recv" : 18,
      "results" : 56,
      "type" : "Signature",
      "underlying" : 54,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 30
      } ],
      "name" : "(name string)",
      "type" : "Tuple",
      "underlying" : 55
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 48
      }, {
        "name" : "",
        "type" : 5
      } ],
      "name" : "(reflect.StructField, bool)",
      "type" : "Tuple",
      "underlying" : 56
    }, {
      "name" : "(reflect.Type) func(match func(string) bool) (reflect.StructField, bool)",
      "params" : 58,
      "recv" : 19,
      "results" : 56,
      "type" : "Signature",
      "underlying" : 57,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "match",
        "type" : 59
      } ],
      "name" : "(match func(string) bool)",
      "type" : "Tuple",
      "underlying" : 58
    }, {
      "name" : "func(string) bool",
      "params" : 29,
      "recv" : -1,
      "results" : 4,
      "type" : "Signature",
      "underlying" : 59,
      "variadic" : false
    }, {
      "name" : "(reflect.Type) func(i int) reflect.Type",
      "params" : 46,
      "recv" : 20,
      "results" : 32,
      "type" : "Signature",
      "underlying" : 60,
      "variadic" : false
    }, {
      "name" : "(reflect.Type) func() reflect.Kind",
      "params" : 14,
      "recv" : 21,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 61,
      "variadic" : false
    }, {
      "name" : "(reflect.Type) func(int) reflect.Method",
      "params" : 36,
      "recv" : 22,
      "results" : 63,
      "type" : "Signature",
      "underlying" : 62,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 64
      } ],
      "name" : "(reflect.Method)",
      "type" : "Tuple",
      "underlying" : 63
    }, {
      "local-name" : "Method",
      "name" : "reflect.Method",
      "package" : 1,
      "type" : "Named",
      "underlying" : 65
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 30
      }, {
        "name" : "PkgPath",
        "type" : 30
      }, {
        "name" : "Type",
        "type" : 33
      }, {
        "name" : "Func",
        "type" : 66
      }, {
        "name" : "Index",
        "type" : 37
      } ],
      "name" : "struct{Name string; PkgPath string; Type reflect.Type; Func reflect.Value; Index int}",
      "type" : "Struct",
      "underlying" : 65
    }, {
      "local-name" : "Value",
      "name" : "reflect.Value",
      "package" : 1,
      "type" : "Named",
      "underlying" : 67
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 68
      }, {
        "name" : "ptr",
        "type" : 22
      }, {
        "name" : "flag",
        "type" : 81
      } ],
      "name" : "struct{typ *reflect.rtype; ptr unsafe.Pointer; reflect.flag}",
      "type" : "Struct",
      "underlying" : 67
    }, {
      "elem" : 69,
      "name" : "*reflect.rtype",
      "type" : "Pointer",
      "underlying" : 68
    }, {
      "local-name" : "rtype",
      "name" : "reflect.rtype",
      "package" : 1,
      "type" : "Named",
      "underlying" : 70
    }, {
      "fields" : [ {
        "name" : "size",
        "type" : 25
      }, {
        "name" : "ptrdata",
        "type" : 25
      }, {
        "name" : "hash",
        "type" : 71
      }, {
        "name" : "tflag",
        "type" : 72
      }, {
        "name" : "align",
        "type" : 73
      }, {
        "name" : "fieldAlign",
        "type" : 73
      }, {
        "name" : "kind",
        "type" : 73
      }, {
        "name" : "equal",
        "type" : 74
      }, {
        "name" : "gcdata",
        "type" : 76
      }, {
        "name" : "str",
        "type" : 78
      }, {
        "name" : "ptrToThis",
        "type" : 80
      } ],
      "name" : "struct{size uintptr; ptrdata uintptr; hash uint32; tflag reflect.tflag; align uint8; fieldAlign uint8; kind uint8; equal func(unsafe.Pointer, unsafe.Pointer) bool; gcdata *byte; str reflect.nameOff; ptrToThis reflect.typeOff}",
      "type" : "Struct",
      "underlying" : 70
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 71
    }, {
      "local-name" : "tflag",
      "name" : "reflect.tflag",
      "package" : 1,
      "type" : "Named",
      "underlying" : 73
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 73
    }, {
      "name" : "func(unsafe.Pointer, unsafe.Pointer) bool",
      "params" : 75,
      "recv" : -1,
      "results" : 4,
      "type" : "Signature",
      "underlying" : 74,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 22
      }, {
        "name" : "",
        "type" : 22
      } ],
      "name" : "(unsafe.Pointer, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 75
    }, {
      "elem" : 77,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 76
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 77
    }, {
      "local-name" : "nameOff",
      "name" : "reflect.nameOff",
      "package" : 1,
      "type" : "Named",
      "underlying" : 79
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 79
    }, {
      "local-name" : "typeOff",
      "name" : "reflect.typeOff",
      "package" : 1,
      "type" : "Named",
      "underlying" : 79
    }, {
      "local-name" : "flag",
      "name" : "reflect.flag",
      "package" : 1,
      "type" : "Named",
      "underlying" : 25
    }, {
      "name" : "(reflect.Type) func(string) (reflect.Method, bool)",
      "params" : 29,
      "recv" : 23,
      "results" : 83,
      "type" : "Signature",
      "underlying" : 82,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 64
      }, {
        "name" : "",
        "type" : 5
      } ],
      "name" : "(reflect.Method, bool)",
      "type" : "Tuple",
      "underlying" : 83
    }, {
      "name" : "(reflect.Type) func() string",
      "params" : 14,
      "recv" : 24,
      "results" : 29,
      "type" : "Signature",
      "underlying" : 84,
      "variadic" : false
    }, {
      "name" : "(reflect.Type) func() uintptr",
      "params" : 14,
      "recv" : 25,
      "results" : 24,
      "type" : "Signature",
      "underlying" : 85,
      "variadic" : false
    }, {
      "name" : "(reflect.Type) func() *reflect.rtype",
      "params" : 14,
      "recv" : 26,
      "results" : 87,
      "type" : "Signature",
      "underlying" : 86,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 68
      } ],
      "name" : "(*reflect.rtype)",
      "type" : "Tuple",
      "underlying" : 87
    }, {
      "name" : "(reflect.Type) func() *reflect.uncommonType",
      "params" : 14,
      "recv" : 27,
      "results" : 89,
      "type" : "Signature",
      "underlying" : 88,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 90
      } ],
      "name" : "(*reflect.uncommonType)",
      "type" : "Tuple",
      "underlying" : 89
    }, {
      "elem" : 91,
      "name" : "*reflect.uncommonType",
      "type" : "Pointer",
      "underlying" : 90
    }, {
      "local-name" : "uncommonType",
      "name" : "reflect.uncommonType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 92
    }, {
      "fields" : [ {
        "name" : "pkgPath",
        "type" : 78
      }, {
        "name" : "mcount",
        "type" : 93
      }, {
        "name" : "xcount",
        "type" : 93
      }, {
        "name" : "moff",
        "type" : 71
      }, {
        "name" : "_",
        "type" : 71
      } ],
      "name" : "struct{pkgPath reflect.nameOff; mcount uint16; xcount uint16; moff uint32; _ uint32}",
      "type" : "Struct",
      "underlying" : 92
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 93
    }, {
      "name" : "(github.com/modern-go/reflect2.Type) func(ptr unsafe.Pointer) bool",
      "params" : 21,
      "recv" : 29,
      "results" : 4,
      "type" : "Signature",
      "underlying" : 94,
      "variadic" : false
    }, {
      "name" : "(github.com/modern-go/reflect2.Type) func() unsafe.Pointer",
      "params" : 14,
      "recv" : 30,
      "results" : 96,
      "type" : "Signature",
      "underlying" : 95,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 22
      } ],
      "name" : "(unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 96
    }, {
      "name" : "(github.com/modern-go/reflect2.Type) func(ptr unsafe.Pointer, val unsafe.Pointer)",
      "params" : 98,
      "recv" : 31,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 97,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ptr",
        "type" : 22
      }, {
        "name" : "val",
        "type" : 22
      } ],
      "name" : "(ptr unsafe.Pointer, val unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 98
    } ],
    "variables" : [ {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}