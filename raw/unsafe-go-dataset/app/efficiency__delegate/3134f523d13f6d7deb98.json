{
  "usage" : {
    "file" : "tracer.go",
    "label1" : "delegate",
    "label2" : "efficiency",
    "line" : "141",
    "module" : "github.com/weaveworks/tcptracer-bpf",
    "pkg" : "github.com/weaveworks/tcptracer-bpf/pkg/tracer",
    "project" : "weaveworks/scope",
    "snippet" : "err = t.m.DeleteElement(mapFdInstall, unsafe.Pointer(&pid))",
    "version" : "v0.0.0-20200114145059-84a08fc667c0"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 10, 11 ],
      "exit" : false,
      "out-vars" : [ 10, 11 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 11, 10 ],
      "exit" : false,
      "out-vars" : [ 11, 15, 10 ],
      "decl-vars" : [ 15 ],
      "line-start" : 140,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "mapFdInstall"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 9,
            "kind" : "constant",
            "value" : {
              "type" : "STRING",
              "value" : "fdinstall_pids"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Map"
            },
            "go-type" : 117,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "m",
                "variable" : 13
              },
              "go-type" : 13,
              "kind" : "expression",
              "target" : {
                "go-type" : 10,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "t",
                  "variable" : 10
                }
              },
              "type" : "selector"
            },
            "type" : "selector"
          },
          "go-type" : 83,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 140,
      "code" : "mapFdInstall := t.m.Map(\"fdinstall_pids\")",
      "entry" : false,
      "use-vars" : [ 10 ]
    }, {
      "update-vars" : [ 12 ],
      "successors" : [ 4 ],
      "in-vars" : [ 15, 10, 11 ],
      "exit" : false,
      "out-vars" : [ 12 ],
      "decl-vars" : [ ],
      "line-start" : 141,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 4,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 12
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 83,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "mapFdInstall",
              "variable" : 15
            }
          }, {
            "coerced-to" : {
              "go-type" : 123,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 123,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 123,
            "kind" : "expression",
            "target" : {
              "go-type" : 125,
              "kind" : "expression",
              "operator" : "&",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "pid",
                  "variable" : 11
                }
              },
              "type" : "unary"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "function" : 2,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "DeleteElement"
            },
            "go-type" : 121,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "m",
                "variable" : 13
              },
              "go-type" : 13,
              "kind" : "expression",
              "target" : {
                "go-type" : 10,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "t",
                  "variable" : 10
                }
              },
              "type" : "selector"
            },
            "type" : "selector"
          },
          "go-type" : 4,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 12 ],
      "line-end" : 141,
      "code" : "err = t.m.DeleteElement(mapFdInstall, unsafe.Pointer(&pid))",
      "entry" : false,
      "use-vars" : [ 11, 10, 15 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 12 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 142,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 4,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 12
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 142,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 12 ]
    } ],
    "code" : "func (t *Tracer) RemoveFdInstallWatcher(pid uint32) (err error) {\n\tmapFdInstall := t.m.Map(\"fdinstall_pids\")\n\terr = t.m.DeleteElement(mapFdInstall, unsafe.Pointer(&pid))\n\treturn err\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "RemoveFdInstallWatcher",
      "package" : 0,
      "type" : 0,
      "exported" : true
    }, {
      "name" : "Map",
      "package" : 1,
      "type" : 120,
      "exported" : true
    }, {
      "name" : "DeleteElement",
      "package" : 1,
      "type" : 124,
      "exported" : true
    } ],
    "line-end" : 143,
    "line-start" : 139,
    "names" : [ "RemoveFdInstallWatcher" ],
    "package" : 0,
    "packages" : [ {
      "name" : "tracer",
      "path" : "github.com/weaveworks/tcptracer-bpf/pkg/tracer"
    }, {
      "name" : "elf",
      "path" : "github.com/iovisor/gobpf/elf"
    }, {
      "name" : "io",
      "path" : "io"
    }, {
      "name" : "elf",
      "path" : "debug/elf"
    }, {
      "name" : "binary",
      "path" : "encoding/binary"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 11 ],
    "receivers" : [ 10 ],
    "results" : [ 12 ],
    "type" : "function",
    "types" : [ {
      "name" : "(*github.com/weaveworks/tcptracer-bpf/pkg/tracer.Tracer) func(pid uint32) (err error)",
      "params" : 1,
      "recv" : 10,
      "results" : 3,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pid",
        "type" : 2
      } ],
      "name" : "(pid uint32)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 2
    }, {
      "fields" : [ {
        "name" : "err",
        "type" : 4
      } ],
      "name" : "(err error)",
      "type" : "Tuple",
      "underlying" : 3
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 6
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 5
    }, {
      "name" : "(error) func() string",
      "params" : 7,
      "recv" : 0,
      "results" : 8,
      "type" : "Signature",
      "underlying" : 6,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 7
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 9
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 8
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 9
    }, {
      "elem" : 11,
      "name" : "*github.com/weaveworks/tcptracer-bpf/pkg/tracer.Tracer",
      "type" : "Pointer",
      "underlying" : 10
    }, {
      "local-name" : "Tracer",
      "name" : "github.com/weaveworks/tcptracer-bpf/pkg/tracer.Tracer",
      "package" : 0,
      "type" : "Named",
      "underlying" : 12
    }, {
      "fields" : [ {
        "name" : "m",
        "type" : 13
      }, {
        "name" : "perfMapIPV4",
        "type" : 107
      }, {
        "name" : "perfMapIPV6",
        "type" : 107
      }, {
        "name" : "stopChan",
        "type" : 112
      } ],
      "name" : "struct{m *github.com/iovisor/gobpf/elf.Module; perfMapIPV4 *github.com/iovisor/gobpf/elf.PerfMap; perfMapIPV6 *github.com/iovisor/gobpf/elf.PerfMap; stopChan chan struct{}}",
      "type" : "Struct",
      "underlying" : 12
    }, {
      "elem" : 14,
      "name" : "*github.com/iovisor/gobpf/elf.Module",
      "type" : "Pointer",
      "underlying" : 13
    }, {
      "local-name" : "Module",
      "name" : "github.com/iovisor/gobpf/elf.Module",
      "package" : 1,
      "type" : "Named",
      "underlying" : 15
    }, {
      "fields" : [ {
        "name" : "fileName",
        "type" : 9
      }, {
        "name" : "fileReader",
        "type" : 16
      }, {
        "name" : "file",
        "type" : 25
      }, {
        "name" : "log",
        "type" : 20
      }, {
        "name" : "maps",
        "type" : 82
      }, {
        "name" : "probes",
        "type" : 90
      }, {
        "name" : "cgroupPrograms",
        "type" : 94
      }, {
        "name" : "socketFilters",
        "type" : 98
      }, {
        "name" : "tracepointPrograms",
        "type" : 101
      }, {
        "name" : "schedPrograms",
        "type" : 104
      } ],
      "name" : "struct{fileName string; fileReader io.ReaderAt; file *debug/elf.File; log []byte; maps map[string]*github.com/iovisor/gobpf/elf.Map; probes map[string]*github.com/iovisor/gobpf/elf.Kprobe; cgroupPrograms map[string]*github.com/iovisor/gobpf/elf.CgroupProgram; socketFilters map[string]*github.com/iovisor/gobpf/elf.SocketFilter; tracepointPrograms map[string]*github.com/iovisor/gobpf/elf.TracepointProgram; schedPrograms map[string]*github.com/iovisor/gobpf/elf.SchedProgram}",
      "type" : "Struct",
      "underlying" : 15
    }, {
      "local-name" : "ReaderAt",
      "name" : "io.ReaderAt",
      "package" : 2,
      "type" : "Named",
      "underlying" : 17
    }, {
      "methods" : [ {
        "name" : "ReadAt",
        "type" : 18
      } ],
      "name" : "interface{ReadAt(p []byte, off int64) (n int, err error)}",
      "type" : "Interface",
      "underlying" : 17
    }, {
      "name" : "(io.ReaderAt) func(p []byte, off int64) (n int, err error)",
      "params" : 19,
      "recv" : 1,
      "results" : 23,
      "type" : "Signature",
      "underlying" : 18,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "p",
        "type" : 20
      }, {
        "name" : "off",
        "type" : 22
      } ],
      "name" : "(p []byte, off int64)",
      "type" : "Tuple",
      "underlying" : 19
    }, {
      "elem" : 21,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 20
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 21
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 22
    }, {
      "fields" : [ {
        "name" : "n",
        "type" : 24
      }, {
        "name" : "err",
        "type" : 4
      } ],
      "name" : "(n int, err error)",
      "type" : "Tuple",
      "underlying" : 23
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 24
    }, {
      "elem" : 26,
      "name" : "*debug/elf.File",
      "type" : "Pointer",
      "underlying" : 25
    }, {
      "local-name" : "File",
      "name" : "debug/elf.File",
      "package" : 3,
      "type" : "Named",
      "underlying" : 27
    }, {
      "fields" : [ {
        "name" : "FileHeader",
        "type" : 28
      }, {
        "name" : "Sections",
        "type" : 55
      }, {
        "name" : "Progs",
        "type" : 67
      }, {
        "name" : "closer",
        "type" : 75
      }, {
        "name" : "gnuNeed",
        "type" : 79
      }, {
        "name" : "gnuVersym",
        "type" : 20
      } ],
      "name" : "struct{debug/elf.FileHeader; Sections []*debug/elf.Section; Progs []*debug/elf.Prog; closer io.Closer; gnuNeed []debug/elf.verneed; gnuVersym []byte}",
      "type" : "Struct",
      "underlying" : 27
    }, {
      "local-name" : "FileHeader",
      "name" : "debug/elf.FileHeader",
      "package" : 3,
      "type" : "Named",
      "underlying" : 29
    }, {
      "fields" : [ {
        "name" : "Class",
        "type" : 30
      }, {
        "name" : "Data",
        "type" : 31
      }, {
        "name" : "Version",
        "type" : 32
      }, {
        "name" : "OSABI",
        "type" : 33
      }, {
        "name" : "ABIVersion",
        "type" : 34
      }, {
        "name" : "ByteOrder",
        "type" : 35
      }, {
        "name" : "Type",
        "type" : 53
      }, {
        "name" : "Machine",
        "type" : 54
      }, {
        "name" : "Entry",
        "type" : 44
      } ],
      "name" : "struct{Class debug/elf.Class; Data debug/elf.Data; Version debug/elf.Version; OSABI debug/elf.OSABI; ABIVersion uint8; ByteOrder encoding/binary.ByteOrder; Type debug/elf.Type; Machine debug/elf.Machine; Entry uint64}",
      "type" : "Struct",
      "underlying" : 29
    }, {
      "local-name" : "Class",
      "name" : "debug/elf.Class",
      "package" : 3,
      "type" : "Named",
      "underlying" : 21
    }, {
      "local-name" : "Data",
      "name" : "debug/elf.Data",
      "package" : 3,
      "type" : "Named",
      "underlying" : 21
    }, {
      "local-name" : "Version",
      "name" : "debug/elf.Version",
      "package" : 3,
      "type" : "Named",
      "underlying" : 21
    }, {
      "local-name" : "OSABI",
      "name" : "debug/elf.OSABI",
      "package" : 3,
      "type" : "Named",
      "underlying" : 21
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 34
    }, {
      "local-name" : "ByteOrder",
      "name" : "encoding/binary.ByteOrder",
      "package" : 4,
      "type" : "Named",
      "underlying" : 36
    }, {
      "methods" : [ {
        "name" : "PutUint16",
        "type" : 37
      }, {
        "name" : "PutUint32",
        "type" : 40
      }, {
        "name" : "PutUint64",
        "type" : 42
      }, {
        "name" : "String",
        "type" : 45
      }, {
        "name" : "Uint16",
        "type" : 46
      }, {
        "name" : "Uint32",
        "type" : 49
      }, {
        "name" : "Uint64",
        "type" : 51
      } ],
      "name" : "interface{PutUint16([]byte, uint16); PutUint32([]byte, uint32); PutUint64([]byte, uint64); String() string; Uint16([]byte) uint16; Uint32([]byte) uint32; Uint64([]byte) uint64}",
      "type" : "Interface",
      "underlying" : 36
    }, {
      "name" : "(encoding/binary.ByteOrder) func([]byte, uint16)",
      "params" : 38,
      "recv" : 2,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 37,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 20
      }, {
        "name" : "",
        "type" : 39
      } ],
      "name" : "([]byte, uint16)",
      "type" : "Tuple",
      "underlying" : 38
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 39
    }, {
      "name" : "(encoding/binary.ByteOrder) func([]byte, uint32)",
      "params" : 41,
      "recv" : 3,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 40,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 20
      }, {
        "name" : "",
        "type" : 2
      } ],
      "name" : "([]byte, uint32)",
      "type" : "Tuple",
      "underlying" : 41
    }, {
      "name" : "(encoding/binary.ByteOrder) func([]byte, uint64)",
      "params" : 43,
      "recv" : 4,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 42,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 20
      }, {
        "name" : "",
        "type" : 44
      } ],
      "name" : "([]byte, uint64)",
      "type" : "Tuple",
      "underlying" : 43
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 44
    }, {
      "name" : "(encoding/binary.ByteOrder) func() string",
      "params" : 7,
      "recv" : 5,
      "results" : 8,
      "type" : "Signature",
      "underlying" : 45,
      "variadic" : false
    }, {
      "name" : "(encoding/binary.ByteOrder) func([]byte) uint16",
      "params" : 47,
      "recv" : 6,
      "results" : 48,
      "type" : "Signature",
      "underlying" : 46,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 20
      } ],
      "name" : "([]byte)",
      "type" : "Tuple",
      "underlying" : 47
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 39
      } ],
      "name" : "(uint16)",
      "type" : "Tuple",
      "underlying" : 48
    }, {
      "name" : "(encoding/binary.ByteOrder) func([]byte) uint32",
      "params" : 47,
      "recv" : 7,
      "results" : 50,
      "type" : "Signature",
      "underlying" : 49,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 2
      } ],
      "name" : "(uint32)",
      "type" : "Tuple",
      "underlying" : 50
    }, {
      "name" : "(encoding/binary.ByteOrder) func([]byte) uint64",
      "params" : 47,
      "recv" : 8,
      "results" : 52,
      "type" : "Signature",
      "underlying" : 51,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 44
      } ],
      "name" : "(uint64)",
      "type" : "Tuple",
      "underlying" : 52
    }, {
      "local-name" : "Type",
      "name" : "debug/elf.Type",
      "package" : 3,
      "type" : "Named",
      "underlying" : 39
    }, {
      "local-name" : "Machine",
      "name" : "debug/elf.Machine",
      "package" : 3,
      "type" : "Named",
      "underlying" : 39
    }, {
      "elem" : 56,
      "name" : "[]*debug/elf.Section",
      "type" : "Slice",
      "underlying" : 55
    }, {
      "elem" : 57,
      "name" : "*debug/elf.Section",
      "type" : "Pointer",
      "underlying" : 56
    }, {
      "local-name" : "Section",
      "name" : "debug/elf.Section",
      "package" : 3,
      "type" : "Named",
      "underlying" : 58
    }, {
      "fields" : [ {
        "name" : "SectionHeader",
        "type" : 59
      }, {
        "name" : "ReaderAt",
        "type" : 16
      }, {
        "name" : "sr",
        "type" : 63
      }, {
        "name" : "compressionType",
        "type" : 66
      }, {
        "name" : "compressionOffset",
        "type" : 22
      } ],
      "name" : "struct{debug/elf.SectionHeader; io.ReaderAt; sr *io.SectionReader; compressionType debug/elf.CompressionType; compressionOffset int64}",
      "type" : "Struct",
      "underlying" : 58
    }, {
      "local-name" : "SectionHeader",
      "name" : "debug/elf.SectionHeader",
      "package" : 3,
      "type" : "Named",
      "underlying" : 60
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 9
      }, {
        "name" : "Type",
        "type" : 61
      }, {
        "name" : "Flags",
        "type" : 62
      }, {
        "name" : "Addr",
        "type" : 44
      }, {
        "name" : "Offset",
        "type" : 44
      }, {
        "name" : "Size",
        "type" : 44
      }, {
        "name" : "Link",
        "type" : 2
      }, {
        "name" : "Info",
        "type" : 2
      }, {
        "name" : "Addralign",
        "type" : 44
      }, {
        "name" : "Entsize",
        "type" : 44
      }, {
        "name" : "FileSize",
        "type" : 44
      } ],
      "name" : "struct{Name string; Type debug/elf.SectionType; Flags debug/elf.SectionFlag; Addr uint64; Offset uint64; Size uint64; Link uint32; Info uint32; Addralign uint64; Entsize uint64; FileSize uint64}",
      "type" : "Struct",
      "underlying" : 60
    }, {
      "local-name" : "SectionType",
      "name" : "debug/elf.SectionType",
      "package" : 3,
      "type" : "Named",
      "underlying" : 2
    }, {
      "local-name" : "SectionFlag",
      "name" : "debug/elf.SectionFlag",
      "package" : 3,
      "type" : "Named",
      "underlying" : 2
    }, {
      "elem" : 64,
      "name" : "*io.SectionReader",
      "type" : "Pointer",
      "underlying" : 63
    }, {
      "local-name" : "SectionReader",
      "name" : "io.SectionReader",
      "package" : 2,
      "type" : "Named",
      "underlying" : 65
    }, {
      "fields" : [ {
        "name" : "r",
        "type" : 16
      }, {
        "name" : "base",
        "type" : 22
      }, {
        "name" : "off",
        "type" : 22
      }, {
        "name" : "limit",
        "type" : 22
      } ],
      "name" : "struct{r io.ReaderAt; base int64; off int64; limit int64}",
      "type" : "Struct",
      "underlying" : 65
    }, {
      "local-name" : "CompressionType",
      "name" : "debug/elf.CompressionType",
      "package" : 3,
      "type" : "Named",
      "underlying" : 24
    }, {
      "elem" : 68,
      "name" : "[]*debug/elf.Prog",
      "type" : "Slice",
      "underlying" : 67
    }, {
      "elem" : 69,
      "name" : "*debug/elf.Prog",
      "type" : "Pointer",
      "underlying" : 68
    }, {
      "local-name" : "Prog",
      "name" : "debug/elf.Prog",
      "package" : 3,
      "type" : "Named",
      "underlying" : 70
    }, {
      "fields" : [ {
        "name" : "ProgHeader",
        "type" : 71
      }, {
        "name" : "ReaderAt",
        "type" : 16
      }, {
        "name" : "sr",
        "type" : 63
      } ],
      "name" : "struct{debug/elf.ProgHeader; io.ReaderAt; sr *io.SectionReader}",
      "type" : "Struct",
      "underlying" : 70
    }, {
      "local-name" : "ProgHeader",
      "name" : "debug/elf.ProgHeader",
      "package" : 3,
      "type" : "Named",
      "underlying" : 72
    }, {
      "fields" : [ {
        "name" : "Type",
        "type" : 73
      }, {
        "name" : "Flags",
        "type" : 74
      }, {
        "name" : "Off",
        "type" : 44
      }, {
        "name" : "Vaddr",
        "type" : 44
      }, {
        "name" : "Paddr",
        "type" : 44
      }, {
        "name" : "Filesz",
        "type" : 44
      }, {
        "name" : "Memsz",
        "type" : 44
      }, {
        "name" : "Align",
        "type" : 44
      } ],
      "name" : "struct{Type debug/elf.ProgType; Flags debug/elf.ProgFlag; Off uint64; Vaddr uint64; Paddr uint64; Filesz uint64; Memsz uint64; Align uint64}",
      "type" : "Struct",
      "underlying" : 72
    }, {
      "local-name" : "ProgType",
      "name" : "debug/elf.ProgType",
      "package" : 3,
      "type" : "Named",
      "underlying" : 24
    }, {
      "local-name" : "ProgFlag",
      "name" : "debug/elf.ProgFlag",
      "package" : 3,
      "type" : "Named",
      "underlying" : 2
    }, {
      "local-name" : "Closer",
      "name" : "io.Closer",
      "package" : 2,
      "type" : "Named",
      "underlying" : 76
    }, {
      "methods" : [ {
        "name" : "Close",
        "type" : 77
      } ],
      "name" : "interface{Close() error}",
      "type" : "Interface",
      "underlying" : 76
    }, {
      "name" : "(io.Closer) func() error",
      "params" : 7,
      "recv" : 9,
      "results" : 78,
      "type" : "Signature",
      "underlying" : 77,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 4
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 78
    }, {
      "elem" : 80,
      "name" : "[]debug/elf.verneed",
      "type" : "Slice",
      "underlying" : 79
    }, {
      "local-name" : "verneed",
      "name" : "debug/elf.verneed",
      "package" : 3,
      "type" : "Named",
      "underlying" : 81
    }, {
      "fields" : [ {
        "name" : "File",
        "type" : 9
      }, {
        "name" : "Name",
        "type" : 9
      } ],
      "name" : "struct{File string; Name string}",
      "type" : "Struct",
      "underlying" : 81
    }, {
      "elem" : 83,
      "key" : 9,
      "name" : "map[string]*github.com/iovisor/gobpf/elf.Map",
      "type" : "Map",
      "underlying" : 82
    }, {
      "elem" : 84,
      "name" : "*github.com/iovisor/gobpf/elf.Map",
      "type" : "Pointer",
      "underlying" : 83
    }, {
      "local-name" : "Map",
      "name" : "github.com/iovisor/gobpf/elf.Map",
      "package" : 1,
      "type" : "Named",
      "underlying" : 85
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 9
      }, {
        "name" : "m",
        "type" : 86
      }, {
        "name" : "pmuFDs",
        "type" : 88
      }, {
        "name" : "headers",
        "type" : 89
      }, {
        "name" : "pageCount",
        "type" : 24
      } ],
      "name" : "struct{Name string; m *invalid type; pmuFDs []invalid type; headers []*invalid type; pageCount int}",
      "type" : "Struct",
      "underlying" : 85
    }, {
      "elem" : 87,
      "name" : "*invalid type",
      "type" : "Pointer",
      "underlying" : 86
    }, {
      "name" : "invalid type",
      "type" : "Basic",
      "underlying" : 87
    }, {
      "elem" : 87,
      "name" : "[]invalid type",
      "type" : "Slice",
      "underlying" : 88
    }, {
      "elem" : 86,
      "name" : "[]*invalid type",
      "type" : "Slice",
      "underlying" : 89
    }, {
      "elem" : 91,
      "key" : 9,
      "name" : "map[string]*github.com/iovisor/gobpf/elf.Kprobe",
      "type" : "Map",
      "underlying" : 90
    }, {
      "elem" : 92,
      "name" : "*github.com/iovisor/gobpf/elf.Kprobe",
      "type" : "Pointer",
      "underlying" : 91
    }, {
      "local-name" : "Kprobe",
      "name" : "github.com/iovisor/gobpf/elf.Kprobe",
      "package" : 1,
      "type" : "Named",
      "underlying" : 93
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 9
      }, {
        "name" : "insns",
        "type" : 86
      }, {
        "name" : "fd",
        "type" : 24
      }, {
        "name" : "efd",
        "type" : 24
      } ],
      "name" : "struct{Name string; insns *invalid type; fd int; efd int}",
      "type" : "Struct",
      "underlying" : 93
    }, {
      "elem" : 95,
      "key" : 9,
      "name" : "map[string]*github.com/iovisor/gobpf/elf.CgroupProgram",
      "type" : "Map",
      "underlying" : 94
    }, {
      "elem" : 96,
      "name" : "*github.com/iovisor/gobpf/elf.CgroupProgram",
      "type" : "Pointer",
      "underlying" : 95
    }, {
      "local-name" : "CgroupProgram",
      "name" : "github.com/iovisor/gobpf/elf.CgroupProgram",
      "package" : 1,
      "type" : "Named",
      "underlying" : 97
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 9
      }, {
        "name" : "insns",
        "type" : 86
      }, {
        "name" : "fd",
        "type" : 24
      } ],
      "name" : "struct{Name string; insns *invalid type; fd int}",
      "type" : "Struct",
      "underlying" : 97
    }, {
      "elem" : 99,
      "key" : 9,
      "name" : "map[string]*github.com/iovisor/gobpf/elf.SocketFilter",
      "type" : "Map",
      "underlying" : 98
    }, {
      "elem" : 100,
      "name" : "*github.com/iovisor/gobpf/elf.SocketFilter",
      "type" : "Pointer",
      "underlying" : 99
    }, {
      "local-name" : "SocketFilter",
      "name" : "github.com/iovisor/gobpf/elf.SocketFilter",
      "package" : 1,
      "type" : "Named",
      "underlying" : 97
    }, {
      "elem" : 102,
      "key" : 9,
      "name" : "map[string]*github.com/iovisor/gobpf/elf.TracepointProgram",
      "type" : "Map",
      "underlying" : 101
    }, {
      "elem" : 103,
      "name" : "*github.com/iovisor/gobpf/elf.TracepointProgram",
      "type" : "Pointer",
      "underlying" : 102
    }, {
      "local-name" : "TracepointProgram",
      "name" : "github.com/iovisor/gobpf/elf.TracepointProgram",
      "package" : 1,
      "type" : "Named",
      "underlying" : 93
    }, {
      "elem" : 105,
      "key" : 9,
      "name" : "map[string]*github.com/iovisor/gobpf/elf.SchedProgram",
      "type" : "Map",
      "underlying" : 104
    }, {
      "elem" : 106,
      "name" : "*github.com/iovisor/gobpf/elf.SchedProgram",
      "type" : "Pointer",
      "underlying" : 105
    }, {
      "local-name" : "SchedProgram",
      "name" : "github.com/iovisor/gobpf/elf.SchedProgram",
      "package" : 1,
      "type" : "Named",
      "underlying" : 97
    }, {
      "elem" : 108,
      "name" : "*github.com/iovisor/gobpf/elf.PerfMap",
      "type" : "Pointer",
      "underlying" : 107
    }, {
      "local-name" : "PerfMap",
      "name" : "github.com/iovisor/gobpf/elf.PerfMap",
      "package" : 1,
      "type" : "Named",
      "underlying" : 109
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 9
      }, {
        "name" : "program",
        "type" : 13
      }, {
        "name" : "pageCount",
        "type" : 24
      }, {
        "name" : "receiverChan",
        "type" : 110
      }, {
        "name" : "lostChan",
        "type" : 111
      }, {
        "name" : "pollStop",
        "type" : 112
      }, {
        "name" : "timestamp",
        "type" : 114
      } ],
      "name" : "struct{name string; program *github.com/iovisor/gobpf/elf.Module; pageCount int; receiverChan chan []byte; lostChan chan uint64; pollStop chan struct{}; timestamp func(*[]byte) uint64}",
      "type" : "Struct",
      "underlying" : 109
    }, {
      "dir" : "both",
      "elem" : 20,
      "name" : "chan []byte",
      "type" : "Chan",
      "underlying" : 110
    }, {
      "dir" : "both",
      "elem" : 44,
      "name" : "chan uint64",
      "type" : "Chan",
      "underlying" : 111
    }, {
      "dir" : "both",
      "elem" : 113,
      "name" : "chan struct{}",
      "type" : "Chan",
      "underlying" : 112
    }, {
      "fields" : [ ],
      "name" : "struct{}",
      "type" : "Struct",
      "underlying" : 113
    }, {
      "name" : "func(*[]byte) uint64",
      "params" : 115,
      "recv" : -1,
      "results" : 52,
      "type" : "Signature",
      "underlying" : 114,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 116
      } ],
      "name" : "(*[]byte)",
      "type" : "Tuple",
      "underlying" : 115
    }, {
      "elem" : 20,
      "name" : "*[]byte",
      "type" : "Pointer",
      "underlying" : 116
    }, {
      "name" : "func(name string) *github.com/iovisor/gobpf/elf.Map",
      "params" : 118,
      "recv" : -1,
      "results" : 119,
      "type" : "Signature",
      "underlying" : 117,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 9
      } ],
      "name" : "(name string)",
      "type" : "Tuple",
      "underlying" : 118
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 83
      } ],
      "name" : "(*github.com/iovisor/gobpf/elf.Map)",
      "type" : "Tuple",
      "underlying" : 119
    }, {
      "name" : "(*github.com/iovisor/gobpf/elf.Module) func(name string) *github.com/iovisor/gobpf/elf.Map",
      "params" : 118,
      "recv" : 14,
      "results" : 119,
      "type" : "Signature",
      "underlying" : 120,
      "variadic" : false
    }, {
      "name" : "func(mp *github.com/iovisor/gobpf/elf.Map, key unsafe.Pointer) error",
      "params" : 122,
      "recv" : -1,
      "results" : 78,
      "type" : "Signature",
      "underlying" : 121,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "mp",
        "type" : 83
      }, {
        "name" : "key",
        "type" : 123
      } ],
      "name" : "(mp *github.com/iovisor/gobpf/elf.Map, key unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 122
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 5,
      "type" : "Basic",
      "underlying" : 123
    }, {
      "name" : "(*github.com/iovisor/gobpf/elf.Module) func(mp *github.com/iovisor/gobpf/elf.Map, key unsafe.Pointer) error",
      "params" : 122,
      "recv" : 16,
      "results" : 78,
      "type" : "Signature",
      "underlying" : 124,
      "variadic" : false
    }, {
      "elem" : 2,
      "name" : "*uint32",
      "type" : "Pointer",
      "underlying" : 125
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 16,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 35,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 35,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 35,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 35,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 35,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 35,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 35,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 75,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "t",
      "package" : 0,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "pid",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "m",
      "package" : 0,
      "type" : 13,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "b",
      "package" : 1,
      "type" : 13,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "mapFdInstall",
      "package" : 0,
      "type" : 83,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "b",
      "package" : 1,
      "type" : 13,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}