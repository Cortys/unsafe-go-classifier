{
  "usage" : {
    "file" : "zz_generated.conversion.go",
    "label1" : "cast-bytes",
    "label2" : "efficiency",
    "line" : "238",
    "module" : "k8s.io/client-go",
    "pkg" : "k8s.io/client-go/tools/clientcmd/api/v1",
    "project" : "rook/rook",
    "snippet" : "out.CertificateAuthorityData = *(*[]byte)(unsafe.Pointer(&in.CertificateAuthorityData))",
    "version" : "v0.17.2"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 10, 9, 11 ],
      "exit" : false,
      "out-vars" : [ 10, 9, 11 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 10 ],
      "successors" : [ 3 ],
      "in-vars" : [ 10, 9, 11 ],
      "exit" : false,
      "out-vars" : [ 10, 9, 11 ],
      "decl-vars" : [ ],
      "line-start" : 235,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Server",
            "variable" : 13
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 29,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 10
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Server",
            "variable" : 14
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 9
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 235,
      "code" : "out.Server = in.Server",
      "entry" : false,
      "use-vars" : [ 10, 9 ]
    }, {
      "update-vars" : [ 10 ],
      "successors" : [ 4 ],
      "in-vars" : [ 10, 9, 11 ],
      "exit" : false,
      "out-vars" : [ 10, 9, 11 ],
      "decl-vars" : [ ],
      "line-start" : 236,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "InsecureSkipTLSVerify",
            "variable" : 15
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "go-type" : 29,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 10
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "InsecureSkipTLSVerify",
            "variable" : 16
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 9
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 236,
      "code" : "out.InsecureSkipTLSVerify = in.InsecureSkipTLSVerify",
      "entry" : false,
      "use-vars" : [ 9, 10 ]
    }, {
      "update-vars" : [ 10 ],
      "successors" : [ 5 ],
      "in-vars" : [ 9, 11, 10 ],
      "exit" : false,
      "out-vars" : [ 10, 9, 11 ],
      "decl-vars" : [ ],
      "line-start" : 237,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "CertificateAuthority",
            "variable" : 17
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 29,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 10
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "CertificateAuthority",
            "variable" : 18
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 9
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 237,
      "code" : "out.CertificateAuthority = in.CertificateAuthority",
      "entry" : false,
      "use-vars" : [ 10, 9 ]
    }, {
      "update-vars" : [ 10 ],
      "successors" : [ 7 ],
      "in-vars" : [ 10, 9, 11 ],
      "exit" : false,
      "out-vars" : [ 10, 9, 11 ],
      "decl-vars" : [ ],
      "line-start" : 238,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "CertificateAuthorityData",
            "variable" : 19
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 29,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 10
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 8,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 8,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "byte"
                  }
                },
                "go-type" : 7,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 59,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 59,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 60,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 6,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 60,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 60,
              "kind" : "expression",
              "target" : {
                "go-type" : 59,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "CertificateAuthorityData",
                    "variable" : 20
                  },
                  "go-type" : 7,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 9
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 238,
      "code" : "out.CertificateAuthorityData = *(*[]byte)(unsafe.Pointer(&in.CertificateAuthorityData))",
      "entry" : false,
      "use-vars" : [ 9, 10 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 8, 9 ],
      "in-vars" : [ 23 ],
      "exit" : false,
      "out-vars" : [ 23 ],
      "decl-vars" : [ ],
      "line-start" : 239,
      "ast" : {
        "condition" : {
          "go-type" : 65,
          "kind" : "expression",
          "left" : {
            "go-type" : 41,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 23
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 66,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 241,
      "code" : "if err := Convert_Slice_v1_NamedExtension_To_Map_string_To_runtime_Object(&in.Extensions, &out.Extensions, s); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 23 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6 ],
      "in-vars" : [ 10, 9, 11 ],
      "exit" : false,
      "out-vars" : [ 23 ],
      "decl-vars" : [ 23 ],
      "line-start" : 239,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 63,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Extensions",
                "variable" : 21
              },
              "go-type" : 9,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 9
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 64,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Extensions",
                "variable" : 22
              },
              "go-type" : 32,
              "kind" : "expression",
              "target" : {
                "go-type" : 29,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "out",
                  "variable" : 10
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 33,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "s",
              "variable" : 11
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 61,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Convert_Slice_v1_NamedExtension_To_Map_string_To_runtime_Object"
            }
          },
          "go-type" : 41,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 239,
      "code" : "err := Convert_Slice_v1_NamedExtension_To_Map_string_To_runtime_Object(&in.Extensions, &out.Extensions, s)",
      "entry" : false,
      "use-vars" : [ 11, 9, 10 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 23 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 240,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 41,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 23
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 240,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 23 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 242,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 66,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 242,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func autoConvert_v1_Cluster_To_api_Cluster(in *Cluster, out *api.Cluster, s conversion.Scope) error {\n\tout.Server = in.Server\n\tout.InsecureSkipTLSVerify = in.InsecureSkipTLSVerify\n\tout.CertificateAuthority = in.CertificateAuthority\n\tout.CertificateAuthorityData = *(*[]byte)(unsafe.Pointer(&in.CertificateAuthorityData))\n\tif err := Convert_Slice_v1_NamedExtension_To_Map_string_To_runtime_Object(&in.Extensions, &out.Extensions, s); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "autoConvert_v1_Cluster_To_api_Cluster",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "Convert_Slice_v1_NamedExtension_To_Map_string_To_runtime_Object",
      "package" : 0,
      "type" : 61,
      "exported" : true
    } ],
    "line-end" : 243,
    "line-start" : 234,
    "names" : [ "autoConvert_v1_Cluster_To_api_Cluster" ],
    "package" : 0,
    "packages" : [ {
      "name" : "v1",
      "path" : "k8s.io/client-go/tools/clientcmd/api/v1"
    }, {
      "name" : "runtime",
      "path" : "k8s.io/apimachinery/pkg/runtime"
    }, {
      "name" : "schema",
      "path" : "k8s.io/apimachinery/pkg/runtime/schema"
    }, {
      "name" : "api",
      "path" : "k8s.io/client-go/tools/clientcmd/api"
    }, {
      "name" : "conversion",
      "path" : "k8s.io/apimachinery/pkg/conversion"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 9, 10, 11 ],
    "receivers" : [ ],
    "results" : [ 12 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(in *k8s.io/client-go/tools/clientcmd/api/v1.Cluster, out *k8s.io/client-go/tools/clientcmd/api.Cluster, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 1,
      "recv" : -1,
      "results" : 40,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 2
      }, {
        "name" : "out",
        "type" : 29
      }, {
        "name" : "s",
        "type" : 33
      } ],
      "name" : "(in *k8s.io/client-go/tools/clientcmd/api/v1.Cluster, out *k8s.io/client-go/tools/clientcmd/api.Cluster, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*k8s.io/client-go/tools/clientcmd/api/v1.Cluster",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "Cluster",
      "name" : "k8s.io/client-go/tools/clientcmd/api/v1.Cluster",
      "package" : 0,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "Server",
        "type" : 5
      }, {
        "name" : "InsecureSkipTLSVerify",
        "type" : 6
      }, {
        "name" : "CertificateAuthority",
        "type" : 5
      }, {
        "name" : "CertificateAuthorityData",
        "type" : 7
      }, {
        "name" : "Extensions",
        "type" : 9
      } ],
      "name" : "struct{Server string \"json:\\\"server\\\"\"; InsecureSkipTLSVerify bool \"json:\\\"insecure-skip-tls-verify,omitempty\\\"\"; CertificateAuthority string \"json:\\\"certificate-authority,omitempty\\\"\"; CertificateAuthorityData []byte \"json:\\\"certificate-authority-data,omitempty\\\"\"; Extensions []k8s.io/client-go/tools/clientcmd/api/v1.NamedExtension \"json:\\\"extensions,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 5
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 6
    }, {
      "elem" : 8,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 7
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 8
    }, {
      "elem" : 10,
      "name" : "[]k8s.io/client-go/tools/clientcmd/api/v1.NamedExtension",
      "type" : "Slice",
      "underlying" : 9
    }, {
      "local-name" : "NamedExtension",
      "name" : "k8s.io/client-go/tools/clientcmd/api/v1.NamedExtension",
      "package" : 0,
      "type" : "Named",
      "underlying" : 11
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "Extension",
        "type" : 12
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\"\"; Extension k8s.io/apimachinery/pkg/runtime.RawExtension \"json:\\\"extension\\\"\"}",
      "type" : "Struct",
      "underlying" : 11
    }, {
      "local-name" : "RawExtension",
      "name" : "k8s.io/apimachinery/pkg/runtime.RawExtension",
      "package" : 1,
      "type" : "Named",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "Raw",
        "type" : 7
      }, {
        "name" : "Object",
        "type" : 14
      } ],
      "name" : "struct{Raw []byte \"json:\\\"-\\\" protobuf:\\\"bytes,1,opt,name=raw\\\"\"; Object k8s.io/apimachinery/pkg/runtime.Object \"json:\\\"-\\\"\"}",
      "type" : "Struct",
      "underlying" : 13
    }, {
      "local-name" : "Object",
      "name" : "k8s.io/apimachinery/pkg/runtime.Object",
      "package" : 1,
      "type" : "Named",
      "underlying" : 15
    }, {
      "methods" : [ {
        "name" : "DeepCopyObject",
        "type" : 16
      }, {
        "name" : "GetObjectKind",
        "type" : 19
      } ],
      "name" : "interface{DeepCopyObject() k8s.io/apimachinery/pkg/runtime.Object; GetObjectKind() k8s.io/apimachinery/pkg/runtime/schema.ObjectKind}",
      "type" : "Interface",
      "underlying" : 15
    }, {
      "name" : "(k8s.io/apimachinery/pkg/runtime.Object) func() k8s.io/apimachinery/pkg/runtime.Object",
      "params" : 17,
      "recv" : 0,
      "results" : 18,
      "type" : "Signature",
      "underlying" : 16,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 17
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 14
      } ],
      "name" : "(k8s.io/apimachinery/pkg/runtime.Object)",
      "type" : "Tuple",
      "underlying" : 18
    }, {
      "name" : "(k8s.io/apimachinery/pkg/runtime.Object) func() k8s.io/apimachinery/pkg/runtime/schema.ObjectKind",
      "params" : 17,
      "recv" : 3,
      "results" : 20,
      "type" : "Signature",
      "underlying" : 19,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 21
      } ],
      "name" : "(k8s.io/apimachinery/pkg/runtime/schema.ObjectKind)",
      "type" : "Tuple",
      "underlying" : 20
    }, {
      "local-name" : "ObjectKind",
      "name" : "k8s.io/apimachinery/pkg/runtime/schema.ObjectKind",
      "package" : 2,
      "type" : "Named",
      "underlying" : 22
    }, {
      "methods" : [ {
        "name" : "GroupVersionKind",
        "type" : 23
      }, {
        "name" : "SetGroupVersionKind",
        "type" : 27
      } ],
      "name" : "interface{GroupVersionKind() k8s.io/apimachinery/pkg/runtime/schema.GroupVersionKind; SetGroupVersionKind(kind k8s.io/apimachinery/pkg/runtime/schema.GroupVersionKind)}",
      "type" : "Interface",
      "underlying" : 22
    }, {
      "name" : "(k8s.io/apimachinery/pkg/runtime/schema.ObjectKind) func() k8s.io/apimachinery/pkg/runtime/schema.GroupVersionKind",
      "params" : 17,
      "recv" : 1,
      "results" : 24,
      "type" : "Signature",
      "underlying" : 23,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 25
      } ],
      "name" : "(k8s.io/apimachinery/pkg/runtime/schema.GroupVersionKind)",
      "type" : "Tuple",
      "underlying" : 24
    }, {
      "local-name" : "GroupVersionKind",
      "name" : "k8s.io/apimachinery/pkg/runtime/schema.GroupVersionKind",
      "package" : 2,
      "type" : "Named",
      "underlying" : 26
    }, {
      "fields" : [ {
        "name" : "Group",
        "type" : 5
      }, {
        "name" : "Version",
        "type" : 5
      }, {
        "name" : "Kind",
        "type" : 5
      } ],
      "name" : "struct{Group string; Version string; Kind string}",
      "type" : "Struct",
      "underlying" : 26
    }, {
      "name" : "(k8s.io/apimachinery/pkg/runtime/schema.ObjectKind) func(kind k8s.io/apimachinery/pkg/runtime/schema.GroupVersionKind)",
      "params" : 28,
      "recv" : 2,
      "results" : 17,
      "type" : "Signature",
      "underlying" : 27,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "kind",
        "type" : 25
      } ],
      "name" : "(kind k8s.io/apimachinery/pkg/runtime/schema.GroupVersionKind)",
      "type" : "Tuple",
      "underlying" : 28
    }, {
      "elem" : 30,
      "name" : "*k8s.io/client-go/tools/clientcmd/api.Cluster",
      "type" : "Pointer",
      "underlying" : 29
    }, {
      "local-name" : "Cluster",
      "name" : "k8s.io/client-go/tools/clientcmd/api.Cluster",
      "package" : 3,
      "type" : "Named",
      "underlying" : 31
    }, {
      "fields" : [ {
        "name" : "LocationOfOrigin",
        "type" : 5
      }, {
        "name" : "Server",
        "type" : 5
      }, {
        "name" : "InsecureSkipTLSVerify",
        "type" : 6
      }, {
        "name" : "CertificateAuthority",
        "type" : 5
      }, {
        "name" : "CertificateAuthorityData",
        "type" : 7
      }, {
        "name" : "Extensions",
        "type" : 32
      } ],
      "name" : "struct{LocationOfOrigin string; Server string \"json:\\\"server\\\"\"; InsecureSkipTLSVerify bool \"json:\\\"insecure-skip-tls-verify,omitempty\\\"\"; CertificateAuthority string \"json:\\\"certificate-authority,omitempty\\\"\"; CertificateAuthorityData []byte \"json:\\\"certificate-authority-data,omitempty\\\"\"; Extensions map[string]k8s.io/apimachinery/pkg/runtime.Object \"json:\\\"extensions,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 31
    }, {
      "elem" : 14,
      "key" : 5,
      "name" : "map[string]k8s.io/apimachinery/pkg/runtime.Object",
      "type" : "Map",
      "underlying" : 32
    }, {
      "local-name" : "Scope",
      "name" : "k8s.io/apimachinery/pkg/conversion.Scope",
      "package" : 4,
      "type" : "Named",
      "underlying" : 34
    }, {
      "methods" : [ {
        "name" : "Convert",
        "type" : 35
      }, {
        "name" : "DefaultConvert",
        "type" : 35
      }, {
        "name" : "DestTag",
        "type" : 45
      }, {
        "name" : "Flags",
        "type" : 48
      }, {
        "name" : "Meta",
        "type" : 50
      }, {
        "name" : "SrcTag",
        "type" : 45
      } ],
      "name" : "interface{Convert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DefaultConvert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DestTag() reflect.StructTag; Flags() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags; Meta() *k8s.io/apimachinery/pkg/conversion.Meta; SrcTag() reflect.StructTag}",
      "type" : "Interface",
      "underlying" : 34
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error",
      "params" : 36,
      "recv" : 5,
      "results" : 40,
      "type" : "Signature",
      "underlying" : 35,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 37
      }, {
        "name" : "dest",
        "type" : 37
      }, {
        "name" : "flags",
        "type" : 38
      } ],
      "name" : "(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 36
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 37
    }, {
      "local-name" : "FieldMatchingFlags",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "package" : 4,
      "type" : "Named",
      "underlying" : 39
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 39
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 41
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 40
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 42
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 43
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 42
    }, {
      "name" : "(error) func() string",
      "params" : 17,
      "recv" : 4,
      "results" : 44,
      "type" : "Signature",
      "underlying" : 43,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 5
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 44
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func() reflect.StructTag",
      "params" : 17,
      "recv" : 6,
      "results" : 46,
      "type" : "Signature",
      "underlying" : 45,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 47
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 46
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 5,
      "type" : "Named",
      "underlying" : 5
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "params" : 17,
      "recv" : 7,
      "results" : 49,
      "type" : "Signature",
      "underlying" : 48,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 38
      } ],
      "name" : "(k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 49
    }, {
      "name" : "(k8s.io/apimachinery/pkg/conversion.Scope) func() *k8s.io/apimachinery/pkg/conversion.Meta",
      "params" : 17,
      "recv" : 8,
      "results" : 51,
      "type" : "Signature",
      "underlying" : 50,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 52
      } ],
      "name" : "(*k8s.io/apimachinery/pkg/conversion.Meta)",
      "type" : "Tuple",
      "underlying" : 51
    }, {
      "elem" : 53,
      "name" : "*k8s.io/apimachinery/pkg/conversion.Meta",
      "type" : "Pointer",
      "underlying" : 52
    }, {
      "local-name" : "Meta",
      "name" : "k8s.io/apimachinery/pkg/conversion.Meta",
      "package" : 4,
      "type" : "Named",
      "underlying" : 54
    }, {
      "fields" : [ {
        "name" : "KeyNameMapping",
        "type" : 55
      }, {
        "name" : "Context",
        "type" : 37
      } ],
      "name" : "struct{KeyNameMapping k8s.io/apimachinery/pkg/conversion.FieldMappingFunc; Context interface{}}",
      "type" : "Struct",
      "underlying" : 54
    }, {
      "local-name" : "FieldMappingFunc",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMappingFunc",
      "package" : 4,
      "type" : "Named",
      "underlying" : 56
    }, {
      "name" : "func(key string, sourceTag reflect.StructTag, destTag reflect.StructTag) (source string, dest string)",
      "params" : 57,
      "recv" : -1,
      "results" : 58,
      "type" : "Signature",
      "underlying" : 56,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 5
      }, {
        "name" : "sourceTag",
        "type" : 47
      }, {
        "name" : "destTag",
        "type" : 47
      } ],
      "name" : "(key string, sourceTag reflect.StructTag, destTag reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 57
    }, {
      "fields" : [ {
        "name" : "source",
        "type" : 5
      }, {
        "name" : "dest",
        "type" : 5
      } ],
      "name" : "(source string, dest string)",
      "type" : "Tuple",
      "underlying" : 58
    }, {
      "elem" : 7,
      "name" : "*[]byte",
      "type" : "Pointer",
      "underlying" : 59
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 6,
      "type" : "Basic",
      "underlying" : 60
    }, {
      "name" : "func(in *[]k8s.io/client-go/tools/clientcmd/api/v1.NamedExtension, out *map[string]k8s.io/apimachinery/pkg/runtime.Object, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 62,
      "recv" : -1,
      "results" : 40,
      "type" : "Signature",
      "underlying" : 61,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 63
      }, {
        "name" : "out",
        "type" : 64
      }, {
        "name" : "s",
        "type" : 33
      } ],
      "name" : "(in *[]k8s.io/client-go/tools/clientcmd/api/v1.NamedExtension, out *map[string]k8s.io/apimachinery/pkg/runtime.Object, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 62
    }, {
      "elem" : 9,
      "name" : "*[]k8s.io/client-go/tools/clientcmd/api/v1.NamedExtension",
      "type" : "Pointer",
      "underlying" : 63
    }, {
      "elem" : 32,
      "name" : "*map[string]k8s.io/apimachinery/pkg/runtime.Object",
      "type" : "Pointer",
      "underlying" : 64
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 65
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 66
    } ],
    "variables" : [ {
      "name" : "",
      "package" : 1,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 21,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 21,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : -1,
      "type" : 41,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 41,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Server",
      "package" : 3,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Server",
      "package" : 0,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "InsecureSkipTLSVerify",
      "package" : 3,
      "type" : 6,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "InsecureSkipTLSVerify",
      "package" : 0,
      "type" : 6,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "CertificateAuthority",
      "package" : 3,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "CertificateAuthority",
      "package" : 0,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "CertificateAuthorityData",
      "package" : 3,
      "type" : 7,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "CertificateAuthorityData",
      "package" : 0,
      "type" : 7,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Extensions",
      "package" : 0,
      "type" : 9,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Extensions",
      "package" : 3,
      "type" : 32,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 41,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}