{
  "usage" : {
    "file" : "node.go",
    "label1" : "cast-bytes",
    "label2" : "efficiency",
    "line" : "235",
    "module" : "github.com/coreos/bbolt",
    "pkg" : "github.com/coreos/bbolt",
    "project" : "elastic/beats",
    "snippet" : "b = (*[maxAllocSize]byte)(unsafe.Pointer(&b[0]))[:]",
    "version" : "v1.3.1-coreos.6.0.20180318001526-af9db2027c98"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 2, 1 ],
      "exit" : false,
      "out-vars" : [ 2, 1 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3, 4 ],
      "in-vars" : [ 1, 2 ],
      "exit" : false,
      "out-vars" : [ 2, 1 ],
      "decl-vars" : [ ],
      "line-start" : 193,
      "ast" : {
        "condition" : {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "isLeaf",
            "variable" : 3
          },
          "go-type" : 23,
          "kind" : "expression",
          "target" : {
            "go-type" : 11,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "n",
              "variable" : 1
            }
          },
          "type" : "selector"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 197,
      "code" : "if n.isLeaf {\n\tp.flags |= leafPageFlag\n} else {\n\tp.flags |= branchPageFlag\n}",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ 2 ],
      "successors" : [ 5 ],
      "in-vars" : [ 2, 1 ],
      "exit" : false,
      "out-vars" : [ 2, 1 ],
      "decl-vars" : [ ],
      "line-start" : 194,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "flags",
            "variable" : 4
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "p",
              "variable" : 2
            }
          },
          "type" : "selector"
        } ],
        "operator" : "|",
        "right" : [ {
          "go-type" : 7,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "2"
          }
        } ],
        "type" : "assign-operator"
      },
      "assign-vars" : [ ],
      "line-end" : 194,
      "code" : "p.flags |= leafPageFlag",
      "entry" : false,
      "use-vars" : [ 2 ]
    }, {
      "update-vars" : [ 2 ],
      "successors" : [ 5 ],
      "in-vars" : [ 2, 1 ],
      "exit" : false,
      "out-vars" : [ 2, 1 ],
      "decl-vars" : [ ],
      "line-start" : 196,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "flags",
            "variable" : 4
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "p",
              "variable" : 2
            }
          },
          "type" : "selector"
        } ],
        "operator" : "|",
        "right" : [ {
          "go-type" : 7,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "1"
          }
        } ],
        "type" : "assign-operator"
      },
      "assign-vars" : [ ],
      "line-end" : 196,
      "code" : "p.flags |= branchPageFlag",
      "entry" : false,
      "use-vars" : [ 2 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6, 7 ],
      "in-vars" : [ 2, 1 ],
      "exit" : false,
      "out-vars" : [ 2, 1 ],
      "decl-vars" : [ ],
      "line-start" : 199,
      "ast" : {
        "condition" : {
          "go-type" : 141,
          "kind" : "expression",
          "left" : {
            "arguments" : [ {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "inodes",
                "variable" : 5
              },
              "go-type" : 137,
              "kind" : "expression",
              "target" : {
                "go-type" : 11,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "n",
                  "variable" : 1
                }
              },
              "type" : "selector"
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 142,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Builtin",
                "kind" : "ident",
                "value" : "len"
              }
            },
            "go-type" : 27,
            "kind" : "expression",
            "type" : "call"
          },
          "operator" : ">=",
          "right" : {
            "go-type" : 27,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "65535"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 201,
      "code" : "if len(n.inodes) >= 0xFFFF {\n\tpanic(fmt.Sprintf(\"inode overflow: %d (pgid=%d)\", len(n.inodes), p.id))\n}",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 7 ],
      "in-vars" : [ 2, 1 ],
      "exit" : false,
      "out-vars" : [ 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 200,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "arguments" : [ {
              "go-type" : 30,
              "kind" : "constant",
              "value" : {
                "type" : "STRING",
                "value" : "inode overflow: %d (pgid=%d)"
              }
            }, {
              "arguments" : [ {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "inodes",
                  "variable" : 5
                },
                "go-type" : 137,
                "kind" : "expression",
                "target" : {
                  "go-type" : 11,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "n",
                    "variable" : 1
                  }
                },
                "type" : "selector"
              } ],
              "ellipsis" : false,
              "function" : {
                "go-type" : 142,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Builtin",
                  "kind" : "ident",
                  "value" : "len"
                }
              },
              "go-type" : 27,
              "kind" : "expression",
              "type" : "call"
            }, {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "id",
                "variable" : 6
              },
              "go-type" : 5,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "p",
                  "variable" : 2
                }
              },
              "type" : "selector"
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 146,
              "kind" : "expression",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 7,
                "value" : "fmt"
              },
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "Sprintf"
              }
            },
            "go-type" : 30,
            "kind" : "expression",
            "type" : "call"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 145,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Builtin",
              "kind" : "ident",
              "value" : "panic"
            }
          },
          "go-type" : 10,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 200,
      "code" : "panic(fmt.Sprintf(\"inode overflow: %d (pgid=%d)\", len(n.inodes), p.id))",
      "entry" : false,
      "use-vars" : [ 1, 2 ]
    }, {
      "update-vars" : [ 2 ],
      "successors" : [ 8 ],
      "in-vars" : [ 2, 1 ],
      "exit" : false,
      "out-vars" : [ 2, 1 ],
      "decl-vars" : [ ],
      "line-start" : 202,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "count",
            "variable" : 7
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "p",
              "variable" : 2
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 7,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 7,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "uint16"
            }
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "arguments" : [ {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "inodes",
                "variable" : 5
              },
              "go-type" : 137,
              "kind" : "expression",
              "target" : {
                "go-type" : 11,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "n",
                  "variable" : 1
                }
              },
              "type" : "selector"
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 142,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Builtin",
                "kind" : "ident",
                "value" : "len"
              }
            },
            "go-type" : 27,
            "kind" : "expression",
            "type" : "call"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 202,
      "code" : "p.count = uint16(len(n.inodes))",
      "entry" : false,
      "use-vars" : [ 2, 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 9, 10 ],
      "in-vars" : [ 2, 1 ],
      "exit" : false,
      "out-vars" : [ 2, 1 ],
      "decl-vars" : [ ],
      "line-start" : 205,
      "ast" : {
        "condition" : {
          "go-type" : 141,
          "kind" : "expression",
          "left" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "count",
              "variable" : 7
            },
            "go-type" : 7,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "p",
                "variable" : 2
              }
            },
            "type" : "selector"
          },
          "operator" : "==",
          "right" : {
            "go-type" : 7,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 207,
      "code" : "if p.count == 0 {\n\treturn\n}",
      "entry" : false,
      "use-vars" : [ 2 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 206,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ ]
      },
      "assign-vars" : [ ],
      "line-end" : 206,
      "code" : "return",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 11 ],
      "in-vars" : [ 2, 1 ],
      "exit" : false,
      "out-vars" : [ 9, 2, 1 ],
      "decl-vars" : [ 9 ],
      "line-start" : 210,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "b"
          }
        } ],
        "right" : [ {
          "go-type" : 52,
          "type" : "slice",
          "three" : false,
          "high" : null,
          "max" : null,
          "kind" : "expression",
          "low" : {
            "go-type" : 27,
            "kind" : "expression",
            "left" : {
              "arguments" : [ ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "pageElementSize"
                },
                "go-type" : 153,
                "kind" : "expression",
                "target" : {
                  "go-type" : 11,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "n",
                    "variable" : 1
                  }
                },
                "type" : "selector"
              },
              "go-type" : 27,
              "kind" : "expression",
              "type" : "call"
            },
            "operator" : "*",
            "right" : {
              "arguments" : [ {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "inodes",
                  "variable" : 5
                },
                "go-type" : 137,
                "kind" : "expression",
                "target" : {
                  "go-type" : 11,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "n",
                    "variable" : 1
                  }
                },
                "type" : "selector"
              } ],
              "ellipsis" : false,
              "function" : {
                "go-type" : 142,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Builtin",
                  "kind" : "ident",
                  "value" : "len"
                }
              },
              "go-type" : 27,
              "kind" : "expression",
              "type" : "call"
            },
            "type" : "binary"
          },
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 48,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 48,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "byte"
                  }
                },
                "go-type" : 150,
                "kind" : "type",
                "length" : {
                  "go-type" : 151,
                  "kind" : "constant",
                  "value" : {
                    "type" : "INT",
                    "value" : "2147483647"
                  }
                },
                "type" : "array"
              },
              "go-type" : 149,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 149,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 84,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 6,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 84,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 84,
              "kind" : "expression",
              "target" : {
                "go-type" : 152,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "ptr",
                    "variable" : 8
                  },
                  "go-type" : 9,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "p",
                      "variable" : 2
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          }
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 210,
      "code" : "b := (*[maxAllocSize]byte)(unsafe.Pointer(&p.ptr))[n.pageElementSize()*len(n.inodes):]",
      "entry" : false,
      "use-vars" : [ 2, 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1, 12 ],
      "in-vars" : [ 9, 2, 1 ],
      "exit" : false,
      "out-vars" : [ 9, 10, 2, 1, 12 ],
      "decl-vars" : [ 10, 12 ],
      "line-start" : 211,
      "ast" : {
        "is-assign" : false,
        "key" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "i"
          }
        },
        "kind" : "statement",
        "target" : {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "inodes",
            "variable" : 5
          },
          "go-type" : 137,
          "kind" : "expression",
          "target" : {
            "go-type" : 11,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "n",
              "variable" : 1
            }
          },
          "type" : "selector"
        },
        "type" : "range",
        "value" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "item"
          }
        }
      },
      "assign-vars" : [ ],
      "line-end" : 243,
      "code" : "for i, item := range n.inodes {\n\t_assert(len(item.key) > 0, \"write: zero-length inode key\")\n\n\tif n.isLeaf {\n\t\telem := p.leafPageElement(uint16(i))\n\t\telem.pos = uint32(uintptr(unsafe.Pointer(&b[0])) - uintptr(unsafe.Pointer(elem)))\n\t\telem.flags = item.flags\n\t\telem.ksize = uint32(len(item.key))\n\t\telem.vsize = uint32(len(item.value))\n\t} else {\n\t\telem := p.branchPageElement(uint16(i))\n\t\telem.pos = uint32(uintptr(unsafe.Pointer(&b[0])) - uintptr(unsafe.Pointer(elem)))\n\t\telem.ksize = uint32(len(item.key))\n\t\telem.pgid = item.pgid\n\t\t_assert(elem.pgid != p.id, \"write: circular dependency occurred\")\n\t}\n\n\tklen, vlen := len(item.key), len(item.value)\n\tif len(b) < klen+vlen {\n\t\tb = (*[maxAllocSize]byte)(unsafe.Pointer(&b[0]))[:]\n\t}\n\n\tcopy(b[0:], item.key)\n\tb = b[klen:]\n\tcopy(b[0:], item.value)\n\tb = b[vlen:]\n}",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 13 ],
      "in-vars" : [ 10, 2, 1, 12, 9 ],
      "exit" : false,
      "out-vars" : [ 9, 10, 2, 1, 12 ],
      "decl-vars" : [ ],
      "line-start" : 212,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 23,
            "kind" : "expression",
            "left" : {
              "arguments" : [ {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "key",
                  "variable" : 11
                },
                "go-type" : 52,
                "kind" : "expression",
                "target" : {
                  "go-type" : 139,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "item",
                    "variable" : 10
                  }
                },
                "type" : "selector"
              } ],
              "ellipsis" : false,
              "function" : {
                "go-type" : 156,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Builtin",
                  "kind" : "ident",
                  "value" : "len"
                }
              },
              "go-type" : 27,
              "kind" : "expression",
              "type" : "call"
            },
            "operator" : ">",
            "right" : {
              "go-type" : 27,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "0"
              }
            },
            "type" : "binary"
          }, {
            "go-type" : 30,
            "kind" : "constant",
            "value" : {
              "type" : "STRING",
              "value" : "write: zero-length inode key"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 154,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "_assert"
            }
          },
          "go-type" : 10,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 212,
      "code" : "_assert(len(item.key) > 0, \"write: zero-length inode key\")",
      "entry" : false,
      "use-vars" : [ 10 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 14, 19 ],
      "in-vars" : [ 10, 2, 1, 12, 9 ],
      "exit" : false,
      "out-vars" : [ 9, 10, 2, 1, 12 ],
      "decl-vars" : [ ],
      "line-start" : 215,
      "ast" : {
        "condition" : {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "isLeaf",
            "variable" : 3
          },
          "go-type" : 23,
          "kind" : "expression",
          "target" : {
            "go-type" : 11,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "n",
              "variable" : 1
            }
          },
          "type" : "selector"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 227,
      "code" : "if n.isLeaf {\n\telem := p.leafPageElement(uint16(i))\n\telem.pos = uint32(uintptr(unsafe.Pointer(&b[0])) - uintptr(unsafe.Pointer(elem)))\n\telem.flags = item.flags\n\telem.ksize = uint32(len(item.key))\n\telem.vsize = uint32(len(item.value))\n} else {\n\telem := p.branchPageElement(uint16(i))\n\telem.pos = uint32(uintptr(unsafe.Pointer(&b[0])) - uintptr(unsafe.Pointer(elem)))\n\telem.ksize = uint32(len(item.key))\n\telem.pgid = item.pgid\n\t_assert(elem.pgid != p.id, \"write: circular dependency occurred\")\n}",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 15 ],
      "in-vars" : [ 12, 9, 10, 2, 1 ],
      "exit" : false,
      "out-vars" : [ 2, 13, 1, 9, 10 ],
      "decl-vars" : [ 13 ],
      "line-start" : 216,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "elem"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 7,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 7,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint16"
              }
            },
            "go-type" : 7,
            "kind" : "expression",
            "target" : {
              "go-type" : 27,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "i",
                "variable" : 12
              }
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "leafPageElement"
            },
            "go-type" : 161,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "p",
                "variable" : 2
              }
            },
            "type" : "selector"
          },
          "go-type" : 158,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 216,
      "code" : "elem := p.leafPageElement(uint16(i))",
      "entry" : false,
      "use-vars" : [ 12, 2 ]
    }, {
      "update-vars" : [ 13 ],
      "successors" : [ 16 ],
      "in-vars" : [ 13, 1, 9, 10, 2 ],
      "exit" : false,
      "out-vars" : [ 9, 10, 2, 13, 1 ],
      "decl-vars" : [ ],
      "line-start" : 217,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "pos",
            "variable" : 14
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 158,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "elem",
              "variable" : 13
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 8,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 8,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "uint32"
            }
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 9,
            "kind" : "expression",
            "left" : {
              "coerced-to" : {
                "go-type" : 9,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 9,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 9,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 84,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 6,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 84,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 84,
                "kind" : "expression",
                "target" : {
                  "go-type" : 47,
                  "kind" : "expression",
                  "operator" : "&",
                  "target" : {
                    "go-type" : 48,
                    "index" : {
                      "go-type" : 27,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "0"
                      }
                    },
                    "kind" : "expression",
                    "target" : {
                      "go-type" : 52,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "b",
                        "variable" : 9
                      }
                    },
                    "type" : "index"
                  },
                  "type" : "unary"
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "operator" : "-",
            "right" : {
              "coerced-to" : {
                "go-type" : 9,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 9,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 9,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 84,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 6,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 84,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 84,
                "kind" : "expression",
                "target" : {
                  "go-type" : 158,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "elem",
                    "variable" : 13
                  }
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "binary"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 217,
      "code" : "elem.pos = uint32(uintptr(unsafe.Pointer(&b[0])) - uintptr(unsafe.Pointer(elem)))",
      "entry" : false,
      "use-vars" : [ 13, 9 ]
    }, {
      "update-vars" : [ 13 ],
      "successors" : [ 17 ],
      "in-vars" : [ 10, 2, 13, 1, 9 ],
      "exit" : false,
      "out-vars" : [ 1, 9, 10, 2, 13 ],
      "decl-vars" : [ ],
      "line-start" : 218,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "flags",
            "variable" : 15
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 158,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "elem",
              "variable" : 13
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "flags",
            "variable" : 16
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 139,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "item",
              "variable" : 10
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 218,
      "code" : "elem.flags = item.flags",
      "entry" : false,
      "use-vars" : [ 10, 13 ]
    }, {
      "update-vars" : [ 13 ],
      "successors" : [ 18 ],
      "in-vars" : [ 9, 10, 2, 13, 1 ],
      "exit" : false,
      "out-vars" : [ 9, 10, 2, 13, 1 ],
      "decl-vars" : [ ],
      "line-start" : 219,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ksize",
            "variable" : 17
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 158,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "elem",
              "variable" : 13
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 8,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 8,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "uint32"
            }
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "arguments" : [ {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "key",
                "variable" : 11
              },
              "go-type" : 52,
              "kind" : "expression",
              "target" : {
                "go-type" : 139,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "item",
                  "variable" : 10
                }
              },
              "type" : "selector"
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 156,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Builtin",
                "kind" : "ident",
                "value" : "len"
              }
            },
            "go-type" : 27,
            "kind" : "expression",
            "type" : "call"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 219,
      "code" : "elem.ksize = uint32(len(item.key))",
      "entry" : false,
      "use-vars" : [ 10, 13 ]
    }, {
      "update-vars" : [ 13 ],
      "successors" : [ 24 ],
      "in-vars" : [ 10, 2, 13, 1, 9 ],
      "exit" : false,
      "out-vars" : [ 9, 10, 2, 1 ],
      "decl-vars" : [ ],
      "line-start" : 220,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "vsize",
            "variable" : 18
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 158,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "elem",
              "variable" : 13
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 8,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 8,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "uint32"
            }
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "arguments" : [ {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "value",
                "variable" : 19
              },
              "go-type" : 52,
              "kind" : "expression",
              "target" : {
                "go-type" : 139,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "item",
                  "variable" : 10
                }
              },
              "type" : "selector"
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 156,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Builtin",
                "kind" : "ident",
                "value" : "len"
              }
            },
            "go-type" : 27,
            "kind" : "expression",
            "type" : "call"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 220,
      "code" : "elem.vsize = uint32(len(item.value))",
      "entry" : false,
      "use-vars" : [ 10, 13 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 20 ],
      "in-vars" : [ 9, 10, 2, 1, 12 ],
      "exit" : false,
      "out-vars" : [ 10, 2, 20, 1, 9 ],
      "decl-vars" : [ 20 ],
      "line-start" : 222,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "elem"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 7,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 7,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint16"
              }
            },
            "go-type" : 7,
            "kind" : "expression",
            "target" : {
              "go-type" : 27,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "i",
                "variable" : 12
              }
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "branchPageElement"
            },
            "go-type" : 167,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "p",
                "variable" : 2
              }
            },
            "type" : "selector"
          },
          "go-type" : 164,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 222,
      "code" : "elem := p.branchPageElement(uint16(i))",
      "entry" : false,
      "use-vars" : [ 12, 2 ]
    }, {
      "update-vars" : [ 20 ],
      "successors" : [ 21 ],
      "in-vars" : [ 20, 1, 9, 10, 2 ],
      "exit" : false,
      "out-vars" : [ 9, 10, 2, 20, 1 ],
      "decl-vars" : [ ],
      "line-start" : 223,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "pos",
            "variable" : 21
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 164,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "elem",
              "variable" : 20
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 8,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 8,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "uint32"
            }
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 9,
            "kind" : "expression",
            "left" : {
              "coerced-to" : {
                "go-type" : 9,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 9,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 9,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 84,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 6,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 84,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 84,
                "kind" : "expression",
                "target" : {
                  "go-type" : 47,
                  "kind" : "expression",
                  "operator" : "&",
                  "target" : {
                    "go-type" : 48,
                    "index" : {
                      "go-type" : 27,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "0"
                      }
                    },
                    "kind" : "expression",
                    "target" : {
                      "go-type" : 52,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "b",
                        "variable" : 9
                      }
                    },
                    "type" : "index"
                  },
                  "type" : "unary"
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "operator" : "-",
            "right" : {
              "coerced-to" : {
                "go-type" : 9,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 9,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 9,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 84,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 6,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 84,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 84,
                "kind" : "expression",
                "target" : {
                  "go-type" : 164,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "elem",
                    "variable" : 20
                  }
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "binary"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 223,
      "code" : "elem.pos = uint32(uintptr(unsafe.Pointer(&b[0])) - uintptr(unsafe.Pointer(elem)))",
      "entry" : false,
      "use-vars" : [ 20, 9 ]
    }, {
      "update-vars" : [ 20 ],
      "successors" : [ 22 ],
      "in-vars" : [ 9, 10, 2, 20, 1 ],
      "exit" : false,
      "out-vars" : [ 9, 10, 2, 20, 1 ],
      "decl-vars" : [ ],
      "line-start" : 224,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ksize",
            "variable" : 22
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 164,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "elem",
              "variable" : 20
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 8,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 8,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "uint32"
            }
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "arguments" : [ {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "key",
                "variable" : 11
              },
              "go-type" : 52,
              "kind" : "expression",
              "target" : {
                "go-type" : 139,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "item",
                  "variable" : 10
                }
              },
              "type" : "selector"
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 156,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Builtin",
                "kind" : "ident",
                "value" : "len"
              }
            },
            "go-type" : 27,
            "kind" : "expression",
            "type" : "call"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 224,
      "code" : "elem.ksize = uint32(len(item.key))",
      "entry" : false,
      "use-vars" : [ 20, 10 ]
    }, {
      "update-vars" : [ 20 ],
      "successors" : [ 23 ],
      "in-vars" : [ 1, 9, 10, 2, 20 ],
      "exit" : false,
      "out-vars" : [ 9, 10, 2, 20, 1 ],
      "decl-vars" : [ ],
      "line-start" : 225,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "pgid",
            "variable" : 23
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 164,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "elem",
              "variable" : 20
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "pgid",
            "variable" : 24
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 139,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "item",
              "variable" : 10
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 225,
      "code" : "elem.pgid = item.pgid",
      "entry" : false,
      "use-vars" : [ 10, 20 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 24 ],
      "in-vars" : [ 1, 9, 10, 2, 20 ],
      "exit" : false,
      "out-vars" : [ 9, 10, 2, 1 ],
      "decl-vars" : [ ],
      "line-start" : 226,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 23,
            "kind" : "expression",
            "left" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "pgid",
                "variable" : 23
              },
              "go-type" : 5,
              "kind" : "expression",
              "target" : {
                "go-type" : 164,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "elem",
                  "variable" : 20
                }
              },
              "type" : "selector"
            },
            "operator" : "!=",
            "right" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "id",
                "variable" : 6
              },
              "go-type" : 5,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "p",
                  "variable" : 2
                }
              },
              "type" : "selector"
            },
            "type" : "binary"
          }, {
            "go-type" : 30,
            "kind" : "constant",
            "value" : {
              "type" : "STRING",
              "value" : "write: circular dependency occurred"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 154,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "_assert"
            }
          },
          "go-type" : 10,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 226,
      "code" : "_assert(elem.pgid != p.id, \"write: circular dependency occurred\")",
      "entry" : false,
      "use-vars" : [ 2, 20 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 25 ],
      "in-vars" : [ 9, 10, 2, 1 ],
      "exit" : false,
      "out-vars" : [ 25, 9, 10, 2, 1, 26 ],
      "decl-vars" : [ 26, 25 ],
      "line-start" : 233,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "klen"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "vlen"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "key",
              "variable" : 11
            },
            "go-type" : 52,
            "kind" : "expression",
            "target" : {
              "go-type" : 139,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "item",
                "variable" : 10
              }
            },
            "type" : "selector"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 156,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Builtin",
              "kind" : "ident",
              "value" : "len"
            }
          },
          "go-type" : 27,
          "kind" : "expression",
          "type" : "call"
        }, {
          "arguments" : [ {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "value",
              "variable" : 19
            },
            "go-type" : 52,
            "kind" : "expression",
            "target" : {
              "go-type" : 139,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "item",
                "variable" : 10
              }
            },
            "type" : "selector"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 156,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Builtin",
              "kind" : "ident",
              "value" : "len"
            }
          },
          "go-type" : 27,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 233,
      "code" : "klen, vlen := len(item.key), len(item.value)",
      "entry" : false,
      "use-vars" : [ 10 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 26, 27 ],
      "in-vars" : [ 25, 9, 10, 2, 1, 26 ],
      "exit" : false,
      "out-vars" : [ 9, 10, 2, 1, 26, 25 ],
      "decl-vars" : [ ],
      "line-start" : 234,
      "ast" : {
        "condition" : {
          "go-type" : 141,
          "kind" : "expression",
          "left" : {
            "arguments" : [ {
              "go-type" : 52,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "b",
                "variable" : 9
              }
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 156,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Builtin",
                "kind" : "ident",
                "value" : "len"
              }
            },
            "go-type" : 27,
            "kind" : "expression",
            "type" : "call"
          },
          "operator" : "<",
          "right" : {
            "go-type" : 27,
            "kind" : "expression",
            "left" : {
              "go-type" : 27,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "klen",
                "variable" : 25
              }
            },
            "operator" : "+",
            "right" : {
              "go-type" : 27,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "vlen",
                "variable" : 26
              }
            },
            "type" : "binary"
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 236,
      "code" : "if len(b) < klen+vlen {\n\tb = (*[maxAllocSize]byte)(unsafe.Pointer(&b[0]))[:]\n}",
      "entry" : false,
      "use-vars" : [ 26, 9, 25 ]
    }, {
      "update-vars" : [ 9 ],
      "successors" : [ 27 ],
      "in-vars" : [ 2, 1, 26, 25, 9, 10 ],
      "exit" : false,
      "out-vars" : [ 9, 10, 2, 1, 26, 25 ],
      "decl-vars" : [ ],
      "line-start" : 235,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 52,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "b",
            "variable" : 9
          }
        } ],
        "right" : [ {
          "go-type" : 52,
          "type" : "slice",
          "three" : false,
          "high" : null,
          "max" : null,
          "kind" : "expression",
          "low" : null,
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 48,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 48,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "byte"
                  }
                },
                "go-type" : 150,
                "kind" : "type",
                "length" : {
                  "go-type" : 151,
                  "kind" : "constant",
                  "value" : {
                    "type" : "INT",
                    "value" : "2147483647"
                  }
                },
                "type" : "array"
              },
              "go-type" : 149,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 149,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 84,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 6,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 84,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 84,
              "kind" : "expression",
              "target" : {
                "go-type" : 47,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "go-type" : 48,
                  "index" : {
                    "go-type" : 27,
                    "kind" : "constant",
                    "value" : {
                      "type" : "INT",
                      "value" : "0"
                    }
                  },
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 52,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "b",
                      "variable" : 9
                    }
                  },
                  "type" : "index"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 9 ],
      "line-end" : 235,
      "code" : "b = (*[maxAllocSize]byte)(unsafe.Pointer(&b[0]))[:]",
      "entry" : false,
      "use-vars" : [ 9 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 28 ],
      "in-vars" : [ 2, 1, 26, 25, 9, 10 ],
      "exit" : false,
      "out-vars" : [ 10, 2, 1, 26, 25, 9 ],
      "decl-vars" : [ ],
      "line-start" : 239,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 52,
            "type" : "slice",
            "three" : false,
            "high" : null,
            "max" : null,
            "kind" : "expression",
            "low" : {
              "go-type" : 27,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "0"
              }
            },
            "target" : {
              "go-type" : 52,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "b",
                "variable" : 9
              }
            }
          }, {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "key",
              "variable" : 11
            },
            "go-type" : 52,
            "kind" : "expression",
            "target" : {
              "go-type" : 139,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "item",
                "variable" : 10
              }
            },
            "type" : "selector"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 169,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Builtin",
              "kind" : "ident",
              "value" : "copy"
            }
          },
          "go-type" : 27,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 239,
      "code" : "copy(b[0:], item.key)",
      "entry" : false,
      "use-vars" : [ 9, 10 ]
    }, {
      "update-vars" : [ 9 ],
      "successors" : [ 29 ],
      "in-vars" : [ 26, 25, 9, 10, 2, 1 ],
      "exit" : false,
      "out-vars" : [ 10, 2, 1, 26, 9 ],
      "decl-vars" : [ ],
      "line-start" : 240,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 52,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "b",
            "variable" : 9
          }
        } ],
        "right" : [ {
          "go-type" : 52,
          "type" : "slice",
          "three" : false,
          "high" : null,
          "max" : null,
          "kind" : "expression",
          "low" : {
            "go-type" : 27,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "klen",
              "variable" : 25
            }
          },
          "target" : {
            "go-type" : 52,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "b",
              "variable" : 9
            }
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 9 ],
      "line-end" : 240,
      "code" : "b = b[klen:]",
      "entry" : false,
      "use-vars" : [ 9, 25 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 30 ],
      "in-vars" : [ 2, 1, 26, 9, 10 ],
      "exit" : false,
      "out-vars" : [ 9, 2, 1, 26 ],
      "decl-vars" : [ ],
      "line-start" : 241,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 52,
            "type" : "slice",
            "three" : false,
            "high" : null,
            "max" : null,
            "kind" : "expression",
            "low" : {
              "go-type" : 27,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "0"
              }
            },
            "target" : {
              "go-type" : 52,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "b",
                "variable" : 9
              }
            }
          }, {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "value",
              "variable" : 19
            },
            "go-type" : 52,
            "kind" : "expression",
            "target" : {
              "go-type" : 139,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "item",
                "variable" : 10
              }
            },
            "type" : "selector"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 169,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Builtin",
              "kind" : "ident",
              "value" : "copy"
            }
          },
          "go-type" : 27,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 241,
      "code" : "copy(b[0:], item.value)",
      "entry" : false,
      "use-vars" : [ 9, 10 ]
    }, {
      "update-vars" : [ 9 ],
      "successors" : [ 11 ],
      "in-vars" : [ 9, 2, 1, 26 ],
      "exit" : false,
      "out-vars" : [ 9, 2, 1 ],
      "decl-vars" : [ ],
      "line-start" : 242,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 52,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "b",
            "variable" : 9
          }
        } ],
        "right" : [ {
          "go-type" : 52,
          "type" : "slice",
          "three" : false,
          "high" : null,
          "max" : null,
          "kind" : "expression",
          "low" : {
            "go-type" : 27,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "vlen",
              "variable" : 26
            }
          },
          "target" : {
            "go-type" : 52,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "b",
              "variable" : 9
            }
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 9 ],
      "line-end" : 242,
      "code" : "b = b[vlen:]",
      "entry" : false,
      "use-vars" : [ 9, 26 ]
    } ],
    "code" : "// write writes the items onto one or more pages.\nfunc (n *node) write(p *page) {\n\n\tif n.isLeaf {\n\t\tp.flags |= leafPageFlag\n\t} else {\n\t\tp.flags |= branchPageFlag\n\t}\n\n\tif len(n.inodes) >= 0xFFFF {\n\t\tpanic(fmt.Sprintf(\"inode overflow: %d (pgid=%d)\", len(n.inodes), p.id))\n\t}\n\tp.count = uint16(len(n.inodes))\n\n\tif p.count == 0 {\n\t\treturn\n\t}\n\n\tb := (*[maxAllocSize]byte)(unsafe.Pointer(&p.ptr))[n.pageElementSize()*len(n.inodes):]\n\tfor i, item := range n.inodes {\n\t\t_assert(len(item.key) > 0, \"write: zero-length inode key\")\n\n\t\tif n.isLeaf {\n\t\t\telem := p.leafPageElement(uint16(i))\n\t\t\telem.pos = uint32(uintptr(unsafe.Pointer(&b[0])) - uintptr(unsafe.Pointer(elem)))\n\t\t\telem.flags = item.flags\n\t\t\telem.ksize = uint32(len(item.key))\n\t\t\telem.vsize = uint32(len(item.value))\n\t\t} else {\n\t\t\telem := p.branchPageElement(uint16(i))\n\t\t\telem.pos = uint32(uintptr(unsafe.Pointer(&b[0])) - uintptr(unsafe.Pointer(elem)))\n\t\t\telem.ksize = uint32(len(item.key))\n\t\t\telem.pgid = item.pgid\n\t\t\t_assert(elem.pgid != p.id, \"write: circular dependency occurred\")\n\t\t}\n\n\t\tklen, vlen := len(item.key), len(item.value)\n\t\tif len(b) < klen+vlen {\n\t\t\tb = (*[maxAllocSize]byte)(unsafe.Pointer(&b[0]))[:]\n\t\t}\n\n\t\tcopy(b[0:], item.key)\n\t\tb = b[klen:]\n\t\tcopy(b[0:], item.value)\n\t\tb = b[vlen:]\n\t}\n\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "write",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "Sprintf",
      "package" : 7,
      "type" : 146,
      "exported" : true
    }, {
      "name" : "pageElementSize",
      "package" : 0,
      "type" : 153,
      "exported" : false
    }, {
      "name" : "_assert",
      "package" : 0,
      "type" : 154,
      "exported" : false
    }, {
      "name" : "leafPageElement",
      "package" : 0,
      "type" : 161,
      "exported" : false
    }, {
      "name" : "branchPageElement",
      "package" : 0,
      "type" : 167,
      "exported" : false
    } ],
    "line-end" : 246,
    "line-start" : 191,
    "names" : [ "write" ],
    "package" : 0,
    "packages" : [ {
      "name" : "bolt",
      "path" : "github.com/coreos/bbolt"
    }, {
      "name" : "time",
      "path" : "time"
    }, {
      "name" : "os",
      "path" : "os"
    }, {
      "name" : "poll",
      "path" : "internal/poll"
    }, {
      "name" : "syscall",
      "path" : "syscall"
    }, {
      "name" : "sync",
      "path" : "sync"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "fmt",
      "path" : "fmt"
    } ],
    "params" : [ 2 ],
    "receivers" : [ 1 ],
    "results" : [ ],
    "type" : "function",
    "types" : [ {
      "name" : "func(p *github.com/coreos/bbolt.page)",
      "params" : 1,
      "recv" : 1,
      "results" : 10,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "p",
        "type" : 2
      } ],
      "name" : "(p *github.com/coreos/bbolt.page)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*github.com/coreos/bbolt.page",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "page",
      "name" : "github.com/coreos/bbolt.page",
      "package" : 0,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "id",
        "type" : 5
      }, {
        "name" : "flags",
        "type" : 7
      }, {
        "name" : "count",
        "type" : 7
      }, {
        "name" : "overflow",
        "type" : 8
      }, {
        "name" : "ptr",
        "type" : 9
      } ],
      "name" : "struct{id github.com/coreos/bbolt.pgid; flags uint16; count uint16; overflow uint32; ptr uintptr}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "local-name" : "pgid",
      "name" : "github.com/coreos/bbolt.pgid",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 6
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 7
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 8
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 9
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 10
    }, {
      "elem" : 12,
      "name" : "*github.com/coreos/bbolt.node",
      "type" : "Pointer",
      "underlying" : 11
    }, {
      "local-name" : "node",
      "name" : "github.com/coreos/bbolt.node",
      "package" : 0,
      "type" : "Named",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "bucket",
        "type" : 14
      }, {
        "name" : "isLeaf",
        "type" : 23
      }, {
        "name" : "unbalanced",
        "type" : 23
      }, {
        "name" : "spilled",
        "type" : 23
      }, {
        "name" : "key",
        "type" : 52
      }, {
        "name" : "pgid",
        "type" : 5
      }, {
        "name" : "parent",
        "type" : 11
      }, {
        "name" : "children",
        "type" : 135
      }, {
        "name" : "inodes",
        "type" : 137
      } ],
      "name" : "struct{bucket *github.com/coreos/bbolt.Bucket; isLeaf bool; unbalanced bool; spilled bool; key []byte; pgid github.com/coreos/bbolt.pgid; parent *github.com/coreos/bbolt.node; children github.com/coreos/bbolt.nodes; inodes github.com/coreos/bbolt.inodes}",
      "type" : "Struct",
      "underlying" : 13
    }, {
      "elem" : 15,
      "name" : "*github.com/coreos/bbolt.Bucket",
      "type" : "Pointer",
      "underlying" : 14
    }, {
      "local-name" : "Bucket",
      "name" : "github.com/coreos/bbolt.Bucket",
      "package" : 0,
      "type" : "Named",
      "underlying" : 16
    }, {
      "fields" : [ {
        "name" : "bucket",
        "type" : 17
      }, {
        "name" : "tx",
        "type" : 20
      }, {
        "name" : "buckets",
        "type" : 132
      }, {
        "name" : "page",
        "type" : 2
      }, {
        "name" : "rootNode",
        "type" : 11
      }, {
        "name" : "nodes",
        "type" : 133
      }, {
        "name" : "FillPercent",
        "type" : 134
      } ],
      "name" : "struct{*github.com/coreos/bbolt.bucket; tx *github.com/coreos/bbolt.Tx; buckets map[string]*github.com/coreos/bbolt.Bucket; page *github.com/coreos/bbolt.page; rootNode *github.com/coreos/bbolt.node; nodes map[github.com/coreos/bbolt.pgid]*github.com/coreos/bbolt.node; FillPercent float64}",
      "type" : "Struct",
      "underlying" : 16
    }, {
      "elem" : 18,
      "name" : "*github.com/coreos/bbolt.bucket",
      "type" : "Pointer",
      "underlying" : 17
    }, {
      "local-name" : "bucket",
      "name" : "github.com/coreos/bbolt.bucket",
      "package" : 0,
      "type" : "Named",
      "underlying" : 19
    }, {
      "fields" : [ {
        "name" : "root",
        "type" : 5
      }, {
        "name" : "sequence",
        "type" : 6
      } ],
      "name" : "struct{root github.com/coreos/bbolt.pgid; sequence uint64}",
      "type" : "Struct",
      "underlying" : 19
    }, {
      "elem" : 21,
      "name" : "*github.com/coreos/bbolt.Tx",
      "type" : "Pointer",
      "underlying" : 20
    }, {
      "local-name" : "Tx",
      "name" : "github.com/coreos/bbolt.Tx",
      "package" : 0,
      "type" : "Named",
      "underlying" : 22
    }, {
      "fields" : [ {
        "name" : "writable",
        "type" : 23
      }, {
        "name" : "managed",
        "type" : 23
      }, {
        "name" : "db",
        "type" : 24
      }, {
        "name" : "meta",
        "type" : 55
      }, {
        "name" : "root",
        "type" : 15
      }, {
        "name" : "pages",
        "type" : 129
      }, {
        "name" : "stats",
        "type" : 62
      }, {
        "name" : "commitHandlers",
        "type" : 130
      }, {
        "name" : "WriteFlag",
        "type" : 27
      } ],
      "name" : "struct{writable bool; managed bool; db *github.com/coreos/bbolt.DB; meta *github.com/coreos/bbolt.meta; root github.com/coreos/bbolt.Bucket; pages map[github.com/coreos/bbolt.pgid]*github.com/coreos/bbolt.page; stats github.com/coreos/bbolt.TxStats; commitHandlers []func(); WriteFlag int}",
      "type" : "Struct",
      "underlying" : 22
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 23
    }, {
      "elem" : 25,
      "name" : "*github.com/coreos/bbolt.DB",
      "type" : "Pointer",
      "underlying" : 24
    }, {
      "local-name" : "DB",
      "name" : "github.com/coreos/bbolt.DB",
      "package" : 0,
      "type" : "Named",
      "underlying" : 26
    }, {
      "fields" : [ {
        "name" : "StrictMode",
        "type" : 23
      }, {
        "name" : "NoSync",
        "type" : 23
      }, {
        "name" : "NoFreelistSync",
        "type" : 23
      }, {
        "name" : "NoGrowSync",
        "type" : 23
      }, {
        "name" : "MmapFlags",
        "type" : 27
      }, {
        "name" : "MaxBatchSize",
        "type" : 27
      }, {
        "name" : "MaxBatchDelay",
        "type" : 28
      }, {
        "name" : "AllocSize",
        "type" : 27
      }, {
        "name" : "path",
        "type" : 30
      }, {
        "name" : "file",
        "type" : 31
      }, {
        "name" : "lockfile",
        "type" : 31
      }, {
        "name" : "dataref",
        "type" : 52
      }, {
        "name" : "data",
        "type" : 53
      }, {
        "name" : "datasz",
        "type" : 27
      }, {
        "name" : "filesz",
        "type" : 27
      }, {
        "name" : "meta0",
        "type" : 55
      }, {
        "name" : "meta1",
        "type" : 55
      }, {
        "name" : "pageSize",
        "type" : 27
      }, {
        "name" : "opened",
        "type" : 23
      }, {
        "name" : "rwtx",
        "type" : 20
      }, {
        "name" : "txs",
        "type" : 59
      }, {
        "name" : "stats",
        "type" : 60
      }, {
        "name" : "freelist",
        "type" : 64
      }, {
        "name" : "freelistLoad",
        "type" : 75
      }, {
        "name" : "pagePool",
        "type" : 80
      }, {
        "name" : "batchMu",
        "type" : 77
      }, {
        "name" : "batch",
        "type" : 88
      }, {
        "name" : "rwlock",
        "type" : 77
      }, {
        "name" : "metalock",
        "type" : 77
      }, {
        "name" : "mmaplock",
        "type" : 123
      }, {
        "name" : "statlock",
        "type" : 123
      }, {
        "name" : "ops",
        "type" : 125
      }, {
        "name" : "readOnly",
        "type" : 23
      } ],
      "name" : "struct{StrictMode bool; NoSync bool; NoFreelistSync bool; NoGrowSync bool; MmapFlags int; MaxBatchSize int; MaxBatchDelay time.Duration; AllocSize int; path string; file *os.File; lockfile *os.File; dataref []byte; data *[281474976710655]byte; datasz int; filesz int; meta0 *github.com/coreos/bbolt.meta; meta1 *github.com/coreos/bbolt.meta; pageSize int; opened bool; rwtx *github.com/coreos/bbolt.Tx; txs []*github.com/coreos/bbolt.Tx; stats github.com/coreos/bbolt.Stats; freelist *github.com/coreos/bbolt.freelist; freelistLoad sync.Once; pagePool sync.Pool; batchMu sync.Mutex; batch *github.com/coreos/bbolt.batch; rwlock sync.Mutex; metalock sync.Mutex; mmaplock sync.RWMutex; statlock sync.RWMutex; ops struct{writeAt func(b []byte, off int64) (n int, err error)}; readOnly bool}",
      "type" : "Struct",
      "underlying" : 26
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 27
    }, {
      "local-name" : "Duration",
      "name" : "time.Duration",
      "package" : 1,
      "type" : "Named",
      "underlying" : 29
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 29
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 30
    }, {
      "elem" : 32,
      "name" : "*os.File",
      "type" : "Pointer",
      "underlying" : 31
    }, {
      "local-name" : "File",
      "name" : "os.File",
      "package" : 2,
      "type" : "Named",
      "underlying" : 33
    }, {
      "fields" : [ {
        "name" : "file",
        "type" : 34
      } ],
      "name" : "struct{*os.file}",
      "type" : "Struct",
      "underlying" : 33
    }, {
      "elem" : 35,
      "name" : "*os.file",
      "type" : "Pointer",
      "underlying" : 34
    }, {
      "local-name" : "file",
      "name" : "os.file",
      "package" : 2,
      "type" : "Named",
      "underlying" : 36
    }, {
      "fields" : [ {
        "name" : "pfd",
        "type" : 37
      }, {
        "name" : "name",
        "type" : 30
      }, {
        "name" : "dirinfo",
        "type" : 49
      }, {
        "name" : "nonblock",
        "type" : 23
      }, {
        "name" : "stdoutOrErr",
        "type" : 23
      }, {
        "name" : "appendMode",
        "type" : 23
      } ],
      "name" : "struct{pfd internal/poll.FD; name string; dirinfo *os.dirInfo; nonblock bool; stdoutOrErr bool; appendMode bool}",
      "type" : "Struct",
      "underlying" : 36
    }, {
      "local-name" : "FD",
      "name" : "internal/poll.FD",
      "package" : 3,
      "type" : "Named",
      "underlying" : 38
    }, {
      "fields" : [ {
        "name" : "fdmu",
        "type" : 39
      }, {
        "name" : "Sysfd",
        "type" : 27
      }, {
        "name" : "pd",
        "type" : 41
      }, {
        "name" : "iovecs",
        "type" : 43
      }, {
        "name" : "csema",
        "type" : 8
      }, {
        "name" : "isBlocking",
        "type" : 8
      }, {
        "name" : "IsStream",
        "type" : 23
      }, {
        "name" : "ZeroReadIsEOF",
        "type" : 23
      }, {
        "name" : "isFile",
        "type" : 23
      } ],
      "name" : "struct{fdmu internal/poll.fdMutex; Sysfd int; pd internal/poll.pollDesc; iovecs *[]syscall.Iovec; csema uint32; isBlocking uint32; IsStream bool; ZeroReadIsEOF bool; isFile bool}",
      "type" : "Struct",
      "underlying" : 38
    }, {
      "local-name" : "fdMutex",
      "name" : "internal/poll.fdMutex",
      "package" : 3,
      "type" : "Named",
      "underlying" : 40
    }, {
      "fields" : [ {
        "name" : "state",
        "type" : 6
      }, {
        "name" : "rsema",
        "type" : 8
      }, {
        "name" : "wsema",
        "type" : 8
      } ],
      "name" : "struct{state uint64; rsema uint32; wsema uint32}",
      "type" : "Struct",
      "underlying" : 40
    }, {
      "local-name" : "pollDesc",
      "name" : "internal/poll.pollDesc",
      "package" : 3,
      "type" : "Named",
      "underlying" : 42
    }, {
      "fields" : [ {
        "name" : "runtimeCtx",
        "type" : 9
      } ],
      "name" : "struct{runtimeCtx uintptr}",
      "type" : "Struct",
      "underlying" : 42
    }, {
      "elem" : 44,
      "name" : "*[]syscall.Iovec",
      "type" : "Pointer",
      "underlying" : 43
    }, {
      "elem" : 45,
      "name" : "[]syscall.Iovec",
      "type" : "Slice",
      "underlying" : 44
    }, {
      "local-name" : "Iovec",
      "name" : "syscall.Iovec",
      "package" : 4,
      "type" : "Named",
      "underlying" : 46
    }, {
      "fields" : [ {
        "name" : "Base",
        "type" : 47
      }, {
        "name" : "Len",
        "type" : 6
      } ],
      "name" : "struct{Base *byte; Len uint64}",
      "type" : "Struct",
      "underlying" : 46
    }, {
      "elem" : 48,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 47
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 48
    }, {
      "elem" : 50,
      "name" : "*os.dirInfo",
      "type" : "Pointer",
      "underlying" : 49
    }, {
      "local-name" : "dirInfo",
      "name" : "os.dirInfo",
      "package" : 2,
      "type" : "Named",
      "underlying" : 51
    }, {
      "fields" : [ {
        "name" : "buf",
        "type" : 52
      }, {
        "name" : "nbuf",
        "type" : 27
      }, {
        "name" : "bufp",
        "type" : 27
      } ],
      "name" : "struct{buf []byte; nbuf int; bufp int}",
      "type" : "Struct",
      "underlying" : 51
    }, {
      "elem" : 48,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 52
    }, {
      "elem" : 54,
      "name" : "*[281474976710655]byte",
      "type" : "Pointer",
      "underlying" : 53
    }, {
      "elem" : 48,
      "name" : "[281474976710655]byte",
      "type" : "Array",
      "underlying" : 54
    }, {
      "elem" : 56,
      "name" : "*github.com/coreos/bbolt.meta",
      "type" : "Pointer",
      "underlying" : 55
    }, {
      "local-name" : "meta",
      "name" : "github.com/coreos/bbolt.meta",
      "package" : 0,
      "type" : "Named",
      "underlying" : 57
    }, {
      "fields" : [ {
        "name" : "magic",
        "type" : 8
      }, {
        "name" : "version",
        "type" : 8
      }, {
        "name" : "pageSize",
        "type" : 8
      }, {
        "name" : "flags",
        "type" : 8
      }, {
        "name" : "root",
        "type" : 18
      }, {
        "name" : "freelist",
        "type" : 5
      }, {
        "name" : "pgid",
        "type" : 5
      }, {
        "name" : "txid",
        "type" : 58
      }, {
        "name" : "checksum",
        "type" : 6
      } ],
      "name" : "struct{magic uint32; version uint32; pageSize uint32; flags uint32; root github.com/coreos/bbolt.bucket; freelist github.com/coreos/bbolt.pgid; pgid github.com/coreos/bbolt.pgid; txid github.com/coreos/bbolt.txid; checksum uint64}",
      "type" : "Struct",
      "underlying" : 57
    }, {
      "local-name" : "txid",
      "name" : "github.com/coreos/bbolt.txid",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "elem" : 20,
      "name" : "[]*github.com/coreos/bbolt.Tx",
      "type" : "Slice",
      "underlying" : 59
    }, {
      "local-name" : "Stats",
      "name" : "github.com/coreos/bbolt.Stats",
      "package" : 0,
      "type" : "Named",
      "underlying" : 61
    }, {
      "fields" : [ {
        "name" : "FreePageN",
        "type" : 27
      }, {
        "name" : "PendingPageN",
        "type" : 27
      }, {
        "name" : "FreeAlloc",
        "type" : 27
      }, {
        "name" : "FreelistInuse",
        "type" : 27
      }, {
        "name" : "TxN",
        "type" : 27
      }, {
        "name" : "OpenTxN",
        "type" : 27
      }, {
        "name" : "TxStats",
        "type" : 62
      } ],
      "name" : "struct{FreePageN int; PendingPageN int; FreeAlloc int; FreelistInuse int; TxN int; OpenTxN int; TxStats github.com/coreos/bbolt.TxStats}",
      "type" : "Struct",
      "underlying" : 61
    }, {
      "local-name" : "TxStats",
      "name" : "github.com/coreos/bbolt.TxStats",
      "package" : 0,
      "type" : "Named",
      "underlying" : 63
    }, {
      "fields" : [ {
        "name" : "PageCount",
        "type" : 27
      }, {
        "name" : "PageAlloc",
        "type" : 27
      }, {
        "name" : "CursorCount",
        "type" : 27
      }, {
        "name" : "NodeCount",
        "type" : 27
      }, {
        "name" : "NodeDeref",
        "type" : 27
      }, {
        "name" : "Rebalance",
        "type" : 27
      }, {
        "name" : "RebalanceTime",
        "type" : 28
      }, {
        "name" : "Split",
        "type" : 27
      }, {
        "name" : "Spill",
        "type" : 27
      }, {
        "name" : "SpillTime",
        "type" : 28
      }, {
        "name" : "Write",
        "type" : 27
      }, {
        "name" : "WriteTime",
        "type" : 28
      } ],
      "name" : "struct{PageCount int; PageAlloc int; CursorCount int; NodeCount int; NodeDeref int; Rebalance int; RebalanceTime time.Duration; Split int; Spill int; SpillTime time.Duration; Write int; WriteTime time.Duration}",
      "type" : "Struct",
      "underlying" : 63
    }, {
      "elem" : 65,
      "name" : "*github.com/coreos/bbolt.freelist",
      "type" : "Pointer",
      "underlying" : 64
    }, {
      "local-name" : "freelist",
      "name" : "github.com/coreos/bbolt.freelist",
      "package" : 0,
      "type" : "Named",
      "underlying" : 66
    }, {
      "fields" : [ {
        "name" : "ids",
        "type" : 67
      }, {
        "name" : "allocs",
        "type" : 68
      }, {
        "name" : "pending",
        "type" : 69
      }, {
        "name" : "cache",
        "type" : 74
      } ],
      "name" : "struct{ids []github.com/coreos/bbolt.pgid; allocs map[github.com/coreos/bbolt.pgid]github.com/coreos/bbolt.txid; pending map[github.com/coreos/bbolt.txid]*github.com/coreos/bbolt.txPending; cache map[github.com/coreos/bbolt.pgid]bool}",
      "type" : "Struct",
      "underlying" : 66
    }, {
      "elem" : 5,
      "name" : "[]github.com/coreos/bbolt.pgid",
      "type" : "Slice",
      "underlying" : 67
    }, {
      "elem" : 58,
      "key" : 5,
      "name" : "map[github.com/coreos/bbolt.pgid]github.com/coreos/bbolt.txid",
      "type" : "Map",
      "underlying" : 68
    }, {
      "elem" : 70,
      "key" : 58,
      "name" : "map[github.com/coreos/bbolt.txid]*github.com/coreos/bbolt.txPending",
      "type" : "Map",
      "underlying" : 69
    }, {
      "elem" : 71,
      "name" : "*github.com/coreos/bbolt.txPending",
      "type" : "Pointer",
      "underlying" : 70
    }, {
      "local-name" : "txPending",
      "name" : "github.com/coreos/bbolt.txPending",
      "package" : 0,
      "type" : "Named",
      "underlying" : 72
    }, {
      "fields" : [ {
        "name" : "ids",
        "type" : 67
      }, {
        "name" : "alloctx",
        "type" : 73
      }, {
        "name" : "lastReleaseBegin",
        "type" : 58
      } ],
      "name" : "struct{ids []github.com/coreos/bbolt.pgid; alloctx []github.com/coreos/bbolt.txid; lastReleaseBegin github.com/coreos/bbolt.txid}",
      "type" : "Struct",
      "underlying" : 72
    }, {
      "elem" : 58,
      "name" : "[]github.com/coreos/bbolt.txid",
      "type" : "Slice",
      "underlying" : 73
    }, {
      "elem" : 23,
      "key" : 5,
      "name" : "map[github.com/coreos/bbolt.pgid]bool",
      "type" : "Map",
      "underlying" : 74
    }, {
      "local-name" : "Once",
      "name" : "sync.Once",
      "package" : 5,
      "type" : "Named",
      "underlying" : 76
    }, {
      "fields" : [ {
        "name" : "done",
        "type" : 8
      }, {
        "name" : "m",
        "type" : 77
      } ],
      "name" : "struct{done uint32; m sync.Mutex}",
      "type" : "Struct",
      "underlying" : 76
    }, {
      "local-name" : "Mutex",
      "name" : "sync.Mutex",
      "package" : 5,
      "type" : "Named",
      "underlying" : 78
    }, {
      "fields" : [ {
        "name" : "state",
        "type" : 79
      }, {
        "name" : "sema",
        "type" : 8
      } ],
      "name" : "struct{state int32; sema uint32}",
      "type" : "Struct",
      "underlying" : 78
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 79
    }, {
      "local-name" : "Pool",
      "name" : "sync.Pool",
      "package" : 5,
      "type" : "Named",
      "underlying" : 81
    }, {
      "fields" : [ {
        "name" : "noCopy",
        "type" : 82
      }, {
        "name" : "local",
        "type" : 84
      }, {
        "name" : "localSize",
        "type" : 9
      }, {
        "name" : "victim",
        "type" : 84
      }, {
        "name" : "victimSize",
        "type" : 9
      }, {
        "name" : "New",
        "type" : 85
      } ],
      "name" : "struct{noCopy sync.noCopy; local unsafe.Pointer; localSize uintptr; victim unsafe.Pointer; victimSize uintptr; New func() interface{}}",
      "type" : "Struct",
      "underlying" : 81
    }, {
      "local-name" : "noCopy",
      "name" : "sync.noCopy",
      "package" : 5,
      "type" : "Named",
      "underlying" : 83
    }, {
      "fields" : [ ],
      "name" : "struct{}",
      "type" : "Struct",
      "underlying" : 83
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 6,
      "type" : "Basic",
      "underlying" : 84
    }, {
      "name" : "func() interface{}",
      "params" : 10,
      "recv" : -1,
      "results" : 86,
      "type" : "Signature",
      "underlying" : 85,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 87
      } ],
      "name" : "(interface{})",
      "type" : "Tuple",
      "underlying" : 86
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 87
    }, {
      "elem" : 89,
      "name" : "*github.com/coreos/bbolt.batch",
      "type" : "Pointer",
      "underlying" : 88
    }, {
      "local-name" : "batch",
      "name" : "github.com/coreos/bbolt.batch",
      "package" : 0,
      "type" : "Named",
      "underlying" : 90
    }, {
      "fields" : [ {
        "name" : "db",
        "type" : 24
      }, {
        "name" : "timer",
        "type" : 91
      }, {
        "name" : "start",
        "type" : 75
      }, {
        "name" : "calls",
        "type" : 112
      } ],
      "name" : "struct{db *github.com/coreos/bbolt.DB; timer *time.Timer; start sync.Once; calls []github.com/coreos/bbolt.call}",
      "type" : "Struct",
      "underlying" : 90
    }, {
      "elem" : 92,
      "name" : "*time.Timer",
      "type" : "Pointer",
      "underlying" : 91
    }, {
      "local-name" : "Timer",
      "name" : "time.Timer",
      "package" : 1,
      "type" : "Named",
      "underlying" : 93
    }, {
      "fields" : [ {
        "name" : "C",
        "type" : 94
      }, {
        "name" : "r",
        "type" : 108
      } ],
      "name" : "struct{C <-chan time.Time; r time.runtimeTimer}",
      "type" : "Struct",
      "underlying" : 93
    }, {
      "dir" : "recv",
      "elem" : 95,
      "name" : "<-chan time.Time",
      "type" : "Chan",
      "underlying" : 94
    }, {
      "local-name" : "Time",
      "name" : "time.Time",
      "package" : 1,
      "type" : "Named",
      "underlying" : 96
    }, {
      "fields" : [ {
        "name" : "wall",
        "type" : 6
      }, {
        "name" : "ext",
        "type" : 29
      }, {
        "name" : "loc",
        "type" : 97
      } ],
      "name" : "struct{wall uint64; ext int64; loc *time.Location}",
      "type" : "Struct",
      "underlying" : 96
    }, {
      "elem" : 98,
      "name" : "*time.Location",
      "type" : "Pointer",
      "underlying" : 97
    }, {
      "local-name" : "Location",
      "name" : "time.Location",
      "package" : 1,
      "type" : "Named",
      "underlying" : 99
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 30
      }, {
        "name" : "zone",
        "type" : 100
      }, {
        "name" : "tx",
        "type" : 103
      }, {
        "name" : "cacheStart",
        "type" : 29
      }, {
        "name" : "cacheEnd",
        "type" : 29
      }, {
        "name" : "cacheZone",
        "type" : 107
      } ],
      "name" : "struct{name string; zone []time.zone; tx []time.zoneTrans; cacheStart int64; cacheEnd int64; cacheZone *time.zone}",
      "type" : "Struct",
      "underlying" : 99
    }, {
      "elem" : 101,
      "name" : "[]time.zone",
      "type" : "Slice",
      "underlying" : 100
    }, {
      "local-name" : "zone",
      "name" : "time.zone",
      "package" : 1,
      "type" : "Named",
      "underlying" : 102
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 30
      }, {
        "name" : "offset",
        "type" : 27
      }, {
        "name" : "isDST",
        "type" : 23
      } ],
      "name" : "struct{name string; offset int; isDST bool}",
      "type" : "Struct",
      "underlying" : 102
    }, {
      "elem" : 104,
      "name" : "[]time.zoneTrans",
      "type" : "Slice",
      "underlying" : 103
    }, {
      "local-name" : "zoneTrans",
      "name" : "time.zoneTrans",
      "package" : 1,
      "type" : "Named",
      "underlying" : 105
    }, {
      "fields" : [ {
        "name" : "when",
        "type" : 29
      }, {
        "name" : "index",
        "type" : 106
      }, {
        "name" : "isstd",
        "type" : 23
      }, {
        "name" : "isutc",
        "type" : 23
      } ],
      "name" : "struct{when int64; index uint8; isstd bool; isutc bool}",
      "type" : "Struct",
      "underlying" : 105
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 106
    }, {
      "elem" : 101,
      "name" : "*time.zone",
      "type" : "Pointer",
      "underlying" : 107
    }, {
      "local-name" : "runtimeTimer",
      "name" : "time.runtimeTimer",
      "package" : 1,
      "type" : "Named",
      "underlying" : 109
    }, {
      "fields" : [ {
        "name" : "pp",
        "type" : 9
      }, {
        "name" : "when",
        "type" : 29
      }, {
        "name" : "period",
        "type" : 29
      }, {
        "name" : "f",
        "type" : 110
      }, {
        "name" : "arg",
        "type" : 87
      }, {
        "name" : "seq",
        "type" : 9
      }, {
        "name" : "nextwhen",
        "type" : 29
      }, {
        "name" : "status",
        "type" : 8
      } ],
      "name" : "struct{pp uintptr; when int64; period int64; f func(interface{}, uintptr); arg interface{}; seq uintptr; nextwhen int64; status uint32}",
      "type" : "Struct",
      "underlying" : 109
    }, {
      "name" : "func(interface{}, uintptr)",
      "params" : 111,
      "recv" : -1,
      "results" : 10,
      "type" : "Signature",
      "underlying" : 110,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 87
      }, {
        "name" : "",
        "type" : 9
      } ],
      "name" : "(interface{}, uintptr)",
      "type" : "Tuple",
      "underlying" : 111
    }, {
      "elem" : 113,
      "name" : "[]github.com/coreos/bbolt.call",
      "type" : "Slice",
      "underlying" : 112
    }, {
      "local-name" : "call",
      "name" : "github.com/coreos/bbolt.call",
      "package" : 0,
      "type" : "Named",
      "underlying" : 114
    }, {
      "fields" : [ {
        "name" : "fn",
        "type" : 115
      }, {
        "name" : "err",
        "type" : 122
      } ],
      "name" : "struct{fn func(*github.com/coreos/bbolt.Tx) error; err chan<- error}",
      "type" : "Struct",
      "underlying" : 114
    }, {
      "name" : "func(*github.com/coreos/bbolt.Tx) error",
      "params" : 116,
      "recv" : -1,
      "results" : 117,
      "type" : "Signature",
      "underlying" : 115,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 20
      } ],
      "name" : "(*github.com/coreos/bbolt.Tx)",
      "type" : "Tuple",
      "underlying" : 116
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 118
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 117
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 119
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 120
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 119
    }, {
      "name" : "func() string",
      "params" : 10,
      "recv" : 0,
      "results" : 121,
      "type" : "Signature",
      "underlying" : 120,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 30
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 121
    }, {
      "dir" : "send",
      "elem" : 118,
      "name" : "chan<- error",
      "type" : "Chan",
      "underlying" : 122
    }, {
      "local-name" : "RWMutex",
      "name" : "sync.RWMutex",
      "package" : 5,
      "type" : "Named",
      "underlying" : 124
    }, {
      "fields" : [ {
        "name" : "w",
        "type" : 77
      }, {
        "name" : "writerSem",
        "type" : 8
      }, {
        "name" : "readerSem",
        "type" : 8
      }, {
        "name" : "readerCount",
        "type" : 79
      }, {
        "name" : "readerWait",
        "type" : 79
      } ],
      "name" : "struct{w sync.Mutex; writerSem uint32; readerSem uint32; readerCount int32; readerWait int32}",
      "type" : "Struct",
      "underlying" : 124
    }, {
      "fields" : [ {
        "name" : "writeAt",
        "type" : 126
      } ],
      "name" : "struct{writeAt func(b []byte, off int64) (n int, err error)}",
      "type" : "Struct",
      "underlying" : 125
    }, {
      "name" : "func(b []byte, off int64) (n int, err error)",
      "params" : 127,
      "recv" : -1,
      "results" : 128,
      "type" : "Signature",
      "underlying" : 126,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "b",
        "type" : 52
      }, {
        "name" : "off",
        "type" : 29
      } ],
      "name" : "(b []byte, off int64)",
      "type" : "Tuple",
      "underlying" : 127
    }, {
      "fields" : [ {
        "name" : "n",
        "type" : 27
      }, {
        "name" : "err",
        "type" : 118
      } ],
      "name" : "(n int, err error)",
      "type" : "Tuple",
      "underlying" : 128
    }, {
      "elem" : 2,
      "key" : 5,
      "name" : "map[github.com/coreos/bbolt.pgid]*github.com/coreos/bbolt.page",
      "type" : "Map",
      "underlying" : 129
    }, {
      "elem" : 131,
      "name" : "[]func()",
      "type" : "Slice",
      "underlying" : 130
    }, {
      "name" : "func()",
      "params" : 10,
      "recv" : -1,
      "results" : 10,
      "type" : "Signature",
      "underlying" : 131,
      "variadic" : false
    }, {
      "elem" : 14,
      "key" : 30,
      "name" : "map[string]*github.com/coreos/bbolt.Bucket",
      "type" : "Map",
      "underlying" : 132
    }, {
      "elem" : 11,
      "key" : 5,
      "name" : "map[github.com/coreos/bbolt.pgid]*github.com/coreos/bbolt.node",
      "type" : "Map",
      "underlying" : 133
    }, {
      "name" : "float64",
      "type" : "Basic",
      "underlying" : 134
    }, {
      "local-name" : "nodes",
      "name" : "github.com/coreos/bbolt.nodes",
      "package" : 0,
      "type" : "Named",
      "underlying" : 136
    }, {
      "elem" : 11,
      "name" : "[]*github.com/coreos/bbolt.node",
      "type" : "Slice",
      "underlying" : 136
    }, {
      "local-name" : "inodes",
      "name" : "github.com/coreos/bbolt.inodes",
      "package" : 0,
      "type" : "Named",
      "underlying" : 138
    }, {
      "elem" : 139,
      "name" : "[]github.com/coreos/bbolt.inode",
      "type" : "Slice",
      "underlying" : 138
    }, {
      "local-name" : "inode",
      "name" : "github.com/coreos/bbolt.inode",
      "package" : 0,
      "type" : "Named",
      "underlying" : 140
    }, {
      "fields" : [ {
        "name" : "flags",
        "type" : 8
      }, {
        "name" : "pgid",
        "type" : 5
      }, {
        "name" : "key",
        "type" : 52
      }, {
        "name" : "value",
        "type" : 52
      } ],
      "name" : "struct{flags uint32; pgid github.com/coreos/bbolt.pgid; key []byte; value []byte}",
      "type" : "Struct",
      "underlying" : 140
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 141
    }, {
      "name" : "func([]github.com/coreos/bbolt.inode) int",
      "params" : 143,
      "recv" : -1,
      "results" : 144,
      "type" : "Signature",
      "underlying" : 142,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 138
      } ],
      "name" : "([]github.com/coreos/bbolt.inode)",
      "type" : "Tuple",
      "underlying" : 143
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 27
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 144
    }, {
      "name" : "func(interface{})",
      "params" : 86,
      "recv" : -1,
      "results" : 10,
      "type" : "Signature",
      "underlying" : 145,
      "variadic" : false
    }, {
      "name" : "func(format string, a ...interface{}) string",
      "params" : 147,
      "recv" : -1,
      "results" : 121,
      "type" : "Signature",
      "underlying" : 146,
      "variadic" : true
    }, {
      "fields" : [ {
        "name" : "format",
        "type" : 30
      }, {
        "name" : "a",
        "type" : 148
      } ],
      "name" : "(format string, a []interface{})",
      "type" : "Tuple",
      "underlying" : 147
    }, {
      "elem" : 87,
      "name" : "[]interface{}",
      "type" : "Slice",
      "underlying" : 148
    }, {
      "elem" : 150,
      "name" : "*[2147483647]byte",
      "type" : "Pointer",
      "underlying" : 149
    }, {
      "elem" : 48,
      "name" : "[2147483647]byte",
      "type" : "Array",
      "underlying" : 150
    }, {
      "name" : "untyped int",
      "type" : "Basic",
      "underlying" : 151
    }, {
      "elem" : 9,
      "name" : "*uintptr",
      "type" : "Pointer",
      "underlying" : 152
    }, {
      "name" : "func() int",
      "params" : 10,
      "recv" : -1,
      "results" : 144,
      "type" : "Signature",
      "underlying" : 153,
      "variadic" : false
    }, {
      "name" : "func(condition bool, msg string, v ...interface{})",
      "params" : 155,
      "recv" : -1,
      "results" : 10,
      "type" : "Signature",
      "underlying" : 154,
      "variadic" : true
    }, {
      "fields" : [ {
        "name" : "condition",
        "type" : 23
      }, {
        "name" : "msg",
        "type" : 30
      }, {
        "name" : "v",
        "type" : 148
      } ],
      "name" : "(condition bool, msg string, v []interface{})",
      "type" : "Tuple",
      "underlying" : 155
    }, {
      "name" : "func([]byte) int",
      "params" : 157,
      "recv" : -1,
      "results" : 144,
      "type" : "Signature",
      "underlying" : 156,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 52
      } ],
      "name" : "([]byte)",
      "type" : "Tuple",
      "underlying" : 157
    }, {
      "elem" : 159,
      "name" : "*github.com/coreos/bbolt.leafPageElement",
      "type" : "Pointer",
      "underlying" : 158
    }, {
      "local-name" : "leafPageElement",
      "name" : "github.com/coreos/bbolt.leafPageElement",
      "package" : 0,
      "type" : "Named",
      "underlying" : 160
    }, {
      "fields" : [ {
        "name" : "flags",
        "type" : 8
      }, {
        "name" : "pos",
        "type" : 8
      }, {
        "name" : "ksize",
        "type" : 8
      }, {
        "name" : "vsize",
        "type" : 8
      } ],
      "name" : "struct{flags uint32; pos uint32; ksize uint32; vsize uint32}",
      "type" : "Struct",
      "underlying" : 160
    }, {
      "name" : "func(index uint16) *github.com/coreos/bbolt.leafPageElement",
      "params" : 162,
      "recv" : -1,
      "results" : 163,
      "type" : "Signature",
      "underlying" : 161,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "index",
        "type" : 7
      } ],
      "name" : "(index uint16)",
      "type" : "Tuple",
      "underlying" : 162
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 158
      } ],
      "name" : "(*github.com/coreos/bbolt.leafPageElement)",
      "type" : "Tuple",
      "underlying" : 163
    }, {
      "elem" : 165,
      "name" : "*github.com/coreos/bbolt.branchPageElement",
      "type" : "Pointer",
      "underlying" : 164
    }, {
      "local-name" : "branchPageElement",
      "name" : "github.com/coreos/bbolt.branchPageElement",
      "package" : 0,
      "type" : "Named",
      "underlying" : 166
    }, {
      "fields" : [ {
        "name" : "pos",
        "type" : 8
      }, {
        "name" : "ksize",
        "type" : 8
      }, {
        "name" : "pgid",
        "type" : 5
      } ],
      "name" : "struct{pos uint32; ksize uint32; pgid github.com/coreos/bbolt.pgid}",
      "type" : "Struct",
      "underlying" : 166
    }, {
      "name" : "func(index uint16) *github.com/coreos/bbolt.branchPageElement",
      "params" : 162,
      "recv" : -1,
      "results" : 168,
      "type" : "Signature",
      "underlying" : 167,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 164
      } ],
      "name" : "(*github.com/coreos/bbolt.branchPageElement)",
      "type" : "Tuple",
      "underlying" : 168
    }, {
      "name" : "func([]byte, []byte) int",
      "params" : 170,
      "recv" : -1,
      "results" : 144,
      "type" : "Signature",
      "underlying" : 169,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 52
      }, {
        "name" : "",
        "type" : 52
      } ],
      "name" : "([]byte, []byte)",
      "type" : "Tuple",
      "underlying" : 170
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 118,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "n",
      "package" : 0,
      "type" : 11,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "p",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "isLeaf",
      "package" : 0,
      "type" : 23,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "flags",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "inodes",
      "package" : 0,
      "type" : 137,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "id",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "count",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ptr",
      "package" : 0,
      "type" : 9,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "b",
      "package" : 0,
      "type" : 52,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "item",
      "package" : 0,
      "type" : 139,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "key",
      "package" : 0,
      "type" : 52,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "i",
      "package" : 0,
      "type" : 27,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "elem",
      "package" : 0,
      "type" : 158,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "pos",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "flags",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "flags",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ksize",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "vsize",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "value",
      "package" : 0,
      "type" : 52,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "elem",
      "package" : 0,
      "type" : 164,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "pos",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ksize",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "pgid",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "pgid",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "klen",
      "package" : 0,
      "type" : 27,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "vlen",
      "package" : 0,
      "type" : 27,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}