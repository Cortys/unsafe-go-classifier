{
  "usage" : {
    "file" : "tx.go",
    "label1" : "cast-bytes",
    "label2" : "efficiency",
    "line" : "536",
    "module" : "github.com/coreos/bbolt",
    "pkg" : "github.com/coreos/bbolt",
    "project" : "elastic/beats",
    "snippet" : "ptr = (*[maxAllocSize]byte)(unsafe.Pointer(&ptr[sz]))",
    "version" : "v1.3.1-coreos.6.0.20180318001526-af9db2027c98"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 1, 3 ],
      "exit" : false,
      "out-vars" : [ 1, 3 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 3, 1 ],
      "exit" : false,
      "out-vars" : [ 5, 1, 3 ],
      "decl-vars" : [ 5 ],
      "line-start" : 497,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "pages"
          }
        } ],
        "right" : [ {
          "argument" : {
            "go-type" : 140,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 140,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "pages"
            }
          },
          "go-type" : 140,
          "kind" : "expression",
          "rest" : [ {
            "go-type" : 15,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          }, {
            "arguments" : [ {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "pages",
                "variable" : 4
              },
              "go-type" : 137,
              "kind" : "expression",
              "target" : {
                "go-type" : 8,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "tx",
                  "variable" : 1
                }
              },
              "type" : "selector"
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 142,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Builtin",
                "kind" : "ident",
                "value" : "len"
              }
            },
            "go-type" : 15,
            "kind" : "expression",
            "type" : "call"
          } ],
          "type" : "make"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 497,
      "code" : "pages := make(pages, 0, len(tx.pages))",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4, 5 ],
      "in-vars" : [ 5, 1, 3 ],
      "exit" : false,
      "out-vars" : [ 5, 6, 1, 3 ],
      "decl-vars" : [ 6, 7 ],
      "line-start" : 498,
      "ast" : {
        "is-assign" : false,
        "key" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "_"
          }
        },
        "kind" : "statement",
        "target" : {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "pages",
            "variable" : 4
          },
          "go-type" : 137,
          "kind" : "expression",
          "target" : {
            "go-type" : 8,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "tx",
              "variable" : 1
            }
          },
          "type" : "selector"
        },
        "type" : "range",
        "value" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "p"
          }
        }
      },
      "assign-vars" : [ ],
      "line-end" : 500,
      "code" : "for _, p := range tx.pages {\n\tpages = append(pages, p)\n}",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ 5 ],
      "successors" : [ 3 ],
      "in-vars" : [ 5, 6, 1, 3 ],
      "exit" : false,
      "out-vars" : [ 5, 1, 3 ],
      "decl-vars" : [ ],
      "line-start" : 499,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 140,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "pages",
            "variable" : 5
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 140,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "pages",
              "variable" : 5
            }
          }, {
            "go-type" : 122,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "p",
              "variable" : 6
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 145,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Builtin",
              "kind" : "ident",
              "value" : "append"
            }
          },
          "go-type" : 140,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 5 ],
      "line-end" : 499,
      "code" : "pages = append(pages, p)",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 1 ],
      "successors" : [ 6 ],
      "in-vars" : [ 5, 1, 3 ],
      "exit" : false,
      "out-vars" : [ 5, 1, 3 ],
      "decl-vars" : [ ],
      "line-start" : 502,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "pages",
            "variable" : 4
          },
          "go-type" : 137,
          "kind" : "expression",
          "target" : {
            "go-type" : 8,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "tx",
              "variable" : 1
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "argument" : {
            "go-type" : 137,
            "key" : {
              "go-type" : 50,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 50,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "pgid"
              }
            },
            "kind" : "type",
            "type" : "map",
            "value" : {
              "contained" : {
                "go-type" : 123,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 123,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "page"
                }
              },
              "go-type" : 122,
              "kind" : "type",
              "type" : "pointer"
            }
          },
          "go-type" : 137,
          "kind" : "expression",
          "rest" : [ ],
          "type" : "make"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 502,
      "code" : "tx.pages = make(map[pgid]*page)",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 7 ],
      "in-vars" : [ 5, 1, 3 ],
      "exit" : false,
      "out-vars" : [ 5, 1, 3 ],
      "decl-vars" : [ ],
      "line-start" : 503,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 140,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "pages",
              "variable" : 5
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 148,
            "kind" : "expression",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 7,
              "value" : "sort"
            },
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Sort"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 503,
      "code" : "sort.Sort(pages)",
      "entry" : false,
      "use-vars" : [ 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 8, 25 ],
      "in-vars" : [ 1, 3, 5 ],
      "exit" : false,
      "out-vars" : [ 1, 11, 3, 5 ],
      "decl-vars" : [ 11, 26 ],
      "line-start" : 506,
      "ast" : {
        "is-assign" : false,
        "key" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "_"
          }
        },
        "kind" : "statement",
        "target" : {
          "go-type" : 140,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "pages",
            "variable" : 5
          }
        },
        "type" : "range",
        "value" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "p"
          }
        }
      },
      "assign-vars" : [ ],
      "line-end" : 538,
      "code" : "for _, p := range pages {\n\tsize := (int(p.overflow) + 1) * tx.db.pageSize\n\toffset := int64(p.id) * int64(tx.db.pageSize)\n\n\tptr := (*[maxAllocSize]byte)(unsafe.Pointer(p))\n\tfor {\n\n\t\tsz := size\n\t\tif sz > maxAllocSize-1 {\n\t\t\tsz = maxAllocSize - 1\n\t\t}\n\n\t\tbuf := ptr[:sz]\n\t\tif _, err := tx.db.ops.writeAt(buf, offset); err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\ttx.stats.Write++\n\n\t\tsize -= sz\n\t\tif size == 0 {\n\t\t\tbreak\n\t\t}\n\n\t\toffset += int64(sz)\n\t\tptr = (*[maxAllocSize]byte)(unsafe.Pointer(&ptr[sz]))\n\t}\n}",
      "entry" : false,
      "use-vars" : [ 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 9 ],
      "in-vars" : [ 5, 1, 11, 3 ],
      "exit" : false,
      "out-vars" : [ 5, 1, 11, 16, 3 ],
      "decl-vars" : [ 16 ],
      "line-start" : 507,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "size"
          }
        } ],
        "right" : [ {
          "go-type" : 15,
          "kind" : "expression",
          "left" : {
            "go-type" : 15,
            "kind" : "expression",
            "target" : {
              "go-type" : 15,
              "kind" : "expression",
              "left" : {
                "coerced-to" : {
                  "go-type" : 15,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 15,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "int"
                  }
                },
                "go-type" : 15,
                "kind" : "expression",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "overflow",
                    "variable" : 12
                  },
                  "go-type" : 29,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 122,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "p",
                      "variable" : 11
                    }
                  },
                  "type" : "selector"
                },
                "type" : "cast"
              },
              "operator" : "+",
              "right" : {
                "go-type" : 15,
                "kind" : "constant",
                "value" : {
                  "type" : "INT",
                  "value" : "1"
                }
              },
              "type" : "binary"
            },
            "type" : "paren"
          },
          "operator" : "*",
          "right" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "pageSize",
              "variable" : 14
            },
            "go-type" : 15,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "db",
                "variable" : 13
              },
              "go-type" : 12,
              "kind" : "expression",
              "target" : {
                "go-type" : 8,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "tx",
                  "variable" : 1
                }
              },
              "type" : "selector"
            },
            "type" : "selector"
          },
          "type" : "binary"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 507,
      "code" : "size := (int(p.overflow) + 1) * tx.db.pageSize",
      "entry" : false,
      "use-vars" : [ 1, 11 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 10 ],
      "in-vars" : [ 16, 3, 5, 1, 11 ],
      "exit" : false,
      "out-vars" : [ 1, 11, 16, 3, 22, 5 ],
      "decl-vars" : [ 22 ],
      "line-start" : 508,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "offset"
          }
        } ],
        "right" : [ {
          "go-type" : 17,
          "kind" : "expression",
          "left" : {
            "coerced-to" : {
              "go-type" : 17,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 17,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "int64"
              }
            },
            "go-type" : 17,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "id",
                "variable" : 15
              },
              "go-type" : 50,
              "kind" : "expression",
              "target" : {
                "go-type" : 122,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "p",
                  "variable" : 11
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "operator" : "*",
          "right" : {
            "coerced-to" : {
              "go-type" : 17,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 17,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "int64"
              }
            },
            "go-type" : 17,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "pageSize",
                "variable" : 14
              },
              "go-type" : 15,
              "kind" : "expression",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "db",
                  "variable" : 13
                },
                "go-type" : 12,
                "kind" : "expression",
                "target" : {
                  "go-type" : 8,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "tx",
                    "variable" : 1
                  }
                },
                "type" : "selector"
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "binary"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 508,
      "code" : "offset := int64(p.id) * int64(tx.db.pageSize)",
      "entry" : false,
      "use-vars" : [ 1, 11 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 11 ],
      "in-vars" : [ 22, 5, 1, 11, 16, 3 ],
      "exit" : false,
      "out-vars" : [ 22, 5, 1, 16, 18, 3 ],
      "decl-vars" : [ 18 ],
      "line-start" : 511,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "ptr"
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "element" : {
                "go-type" : 38,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 38,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "byte"
                }
              },
              "go-type" : 158,
              "kind" : "type",
              "length" : {
                "go-type" : 159,
                "kind" : "constant",
                "value" : {
                  "type" : "INT",
                  "value" : "2147483647"
                }
              },
              "type" : "array"
            },
            "go-type" : 157,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 157,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 77,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 77,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 77,
            "kind" : "expression",
            "target" : {
              "go-type" : 122,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "p",
                "variable" : 11
              }
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 511,
      "code" : "ptr := (*[maxAllocSize]byte)(unsafe.Pointer(p))",
      "entry" : false,
      "use-vars" : [ 11 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 7, 12 ],
      "in-vars" : [ 5, 1, 16, 18, 3, 22 ],
      "exit" : false,
      "out-vars" : [ 22, 5, 1, 16, 18, 3 ],
      "decl-vars" : [ ],
      "line-start" : 512,
      "ast" : {
        "condition" : null,
        "kind" : "statement",
        "type" : "for"
      },
      "assign-vars" : [ ],
      "line-end" : 537,
      "code" : "for {\n\n\tsz := size\n\tif sz > maxAllocSize-1 {\n\t\tsz = maxAllocSize - 1\n\t}\n\n\tbuf := ptr[:sz]\n\tif _, err := tx.db.ops.writeAt(buf, offset); err != nil {\n\t\treturn err\n\t}\n\n\ttx.stats.Write++\n\n\tsize -= sz\n\tif size == 0 {\n\t\tbreak\n\t}\n\n\toffset += int64(sz)\n\tptr = (*[maxAllocSize]byte)(unsafe.Pointer(&ptr[sz]))\n}",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 13 ],
      "in-vars" : [ 22, 5, 1, 16, 18, 3 ],
      "exit" : false,
      "out-vars" : [ 3, 22, 17, 5, 1, 16, 18 ],
      "decl-vars" : [ 17 ],
      "line-start" : 514,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "sz"
          }
        } ],
        "right" : [ {
          "go-type" : 15,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "size",
            "variable" : 16
          }
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 514,
      "code" : "sz := size",
      "entry" : false,
      "use-vars" : [ 16 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 14, 15 ],
      "in-vars" : [ 1, 16, 18, 3, 22, 17, 5 ],
      "exit" : false,
      "out-vars" : [ 3, 22, 17, 5, 1, 16, 18 ],
      "decl-vars" : [ ],
      "line-start" : 515,
      "ast" : {
        "condition" : {
          "go-type" : 160,
          "kind" : "expression",
          "left" : {
            "go-type" : 15,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "sz",
              "variable" : 17
            }
          },
          "operator" : ">",
          "right" : {
            "go-type" : 15,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "2147483646"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 517,
      "code" : "if sz > maxAllocSize-1 {\n\tsz = maxAllocSize - 1\n}",
      "entry" : false,
      "use-vars" : [ 17 ]
    }, {
      "update-vars" : [ 17 ],
      "successors" : [ 15 ],
      "in-vars" : [ 1, 16, 18, 3, 22, 5 ],
      "exit" : false,
      "out-vars" : [ 22, 17, 5, 1, 16, 18, 3 ],
      "decl-vars" : [ ],
      "line-start" : 516,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 15,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "sz",
            "variable" : 17
          }
        } ],
        "right" : [ {
          "go-type" : 15,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "2147483646"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 17 ],
      "line-end" : 516,
      "code" : "sz = maxAllocSize - 1",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 17 ],
      "in-vars" : [ 5, 1, 16, 18, 3, 22, 17 ],
      "exit" : false,
      "out-vars" : [ 22, 17, 5, 1, 16, 18, 3, 21 ],
      "decl-vars" : [ 21 ],
      "line-start" : 520,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "buf"
          }
        } ],
        "right" : [ {
          "go-type" : 42,
          "type" : "slice",
          "three" : false,
          "high" : {
            "go-type" : 15,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "sz",
              "variable" : 17
            }
          },
          "max" : null,
          "kind" : "expression",
          "low" : null,
          "target" : {
            "go-type" : 157,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "ptr",
              "variable" : 18
            }
          }
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 520,
      "code" : "buf := ptr[:sz]",
      "entry" : false,
      "use-vars" : [ 18, 17 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 18, 19 ],
      "in-vars" : [ 5, 1, 23, 16, 18, 3, 22, 17 ],
      "exit" : false,
      "out-vars" : [ 16, 18, 3, 22, 17, 5, 1, 23 ],
      "decl-vars" : [ ],
      "line-start" : 521,
      "ast" : {
        "condition" : {
          "go-type" : 160,
          "kind" : "expression",
          "left" : {
            "go-type" : 3,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 23
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 161,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 523,
      "code" : "if _, err := tx.db.ops.writeAt(buf, offset); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 23 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 16 ],
      "in-vars" : [ 22, 17, 5, 1, 16, 18, 3, 21 ],
      "exit" : false,
      "out-vars" : [ 22, 17, 5, 1, 23, 16, 18, 3 ],
      "decl-vars" : [ 23, 27 ],
      "line-start" : 521,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "_"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 42,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "buf",
              "variable" : 21
            }
          }, {
            "go-type" : 17,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "offset",
              "variable" : 22
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "writeAt",
              "variable" : 20
            },
            "go-type" : 114,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ops",
                "variable" : 19
              },
              "go-type" : 113,
              "kind" : "expression",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "db",
                  "variable" : 13
                },
                "go-type" : 12,
                "kind" : "expression",
                "target" : {
                  "go-type" : 8,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "tx",
                    "variable" : 1
                  }
                },
                "type" : "selector"
              },
              "type" : "selector"
            },
            "type" : "selector"
          },
          "go-type" : 116,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 521,
      "code" : "_, err := tx.db.ops.writeAt(buf, offset)",
      "entry" : false,
      "use-vars" : [ 21, 22, 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 23 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 522,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 23
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 522,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 23 ]
    }, {
      "update-vars" : [ 1 ],
      "successors" : [ 20 ],
      "in-vars" : [ 16, 18, 3, 22, 17, 5, 1 ],
      "exit" : false,
      "out-vars" : [ 17, 5, 1, 16, 18, 3, 22 ],
      "decl-vars" : [ ],
      "line-start" : 526,
      "ast" : {
        "kind" : "statement",
        "operation" : "++",
        "target" : {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Write",
            "variable" : 25
          },
          "go-type" : 15,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "stats",
              "variable" : 24
            },
            "go-type" : 55,
            "kind" : "expression",
            "target" : {
              "go-type" : 8,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "tx",
                "variable" : 1
              }
            },
            "type" : "selector"
          },
          "type" : "selector"
        },
        "type" : "crement"
      },
      "assign-vars" : [ ],
      "line-end" : 526,
      "code" : "tx.stats.Write++",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ 16 ],
      "successors" : [ 21 ],
      "in-vars" : [ 3, 22, 17, 5, 1, 16, 18 ],
      "exit" : false,
      "out-vars" : [ 18, 3, 22, 17, 5, 1, 16 ],
      "decl-vars" : [ ],
      "line-start" : 529,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 15,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "size",
            "variable" : 16
          }
        } ],
        "operator" : "-",
        "right" : [ {
          "go-type" : 15,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "sz",
            "variable" : 17
          }
        } ],
        "type" : "assign-operator"
      },
      "assign-vars" : [ 16 ],
      "line-end" : 529,
      "code" : "size -= sz",
      "entry" : false,
      "use-vars" : [ 17, 16 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 22, 23 ],
      "in-vars" : [ 17, 5, 1, 16, 18, 3, 22 ],
      "exit" : false,
      "out-vars" : [ 5, 1, 16, 18, 3, 22, 17 ],
      "decl-vars" : [ ],
      "line-start" : 530,
      "ast" : {
        "condition" : {
          "go-type" : 160,
          "kind" : "expression",
          "left" : {
            "go-type" : 15,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "size",
              "variable" : 16
            }
          },
          "operator" : "==",
          "right" : {
            "go-type" : 15,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 532,
      "code" : "if size == 0 {\n\tbreak\n}",
      "entry" : false,
      "use-vars" : [ 16 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 7 ],
      "in-vars" : [ 5, 1, 3 ],
      "exit" : false,
      "out-vars" : [ 5, 1, 3 ],
      "decl-vars" : [ ],
      "line-start" : 531,
      "ast" : {
        "kind" : "statement",
        "label" : null,
        "type" : "break"
      },
      "assign-vars" : [ ],
      "line-end" : 531,
      "code" : "break",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 22 ],
      "successors" : [ 24 ],
      "in-vars" : [ 3, 22, 17, 5, 1, 16, 18 ],
      "exit" : false,
      "out-vars" : [ 16, 18, 3, 22, 17, 5, 1 ],
      "decl-vars" : [ ],
      "line-start" : 535,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 17,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "offset",
            "variable" : 22
          }
        } ],
        "operator" : "+",
        "right" : [ {
          "coerced-to" : {
            "go-type" : 17,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 17,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "int64"
            }
          },
          "go-type" : 17,
          "kind" : "expression",
          "target" : {
            "go-type" : 15,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "sz",
              "variable" : 17
            }
          },
          "type" : "cast"
        } ],
        "type" : "assign-operator"
      },
      "assign-vars" : [ 22 ],
      "line-end" : 535,
      "code" : "offset += int64(sz)",
      "entry" : false,
      "use-vars" : [ 17, 22 ]
    }, {
      "update-vars" : [ 18 ],
      "successors" : [ 11 ],
      "in-vars" : [ 22, 17, 5, 1, 16, 18, 3 ],
      "exit" : false,
      "out-vars" : [ 5, 1, 16, 18, 3, 22 ],
      "decl-vars" : [ ],
      "line-start" : 536,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 157,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ptr",
            "variable" : 18
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "element" : {
                "go-type" : 38,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 38,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "byte"
                }
              },
              "go-type" : 158,
              "kind" : "type",
              "length" : {
                "go-type" : 159,
                "kind" : "constant",
                "value" : {
                  "type" : "INT",
                  "value" : "2147483647"
                }
              },
              "type" : "array"
            },
            "go-type" : 157,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 157,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 77,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 77,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 77,
            "kind" : "expression",
            "target" : {
              "go-type" : 37,
              "kind" : "expression",
              "operator" : "&",
              "target" : {
                "go-type" : 38,
                "index" : {
                  "go-type" : 15,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "sz",
                    "variable" : 17
                  }
                },
                "kind" : "expression",
                "target" : {
                  "go-type" : 157,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "ptr",
                    "variable" : 18
                  }
                },
                "type" : "index"
              },
              "type" : "unary"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 18 ],
      "line-end" : 536,
      "code" : "ptr = (*[maxAllocSize]byte)(unsafe.Pointer(&ptr[sz]))",
      "entry" : false,
      "use-vars" : [ 17, 18 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 27, 29 ],
      "in-vars" : [ 5, 1, 3 ],
      "exit" : false,
      "out-vars" : [ 1, 3, 5 ],
      "decl-vars" : [ ],
      "line-start" : 541,
      "ast" : {
        "condition" : {
          "go-type" : 11,
          "kind" : "expression",
          "left" : {
            "go-type" : 11,
            "kind" : "expression",
            "operator" : "!",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "NoSync",
                "variable" : 28
              },
              "go-type" : 11,
              "kind" : "expression",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "db",
                  "variable" : 13
                },
                "go-type" : 12,
                "kind" : "expression",
                "target" : {
                  "go-type" : 8,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "tx",
                    "variable" : 1
                  }
                },
                "type" : "selector"
              },
              "type" : "selector"
            },
            "type" : "unary"
          },
          "operator" : "||",
          "right" : {
            "go-type" : 11,
            "kind" : "constant",
            "value" : {
              "type" : "BOOL",
              "value" : "false"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 545,
      "code" : "if !tx.db.NoSync || IgnoreNoSync {\n\tif err := fdatasync(tx.db); err != nil {\n\t\treturn err\n\t}\n}",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 28, 29 ],
      "in-vars" : [ 5, 1, 29, 3 ],
      "exit" : false,
      "out-vars" : [ 5, 1, 29, 3 ],
      "decl-vars" : [ ],
      "line-start" : 542,
      "ast" : {
        "condition" : {
          "go-type" : 160,
          "kind" : "expression",
          "left" : {
            "go-type" : 3,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 29
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 161,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 544,
      "code" : "if err := fdatasync(tx.db); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 29 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 26 ],
      "in-vars" : [ 3, 5, 1 ],
      "exit" : false,
      "out-vars" : [ 5, 1, 29, 3 ],
      "decl-vars" : [ 29 ],
      "line-start" : 542,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "db",
              "variable" : 13
            },
            "go-type" : 12,
            "kind" : "expression",
            "target" : {
              "go-type" : 8,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "tx",
                "variable" : 1
              }
            },
            "type" : "selector"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 162,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "fdatasync"
            }
          },
          "go-type" : 3,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 542,
      "code" : "err := fdatasync(tx.db)",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 29 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 543,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 29
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 543,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 29 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 30, 36 ],
      "in-vars" : [ 5, 1, 3 ],
      "exit" : false,
      "out-vars" : [ 5, 1, 3, 30 ],
      "decl-vars" : [ 33, 30 ],
      "line-start" : 548,
      "ast" : {
        "is-assign" : false,
        "key" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "_"
          }
        },
        "kind" : "statement",
        "target" : {
          "go-type" : 140,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "pages",
            "variable" : 5
          }
        },
        "type" : "range",
        "value" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "p"
          }
        }
      },
      "assign-vars" : [ ],
      "line-end" : 562,
      "code" : "for _, p := range pages {\n\n\tif int(p.overflow) != 0 {\n\t\tcontinue\n\t}\n\n\tbuf := (*[maxAllocSize]byte)(unsafe.Pointer(p))[:tx.db.pageSize]\n\n\tfor i := range buf {\n\t\tbuf[i] = 0\n\t}\n\ttx.db.pagePool.Put(buf)\n}",
      "entry" : false,
      "use-vars" : [ 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 31, 32 ],
      "in-vars" : [ 5, 1, 3, 30 ],
      "exit" : false,
      "out-vars" : [ 3, 30, 5, 1 ],
      "decl-vars" : [ ],
      "line-start" : 551,
      "ast" : {
        "condition" : {
          "go-type" : 160,
          "kind" : "expression",
          "left" : {
            "coerced-to" : {
              "go-type" : 15,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 15,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "int"
              }
            },
            "go-type" : 15,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "overflow",
                "variable" : 12
              },
              "go-type" : 29,
              "kind" : "expression",
              "target" : {
                "go-type" : 122,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "p",
                  "variable" : 30
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 15,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 553,
      "code" : "if int(p.overflow) != 0 {\n\tcontinue\n}",
      "entry" : false,
      "use-vars" : [ 30 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 33 ],
      "in-vars" : [ 5, 1, 3 ],
      "exit" : false,
      "out-vars" : [ 1, 3, 5 ],
      "decl-vars" : [ ],
      "line-start" : 552,
      "ast" : {
        "kind" : "statement",
        "label" : null,
        "type" : "continue"
      },
      "assign-vars" : [ ],
      "line-end" : 552,
      "code" : "continue",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 33 ],
      "in-vars" : [ 5, 1, 30 ],
      "exit" : false,
      "out-vars" : [ 1, 3, 5 ],
      "decl-vars" : [ 3 ],
      "line-start" : 555,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "buf"
          }
        } ],
        "right" : [ {
          "go-type" : 42,
          "type" : "slice",
          "three" : false,
          "high" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "pageSize",
              "variable" : 14
            },
            "go-type" : 15,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "db",
                "variable" : 13
              },
              "go-type" : 12,
              "kind" : "expression",
              "target" : {
                "go-type" : 8,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "tx",
                  "variable" : 1
                }
              },
              "type" : "selector"
            },
            "type" : "selector"
          },
          "max" : null,
          "kind" : "expression",
          "low" : null,
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 38,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 38,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "byte"
                  }
                },
                "go-type" : 158,
                "kind" : "type",
                "length" : {
                  "go-type" : 159,
                  "kind" : "constant",
                  "value" : {
                    "type" : "INT",
                    "value" : "2147483647"
                  }
                },
                "type" : "array"
              },
              "go-type" : 157,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 157,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 77,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 6,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 77,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 77,
              "kind" : "expression",
              "target" : {
                "go-type" : 122,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "p",
                  "variable" : 30
                }
              },
              "type" : "cast"
            },
            "type" : "cast"
          }
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 555,
      "code" : "buf := (*[maxAllocSize]byte)(unsafe.Pointer(p))[:tx.db.pageSize]",
      "entry" : false,
      "use-vars" : [ 30, 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 34, 35 ],
      "in-vars" : [ 5, 1, 3 ],
      "exit" : false,
      "out-vars" : [ 31, 5, 1, 3 ],
      "decl-vars" : [ 31 ],
      "line-start" : 558,
      "ast" : {
        "is-assign" : false,
        "key" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "i"
          }
        },
        "kind" : "statement",
        "target" : {
          "go-type" : 42,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "buf",
            "variable" : 3
          }
        },
        "type" : "range",
        "value" : null
      },
      "assign-vars" : [ ],
      "line-end" : 560,
      "code" : "for i := range buf {\n\tbuf[i] = 0\n}",
      "entry" : false,
      "use-vars" : [ 3 ]
    }, {
      "update-vars" : [ 3 ],
      "successors" : [ 33 ],
      "in-vars" : [ 3, 31, 5, 1 ],
      "exit" : false,
      "out-vars" : [ 1, 3, 5 ],
      "decl-vars" : [ ],
      "line-start" : 559,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 38,
          "index" : {
            "go-type" : 15,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "i",
              "variable" : 31
            }
          },
          "kind" : "expression",
          "target" : {
            "go-type" : 42,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "buf",
              "variable" : 3
            }
          },
          "type" : "index"
        } ],
        "right" : [ {
          "go-type" : 38,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "0"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 559,
      "code" : "buf[i] = 0",
      "entry" : false,
      "use-vars" : [ 3, 31 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 29 ],
      "in-vars" : [ 5, 1, 3 ],
      "exit" : false,
      "out-vars" : [ 1, 3, 5 ],
      "decl-vars" : [ ],
      "line-start" : 561,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 42,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "buf",
              "variable" : 3
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Put"
            },
            "go-type" : 164,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "pagePool",
                "variable" : 32
              },
              "go-type" : 73,
              "kind" : "expression",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "db",
                  "variable" : 13
                },
                "go-type" : 12,
                "kind" : "expression",
                "target" : {
                  "go-type" : 8,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "tx",
                    "variable" : 1
                  }
                },
                "type" : "selector"
              },
              "type" : "selector"
            },
            "type" : "selector"
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 561,
      "code" : "tx.db.pagePool.Put(buf)",
      "entry" : false,
      "use-vars" : [ 1, 3 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 564,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 161,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 564,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "// write writes any dirty pages to disk.\nfunc (tx *Tx) write() error {\n\n\tpages := make(pages, 0, len(tx.pages))\n\tfor _, p := range tx.pages {\n\t\tpages = append(pages, p)\n\t}\n\n\ttx.pages = make(map[pgid]*page)\n\tsort.Sort(pages)\n\n\tfor _, p := range pages {\n\t\tsize := (int(p.overflow) + 1) * tx.db.pageSize\n\t\toffset := int64(p.id) * int64(tx.db.pageSize)\n\n\t\tptr := (*[maxAllocSize]byte)(unsafe.Pointer(p))\n\t\tfor {\n\n\t\t\tsz := size\n\t\t\tif sz > maxAllocSize-1 {\n\t\t\t\tsz = maxAllocSize - 1\n\t\t\t}\n\n\t\t\tbuf := ptr[:sz]\n\t\t\tif _, err := tx.db.ops.writeAt(buf, offset); err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\n\t\t\ttx.stats.Write++\n\n\t\t\tsize -= sz\n\t\t\tif size == 0 {\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\toffset += int64(sz)\n\t\t\tptr = (*[maxAllocSize]byte)(unsafe.Pointer(&ptr[sz]))\n\t\t}\n\t}\n\n\tif !tx.db.NoSync || IgnoreNoSync {\n\t\tif err := fdatasync(tx.db); err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\n\tfor _, p := range pages {\n\n\t\tif int(p.overflow) != 0 {\n\t\t\tcontinue\n\t\t}\n\n\t\tbuf := (*[maxAllocSize]byte)(unsafe.Pointer(p))[:tx.db.pageSize]\n\n\t\tfor i := range buf {\n\t\t\tbuf[i] = 0\n\t\t}\n\t\ttx.db.pagePool.Put(buf)\n\t}\n\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "write",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "Sort",
      "package" : 7,
      "type" : 148,
      "exported" : true
    }, {
      "name" : "fdatasync",
      "package" : 0,
      "type" : 162,
      "exported" : false
    }, {
      "name" : "Put",
      "package" : 5,
      "type" : 164,
      "exported" : true
    } ],
    "line-end" : 565,
    "line-start" : 495,
    "names" : [ "write" ],
    "package" : 0,
    "packages" : [ {
      "name" : "bolt",
      "path" : "github.com/coreos/bbolt"
    }, {
      "name" : "time",
      "path" : "time"
    }, {
      "name" : "os",
      "path" : "os"
    }, {
      "name" : "poll",
      "path" : "internal/poll"
    }, {
      "name" : "syscall",
      "path" : "syscall"
    }, {
      "name" : "sync",
      "path" : "sync"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "sort",
      "path" : "sort"
    } ],
    "params" : [ ],
    "receivers" : [ 1 ],
    "results" : [ 2 ],
    "type" : "function",
    "types" : [ {
      "name" : "func() error",
      "params" : 1,
      "recv" : 1,
      "results" : 2,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 3
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 2
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 4
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 5
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 4
    }, {
      "name" : "func() string",
      "params" : 1,
      "recv" : 0,
      "results" : 6,
      "type" : "Signature",
      "underlying" : 5,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 7
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 6
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 7
    }, {
      "elem" : 9,
      "name" : "*github.com/coreos/bbolt.Tx",
      "type" : "Pointer",
      "underlying" : 8
    }, {
      "local-name" : "Tx",
      "name" : "github.com/coreos/bbolt.Tx",
      "package" : 0,
      "type" : "Named",
      "underlying" : 10
    }, {
      "fields" : [ {
        "name" : "writable",
        "type" : 11
      }, {
        "name" : "managed",
        "type" : 11
      }, {
        "name" : "db",
        "type" : 12
      }, {
        "name" : "meta",
        "type" : 45
      }, {
        "name" : "root",
        "type" : 117
      }, {
        "name" : "pages",
        "type" : 137
      }, {
        "name" : "stats",
        "type" : 55
      }, {
        "name" : "commitHandlers",
        "type" : 138
      }, {
        "name" : "WriteFlag",
        "type" : 15
      } ],
      "name" : "struct{writable bool; managed bool; db *github.com/coreos/bbolt.DB; meta *github.com/coreos/bbolt.meta; root github.com/coreos/bbolt.Bucket; pages map[github.com/coreos/bbolt.pgid]*github.com/coreos/bbolt.page; stats github.com/coreos/bbolt.TxStats; commitHandlers []func(); WriteFlag int}",
      "type" : "Struct",
      "underlying" : 10
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 11
    }, {
      "elem" : 13,
      "name" : "*github.com/coreos/bbolt.DB",
      "type" : "Pointer",
      "underlying" : 12
    }, {
      "local-name" : "DB",
      "name" : "github.com/coreos/bbolt.DB",
      "package" : 0,
      "type" : "Named",
      "underlying" : 14
    }, {
      "fields" : [ {
        "name" : "StrictMode",
        "type" : 11
      }, {
        "name" : "NoSync",
        "type" : 11
      }, {
        "name" : "NoFreelistSync",
        "type" : 11
      }, {
        "name" : "NoGrowSync",
        "type" : 11
      }, {
        "name" : "MmapFlags",
        "type" : 15
      }, {
        "name" : "MaxBatchSize",
        "type" : 15
      }, {
        "name" : "MaxBatchDelay",
        "type" : 16
      }, {
        "name" : "AllocSize",
        "type" : 15
      }, {
        "name" : "path",
        "type" : 7
      }, {
        "name" : "file",
        "type" : 18
      }, {
        "name" : "lockfile",
        "type" : 18
      }, {
        "name" : "dataref",
        "type" : 42
      }, {
        "name" : "data",
        "type" : 43
      }, {
        "name" : "datasz",
        "type" : 15
      }, {
        "name" : "filesz",
        "type" : 15
      }, {
        "name" : "meta0",
        "type" : 45
      }, {
        "name" : "meta1",
        "type" : 45
      }, {
        "name" : "pageSize",
        "type" : 15
      }, {
        "name" : "opened",
        "type" : 11
      }, {
        "name" : "rwtx",
        "type" : 8
      }, {
        "name" : "txs",
        "type" : 52
      }, {
        "name" : "stats",
        "type" : 53
      }, {
        "name" : "freelist",
        "type" : 57
      }, {
        "name" : "freelistLoad",
        "type" : 68
      }, {
        "name" : "pagePool",
        "type" : 73
      }, {
        "name" : "batchMu",
        "type" : 70
      }, {
        "name" : "batch",
        "type" : 81
      }, {
        "name" : "rwlock",
        "type" : 70
      }, {
        "name" : "metalock",
        "type" : 70
      }, {
        "name" : "mmaplock",
        "type" : 111
      }, {
        "name" : "statlock",
        "type" : 111
      }, {
        "name" : "ops",
        "type" : 113
      }, {
        "name" : "readOnly",
        "type" : 11
      } ],
      "name" : "struct{StrictMode bool; NoSync bool; NoFreelistSync bool; NoGrowSync bool; MmapFlags int; MaxBatchSize int; MaxBatchDelay time.Duration; AllocSize int; path string; file *os.File; lockfile *os.File; dataref []byte; data *[281474976710655]byte; datasz int; filesz int; meta0 *github.com/coreos/bbolt.meta; meta1 *github.com/coreos/bbolt.meta; pageSize int; opened bool; rwtx *github.com/coreos/bbolt.Tx; txs []*github.com/coreos/bbolt.Tx; stats github.com/coreos/bbolt.Stats; freelist *github.com/coreos/bbolt.freelist; freelistLoad sync.Once; pagePool sync.Pool; batchMu sync.Mutex; batch *github.com/coreos/bbolt.batch; rwlock sync.Mutex; metalock sync.Mutex; mmaplock sync.RWMutex; statlock sync.RWMutex; ops struct{writeAt func(b []byte, off int64) (n int, err error)}; readOnly bool}",
      "type" : "Struct",
      "underlying" : 14
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 15
    }, {
      "local-name" : "Duration",
      "name" : "time.Duration",
      "package" : 1,
      "type" : "Named",
      "underlying" : 17
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 17
    }, {
      "elem" : 19,
      "name" : "*os.File",
      "type" : "Pointer",
      "underlying" : 18
    }, {
      "local-name" : "File",
      "name" : "os.File",
      "package" : 2,
      "type" : "Named",
      "underlying" : 20
    }, {
      "fields" : [ {
        "name" : "file",
        "type" : 21
      } ],
      "name" : "struct{*os.file}",
      "type" : "Struct",
      "underlying" : 20
    }, {
      "elem" : 22,
      "name" : "*os.file",
      "type" : "Pointer",
      "underlying" : 21
    }, {
      "local-name" : "file",
      "name" : "os.file",
      "package" : 2,
      "type" : "Named",
      "underlying" : 23
    }, {
      "fields" : [ {
        "name" : "pfd",
        "type" : 24
      }, {
        "name" : "name",
        "type" : 7
      }, {
        "name" : "dirinfo",
        "type" : 39
      }, {
        "name" : "nonblock",
        "type" : 11
      }, {
        "name" : "stdoutOrErr",
        "type" : 11
      }, {
        "name" : "appendMode",
        "type" : 11
      } ],
      "name" : "struct{pfd internal/poll.FD; name string; dirinfo *os.dirInfo; nonblock bool; stdoutOrErr bool; appendMode bool}",
      "type" : "Struct",
      "underlying" : 23
    }, {
      "local-name" : "FD",
      "name" : "internal/poll.FD",
      "package" : 3,
      "type" : "Named",
      "underlying" : 25
    }, {
      "fields" : [ {
        "name" : "fdmu",
        "type" : 26
      }, {
        "name" : "Sysfd",
        "type" : 15
      }, {
        "name" : "pd",
        "type" : 30
      }, {
        "name" : "iovecs",
        "type" : 33
      }, {
        "name" : "csema",
        "type" : 29
      }, {
        "name" : "isBlocking",
        "type" : 29
      }, {
        "name" : "IsStream",
        "type" : 11
      }, {
        "name" : "ZeroReadIsEOF",
        "type" : 11
      }, {
        "name" : "isFile",
        "type" : 11
      } ],
      "name" : "struct{fdmu internal/poll.fdMutex; Sysfd int; pd internal/poll.pollDesc; iovecs *[]syscall.Iovec; csema uint32; isBlocking uint32; IsStream bool; ZeroReadIsEOF bool; isFile bool}",
      "type" : "Struct",
      "underlying" : 25
    }, {
      "local-name" : "fdMutex",
      "name" : "internal/poll.fdMutex",
      "package" : 3,
      "type" : "Named",
      "underlying" : 27
    }, {
      "fields" : [ {
        "name" : "state",
        "type" : 28
      }, {
        "name" : "rsema",
        "type" : 29
      }, {
        "name" : "wsema",
        "type" : 29
      } ],
      "name" : "struct{state uint64; rsema uint32; wsema uint32}",
      "type" : "Struct",
      "underlying" : 27
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 28
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 29
    }, {
      "local-name" : "pollDesc",
      "name" : "internal/poll.pollDesc",
      "package" : 3,
      "type" : "Named",
      "underlying" : 31
    }, {
      "fields" : [ {
        "name" : "runtimeCtx",
        "type" : 32
      } ],
      "name" : "struct{runtimeCtx uintptr}",
      "type" : "Struct",
      "underlying" : 31
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 32
    }, {
      "elem" : 34,
      "name" : "*[]syscall.Iovec",
      "type" : "Pointer",
      "underlying" : 33
    }, {
      "elem" : 35,
      "name" : "[]syscall.Iovec",
      "type" : "Slice",
      "underlying" : 34
    }, {
      "local-name" : "Iovec",
      "name" : "syscall.Iovec",
      "package" : 4,
      "type" : "Named",
      "underlying" : 36
    }, {
      "fields" : [ {
        "name" : "Base",
        "type" : 37
      }, {
        "name" : "Len",
        "type" : 28
      } ],
      "name" : "struct{Base *byte; Len uint64}",
      "type" : "Struct",
      "underlying" : 36
    }, {
      "elem" : 38,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 37
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 38
    }, {
      "elem" : 40,
      "name" : "*os.dirInfo",
      "type" : "Pointer",
      "underlying" : 39
    }, {
      "local-name" : "dirInfo",
      "name" : "os.dirInfo",
      "package" : 2,
      "type" : "Named",
      "underlying" : 41
    }, {
      "fields" : [ {
        "name" : "buf",
        "type" : 42
      }, {
        "name" : "nbuf",
        "type" : 15
      }, {
        "name" : "bufp",
        "type" : 15
      } ],
      "name" : "struct{buf []byte; nbuf int; bufp int}",
      "type" : "Struct",
      "underlying" : 41
    }, {
      "elem" : 38,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 42
    }, {
      "elem" : 44,
      "name" : "*[281474976710655]byte",
      "type" : "Pointer",
      "underlying" : 43
    }, {
      "elem" : 38,
      "name" : "[281474976710655]byte",
      "type" : "Array",
      "underlying" : 44
    }, {
      "elem" : 46,
      "name" : "*github.com/coreos/bbolt.meta",
      "type" : "Pointer",
      "underlying" : 45
    }, {
      "local-name" : "meta",
      "name" : "github.com/coreos/bbolt.meta",
      "package" : 0,
      "type" : "Named",
      "underlying" : 47
    }, {
      "fields" : [ {
        "name" : "magic",
        "type" : 29
      }, {
        "name" : "version",
        "type" : 29
      }, {
        "name" : "pageSize",
        "type" : 29
      }, {
        "name" : "flags",
        "type" : 29
      }, {
        "name" : "root",
        "type" : 48
      }, {
        "name" : "freelist",
        "type" : 50
      }, {
        "name" : "pgid",
        "type" : 50
      }, {
        "name" : "txid",
        "type" : 51
      }, {
        "name" : "checksum",
        "type" : 28
      } ],
      "name" : "struct{magic uint32; version uint32; pageSize uint32; flags uint32; root github.com/coreos/bbolt.bucket; freelist github.com/coreos/bbolt.pgid; pgid github.com/coreos/bbolt.pgid; txid github.com/coreos/bbolt.txid; checksum uint64}",
      "type" : "Struct",
      "underlying" : 47
    }, {
      "local-name" : "bucket",
      "name" : "github.com/coreos/bbolt.bucket",
      "package" : 0,
      "type" : "Named",
      "underlying" : 49
    }, {
      "fields" : [ {
        "name" : "root",
        "type" : 50
      }, {
        "name" : "sequence",
        "type" : 28
      } ],
      "name" : "struct{root github.com/coreos/bbolt.pgid; sequence uint64}",
      "type" : "Struct",
      "underlying" : 49
    }, {
      "local-name" : "pgid",
      "name" : "github.com/coreos/bbolt.pgid",
      "package" : 0,
      "type" : "Named",
      "underlying" : 28
    }, {
      "local-name" : "txid",
      "name" : "github.com/coreos/bbolt.txid",
      "package" : 0,
      "type" : "Named",
      "underlying" : 28
    }, {
      "elem" : 8,
      "name" : "[]*github.com/coreos/bbolt.Tx",
      "type" : "Slice",
      "underlying" : 52
    }, {
      "local-name" : "Stats",
      "name" : "github.com/coreos/bbolt.Stats",
      "package" : 0,
      "type" : "Named",
      "underlying" : 54
    }, {
      "fields" : [ {
        "name" : "FreePageN",
        "type" : 15
      }, {
        "name" : "PendingPageN",
        "type" : 15
      }, {
        "name" : "FreeAlloc",
        "type" : 15
      }, {
        "name" : "FreelistInuse",
        "type" : 15
      }, {
        "name" : "TxN",
        "type" : 15
      }, {
        "name" : "OpenTxN",
        "type" : 15
      }, {
        "name" : "TxStats",
        "type" : 55
      } ],
      "name" : "struct{FreePageN int; PendingPageN int; FreeAlloc int; FreelistInuse int; TxN int; OpenTxN int; TxStats github.com/coreos/bbolt.TxStats}",
      "type" : "Struct",
      "underlying" : 54
    }, {
      "local-name" : "TxStats",
      "name" : "github.com/coreos/bbolt.TxStats",
      "package" : 0,
      "type" : "Named",
      "underlying" : 56
    }, {
      "fields" : [ {
        "name" : "PageCount",
        "type" : 15
      }, {
        "name" : "PageAlloc",
        "type" : 15
      }, {
        "name" : "CursorCount",
        "type" : 15
      }, {
        "name" : "NodeCount",
        "type" : 15
      }, {
        "name" : "NodeDeref",
        "type" : 15
      }, {
        "name" : "Rebalance",
        "type" : 15
      }, {
        "name" : "RebalanceTime",
        "type" : 16
      }, {
        "name" : "Split",
        "type" : 15
      }, {
        "name" : "Spill",
        "type" : 15
      }, {
        "name" : "SpillTime",
        "type" : 16
      }, {
        "name" : "Write",
        "type" : 15
      }, {
        "name" : "WriteTime",
        "type" : 16
      } ],
      "name" : "struct{PageCount int; PageAlloc int; CursorCount int; NodeCount int; NodeDeref int; Rebalance int; RebalanceTime time.Duration; Split int; Spill int; SpillTime time.Duration; Write int; WriteTime time.Duration}",
      "type" : "Struct",
      "underlying" : 56
    }, {
      "elem" : 58,
      "name" : "*github.com/coreos/bbolt.freelist",
      "type" : "Pointer",
      "underlying" : 57
    }, {
      "local-name" : "freelist",
      "name" : "github.com/coreos/bbolt.freelist",
      "package" : 0,
      "type" : "Named",
      "underlying" : 59
    }, {
      "fields" : [ {
        "name" : "ids",
        "type" : 60
      }, {
        "name" : "allocs",
        "type" : 61
      }, {
        "name" : "pending",
        "type" : 62
      }, {
        "name" : "cache",
        "type" : 67
      } ],
      "name" : "struct{ids []github.com/coreos/bbolt.pgid; allocs map[github.com/coreos/bbolt.pgid]github.com/coreos/bbolt.txid; pending map[github.com/coreos/bbolt.txid]*github.com/coreos/bbolt.txPending; cache map[github.com/coreos/bbolt.pgid]bool}",
      "type" : "Struct",
      "underlying" : 59
    }, {
      "elem" : 50,
      "name" : "[]github.com/coreos/bbolt.pgid",
      "type" : "Slice",
      "underlying" : 60
    }, {
      "elem" : 51,
      "key" : 50,
      "name" : "map[github.com/coreos/bbolt.pgid]github.com/coreos/bbolt.txid",
      "type" : "Map",
      "underlying" : 61
    }, {
      "elem" : 63,
      "key" : 51,
      "name" : "map[github.com/coreos/bbolt.txid]*github.com/coreos/bbolt.txPending",
      "type" : "Map",
      "underlying" : 62
    }, {
      "elem" : 64,
      "name" : "*github.com/coreos/bbolt.txPending",
      "type" : "Pointer",
      "underlying" : 63
    }, {
      "local-name" : "txPending",
      "name" : "github.com/coreos/bbolt.txPending",
      "package" : 0,
      "type" : "Named",
      "underlying" : 65
    }, {
      "fields" : [ {
        "name" : "ids",
        "type" : 60
      }, {
        "name" : "alloctx",
        "type" : 66
      }, {
        "name" : "lastReleaseBegin",
        "type" : 51
      } ],
      "name" : "struct{ids []github.com/coreos/bbolt.pgid; alloctx []github.com/coreos/bbolt.txid; lastReleaseBegin github.com/coreos/bbolt.txid}",
      "type" : "Struct",
      "underlying" : 65
    }, {
      "elem" : 51,
      "name" : "[]github.com/coreos/bbolt.txid",
      "type" : "Slice",
      "underlying" : 66
    }, {
      "elem" : 11,
      "key" : 50,
      "name" : "map[github.com/coreos/bbolt.pgid]bool",
      "type" : "Map",
      "underlying" : 67
    }, {
      "local-name" : "Once",
      "name" : "sync.Once",
      "package" : 5,
      "type" : "Named",
      "underlying" : 69
    }, {
      "fields" : [ {
        "name" : "done",
        "type" : 29
      }, {
        "name" : "m",
        "type" : 70
      } ],
      "name" : "struct{done uint32; m sync.Mutex}",
      "type" : "Struct",
      "underlying" : 69
    }, {
      "local-name" : "Mutex",
      "name" : "sync.Mutex",
      "package" : 5,
      "type" : "Named",
      "underlying" : 71
    }, {
      "fields" : [ {
        "name" : "state",
        "type" : 72
      }, {
        "name" : "sema",
        "type" : 29
      } ],
      "name" : "struct{state int32; sema uint32}",
      "type" : "Struct",
      "underlying" : 71
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 72
    }, {
      "local-name" : "Pool",
      "name" : "sync.Pool",
      "package" : 5,
      "type" : "Named",
      "underlying" : 74
    }, {
      "fields" : [ {
        "name" : "noCopy",
        "type" : 75
      }, {
        "name" : "local",
        "type" : 77
      }, {
        "name" : "localSize",
        "type" : 32
      }, {
        "name" : "victim",
        "type" : 77
      }, {
        "name" : "victimSize",
        "type" : 32
      }, {
        "name" : "New",
        "type" : 78
      } ],
      "name" : "struct{noCopy sync.noCopy; local unsafe.Pointer; localSize uintptr; victim unsafe.Pointer; victimSize uintptr; New func() interface{}}",
      "type" : "Struct",
      "underlying" : 74
    }, {
      "local-name" : "noCopy",
      "name" : "sync.noCopy",
      "package" : 5,
      "type" : "Named",
      "underlying" : 76
    }, {
      "fields" : [ ],
      "name" : "struct{}",
      "type" : "Struct",
      "underlying" : 76
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 6,
      "type" : "Basic",
      "underlying" : 77
    }, {
      "name" : "func() interface{}",
      "params" : 1,
      "recv" : -1,
      "results" : 79,
      "type" : "Signature",
      "underlying" : 78,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 80
      } ],
      "name" : "(interface{})",
      "type" : "Tuple",
      "underlying" : 79
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 80
    }, {
      "elem" : 82,
      "name" : "*github.com/coreos/bbolt.batch",
      "type" : "Pointer",
      "underlying" : 81
    }, {
      "local-name" : "batch",
      "name" : "github.com/coreos/bbolt.batch",
      "package" : 0,
      "type" : "Named",
      "underlying" : 83
    }, {
      "fields" : [ {
        "name" : "db",
        "type" : 12
      }, {
        "name" : "timer",
        "type" : 84
      }, {
        "name" : "start",
        "type" : 68
      }, {
        "name" : "calls",
        "type" : 105
      } ],
      "name" : "struct{db *github.com/coreos/bbolt.DB; timer *time.Timer; start sync.Once; calls []github.com/coreos/bbolt.call}",
      "type" : "Struct",
      "underlying" : 83
    }, {
      "elem" : 85,
      "name" : "*time.Timer",
      "type" : "Pointer",
      "underlying" : 84
    }, {
      "local-name" : "Timer",
      "name" : "time.Timer",
      "package" : 1,
      "type" : "Named",
      "underlying" : 86
    }, {
      "fields" : [ {
        "name" : "C",
        "type" : 87
      }, {
        "name" : "r",
        "type" : 101
      } ],
      "name" : "struct{C <-chan time.Time; r time.runtimeTimer}",
      "type" : "Struct",
      "underlying" : 86
    }, {
      "dir" : "recv",
      "elem" : 88,
      "name" : "<-chan time.Time",
      "type" : "Chan",
      "underlying" : 87
    }, {
      "local-name" : "Time",
      "name" : "time.Time",
      "package" : 1,
      "type" : "Named",
      "underlying" : 89
    }, {
      "fields" : [ {
        "name" : "wall",
        "type" : 28
      }, {
        "name" : "ext",
        "type" : 17
      }, {
        "name" : "loc",
        "type" : 90
      } ],
      "name" : "struct{wall uint64; ext int64; loc *time.Location}",
      "type" : "Struct",
      "underlying" : 89
    }, {
      "elem" : 91,
      "name" : "*time.Location",
      "type" : "Pointer",
      "underlying" : 90
    }, {
      "local-name" : "Location",
      "name" : "time.Location",
      "package" : 1,
      "type" : "Named",
      "underlying" : 92
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 7
      }, {
        "name" : "zone",
        "type" : 93
      }, {
        "name" : "tx",
        "type" : 96
      }, {
        "name" : "cacheStart",
        "type" : 17
      }, {
        "name" : "cacheEnd",
        "type" : 17
      }, {
        "name" : "cacheZone",
        "type" : 100
      } ],
      "name" : "struct{name string; zone []time.zone; tx []time.zoneTrans; cacheStart int64; cacheEnd int64; cacheZone *time.zone}",
      "type" : "Struct",
      "underlying" : 92
    }, {
      "elem" : 94,
      "name" : "[]time.zone",
      "type" : "Slice",
      "underlying" : 93
    }, {
      "local-name" : "zone",
      "name" : "time.zone",
      "package" : 1,
      "type" : "Named",
      "underlying" : 95
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 7
      }, {
        "name" : "offset",
        "type" : 15
      }, {
        "name" : "isDST",
        "type" : 11
      } ],
      "name" : "struct{name string; offset int; isDST bool}",
      "type" : "Struct",
      "underlying" : 95
    }, {
      "elem" : 97,
      "name" : "[]time.zoneTrans",
      "type" : "Slice",
      "underlying" : 96
    }, {
      "local-name" : "zoneTrans",
      "name" : "time.zoneTrans",
      "package" : 1,
      "type" : "Named",
      "underlying" : 98
    }, {
      "fields" : [ {
        "name" : "when",
        "type" : 17
      }, {
        "name" : "index",
        "type" : 99
      }, {
        "name" : "isstd",
        "type" : 11
      }, {
        "name" : "isutc",
        "type" : 11
      } ],
      "name" : "struct{when int64; index uint8; isstd bool; isutc bool}",
      "type" : "Struct",
      "underlying" : 98
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 99
    }, {
      "elem" : 94,
      "name" : "*time.zone",
      "type" : "Pointer",
      "underlying" : 100
    }, {
      "local-name" : "runtimeTimer",
      "name" : "time.runtimeTimer",
      "package" : 1,
      "type" : "Named",
      "underlying" : 102
    }, {
      "fields" : [ {
        "name" : "pp",
        "type" : 32
      }, {
        "name" : "when",
        "type" : 17
      }, {
        "name" : "period",
        "type" : 17
      }, {
        "name" : "f",
        "type" : 103
      }, {
        "name" : "arg",
        "type" : 80
      }, {
        "name" : "seq",
        "type" : 32
      }, {
        "name" : "nextwhen",
        "type" : 17
      }, {
        "name" : "status",
        "type" : 29
      } ],
      "name" : "struct{pp uintptr; when int64; period int64; f func(interface{}, uintptr); arg interface{}; seq uintptr; nextwhen int64; status uint32}",
      "type" : "Struct",
      "underlying" : 102
    }, {
      "name" : "func(interface{}, uintptr)",
      "params" : 104,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 103,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 80
      }, {
        "name" : "",
        "type" : 32
      } ],
      "name" : "(interface{}, uintptr)",
      "type" : "Tuple",
      "underlying" : 104
    }, {
      "elem" : 106,
      "name" : "[]github.com/coreos/bbolt.call",
      "type" : "Slice",
      "underlying" : 105
    }, {
      "local-name" : "call",
      "name" : "github.com/coreos/bbolt.call",
      "package" : 0,
      "type" : "Named",
      "underlying" : 107
    }, {
      "fields" : [ {
        "name" : "fn",
        "type" : 108
      }, {
        "name" : "err",
        "type" : 110
      } ],
      "name" : "struct{fn func(*github.com/coreos/bbolt.Tx) error; err chan<- error}",
      "type" : "Struct",
      "underlying" : 107
    }, {
      "name" : "func(*github.com/coreos/bbolt.Tx) error",
      "params" : 109,
      "recv" : -1,
      "results" : 2,
      "type" : "Signature",
      "underlying" : 108,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 8
      } ],
      "name" : "(*github.com/coreos/bbolt.Tx)",
      "type" : "Tuple",
      "underlying" : 109
    }, {
      "dir" : "send",
      "elem" : 3,
      "name" : "chan<- error",
      "type" : "Chan",
      "underlying" : 110
    }, {
      "local-name" : "RWMutex",
      "name" : "sync.RWMutex",
      "package" : 5,
      "type" : "Named",
      "underlying" : 112
    }, {
      "fields" : [ {
        "name" : "w",
        "type" : 70
      }, {
        "name" : "writerSem",
        "type" : 29
      }, {
        "name" : "readerSem",
        "type" : 29
      }, {
        "name" : "readerCount",
        "type" : 72
      }, {
        "name" : "readerWait",
        "type" : 72
      } ],
      "name" : "struct{w sync.Mutex; writerSem uint32; readerSem uint32; readerCount int32; readerWait int32}",
      "type" : "Struct",
      "underlying" : 112
    }, {
      "fields" : [ {
        "name" : "writeAt",
        "type" : 114
      } ],
      "name" : "struct{writeAt func(b []byte, off int64) (n int, err error)}",
      "type" : "Struct",
      "underlying" : 113
    }, {
      "name" : "func(b []byte, off int64) (n int, err error)",
      "params" : 115,
      "recv" : -1,
      "results" : 116,
      "type" : "Signature",
      "underlying" : 114,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "b",
        "type" : 42
      }, {
        "name" : "off",
        "type" : 17
      } ],
      "name" : "(b []byte, off int64)",
      "type" : "Tuple",
      "underlying" : 115
    }, {
      "fields" : [ {
        "name" : "n",
        "type" : 15
      }, {
        "name" : "err",
        "type" : 3
      } ],
      "name" : "(n int, err error)",
      "type" : "Tuple",
      "underlying" : 116
    }, {
      "local-name" : "Bucket",
      "name" : "github.com/coreos/bbolt.Bucket",
      "package" : 0,
      "type" : "Named",
      "underlying" : 118
    }, {
      "fields" : [ {
        "name" : "bucket",
        "type" : 119
      }, {
        "name" : "tx",
        "type" : 8
      }, {
        "name" : "buckets",
        "type" : 120
      }, {
        "name" : "page",
        "type" : 122
      }, {
        "name" : "rootNode",
        "type" : 126
      }, {
        "name" : "nodes",
        "type" : 135
      }, {
        "name" : "FillPercent",
        "type" : 136
      } ],
      "name" : "struct{*github.com/coreos/bbolt.bucket; tx *github.com/coreos/bbolt.Tx; buckets map[string]*github.com/coreos/bbolt.Bucket; page *github.com/coreos/bbolt.page; rootNode *github.com/coreos/bbolt.node; nodes map[github.com/coreos/bbolt.pgid]*github.com/coreos/bbolt.node; FillPercent float64}",
      "type" : "Struct",
      "underlying" : 118
    }, {
      "elem" : 48,
      "name" : "*github.com/coreos/bbolt.bucket",
      "type" : "Pointer",
      "underlying" : 119
    }, {
      "elem" : 121,
      "key" : 7,
      "name" : "map[string]*github.com/coreos/bbolt.Bucket",
      "type" : "Map",
      "underlying" : 120
    }, {
      "elem" : 117,
      "name" : "*github.com/coreos/bbolt.Bucket",
      "type" : "Pointer",
      "underlying" : 121
    }, {
      "elem" : 123,
      "name" : "*github.com/coreos/bbolt.page",
      "type" : "Pointer",
      "underlying" : 122
    }, {
      "local-name" : "page",
      "name" : "github.com/coreos/bbolt.page",
      "package" : 0,
      "type" : "Named",
      "underlying" : 124
    }, {
      "fields" : [ {
        "name" : "id",
        "type" : 50
      }, {
        "name" : "flags",
        "type" : 125
      }, {
        "name" : "count",
        "type" : 125
      }, {
        "name" : "overflow",
        "type" : 29
      }, {
        "name" : "ptr",
        "type" : 32
      } ],
      "name" : "struct{id github.com/coreos/bbolt.pgid; flags uint16; count uint16; overflow uint32; ptr uintptr}",
      "type" : "Struct",
      "underlying" : 124
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 125
    }, {
      "elem" : 127,
      "name" : "*github.com/coreos/bbolt.node",
      "type" : "Pointer",
      "underlying" : 126
    }, {
      "local-name" : "node",
      "name" : "github.com/coreos/bbolt.node",
      "package" : 0,
      "type" : "Named",
      "underlying" : 128
    }, {
      "fields" : [ {
        "name" : "bucket",
        "type" : 121
      }, {
        "name" : "isLeaf",
        "type" : 11
      }, {
        "name" : "unbalanced",
        "type" : 11
      }, {
        "name" : "spilled",
        "type" : 11
      }, {
        "name" : "key",
        "type" : 42
      }, {
        "name" : "pgid",
        "type" : 50
      }, {
        "name" : "parent",
        "type" : 126
      }, {
        "name" : "children",
        "type" : 129
      }, {
        "name" : "inodes",
        "type" : 131
      } ],
      "name" : "struct{bucket *github.com/coreos/bbolt.Bucket; isLeaf bool; unbalanced bool; spilled bool; key []byte; pgid github.com/coreos/bbolt.pgid; parent *github.com/coreos/bbolt.node; children github.com/coreos/bbolt.nodes; inodes github.com/coreos/bbolt.inodes}",
      "type" : "Struct",
      "underlying" : 128
    }, {
      "local-name" : "nodes",
      "name" : "github.com/coreos/bbolt.nodes",
      "package" : 0,
      "type" : "Named",
      "underlying" : 130
    }, {
      "elem" : 126,
      "name" : "[]*github.com/coreos/bbolt.node",
      "type" : "Slice",
      "underlying" : 130
    }, {
      "local-name" : "inodes",
      "name" : "github.com/coreos/bbolt.inodes",
      "package" : 0,
      "type" : "Named",
      "underlying" : 132
    }, {
      "elem" : 133,
      "name" : "[]github.com/coreos/bbolt.inode",
      "type" : "Slice",
      "underlying" : 132
    }, {
      "local-name" : "inode",
      "name" : "github.com/coreos/bbolt.inode",
      "package" : 0,
      "type" : "Named",
      "underlying" : 134
    }, {
      "fields" : [ {
        "name" : "flags",
        "type" : 29
      }, {
        "name" : "pgid",
        "type" : 50
      }, {
        "name" : "key",
        "type" : 42
      }, {
        "name" : "value",
        "type" : 42
      } ],
      "name" : "struct{flags uint32; pgid github.com/coreos/bbolt.pgid; key []byte; value []byte}",
      "type" : "Struct",
      "underlying" : 134
    }, {
      "elem" : 126,
      "key" : 50,
      "name" : "map[github.com/coreos/bbolt.pgid]*github.com/coreos/bbolt.node",
      "type" : "Map",
      "underlying" : 135
    }, {
      "name" : "float64",
      "type" : "Basic",
      "underlying" : 136
    }, {
      "elem" : 122,
      "key" : 50,
      "name" : "map[github.com/coreos/bbolt.pgid]*github.com/coreos/bbolt.page",
      "type" : "Map",
      "underlying" : 137
    }, {
      "elem" : 139,
      "name" : "[]func()",
      "type" : "Slice",
      "underlying" : 138
    }, {
      "name" : "func()",
      "params" : 1,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 139,
      "variadic" : false
    }, {
      "local-name" : "pages",
      "name" : "github.com/coreos/bbolt.pages",
      "package" : 0,
      "type" : "Named",
      "underlying" : 141
    }, {
      "elem" : 122,
      "name" : "[]*github.com/coreos/bbolt.page",
      "type" : "Slice",
      "underlying" : 141
    }, {
      "name" : "func(map[github.com/coreos/bbolt.pgid]*github.com/coreos/bbolt.page) int",
      "params" : 143,
      "recv" : -1,
      "results" : 144,
      "type" : "Signature",
      "underlying" : 142,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 137
      } ],
      "name" : "(map[github.com/coreos/bbolt.pgid]*github.com/coreos/bbolt.page)",
      "type" : "Tuple",
      "underlying" : 143
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 15
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 144
    }, {
      "name" : "func(github.com/coreos/bbolt.pages, ...*github.com/coreos/bbolt.page) github.com/coreos/bbolt.pages",
      "params" : 146,
      "recv" : -1,
      "results" : 147,
      "type" : "Signature",
      "underlying" : 145,
      "variadic" : true
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 140
      }, {
        "name" : "",
        "type" : 141
      } ],
      "name" : "(github.com/coreos/bbolt.pages, []*github.com/coreos/bbolt.page)",
      "type" : "Tuple",
      "underlying" : 146
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 140
      } ],
      "name" : "(github.com/coreos/bbolt.pages)",
      "type" : "Tuple",
      "underlying" : 147
    }, {
      "name" : "func(data sort.Interface)",
      "params" : 149,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 148,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "data",
        "type" : 150
      } ],
      "name" : "(data sort.Interface)",
      "type" : "Tuple",
      "underlying" : 149
    }, {
      "local-name" : "Interface",
      "name" : "sort.Interface",
      "package" : 7,
      "type" : "Named",
      "underlying" : 151
    }, {
      "methods" : [ {
        "name" : "Len",
        "type" : 152
      }, {
        "name" : "Less",
        "type" : 153
      }, {
        "name" : "Swap",
        "type" : 156
      } ],
      "name" : "interface{Len() int; Less(i int, j int) bool; Swap(i int, j int)}",
      "type" : "Interface",
      "underlying" : 151
    }, {
      "name" : "func() int",
      "params" : 1,
      "recv" : 8,
      "results" : 144,
      "type" : "Signature",
      "underlying" : 152,
      "variadic" : false
    }, {
      "name" : "func(i int, j int) bool",
      "params" : 154,
      "recv" : 9,
      "results" : 155,
      "type" : "Signature",
      "underlying" : 153,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 15
      }, {
        "name" : "j",
        "type" : 15
      } ],
      "name" : "(i int, j int)",
      "type" : "Tuple",
      "underlying" : 154
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 11
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 155
    }, {
      "name" : "func(i int, j int)",
      "params" : 154,
      "recv" : 10,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 156,
      "variadic" : false
    }, {
      "elem" : 158,
      "name" : "*[2147483647]byte",
      "type" : "Pointer",
      "underlying" : 157
    }, {
      "elem" : 38,
      "name" : "[2147483647]byte",
      "type" : "Array",
      "underlying" : 158
    }, {
      "name" : "untyped int",
      "type" : "Basic",
      "underlying" : 159
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 160
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 161
    }, {
      "name" : "func(db *github.com/coreos/bbolt.DB) error",
      "params" : 163,
      "recv" : -1,
      "results" : 2,
      "type" : "Signature",
      "underlying" : 162,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "db",
        "type" : 12
      } ],
      "name" : "(db *github.com/coreos/bbolt.DB)",
      "type" : "Tuple",
      "underlying" : 163
    }, {
      "name" : "func(x interface{})",
      "params" : 165,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 164,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "x",
        "type" : 80
      } ],
      "name" : "(x interface{})",
      "type" : "Tuple",
      "underlying" : 165
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "tx",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "buf",
      "package" : 0,
      "type" : 42,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "pages",
      "package" : 0,
      "type" : 137,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "pages",
      "package" : 0,
      "type" : 140,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "p",
      "package" : 0,
      "type" : 122,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "_",
      "package" : 0,
      "type" : 50,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 7,
      "type" : 150,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 7,
      "type" : 150,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 7,
      "type" : 150,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "p",
      "package" : 0,
      "type" : 122,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "overflow",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "db",
      "package" : 0,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "pageSize",
      "package" : 0,
      "type" : 15,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "id",
      "package" : 0,
      "type" : 50,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "size",
      "package" : 0,
      "type" : 15,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "sz",
      "package" : 0,
      "type" : 15,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "ptr",
      "package" : 0,
      "type" : 157,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "ops",
      "package" : 0,
      "type" : 113,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "writeAt",
      "package" : 0,
      "type" : 114,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "buf",
      "package" : 0,
      "type" : 42,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "offset",
      "package" : 0,
      "type" : 17,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "stats",
      "package" : 0,
      "type" : 55,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Write",
      "package" : 0,
      "type" : 15,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "_",
      "package" : 0,
      "type" : 15,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "_",
      "package" : 0,
      "type" : 15,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "NoSync",
      "package" : 0,
      "type" : 11,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "p",
      "package" : 0,
      "type" : 122,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "i",
      "package" : 0,
      "type" : 15,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "pagePool",
      "package" : 0,
      "type" : 73,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "_",
      "package" : 0,
      "type" : 15,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}