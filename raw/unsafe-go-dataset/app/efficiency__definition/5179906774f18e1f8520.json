{
  "usage" : {
    "file" : "endpoint.go",
    "label1" : "definition",
    "label2" : "efficiency",
    "line" : "263",
    "module" : "github.com/cilium/cilium",
    "pkg" : "github.com/cilium/cilium/pkg/endpoint",
    "project" : "cilium/cilium",
    "snippet" : "logger unsafe.Pointer",
    "version" : "project"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 112,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "binds" : [ {
            "name" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "Endpoint"
            },
            "value" : {
              "fields" : [ {
                "declared-type" : {
                  "go-type" : 2,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "regeneration"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 2,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Owner"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "owner"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 11,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 11,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uint16"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "ID"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 80,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 6,
                    "value" : "lock"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 80,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "RWMutex"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "mutex"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 13,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 13,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "containerName"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 13,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 13,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "containerID"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 13,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 13,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "dockerNetworkID"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 13,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 13,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "dockerEndpointID"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 50,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 50,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "int"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "datapathMapID"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 12,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 12,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "bool"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "isDatapathMapPinned"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 13,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 13,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "ifName"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 50,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 50,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "int"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "ifIndex"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 562,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 29,
                    "value" : "pkgLabels"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 562,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "OpLabels"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "OpLabels"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 50,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 50,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "int"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "identityRevision"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 121,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 9,
                    "value" : "mac"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 121,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "MAC"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "mac"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 129,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 10,
                    "value" : "addressing"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 129,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "CiliumIPv6"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "IPv6"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 126,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 10,
                    "value" : "addressing"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 126,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "CiliumIPv4"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "IPv4"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 121,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 9,
                    "value" : "mac"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 121,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "MAC"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "nodeMAC"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "contained" : {
                    "go-type" : 521,
                    "kind" : "type",
                    "qualifier" : {
                      "ident-kind" : "PkgName",
                      "kind" : "ident",
                      "package" : 8,
                      "value" : "identity"
                    },
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 521,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "Identity"
                    }
                  },
                  "go-type" : 520,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "SecurityIdentity"
                } ],
                "tag" : {
                  "go-type" : 845,
                  "kind" : "literal",
                  "type" : "STRING",
                  "value" : "`json:\"SecLabel\"`"
                }
              }, {
                "declared-type" : {
                  "go-type" : 12,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 12,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "bool"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "hasSidecarProxy"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "contained" : {
                    "go-type" : 565,
                    "kind" : "type",
                    "qualifier" : {
                      "ident-kind" : "PkgName",
                      "kind" : "ident",
                      "package" : 34,
                      "value" : "policymap"
                    },
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 565,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "PolicyMap"
                    }
                  },
                  "go-type" : 564,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "policyMap"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "contained" : {
                    "go-type" : 78,
                    "kind" : "type",
                    "qualifier" : {
                      "ident-kind" : "PkgName",
                      "kind" : "ident",
                      "package" : 5,
                      "value" : "option"
                    },
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 78,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "IntOptions"
                    }
                  },
                  "go-type" : 77,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "Options"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "contained" : {
                    "go-type" : 599,
                    "kind" : "type",
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 599,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "EndpointStatus"
                    }
                  },
                  "go-type" : 598,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "status"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "contained" : {
                    "go-type" : 613,
                    "kind" : "type",
                    "qualifier" : {
                      "ident-kind" : "PkgName",
                      "kind" : "ident",
                      "package" : 37,
                      "value" : "fqdn"
                    },
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 613,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "DNSCache"
                    }
                  },
                  "go-type" : 612,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "DNSHistory"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "contained" : {
                    "go-type" : 626,
                    "kind" : "type",
                    "qualifier" : {
                      "ident-kind" : "PkgName",
                      "kind" : "ident",
                      "package" : 37,
                      "value" : "fqdn"
                    },
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 626,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "DNSZombieMappings"
                    }
                  },
                  "go-type" : 625,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "DNSZombies"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "contained" : {
                    "go-type" : 633,
                    "kind" : "type",
                    "qualifier" : {
                      "ident-kind" : "PkgName",
                      "kind" : "ident",
                      "package" : 38,
                      "value" : "trigger"
                    },
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 633,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "Trigger"
                    }
                  },
                  "go-type" : 632,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "dnsHistoryTrigger"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 13,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 13,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "state"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 13,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 13,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "bpfHeaderfileHash"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 13,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 13,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "K8sPodName"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 13,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 13,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "string"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "K8sNamespace"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "contained" : {
                    "go-type" : 649,
                    "kind" : "type",
                    "qualifier" : {
                      "ident-kind" : "PkgName",
                      "kind" : "ident",
                      "package" : 39,
                      "value" : "slim_corev1"
                    },
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 649,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "Pod"
                    }
                  },
                  "go-type" : 648,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "pod"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 676,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 24,
                    "value" : "policy"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 676,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "NamedPortsMap"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "k8sPorts"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 42,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 42,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uint64"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "policyRevision"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 680,
                  "key" : {
                    "contained" : {
                      "go-type" : 682,
                      "kind" : "type",
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 682,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "policySignal"
                      }
                    },
                    "go-type" : 681,
                    "kind" : "type",
                    "type" : "pointer"
                  },
                  "kind" : "type",
                  "type" : "map",
                  "value" : {
                    "go-type" : 12,
                    "kind" : "type",
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 12,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "bool"
                    }
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "policyRevisionSignals"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 42,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 42,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uint64"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "proxyPolicyRevision"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 80,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 6,
                    "value" : "lock"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 80,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "RWMutex"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "proxyStatisticsMutex"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 686,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 686,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "EndpointProxy"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "proxy"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 791,
                  "key" : {
                    "go-type" : 13,
                    "kind" : "type",
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 13,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "string"
                    }
                  },
                  "kind" : "type",
                  "type" : "map",
                  "value" : {
                    "contained" : {
                      "go-type" : 793,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 46,
                        "value" : "models"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 793,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "ProxyStatistics"
                      }
                    },
                    "go-type" : 792,
                    "kind" : "type",
                    "type" : "pointer"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "proxyStatistics"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 42,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 42,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uint64"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "nextPolicyRevision"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 12,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 12,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "bool"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "forcePolicyCompute"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 512,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 6,
                    "value" : "lock"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 512,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Mutex"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "buildMutex"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 166,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 13,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 166,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "logger"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "contained" : {
                    "go-type" : 802,
                    "kind" : "type",
                    "qualifier" : {
                      "ident-kind" : "PkgName",
                      "kind" : "ident",
                      "package" : 47,
                      "value" : "controller"
                    },
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 802,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "Manager"
                    }
                  },
                  "go-type" : 801,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "controllers"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 814,
                  "key" : {
                    "go-type" : 13,
                    "kind" : "type",
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 13,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "string"
                    }
                  },
                  "kind" : "type",
                  "type" : "map",
                  "value" : {
                    "go-type" : 11,
                    "kind" : "type",
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 11,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "uint16"
                    }
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "realizedRedirects"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 12,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 12,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "bool"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "ctCleaned"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "direction" : "both",
                  "go-type" : 465,
                  "kind" : "type",
                  "type" : "chan",
                  "value" : {
                    "fields" : [ ],
                    "go-type" : 59,
                    "kind" : "type",
                    "type" : "struct"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "hasBPFProgram"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 815,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 24,
                    "value" : "policy"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 815,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "SelectorPolicy"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "selectorPolicy"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "contained" : {
                    "go-type" : 761,
                    "kind" : "type",
                    "qualifier" : {
                      "ident-kind" : "PkgName",
                      "kind" : "ident",
                      "package" : 24,
                      "value" : "policy"
                    },
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 761,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "EndpointPolicy"
                    }
                  },
                  "go-type" : 760,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "desiredPolicy"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "contained" : {
                    "go-type" : 761,
                    "kind" : "type",
                    "qualifier" : {
                      "ident-kind" : "PkgName",
                      "kind" : "ident",
                      "package" : 24,
                      "value" : "policy"
                    },
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 761,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "EndpointPolicy"
                    }
                  },
                  "go-type" : 760,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "realizedPolicy"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "contained" : {
                    "go-type" : 821,
                    "kind" : "type",
                    "qualifier" : {
                      "ident-kind" : "PkgName",
                      "kind" : "ident",
                      "package" : 24,
                      "value" : "policy"
                    },
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 821,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "VisibilityPolicy"
                    }
                  },
                  "go-type" : 820,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "visibilityPolicy"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "contained" : {
                    "go-type" : 454,
                    "kind" : "type",
                    "qualifier" : {
                      "ident-kind" : "PkgName",
                      "kind" : "ident",
                      "package" : 30,
                      "value" : "eventqueue"
                    },
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 454,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "EventQueue"
                    }
                  },
                  "go-type" : 453,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "eventQueue"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 828,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "regeneration"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 828,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "DatapathRegenerationLevel"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "skippedRegenerationLevel"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 829,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 46,
                    "value" : "models"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 829,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "EndpointDatapathConfiguration"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "DatapathConfiguration"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 36,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 3,
                    "value" : "context"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 36,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Context"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "aliveCtx"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 736,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 3,
                    "value" : "context"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 736,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "CancelFunc"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "aliveCancel"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "direction" : "both",
                  "go-type" : 465,
                  "kind" : "type",
                  "type" : "chan",
                  "value" : {
                    "fields" : [ ],
                    "go-type" : 59,
                    "kind" : "type",
                    "type" : "struct"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "regenFailedChan"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "direction" : "both",
                  "go-type" : 465,
                  "kind" : "type",
                  "type" : "chan",
                  "value" : {
                    "fields" : [ ],
                    "go-type" : 59,
                    "kind" : "type",
                    "type" : "struct"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "exposed"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 832,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 48,
                    "value" : "cache"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 832,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "IdentityAllocator"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "allocator"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 12,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 12,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "bool"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "isHost"
                } ],
                "tag" : null
              } ],
              "go-type" : 1,
              "kind" : "type",
              "type" : "struct"
            }
          } ],
          "kind" : "decl",
          "type" : "type-alias"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 315,
      "code" : "// Endpoint represents a container or similar which can be individually\n// addresses on L3 with its own IP addresses. This structured is managed by the\n// endpoint manager in pkg/endpointmanager.\n//\n// The representation of the Endpoint which is serialized to disk for restore\n// purposes is the serializableEndpoint type in this package.\ntype Endpoint struct {\n\towner regeneration.Owner\n\n\t// ID of the endpoint, unique in the scope of the node\n\tID uint16\n\n\t// mutex protects write operations to this endpoint structure except\n\t// for the logger field which has its own mutex\n\tmutex lock.RWMutex\n\n\t// containerName is the name given to the endpoint by the container runtime\n\tcontainerName string\n\n\t// containerID is the container ID that docker has assigned to the endpoint\n\tcontainerID string\n\n\t// dockerNetworkID is the network ID of the libnetwork network if the\n\t// endpoint is a docker managed container which uses libnetwork\n\tdockerNetworkID string\n\n\t// dockerEndpointID is the Docker network endpoint ID if managed by\n\t// libnetwork\n\tdockerEndpointID string\n\n\t// Corresponding BPF map identifier for tail call map of ipvlan datapath\n\tdatapathMapID int\n\n\t// isDatapathMapPinned denotes whether the datapath map has been pinned.\n\tisDatapathMapPinned bool\n\n\t// ifName is the name of the host facing interface (veth pair) which\n\t// connects into the endpoint\n\tifName string\n\n\t// ifIndex is the interface index of the host face interface (veth pair)\n\tifIndex int\n\n\t// OpLabels is the endpoint's label configuration\n\t//\n\t// FIXME: Rename this field to Labels\n\tOpLabels pkgLabels.OpLabels\n\n\t// identityRevision is incremented each time the identity label\n\t// information of the endpoint has changed\n\tidentityRevision int\n\n\t// mac is the MAC address of the endpoint\n\t//\n\tmac mac.MAC // Container MAC address.\n\n\t// IPv6 is the IPv6 address of the endpoint\n\tIPv6 addressing.CiliumIPv6\n\n\t// IPv4 is the IPv4 address of the endpoint\n\tIPv4 addressing.CiliumIPv4\n\n\t// nodeMAC is the MAC of the node (agent). The MAC is different for every endpoint.\n\tnodeMAC mac.MAC\n\n\t// SecurityIdentity is the security identity of this endpoint. This is computed from\n\t// the endpoint's labels.\n\tSecurityIdentity *identity.Identity `json:\"SecLabel\"`\n\n\t// hasSidecarProxy indicates whether the endpoint has been injected by\n\t// Istio with a Cilium-compatible sidecar proxy. If true, the sidecar proxy\n\t// will be used to apply L7 policy rules. Otherwise, Cilium's node-wide\n\t// proxy will be used.\n\t// TODO: Currently this applies only to HTTP L7 rules. Kafka L7 rules are still enforced by Cilium's node-wide Kafka proxy.\n\thasSidecarProxy bool\n\n\t// policyMap is the policy related state of the datapath including\n\t// reference to all policy related BPF\n\tpolicyMap *policymap.PolicyMap\n\n\t// Options determine the datapath configuration of the endpoint.\n\tOptions *option.IntOptions\n\n\t// status contains the last n state transitions this endpoint went through\n\tstatus *EndpointStatus\n\n\t// DNSHistory is the collection of still-valid DNS responses intercepted for\n\t// this endpoint.\n\tDNSHistory *fqdn.DNSCache\n\n\t// DNSZombies is the collection of DNS IPs that have expired in or been\n\t// evicted from DNSHistory. They are held back from deletion until we can\n\t// confirm that no existing connection is using them.\n\tDNSZombies *fqdn.DNSZombieMappings\n\n\t// dnsHistoryTrigger is the trigger to write down the ep_config.h to make\n\t// sure that restores when DNS policy is in there are correct\n\tdnsHistoryTrigger *trigger.Trigger\n\n\t// state is the state the endpoint is in. See setState()\n\tstate string\n\n\t// bpfHeaderfileHash is the hash of the last BPF headerfile that has been\n\t// compiled and installed.\n\tbpfHeaderfileHash string\n\n\t// K8sPodName is the Kubernetes pod name of the endpoint\n\tK8sPodName string\n\n\t// K8sNamespace is the Kubernetes namespace of the endpoint\n\tK8sNamespace string\n\n\t// pod\n\tpod *slim_corev1.Pod\n\n\t// k8sPorts contains container ports associated in the pod.\n\t// It is used to enforce k8s network policies with port names.\n\tk8sPorts policy.NamedPortsMap\n\n\t// policyRevision is the policy revision this endpoint is currently on\n\t// to modify this field please use endpoint.setPolicyRevision instead\n\tpolicyRevision uint64\n\n\t// policyRevisionSignals contains a map of PolicyRevision signals that\n\t// should be triggered once the policyRevision reaches the wanted wantedRev.\n\tpolicyRevisionSignals map[*policySignal]bool\n\n\t// proxyPolicyRevision is the policy revision that has been applied to\n\t// the proxy.\n\tproxyPolicyRevision uint64\n\n\t// proxyStatisticsMutex is the mutex that must be held to read or write\n\t// proxyStatistics.\n\tproxyStatisticsMutex lock.RWMutex\n\n\tproxy EndpointProxy\n\n\t// proxyStatistics contains statistics of proxy redirects.\n\t// They keys in this map are policy.ProxyIDs.\n\t// You must hold Endpoint.proxyStatisticsMutex to read or write it.\n\tproxyStatistics map[string]*models.ProxyStatistics\n\n\t// nextPolicyRevision is the policy revision that the endpoint has\n\t// updated to and that will become effective with the next regenerate\n\tnextPolicyRevision uint64\n\n\t// forcePolicyCompute full endpoint policy recomputation\n\t// Set when endpoint options have been changed. Cleared right before releasing the\n\t// endpoint mutex after policy recalculation.\n\tforcePolicyCompute bool\n\n\t// buildMutex synchronizes builds of individual endpoints and locks out\n\t// deletion during builds\n\tbuildMutex lock.Mutex\n\n\t// logger is a logrus object with fields set to report an endpoints information.\n\t// You must hold Endpoint.Mutex to read or write it (but not to log with it).\n\tlogger unsafe.Pointer\n\n\t// controllers is the list of async controllers syncing the endpoint to\n\t// other resources\n\tcontrollers *controller.Manager\n\n\t// realizedRedirects maps the ID of each proxy redirect that has been\n\t// successfully added into a proxy for this endpoint, to the redirect's\n\t// proxy port number.\n\t// You must hold Endpoint.Mutex to read or write it.\n\trealizedRedirects map[string]uint16\n\n\t// ctCleaned indicates whether the conntrack table has already been\n\t// cleaned when this endpoint was first created\n\tctCleaned bool\n\n\thasBPFProgram chan struct{}\n\n\t// selectorPolicy represents a reference to the shared SelectorPolicy\n\t// for all endpoints that have the same Identity.\n\tselectorPolicy policy.SelectorPolicy\n\n\tdesiredPolicy *policy.EndpointPolicy\n\n\trealizedPolicy *policy.EndpointPolicy\n\n\tvisibilityPolicy *policy.VisibilityPolicy\n\n\teventQueue *eventqueue.EventQueue\n\n\t// skippedRegenerationLevel is the DatapathRegenerationLevel of the regeneration event that\n\t// was skipped due to another regeneration event already being queued, as indicated by\n\t// state. A lower-level current regeneration is bumped to this level to cover for the\n\t// skipped regeneration levels.\n\tskippedRegenerationLevel regeneration.DatapathRegenerationLevel\n\n\t// DatapathConfiguration is the endpoint's datapath configuration as\n\t// passed in via the plugin that created the endpoint, e.g. the CNI\n\t// plugin which performed the plumbing will enable certain datapath\n\t// features according to the mode selected.\n\tDatapathConfiguration models.EndpointDatapathConfiguration\n\n\taliveCtx        context.Context\n\taliveCancel     context.CancelFunc\n\tregenFailedChan chan struct{}\n\t// exposed is a channel that is closed when the endpoint is exposed in the\n\t// endpoint manager.\n\texposed chan struct{}\n\n\tallocator cache.IdentityAllocator\n\n\tisHost bool\n}",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "// Endpoint represents a container or similar which can be individually\n// addresses on L3 with its own IP addresses. This structured is managed by the\n// endpoint manager in pkg/endpointmanager.\n//\n// The representation of the Endpoint which is serialized to disk for restore\n// purposes is the serializableEndpoint type in this package.\ntype Endpoint struct {\n\towner regeneration.Owner\n\n\t// ID of the endpoint, unique in the scope of the node\n\tID uint16\n\n\t// mutex protects write operations to this endpoint structure except\n\t// for the logger field which has its own mutex\n\tmutex lock.RWMutex\n\n\t// containerName is the name given to the endpoint by the container runtime\n\tcontainerName string\n\n\t// containerID is the container ID that docker has assigned to the endpoint\n\tcontainerID string\n\n\t// dockerNetworkID is the network ID of the libnetwork network if the\n\t// endpoint is a docker managed container which uses libnetwork\n\tdockerNetworkID string\n\n\t// dockerEndpointID is the Docker network endpoint ID if managed by\n\t// libnetwork\n\tdockerEndpointID string\n\n\t// Corresponding BPF map identifier for tail call map of ipvlan datapath\n\tdatapathMapID int\n\n\t// isDatapathMapPinned denotes whether the datapath map has been pinned.\n\tisDatapathMapPinned bool\n\n\t// ifName is the name of the host facing interface (veth pair) which\n\t// connects into the endpoint\n\tifName string\n\n\t// ifIndex is the interface index of the host face interface (veth pair)\n\tifIndex int\n\n\t// OpLabels is the endpoint's label configuration\n\t//\n\t// FIXME: Rename this field to Labels\n\tOpLabels pkgLabels.OpLabels\n\n\t// identityRevision is incremented each time the identity label\n\t// information of the endpoint has changed\n\tidentityRevision int\n\n\t// mac is the MAC address of the endpoint\n\t//\n\tmac mac.MAC // Container MAC address.\n\n\t// IPv6 is the IPv6 address of the endpoint\n\tIPv6 addressing.CiliumIPv6\n\n\t// IPv4 is the IPv4 address of the endpoint\n\tIPv4 addressing.CiliumIPv4\n\n\t// nodeMAC is the MAC of the node (agent). The MAC is different for every endpoint.\n\tnodeMAC mac.MAC\n\n\t// SecurityIdentity is the security identity of this endpoint. This is computed from\n\t// the endpoint's labels.\n\tSecurityIdentity *identity.Identity `json:\"SecLabel\"`\n\n\t// hasSidecarProxy indicates whether the endpoint has been injected by\n\t// Istio with a Cilium-compatible sidecar proxy. If true, the sidecar proxy\n\t// will be used to apply L7 policy rules. Otherwise, Cilium's node-wide\n\t// proxy will be used.\n\t// TODO: Currently this applies only to HTTP L7 rules. Kafka L7 rules are still enforced by Cilium's node-wide Kafka proxy.\n\thasSidecarProxy bool\n\n\t// policyMap is the policy related state of the datapath including\n\t// reference to all policy related BPF\n\tpolicyMap *policymap.PolicyMap\n\n\t// Options determine the datapath configuration of the endpoint.\n\tOptions *option.IntOptions\n\n\t// status contains the last n state transitions this endpoint went through\n\tstatus *EndpointStatus\n\n\t// DNSHistory is the collection of still-valid DNS responses intercepted for\n\t// this endpoint.\n\tDNSHistory *fqdn.DNSCache\n\n\t// DNSZombies is the collection of DNS IPs that have expired in or been\n\t// evicted from DNSHistory. They are held back from deletion until we can\n\t// confirm that no existing connection is using them.\n\tDNSZombies *fqdn.DNSZombieMappings\n\n\t// dnsHistoryTrigger is the trigger to write down the ep_config.h to make\n\t// sure that restores when DNS policy is in there are correct\n\tdnsHistoryTrigger *trigger.Trigger\n\n\t// state is the state the endpoint is in. See setState()\n\tstate string\n\n\t// bpfHeaderfileHash is the hash of the last BPF headerfile that has been\n\t// compiled and installed.\n\tbpfHeaderfileHash string\n\n\t// K8sPodName is the Kubernetes pod name of the endpoint\n\tK8sPodName string\n\n\t// K8sNamespace is the Kubernetes namespace of the endpoint\n\tK8sNamespace string\n\n\t// pod\n\tpod *slim_corev1.Pod\n\n\t// k8sPorts contains container ports associated in the pod.\n\t// It is used to enforce k8s network policies with port names.\n\tk8sPorts policy.NamedPortsMap\n\n\t// policyRevision is the policy revision this endpoint is currently on\n\t// to modify this field please use endpoint.setPolicyRevision instead\n\tpolicyRevision uint64\n\n\t// policyRevisionSignals contains a map of PolicyRevision signals that\n\t// should be triggered once the policyRevision reaches the wanted wantedRev.\n\tpolicyRevisionSignals map[*policySignal]bool\n\n\t// proxyPolicyRevision is the policy revision that has been applied to\n\t// the proxy.\n\tproxyPolicyRevision uint64\n\n\t// proxyStatisticsMutex is the mutex that must be held to read or write\n\t// proxyStatistics.\n\tproxyStatisticsMutex lock.RWMutex\n\n\tproxy EndpointProxy\n\n\t// proxyStatistics contains statistics of proxy redirects.\n\t// They keys in this map are policy.ProxyIDs.\n\t// You must hold Endpoint.proxyStatisticsMutex to read or write it.\n\tproxyStatistics map[string]*models.ProxyStatistics\n\n\t// nextPolicyRevision is the policy revision that the endpoint has\n\t// updated to and that will become effective with the next regenerate\n\tnextPolicyRevision uint64\n\n\t// forcePolicyCompute full endpoint policy recomputation\n\t// Set when endpoint options have been changed. Cleared right before releasing the\n\t// endpoint mutex after policy recalculation.\n\tforcePolicyCompute bool\n\n\t// buildMutex synchronizes builds of individual endpoints and locks out\n\t// deletion during builds\n\tbuildMutex lock.Mutex\n\n\t// logger is a logrus object with fields set to report an endpoints information.\n\t// You must hold Endpoint.Mutex to read or write it (but not to log with it).\n\tlogger unsafe.Pointer\n\n\t// controllers is the list of async controllers syncing the endpoint to\n\t// other resources\n\tcontrollers *controller.Manager\n\n\t// realizedRedirects maps the ID of each proxy redirect that has been\n\t// successfully added into a proxy for this endpoint, to the redirect's\n\t// proxy port number.\n\t// You must hold Endpoint.Mutex to read or write it.\n\trealizedRedirects map[string]uint16\n\n\t// ctCleaned indicates whether the conntrack table has already been\n\t// cleaned when this endpoint was first created\n\tctCleaned bool\n\n\thasBPFProgram chan struct{}\n\n\t// selectorPolicy represents a reference to the shared SelectorPolicy\n\t// for all endpoints that have the same Identity.\n\tselectorPolicy policy.SelectorPolicy\n\n\tdesiredPolicy *policy.EndpointPolicy\n\n\trealizedPolicy *policy.EndpointPolicy\n\n\tvisibilityPolicy *policy.VisibilityPolicy\n\n\teventQueue *eventqueue.EventQueue\n\n\t// skippedRegenerationLevel is the DatapathRegenerationLevel of the regeneration event that\n\t// was skipped due to another regeneration event already being queued, as indicated by\n\t// state. A lower-level current regeneration is bumped to this level to cover for the\n\t// skipped regeneration levels.\n\tskippedRegenerationLevel regeneration.DatapathRegenerationLevel\n\n\t// DatapathConfiguration is the endpoint's datapath configuration as\n\t// passed in via the plugin that created the endpoint, e.g. the CNI\n\t// plugin which performed the plumbing will enable certain datapath\n\t// features according to the mode selected.\n\tDatapathConfiguration models.EndpointDatapathConfiguration\n\n\taliveCtx        context.Context\n\taliveCancel     context.CancelFunc\n\tregenFailedChan chan struct{}\n\t// exposed is a channel that is closed when the endpoint is exposed in the\n\t// endpoint manager.\n\texposed chan struct{}\n\n\tallocator cache.IdentityAllocator\n\n\tisHost bool\n}",
    "defines" : [ 0 ],
    "functions" : [ ],
    "line-end" : 315,
    "line-start" : 112,
    "names" : [ "Endpoint" ],
    "package" : 0,
    "packages" : [ {
      "name" : "endpoint",
      "path" : "github.com/cilium/cilium/pkg/endpoint"
    }, {
      "name" : "regeneration",
      "path" : "github.com/cilium/cilium/pkg/endpoint/regeneration"
    }, {
      "name" : "datapath",
      "path" : "github.com/cilium/cilium/pkg/datapath"
    }, {
      "name" : "context",
      "path" : "context"
    }, {
      "name" : "time",
      "path" : "time"
    }, {
      "name" : "option",
      "path" : "github.com/cilium/cilium/pkg/option"
    }, {
      "name" : "lock",
      "path" : "github.com/cilium/cilium/pkg/lock"
    }, {
      "name" : "sync",
      "path" : "sync"
    }, {
      "name" : "identity",
      "path" : "github.com/cilium/cilium/pkg/identity"
    }, {
      "name" : "mac",
      "path" : "github.com/cilium/cilium/pkg/mac"
    }, {
      "name" : "addressing",
      "path" : "github.com/cilium/cilium/pkg/addressing"
    }, {
      "name" : "logrus",
      "path" : "github.com/sirupsen/logrus"
    }, {
      "name" : "io",
      "path" : "io"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "runtime",
      "path" : "runtime"
    }, {
      "name" : "bytes",
      "path" : "bytes"
    }, {
      "name" : "metrics",
      "path" : "github.com/cilium/cilium/pkg/datapath/loader/metrics"
    }, {
      "name" : "spanstat",
      "path" : "github.com/cilium/cilium/pkg/spanstat"
    }, {
      "name" : "mtu",
      "path" : "github.com/cilium/cilium/pkg/mtu"
    }, {
      "name" : "cidr",
      "path" : "github.com/cilium/cilium/pkg/cidr"
    }, {
      "name" : "net",
      "path" : "net"
    }, {
      "name" : "types",
      "path" : "github.com/cilium/cilium/pkg/node/types"
    }, {
      "name" : "addressing",
      "path" : "github.com/cilium/cilium/pkg/node/addressing"
    }, {
      "name" : "source",
      "path" : "github.com/cilium/cilium/pkg/source"
    }, {
      "name" : "policy",
      "path" : "github.com/cilium/cilium/pkg/policy"
    }, {
      "name" : "api",
      "path" : "github.com/cilium/cilium/pkg/policy/api"
    }, {
      "name" : "v1",
      "path" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1"
    }, {
      "name" : "labels",
      "path" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/labels"
    }, {
      "name" : "selection",
      "path" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/selection"
    }, {
      "name" : "labels",
      "path" : "github.com/cilium/cilium/pkg/labels"
    }, {
      "name" : "eventqueue",
      "path" : "github.com/cilium/cilium/pkg/eventqueue"
    }, {
      "name" : "cilium",
      "path" : "github.com/cilium/proxy/go/cilium/api"
    }, {
      "name" : "envoy_api_v2_route",
      "path" : "github.com/cilium/proxy/go/envoy/api/v2/route"
    }, {
      "name" : "api",
      "path" : "github.com/cilium/cilium/pkg/monitor/api"
    }, {
      "name" : "policymap",
      "path" : "github.com/cilium/cilium/pkg/maps/policymap"
    }, {
      "name" : "bpf",
      "path" : "github.com/cilium/cilium/pkg/bpf"
    }, {
      "name" : "fmt",
      "path" : "fmt"
    }, {
      "name" : "fqdn",
      "path" : "github.com/cilium/cilium/pkg/fqdn"
    }, {
      "name" : "trigger",
      "path" : "github.com/cilium/cilium/pkg/trigger"
    }, {
      "name" : "v1",
      "path" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1"
    }, {
      "name" : "types",
      "path" : "k8s.io/apimachinery/pkg/types"
    }, {
      "name" : "logger",
      "path" : "github.com/cilium/cilium/pkg/proxy/logger"
    }, {
      "name" : "u8proto",
      "path" : "github.com/cilium/cilium/pkg/u8proto"
    }, {
      "name" : "accesslog",
      "path" : "github.com/cilium/cilium/pkg/proxy/accesslog"
    }, {
      "name" : "completion",
      "path" : "github.com/cilium/cilium/pkg/completion"
    }, {
      "name" : "revert",
      "path" : "github.com/cilium/cilium/pkg/revert"
    }, {
      "name" : "models",
      "path" : "github.com/cilium/cilium/api/v1/models"
    }, {
      "name" : "controller",
      "path" : "github.com/cilium/cilium/pkg/controller"
    }, {
      "name" : "cache",
      "path" : "github.com/cilium/cilium/pkg/identity/cache"
    } ],
    "params" : [ ],
    "receivers" : [ ],
    "results" : [ ],
    "type" : "type",
    "types" : [ {
      "local-name" : "Endpoint",
      "name" : "github.com/cilium/cilium/pkg/endpoint.Endpoint",
      "package" : 0,
      "type" : "Named",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "owner",
        "type" : 2
      }, {
        "name" : "ID",
        "type" : 11
      }, {
        "name" : "mutex",
        "type" : 80
      }, {
        "name" : "containerName",
        "type" : 13
      }, {
        "name" : "containerID",
        "type" : 13
      }, {
        "name" : "dockerNetworkID",
        "type" : 13
      }, {
        "name" : "dockerEndpointID",
        "type" : 13
      }, {
        "name" : "datapathMapID",
        "type" : 50
      }, {
        "name" : "isDatapathMapPinned",
        "type" : 12
      }, {
        "name" : "ifName",
        "type" : 13
      }, {
        "name" : "ifIndex",
        "type" : 50
      }, {
        "name" : "OpLabels",
        "type" : 562
      }, {
        "name" : "identityRevision",
        "type" : 50
      }, {
        "name" : "mac",
        "type" : 121
      }, {
        "name" : "IPv6",
        "type" : 129
      }, {
        "name" : "IPv4",
        "type" : 126
      }, {
        "name" : "nodeMAC",
        "type" : 121
      }, {
        "name" : "SecurityIdentity",
        "type" : 520
      }, {
        "name" : "hasSidecarProxy",
        "type" : 12
      }, {
        "name" : "policyMap",
        "type" : 564
      }, {
        "name" : "Options",
        "type" : 77
      }, {
        "name" : "status",
        "type" : 598
      }, {
        "name" : "DNSHistory",
        "type" : 612
      }, {
        "name" : "DNSZombies",
        "type" : 625
      }, {
        "name" : "dnsHistoryTrigger",
        "type" : 632
      }, {
        "name" : "state",
        "type" : 13
      }, {
        "name" : "bpfHeaderfileHash",
        "type" : 13
      }, {
        "name" : "K8sPodName",
        "type" : 13
      }, {
        "name" : "K8sNamespace",
        "type" : 13
      }, {
        "name" : "pod",
        "type" : 648
      }, {
        "name" : "k8sPorts",
        "type" : 676
      }, {
        "name" : "policyRevision",
        "type" : 42
      }, {
        "name" : "policyRevisionSignals",
        "type" : 680
      }, {
        "name" : "proxyPolicyRevision",
        "type" : 42
      }, {
        "name" : "proxyStatisticsMutex",
        "type" : 80
      }, {
        "name" : "proxy",
        "type" : 686
      }, {
        "name" : "proxyStatistics",
        "type" : 791
      }, {
        "name" : "nextPolicyRevision",
        "type" : 42
      }, {
        "name" : "forcePolicyCompute",
        "type" : 12
      }, {
        "name" : "buildMutex",
        "type" : 512
      }, {
        "name" : "logger",
        "type" : 166
      }, {
        "name" : "controllers",
        "type" : 801
      }, {
        "name" : "realizedRedirects",
        "type" : 814
      }, {
        "name" : "ctCleaned",
        "type" : 12
      }, {
        "name" : "hasBPFProgram",
        "type" : 465
      }, {
        "name" : "selectorPolicy",
        "type" : 815
      }, {
        "name" : "desiredPolicy",
        "type" : 760
      }, {
        "name" : "realizedPolicy",
        "type" : 760
      }, {
        "name" : "visibilityPolicy",
        "type" : 820
      }, {
        "name" : "eventQueue",
        "type" : 453
      }, {
        "name" : "skippedRegenerationLevel",
        "type" : 828
      }, {
        "name" : "DatapathConfiguration",
        "type" : 829
      }, {
        "name" : "aliveCtx",
        "type" : 36
      }, {
        "name" : "aliveCancel",
        "type" : 736
      }, {
        "name" : "regenFailedChan",
        "type" : 465
      }, {
        "name" : "exposed",
        "type" : 465
      }, {
        "name" : "allocator",
        "type" : 832
      }, {
        "name" : "isHost",
        "type" : 12
      } ],
      "name" : "struct{owner github.com/cilium/cilium/pkg/endpoint/regeneration.Owner; ID uint16; mutex github.com/cilium/cilium/pkg/lock.RWMutex; containerName string; containerID string; dockerNetworkID string; dockerEndpointID string; datapathMapID int; isDatapathMapPinned bool; ifName string; ifIndex int; OpLabels github.com/cilium/cilium/pkg/labels.OpLabels; identityRevision int; mac github.com/cilium/cilium/pkg/mac.MAC; IPv6 github.com/cilium/cilium/pkg/addressing.CiliumIPv6; IPv4 github.com/cilium/cilium/pkg/addressing.CiliumIPv4; nodeMAC github.com/cilium/cilium/pkg/mac.MAC; SecurityIdentity *github.com/cilium/cilium/pkg/identity.Identity \"json:\\\"SecLabel\\\"\"; hasSidecarProxy bool; policyMap *github.com/cilium/cilium/pkg/maps/policymap.PolicyMap; Options *github.com/cilium/cilium/pkg/option.IntOptions; status *github.com/cilium/cilium/pkg/endpoint.EndpointStatus; DNSHistory *github.com/cilium/cilium/pkg/fqdn.DNSCache; DNSZombies *github.com/cilium/cilium/pkg/fqdn.DNSZombieMappings; dnsHistoryTrigger *github.com/cilium/cilium/pkg/trigger.Trigger; state string; bpfHeaderfileHash string; K8sPodName string; K8sNamespace string; pod *github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.Pod; k8sPorts github.com/cilium/cilium/pkg/policy.NamedPortsMap; policyRevision uint64; policyRevisionSignals map[*github.com/cilium/cilium/pkg/endpoint.policySignal]bool; proxyPolicyRevision uint64; proxyStatisticsMutex github.com/cilium/cilium/pkg/lock.RWMutex; proxy github.com/cilium/cilium/pkg/endpoint.EndpointProxy; proxyStatistics map[string]*github.com/cilium/cilium/api/v1/models.ProxyStatistics; nextPolicyRevision uint64; forcePolicyCompute bool; buildMutex github.com/cilium/cilium/pkg/lock.Mutex; logger unsafe.Pointer; controllers *github.com/cilium/cilium/pkg/controller.Manager; realizedRedirects map[string]uint16; ctCleaned bool; hasBPFProgram chan struct{}; selectorPolicy github.com/cilium/cilium/pkg/policy.SelectorPolicy; desiredPolicy *github.com/cilium/cilium/pkg/policy.EndpointPolicy; realizedPolicy *github.com/cilium/cilium/pkg/policy.EndpointPolicy; visibilityPolicy *github.com/cilium/cilium/pkg/policy.VisibilityPolicy; eventQueue *github.com/cilium/cilium/pkg/eventqueue.EventQueue; skippedRegenerationLevel github.com/cilium/cilium/pkg/endpoint/regeneration.DatapathRegenerationLevel; DatapathConfiguration github.com/cilium/cilium/api/v1/models.EndpointDatapathConfiguration; aliveCtx context.Context; aliveCancel context.CancelFunc; regenFailedChan chan struct{}; exposed chan struct{}; allocator github.com/cilium/cilium/pkg/identity/cache.IdentityAllocator; isHost bool}",
      "type" : "Struct",
      "underlying" : 1
    }, {
      "local-name" : "Owner",
      "name" : "github.com/cilium/cilium/pkg/endpoint/regeneration.Owner",
      "package" : 1,
      "type" : "Named",
      "underlying" : 3
    }, {
      "methods" : [ {
        "name" : "Datapath",
        "type" : 4
      }, {
        "name" : "GetCIDRPrefixLengths",
        "type" : 343
      }, {
        "name" : "GetCompilationLock",
        "type" : 344
      }, {
        "name" : "GetPolicyRepository",
        "type" : 345
      }, {
        "name" : "QueueEndpointBuild",
        "type" : 555
      }, {
        "name" : "SendNotification",
        "type" : 559
      } ],
      "name" : "interface{Datapath() github.com/cilium/cilium/pkg/datapath.Datapath; GetCIDRPrefixLengths() (s6 []int, s4 []int); GetCompilationLock() *github.com/cilium/cilium/pkg/lock.RWMutex; GetPolicyRepository() *github.com/cilium/cilium/pkg/policy.Repository; QueueEndpointBuild(ctx context.Context, epID uint64) (func(), error); SendNotification(typ github.com/cilium/cilium/pkg/monitor/api.AgentNotification, text string) error}",
      "type" : "Interface",
      "underlying" : 3
    }, {
      "name" : "(github.com/cilium/cilium/pkg/endpoint/regeneration.Owner) func() github.com/cilium/cilium/pkg/datapath.Datapath",
      "params" : 5,
      "recv" : 58,
      "results" : 6,
      "type" : "Signature",
      "underlying" : 4,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 5
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 7
      } ],
      "name" : "(github.com/cilium/cilium/pkg/datapath.Datapath)",
      "type" : "Tuple",
      "underlying" : 6
    }, {
      "local-name" : "Datapath",
      "name" : "github.com/cilium/cilium/pkg/datapath.Datapath",
      "package" : 2,
      "type" : "Named",
      "underlying" : 8
    }, {
      "methods" : [ {
        "name" : "InstallProxyRules",
        "type" : 9
      }, {
        "name" : "InstallRules",
        "type" : 21
      }, {
        "name" : "Loader",
        "type" : 28
      }, {
        "name" : "LocalNodeAddressing",
        "type" : 295
      }, {
        "name" : "Node",
        "type" : 312
      }, {
        "name" : "RemoveProxyRules",
        "type" : 9
      }, {
        "name" : "RemoveRules",
        "type" : 23
      }, {
        "name" : "SetupIPVLAN",
        "type" : 332
      }, {
        "name" : "SupportsOriginalSourceAddr",
        "type" : 24
      }, {
        "name" : "TransientRulesEnd",
        "type" : 26
      }, {
        "name" : "TransientRulesStart",
        "type" : 21
      }, {
        "name" : "WriteEndpointConfig",
        "type" : 335
      }, {
        "name" : "WriteNetdevConfig",
        "type" : 339
      }, {
        "name" : "WriteNodeConfig",
        "type" : 341
      }, {
        "name" : "WriteTemplateConfig",
        "type" : 335
      } ],
      "name" : "interface{Loader() github.com/cilium/cilium/pkg/datapath.Loader; LocalNodeAddressing() github.com/cilium/cilium/pkg/datapath.NodeAddressing; Node() github.com/cilium/cilium/pkg/datapath.NodeHandler; SetupIPVLAN(netNS string) (int, int, error); github.com/cilium/cilium/pkg/datapath.ConfigWriter; github.com/cilium/cilium/pkg/datapath.IptablesManager}",
      "type" : "Interface",
      "underlying" : 8
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.IptablesManager) func(proxyPort uint16, ingress bool, name string) error",
      "params" : 10,
      "recv" : 5,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 9,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "proxyPort",
        "type" : 11
      }, {
        "name" : "ingress",
        "type" : 12
      }, {
        "name" : "name",
        "type" : 13
      } ],
      "name" : "(proxyPort uint16, ingress bool, name string)",
      "type" : "Tuple",
      "underlying" : 10
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 11
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 12
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 15
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 14
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 16
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 17
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 16
    }, {
      "name" : "(error) func() string",
      "params" : 5,
      "recv" : 0,
      "results" : 18,
      "type" : "Signature",
      "underlying" : 17,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 13
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 18
    }, {
      "local-name" : "IptablesManager",
      "name" : "github.com/cilium/cilium/pkg/datapath.IptablesManager",
      "package" : 2,
      "type" : "Named",
      "underlying" : 20
    }, {
      "methods" : [ {
        "name" : "InstallProxyRules",
        "type" : 9
      }, {
        "name" : "InstallRules",
        "type" : 21
      }, {
        "name" : "RemoveProxyRules",
        "type" : 9
      }, {
        "name" : "RemoveRules",
        "type" : 23
      }, {
        "name" : "SupportsOriginalSourceAddr",
        "type" : 24
      }, {
        "name" : "TransientRulesEnd",
        "type" : 26
      }, {
        "name" : "TransientRulesStart",
        "type" : 21
      } ],
      "name" : "interface{InstallProxyRules(proxyPort uint16, ingress bool, name string) error; InstallRules(ifName string) error; RemoveProxyRules(proxyPort uint16, ingress bool, name string) error; RemoveRules(); SupportsOriginalSourceAddr() bool; TransientRulesEnd(quiet bool); TransientRulesStart(ifName string) error}",
      "type" : "Interface",
      "underlying" : 20
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.IptablesManager) func(ifName string) error",
      "params" : 22,
      "recv" : 1,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 21,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ifName",
        "type" : 13
      } ],
      "name" : "(ifName string)",
      "type" : "Tuple",
      "underlying" : 22
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.IptablesManager) func()",
      "params" : 5,
      "recv" : 2,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 23,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.IptablesManager) func() bool",
      "params" : 5,
      "recv" : 3,
      "results" : 25,
      "type" : "Signature",
      "underlying" : 24,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 12
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 25
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.IptablesManager) func(quiet bool)",
      "params" : 27,
      "recv" : 4,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 26,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "quiet",
        "type" : 12
      } ],
      "name" : "(quiet bool)",
      "type" : "Tuple",
      "underlying" : 27
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.Datapath) func() github.com/cilium/cilium/pkg/datapath.Loader",
      "params" : 5,
      "recv" : 42,
      "results" : 29,
      "type" : "Signature",
      "underlying" : 28,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 30
      } ],
      "name" : "(github.com/cilium/cilium/pkg/datapath.Loader)",
      "type" : "Tuple",
      "underlying" : 29
    }, {
      "local-name" : "Loader",
      "name" : "github.com/cilium/cilium/pkg/datapath.Loader",
      "package" : 2,
      "type" : "Named",
      "underlying" : 31
    }, {
      "methods" : [ {
        "name" : "CallsMapPath",
        "type" : 32
      }, {
        "name" : "CompileAndLoad",
        "type" : 34
      }, {
        "name" : "CompileOrLoad",
        "type" : 34
      }, {
        "name" : "DeleteDatapath",
        "type" : 243
      }, {
        "name" : "EndpointHash",
        "type" : 245
      }, {
        "name" : "Reinitialize",
        "type" : 250
      }, {
        "name" : "ReloadDatapath",
        "type" : 34
      }, {
        "name" : "Unload",
        "type" : 293
      } ],
      "name" : "interface{CallsMapPath(id uint16) string; CompileAndLoad(ctx context.Context, ep github.com/cilium/cilium/pkg/datapath.Endpoint, stats *github.com/cilium/cilium/pkg/datapath/loader/metrics.SpanStat) error; CompileOrLoad(ctx context.Context, ep github.com/cilium/cilium/pkg/datapath.Endpoint, stats *github.com/cilium/cilium/pkg/datapath/loader/metrics.SpanStat) error; DeleteDatapath(ctx context.Context, ifName string, direction string) error; EndpointHash(cfg github.com/cilium/cilium/pkg/datapath.EndpointConfiguration) (string, error); Reinitialize(ctx context.Context, o github.com/cilium/cilium/pkg/datapath.BaseProgramOwner, deviceMTU int, iptMgr github.com/cilium/cilium/pkg/datapath.IptablesManager, p github.com/cilium/cilium/pkg/datapath.Proxy, r github.com/cilium/cilium/pkg/datapath.RouteReserver) error; ReloadDatapath(ctx context.Context, ep github.com/cilium/cilium/pkg/datapath.Endpoint, stats *github.com/cilium/cilium/pkg/datapath/loader/metrics.SpanStat) error; Unload(ep github.com/cilium/cilium/pkg/datapath.Endpoint)}",
      "type" : "Interface",
      "underlying" : 31
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.Loader) func(id uint16) string",
      "params" : 33,
      "recv" : 6,
      "results" : 18,
      "type" : "Signature",
      "underlying" : 32,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "id",
        "type" : 11
      } ],
      "name" : "(id uint16)",
      "type" : "Tuple",
      "underlying" : 33
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.Loader) func(ctx context.Context, ep github.com/cilium/cilium/pkg/datapath.Endpoint, stats *github.com/cilium/cilium/pkg/datapath/loader/metrics.SpanStat) error",
      "params" : 35,
      "recv" : 28,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 34,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ctx",
        "type" : 36
      }, {
        "name" : "ep",
        "type" : 65
      }, {
        "name" : "stats",
        "type" : 237
      } ],
      "name" : "(ctx context.Context, ep github.com/cilium/cilium/pkg/datapath.Endpoint, stats *github.com/cilium/cilium/pkg/datapath/loader/metrics.SpanStat)",
      "type" : "Tuple",
      "underlying" : 35
    }, {
      "local-name" : "Context",
      "name" : "context.Context",
      "package" : 3,
      "type" : "Named",
      "underlying" : 37
    }, {
      "methods" : [ {
        "name" : "Deadline",
        "type" : 38
      }, {
        "name" : "Done",
        "type" : 56
      }, {
        "name" : "Err",
        "type" : 60
      }, {
        "name" : "Value",
        "type" : 61
      } ],
      "name" : "interface{Deadline() (deadline time.Time, ok bool); Done() <-chan struct{}; Err() error; Value(key interface{}) interface{}}",
      "type" : "Interface",
      "underlying" : 37
    }, {
      "name" : "(context.Context) func() (deadline time.Time, ok bool)",
      "params" : 5,
      "recv" : 7,
      "results" : 39,
      "type" : "Signature",
      "underlying" : 38,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "deadline",
        "type" : 40
      }, {
        "name" : "ok",
        "type" : 12
      } ],
      "name" : "(deadline time.Time, ok bool)",
      "type" : "Tuple",
      "underlying" : 39
    }, {
      "local-name" : "Time",
      "name" : "time.Time",
      "package" : 4,
      "type" : "Named",
      "underlying" : 41
    }, {
      "fields" : [ {
        "name" : "wall",
        "type" : 42
      }, {
        "name" : "ext",
        "type" : 43
      }, {
        "name" : "loc",
        "type" : 44
      } ],
      "name" : "struct{wall uint64; ext int64; loc *time.Location}",
      "type" : "Struct",
      "underlying" : 41
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 42
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 43
    }, {
      "elem" : 45,
      "name" : "*time.Location",
      "type" : "Pointer",
      "underlying" : 44
    }, {
      "local-name" : "Location",
      "name" : "time.Location",
      "package" : 4,
      "type" : "Named",
      "underlying" : 46
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 13
      }, {
        "name" : "zone",
        "type" : 47
      }, {
        "name" : "tx",
        "type" : 51
      }, {
        "name" : "cacheStart",
        "type" : 43
      }, {
        "name" : "cacheEnd",
        "type" : 43
      }, {
        "name" : "cacheZone",
        "type" : 55
      } ],
      "name" : "struct{name string; zone []time.zone; tx []time.zoneTrans; cacheStart int64; cacheEnd int64; cacheZone *time.zone}",
      "type" : "Struct",
      "underlying" : 46
    }, {
      "elem" : 48,
      "name" : "[]time.zone",
      "type" : "Slice",
      "underlying" : 47
    }, {
      "local-name" : "zone",
      "name" : "time.zone",
      "package" : 4,
      "type" : "Named",
      "underlying" : 49
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 13
      }, {
        "name" : "offset",
        "type" : 50
      }, {
        "name" : "isDST",
        "type" : 12
      } ],
      "name" : "struct{name string; offset int; isDST bool}",
      "type" : "Struct",
      "underlying" : 49
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 50
    }, {
      "elem" : 52,
      "name" : "[]time.zoneTrans",
      "type" : "Slice",
      "underlying" : 51
    }, {
      "local-name" : "zoneTrans",
      "name" : "time.zoneTrans",
      "package" : 4,
      "type" : "Named",
      "underlying" : 53
    }, {
      "fields" : [ {
        "name" : "when",
        "type" : 43
      }, {
        "name" : "index",
        "type" : 54
      }, {
        "name" : "isstd",
        "type" : 12
      }, {
        "name" : "isutc",
        "type" : 12
      } ],
      "name" : "struct{when int64; index uint8; isstd bool; isutc bool}",
      "type" : "Struct",
      "underlying" : 53
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 54
    }, {
      "elem" : 48,
      "name" : "*time.zone",
      "type" : "Pointer",
      "underlying" : 55
    }, {
      "name" : "(context.Context) func() <-chan struct{}",
      "params" : 5,
      "recv" : 8,
      "results" : 57,
      "type" : "Signature",
      "underlying" : 56,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 58
      } ],
      "name" : "(<-chan struct{})",
      "type" : "Tuple",
      "underlying" : 57
    }, {
      "dir" : "recv",
      "elem" : 59,
      "name" : "<-chan struct{}",
      "type" : "Chan",
      "underlying" : 58
    }, {
      "fields" : [ ],
      "name" : "struct{}",
      "type" : "Struct",
      "underlying" : 59
    }, {
      "name" : "(context.Context) func() error",
      "params" : 5,
      "recv" : 9,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 60,
      "variadic" : false
    }, {
      "name" : "(context.Context) func(key interface{}) interface{}",
      "params" : 62,
      "recv" : 10,
      "results" : 64,
      "type" : "Signature",
      "underlying" : 61,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 63
      } ],
      "name" : "(key interface{})",
      "type" : "Tuple",
      "underlying" : 62
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 63
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 63
      } ],
      "name" : "(interface{})",
      "type" : "Tuple",
      "underlying" : 64
    }, {
      "local-name" : "Endpoint",
      "name" : "github.com/cilium/cilium/pkg/datapath.Endpoint",
      "package" : 2,
      "type" : "Named",
      "underlying" : 66
    }, {
      "methods" : [ {
        "name" : "ConntrackLocalLocked",
        "type" : 67
      }, {
        "name" : "GetCIDRPrefixLengths",
        "type" : 70
      }, {
        "name" : "GetID",
        "type" : 112
      }, {
        "name" : "GetIdentity",
        "type" : 116
      }, {
        "name" : "GetNodeMAC",
        "type" : 119
      }, {
        "name" : "GetOptions",
        "type" : 75
      }, {
        "name" : "GetPolicyVerdictLogFilter",
        "type" : 110
      }, {
        "name" : "HasIpvlanDataPath",
        "type" : 67
      }, {
        "name" : "IPv4Address",
        "type" : 124
      }, {
        "name" : "IPv6Address",
        "type" : 127
      }, {
        "name" : "InterfaceName",
        "type" : 131
      }, {
        "name" : "IsHost",
        "type" : 132
      }, {
        "name" : "Logger",
        "type" : 133
      }, {
        "name" : "MapPath",
        "type" : 131
      }, {
        "name" : "RequireARPPassthrough",
        "type" : 67
      }, {
        "name" : "RequireEgressProg",
        "type" : 67
      }, {
        "name" : "RequireEndpointRoute",
        "type" : 67
      }, {
        "name" : "RequireRouting",
        "type" : 67
      }, {
        "name" : "StateDir",
        "type" : 131
      }, {
        "name" : "StringID",
        "type" : 130
      } ],
      "name" : "interface{InterfaceName() string; IsHost() bool; Logger(subsystem string) *github.com/sirupsen/logrus.Entry; MapPath() string; StateDir() string; github.com/cilium/cilium/pkg/datapath.EndpointConfiguration}",
      "type" : "Interface",
      "underlying" : 66
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.CompileTimeConfiguration) func() bool",
      "params" : 5,
      "recv" : 14,
      "results" : 25,
      "type" : "Signature",
      "underlying" : 67,
      "variadic" : false
    }, {
      "local-name" : "CompileTimeConfiguration",
      "name" : "github.com/cilium/cilium/pkg/datapath.CompileTimeConfiguration",
      "package" : 2,
      "type" : "Named",
      "underlying" : 69
    }, {
      "methods" : [ {
        "name" : "ConntrackLocalLocked",
        "type" : 67
      }, {
        "name" : "GetCIDRPrefixLengths",
        "type" : 70
      }, {
        "name" : "GetOptions",
        "type" : 75
      }, {
        "name" : "GetPolicyVerdictLogFilter",
        "type" : 110
      }, {
        "name" : "HasIpvlanDataPath",
        "type" : 67
      }, {
        "name" : "IsHost",
        "type" : 67
      }, {
        "name" : "RequireARPPassthrough",
        "type" : 67
      }, {
        "name" : "RequireEgressProg",
        "type" : 67
      }, {
        "name" : "RequireEndpointRoute",
        "type" : 67
      }, {
        "name" : "RequireRouting",
        "type" : 67
      } ],
      "name" : "interface{ConntrackLocalLocked() bool; GetPolicyVerdictLogFilter() uint32; HasIpvlanDataPath() bool; IsHost() bool; RequireARPPassthrough() bool; RequireEgressProg() bool; RequireEndpointRoute() bool; RequireRouting() bool; github.com/cilium/cilium/pkg/datapath.DeviceConfiguration}",
      "type" : "Interface",
      "underlying" : 69
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.DeviceConfiguration) func() (s6 []int, s4 []int)",
      "params" : 5,
      "recv" : 12,
      "results" : 71,
      "type" : "Signature",
      "underlying" : 70,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "s6",
        "type" : 72
      }, {
        "name" : "s4",
        "type" : 72
      } ],
      "name" : "(s6 []int, s4 []int)",
      "type" : "Tuple",
      "underlying" : 71
    }, {
      "elem" : 50,
      "name" : "[]int",
      "type" : "Slice",
      "underlying" : 72
    }, {
      "local-name" : "DeviceConfiguration",
      "name" : "github.com/cilium/cilium/pkg/datapath.DeviceConfiguration",
      "package" : 2,
      "type" : "Named",
      "underlying" : 74
    }, {
      "methods" : [ {
        "name" : "GetCIDRPrefixLengths",
        "type" : 70
      }, {
        "name" : "GetOptions",
        "type" : 75
      } ],
      "name" : "interface{GetCIDRPrefixLengths() (s6 []int, s4 []int); GetOptions() *github.com/cilium/cilium/pkg/option.IntOptions}",
      "type" : "Interface",
      "underlying" : 74
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.DeviceConfiguration) func() *github.com/cilium/cilium/pkg/option.IntOptions",
      "params" : 5,
      "recv" : 11,
      "results" : 76,
      "type" : "Signature",
      "underlying" : 75,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 77
      } ],
      "name" : "(*github.com/cilium/cilium/pkg/option.IntOptions)",
      "type" : "Tuple",
      "underlying" : 76
    }, {
      "elem" : 78,
      "name" : "*github.com/cilium/cilium/pkg/option.IntOptions",
      "type" : "Pointer",
      "underlying" : 77
    }, {
      "local-name" : "IntOptions",
      "name" : "github.com/cilium/cilium/pkg/option.IntOptions",
      "package" : 5,
      "type" : "Named",
      "underlying" : 79
    }, {
      "fields" : [ {
        "name" : "optsMU",
        "type" : 80
      }, {
        "name" : "Opts",
        "type" : 90
      }, {
        "name" : "Library",
        "type" : 93
      } ],
      "name" : "struct{optsMU github.com/cilium/cilium/pkg/lock.RWMutex; Opts github.com/cilium/cilium/pkg/option.OptionMap \"json:\\\"map\\\"\"; Library *github.com/cilium/cilium/pkg/option.OptionLibrary \"json:\\\"-\\\"\"}",
      "type" : "Struct",
      "underlying" : 79
    }, {
      "local-name" : "RWMutex",
      "name" : "github.com/cilium/cilium/pkg/lock.RWMutex",
      "package" : 6,
      "type" : "Named",
      "underlying" : 81
    }, {
      "fields" : [ {
        "name" : "internalRWMutex",
        "type" : 82
      } ],
      "name" : "struct{github.com/cilium/cilium/pkg/lock.internalRWMutex}",
      "type" : "Struct",
      "underlying" : 81
    }, {
      "local-name" : "internalRWMutex",
      "name" : "github.com/cilium/cilium/pkg/lock.internalRWMutex",
      "package" : 6,
      "type" : "Named",
      "underlying" : 83
    }, {
      "fields" : [ {
        "name" : "RWMutex",
        "type" : 84
      } ],
      "name" : "struct{sync.RWMutex}",
      "type" : "Struct",
      "underlying" : 83
    }, {
      "local-name" : "RWMutex",
      "name" : "sync.RWMutex",
      "package" : 7,
      "type" : "Named",
      "underlying" : 85
    }, {
      "fields" : [ {
        "name" : "w",
        "type" : 86
      }, {
        "name" : "writerSem",
        "type" : 89
      }, {
        "name" : "readerSem",
        "type" : 89
      }, {
        "name" : "readerCount",
        "type" : 88
      }, {
        "name" : "readerWait",
        "type" : 88
      } ],
      "name" : "struct{w sync.Mutex; writerSem uint32; readerSem uint32; readerCount int32; readerWait int32}",
      "type" : "Struct",
      "underlying" : 85
    }, {
      "local-name" : "Mutex",
      "name" : "sync.Mutex",
      "package" : 7,
      "type" : "Named",
      "underlying" : 87
    }, {
      "fields" : [ {
        "name" : "state",
        "type" : 88
      }, {
        "name" : "sema",
        "type" : 89
      } ],
      "name" : "struct{state int32; sema uint32}",
      "type" : "Struct",
      "underlying" : 87
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 88
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 89
    }, {
      "local-name" : "OptionMap",
      "name" : "github.com/cilium/cilium/pkg/option.OptionMap",
      "package" : 5,
      "type" : "Named",
      "underlying" : 91
    }, {
      "elem" : 92,
      "key" : 13,
      "name" : "map[string]github.com/cilium/cilium/pkg/option.OptionSetting",
      "type" : "Map",
      "underlying" : 91
    }, {
      "local-name" : "OptionSetting",
      "name" : "github.com/cilium/cilium/pkg/option.OptionSetting",
      "package" : 5,
      "type" : "Named",
      "underlying" : 50
    }, {
      "elem" : 94,
      "name" : "*github.com/cilium/cilium/pkg/option.OptionLibrary",
      "type" : "Pointer",
      "underlying" : 93
    }, {
      "local-name" : "OptionLibrary",
      "name" : "github.com/cilium/cilium/pkg/option.OptionLibrary",
      "package" : 5,
      "type" : "Named",
      "underlying" : 95
    }, {
      "elem" : 96,
      "key" : 13,
      "name" : "map[string]*github.com/cilium/cilium/pkg/option.Option",
      "type" : "Map",
      "underlying" : 95
    }, {
      "elem" : 97,
      "name" : "*github.com/cilium/cilium/pkg/option.Option",
      "type" : "Pointer",
      "underlying" : 96
    }, {
      "local-name" : "Option",
      "name" : "github.com/cilium/cilium/pkg/option.Option",
      "package" : 5,
      "type" : "Named",
      "underlying" : 98
    }, {
      "fields" : [ {
        "name" : "Define",
        "type" : 13
      }, {
        "name" : "Description",
        "type" : 13
      }, {
        "name" : "Immutable",
        "type" : 12
      }, {
        "name" : "Requires",
        "type" : 99
      }, {
        "name" : "Parse",
        "type" : 100
      }, {
        "name" : "Format",
        "type" : 104
      }, {
        "name" : "Verify",
        "type" : 107
      } ],
      "name" : "struct{Define string; Description string; Immutable bool; Requires []string; Parse github.com/cilium/cilium/pkg/option.ParseFunc; Format github.com/cilium/cilium/pkg/option.FormatFunc; Verify github.com/cilium/cilium/pkg/option.VerifyFunc}",
      "type" : "Struct",
      "underlying" : 98
    }, {
      "elem" : 13,
      "name" : "[]string",
      "type" : "Slice",
      "underlying" : 99
    }, {
      "local-name" : "ParseFunc",
      "name" : "github.com/cilium/cilium/pkg/option.ParseFunc",
      "package" : 5,
      "type" : "Named",
      "underlying" : 101
    }, {
      "name" : "func(value string) (github.com/cilium/cilium/pkg/option.OptionSetting, error)",
      "params" : 102,
      "recv" : -1,
      "results" : 103,
      "type" : "Signature",
      "underlying" : 101,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "value",
        "type" : 13
      } ],
      "name" : "(value string)",
      "type" : "Tuple",
      "underlying" : 102
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 92
      }, {
        "name" : "",
        "type" : 15
      } ],
      "name" : "(github.com/cilium/cilium/pkg/option.OptionSetting, error)",
      "type" : "Tuple",
      "underlying" : 103
    }, {
      "local-name" : "FormatFunc",
      "name" : "github.com/cilium/cilium/pkg/option.FormatFunc",
      "package" : 5,
      "type" : "Named",
      "underlying" : 105
    }, {
      "name" : "func(value github.com/cilium/cilium/pkg/option.OptionSetting) string",
      "params" : 106,
      "recv" : -1,
      "results" : 18,
      "type" : "Signature",
      "underlying" : 105,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "value",
        "type" : 92
      } ],
      "name" : "(value github.com/cilium/cilium/pkg/option.OptionSetting)",
      "type" : "Tuple",
      "underlying" : 106
    }, {
      "local-name" : "VerifyFunc",
      "name" : "github.com/cilium/cilium/pkg/option.VerifyFunc",
      "package" : 5,
      "type" : "Named",
      "underlying" : 108
    }, {
      "name" : "func(key string, value string) error",
      "params" : 109,
      "recv" : -1,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 108,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 13
      }, {
        "name" : "value",
        "type" : 13
      } ],
      "name" : "(key string, value string)",
      "type" : "Tuple",
      "underlying" : 109
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.CompileTimeConfiguration) func() uint32",
      "params" : 5,
      "recv" : 13,
      "results" : 111,
      "type" : "Signature",
      "underlying" : 110,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 89
      } ],
      "name" : "(uint32)",
      "type" : "Tuple",
      "underlying" : 111
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.LoadTimeConfiguration) func() uint64",
      "params" : 5,
      "recv" : 20,
      "results" : 113,
      "type" : "Signature",
      "underlying" : 112,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 42
      } ],
      "name" : "(uint64)",
      "type" : "Tuple",
      "underlying" : 113
    }, {
      "local-name" : "LoadTimeConfiguration",
      "name" : "github.com/cilium/cilium/pkg/datapath.LoadTimeConfiguration",
      "package" : 2,
      "type" : "Named",
      "underlying" : 115
    }, {
      "methods" : [ {
        "name" : "GetID",
        "type" : 112
      }, {
        "name" : "GetIdentity",
        "type" : 116
      }, {
        "name" : "GetNodeMAC",
        "type" : 119
      }, {
        "name" : "IPv4Address",
        "type" : 124
      }, {
        "name" : "IPv6Address",
        "type" : 127
      }, {
        "name" : "StringID",
        "type" : 130
      } ],
      "name" : "interface{GetID() uint64; GetIdentity() github.com/cilium/cilium/pkg/identity.NumericIdentity; GetNodeMAC() github.com/cilium/cilium/pkg/mac.MAC; IPv4Address() github.com/cilium/cilium/pkg/addressing.CiliumIPv4; IPv6Address() github.com/cilium/cilium/pkg/addressing.CiliumIPv6; StringID() string}",
      "type" : "Interface",
      "underlying" : 115
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.LoadTimeConfiguration) func() github.com/cilium/cilium/pkg/identity.NumericIdentity",
      "params" : 5,
      "recv" : 15,
      "results" : 117,
      "type" : "Signature",
      "underlying" : 116,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 118
      } ],
      "name" : "(github.com/cilium/cilium/pkg/identity.NumericIdentity)",
      "type" : "Tuple",
      "underlying" : 117
    }, {
      "local-name" : "NumericIdentity",
      "name" : "github.com/cilium/cilium/pkg/identity.NumericIdentity",
      "package" : 8,
      "type" : "Named",
      "underlying" : 89
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.LoadTimeConfiguration) func() github.com/cilium/cilium/pkg/mac.MAC",
      "params" : 5,
      "recv" : 16,
      "results" : 120,
      "type" : "Signature",
      "underlying" : 119,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 121
      } ],
      "name" : "(github.com/cilium/cilium/pkg/mac.MAC)",
      "type" : "Tuple",
      "underlying" : 120
    }, {
      "local-name" : "MAC",
      "name" : "github.com/cilium/cilium/pkg/mac.MAC",
      "package" : 9,
      "type" : "Named",
      "underlying" : 122
    }, {
      "elem" : 123,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 122
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 123
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.LoadTimeConfiguration) func() github.com/cilium/cilium/pkg/addressing.CiliumIPv4",
      "params" : 5,
      "recv" : 17,
      "results" : 125,
      "type" : "Signature",
      "underlying" : 124,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 126
      } ],
      "name" : "(github.com/cilium/cilium/pkg/addressing.CiliumIPv4)",
      "type" : "Tuple",
      "underlying" : 125
    }, {
      "local-name" : "CiliumIPv4",
      "name" : "github.com/cilium/cilium/pkg/addressing.CiliumIPv4",
      "package" : 10,
      "type" : "Named",
      "underlying" : 122
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.LoadTimeConfiguration) func() github.com/cilium/cilium/pkg/addressing.CiliumIPv6",
      "params" : 5,
      "recv" : 18,
      "results" : 128,
      "type" : "Signature",
      "underlying" : 127,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 129
      } ],
      "name" : "(github.com/cilium/cilium/pkg/addressing.CiliumIPv6)",
      "type" : "Tuple",
      "underlying" : 128
    }, {
      "local-name" : "CiliumIPv6",
      "name" : "github.com/cilium/cilium/pkg/addressing.CiliumIPv6",
      "package" : 10,
      "type" : "Named",
      "underlying" : 122
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.LoadTimeConfiguration) func() string",
      "params" : 5,
      "recv" : 19,
      "results" : 18,
      "type" : "Signature",
      "underlying" : 130,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.Endpoint) func() string",
      "params" : 5,
      "recv" : 21,
      "results" : 18,
      "type" : "Signature",
      "underlying" : 131,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.Endpoint) func() bool",
      "params" : 5,
      "recv" : 22,
      "results" : 25,
      "type" : "Signature",
      "underlying" : 132,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.Endpoint) func(subsystem string) *github.com/sirupsen/logrus.Entry",
      "params" : 134,
      "recv" : 27,
      "results" : 135,
      "type" : "Signature",
      "underlying" : 133,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "subsystem",
        "type" : 13
      } ],
      "name" : "(subsystem string)",
      "type" : "Tuple",
      "underlying" : 134
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 136
      } ],
      "name" : "(*github.com/sirupsen/logrus.Entry)",
      "type" : "Tuple",
      "underlying" : 135
    }, {
      "elem" : 137,
      "name" : "*github.com/sirupsen/logrus.Entry",
      "type" : "Pointer",
      "underlying" : 136
    }, {
      "local-name" : "Entry",
      "name" : "github.com/sirupsen/logrus.Entry",
      "package" : 11,
      "type" : "Named",
      "underlying" : 138
    }, {
      "fields" : [ {
        "name" : "Logger",
        "type" : 139
      }, {
        "name" : "Data",
        "type" : 172
      }, {
        "name" : "Time",
        "type" : 40
      }, {
        "name" : "Level",
        "type" : 156
      }, {
        "name" : "Caller",
        "type" : 174
      }, {
        "name" : "Message",
        "type" : 13
      }, {
        "name" : "Buffer",
        "type" : 233
      }, {
        "name" : "Context",
        "type" : 36
      }, {
        "name" : "err",
        "type" : 13
      } ],
      "name" : "struct{Logger *github.com/sirupsen/logrus.Logger; Data github.com/sirupsen/logrus.Fields; Time time.Time; Level github.com/sirupsen/logrus.Level; Caller *runtime.Frame; Message string; Buffer *bytes.Buffer; Context context.Context; err string}",
      "type" : "Struct",
      "underlying" : 138
    }, {
      "elem" : 140,
      "name" : "*github.com/sirupsen/logrus.Logger",
      "type" : "Pointer",
      "underlying" : 139
    }, {
      "local-name" : "Logger",
      "name" : "github.com/sirupsen/logrus.Logger",
      "package" : 11,
      "type" : "Named",
      "underlying" : 141
    }, {
      "fields" : [ {
        "name" : "Out",
        "type" : 142
      }, {
        "name" : "Hooks",
        "type" : 147
      }, {
        "name" : "Formatter",
        "type" : 157
      }, {
        "name" : "ReportCaller",
        "type" : 12
      }, {
        "name" : "Level",
        "type" : 156
      }, {
        "name" : "mu",
        "type" : 161
      }, {
        "name" : "entryPool",
        "type" : 163
      }, {
        "name" : "ExitFunc",
        "type" : 169
      } ],
      "name" : "struct{Out io.Writer; Hooks github.com/sirupsen/logrus.LevelHooks; Formatter github.com/sirupsen/logrus.Formatter; ReportCaller bool; Level github.com/sirupsen/logrus.Level; mu github.com/sirupsen/logrus.MutexWrap; entryPool sync.Pool; ExitFunc github.com/sirupsen/logrus.exitFunc}",
      "type" : "Struct",
      "underlying" : 141
    }, {
      "local-name" : "Writer",
      "name" : "io.Writer",
      "package" : 12,
      "type" : "Named",
      "underlying" : 143
    }, {
      "methods" : [ {
        "name" : "Write",
        "type" : 144
      } ],
      "name" : "interface{Write(p []byte) (n int, err error)}",
      "type" : "Interface",
      "underlying" : 143
    }, {
      "name" : "(io.Writer) func(p []byte) (n int, err error)",
      "params" : 145,
      "recv" : 23,
      "results" : 146,
      "type" : "Signature",
      "underlying" : 144,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "p",
        "type" : 122
      } ],
      "name" : "(p []byte)",
      "type" : "Tuple",
      "underlying" : 145
    }, {
      "fields" : [ {
        "name" : "n",
        "type" : 50
      }, {
        "name" : "err",
        "type" : 15
      } ],
      "name" : "(n int, err error)",
      "type" : "Tuple",
      "underlying" : 146
    }, {
      "local-name" : "LevelHooks",
      "name" : "github.com/sirupsen/logrus.LevelHooks",
      "package" : 11,
      "type" : "Named",
      "underlying" : 148
    }, {
      "elem" : 149,
      "key" : 156,
      "name" : "map[github.com/sirupsen/logrus.Level][]github.com/sirupsen/logrus.Hook",
      "type" : "Map",
      "underlying" : 148
    }, {
      "elem" : 150,
      "name" : "[]github.com/sirupsen/logrus.Hook",
      "type" : "Slice",
      "underlying" : 149
    }, {
      "local-name" : "Hook",
      "name" : "github.com/sirupsen/logrus.Hook",
      "package" : 11,
      "type" : "Named",
      "underlying" : 151
    }, {
      "methods" : [ {
        "name" : "Fire",
        "type" : 152
      }, {
        "name" : "Levels",
        "type" : 153
      } ],
      "name" : "interface{Fire(*github.com/sirupsen/logrus.Entry) error; Levels() []github.com/sirupsen/logrus.Level}",
      "type" : "Interface",
      "underlying" : 151
    }, {
      "name" : "(github.com/sirupsen/logrus.Hook) func(*github.com/sirupsen/logrus.Entry) error",
      "params" : 135,
      "recv" : 24,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 152,
      "variadic" : false
    }, {
      "name" : "(github.com/sirupsen/logrus.Hook) func() []github.com/sirupsen/logrus.Level",
      "params" : 5,
      "recv" : 25,
      "results" : 154,
      "type" : "Signature",
      "underlying" : 153,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 155
      } ],
      "name" : "([]github.com/sirupsen/logrus.Level)",
      "type" : "Tuple",
      "underlying" : 154
    }, {
      "elem" : 156,
      "name" : "[]github.com/sirupsen/logrus.Level",
      "type" : "Slice",
      "underlying" : 155
    }, {
      "local-name" : "Level",
      "name" : "github.com/sirupsen/logrus.Level",
      "package" : 11,
      "type" : "Named",
      "underlying" : 89
    }, {
      "local-name" : "Formatter",
      "name" : "github.com/sirupsen/logrus.Formatter",
      "package" : 11,
      "type" : "Named",
      "underlying" : 158
    }, {
      "methods" : [ {
        "name" : "Format",
        "type" : 159
      } ],
      "name" : "interface{Format(*github.com/sirupsen/logrus.Entry) ([]byte, error)}",
      "type" : "Interface",
      "underlying" : 158
    }, {
      "name" : "(github.com/sirupsen/logrus.Formatter) func(*github.com/sirupsen/logrus.Entry) ([]byte, error)",
      "params" : 135,
      "recv" : 26,
      "results" : 160,
      "type" : "Signature",
      "underlying" : 159,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 122
      }, {
        "name" : "",
        "type" : 15
      } ],
      "name" : "([]byte, error)",
      "type" : "Tuple",
      "underlying" : 160
    }, {
      "local-name" : "MutexWrap",
      "name" : "github.com/sirupsen/logrus.MutexWrap",
      "package" : 11,
      "type" : "Named",
      "underlying" : 162
    }, {
      "fields" : [ {
        "name" : "lock",
        "type" : 86
      }, {
        "name" : "disabled",
        "type" : 12
      } ],
      "name" : "struct{lock sync.Mutex; disabled bool}",
      "type" : "Struct",
      "underlying" : 162
    }, {
      "local-name" : "Pool",
      "name" : "sync.Pool",
      "package" : 7,
      "type" : "Named",
      "underlying" : 164
    }, {
      "fields" : [ {
        "name" : "noCopy",
        "type" : 165
      }, {
        "name" : "local",
        "type" : 166
      }, {
        "name" : "localSize",
        "type" : 167
      }, {
        "name" : "victim",
        "type" : 166
      }, {
        "name" : "victimSize",
        "type" : 167
      }, {
        "name" : "New",
        "type" : 168
      } ],
      "name" : "struct{noCopy sync.noCopy; local unsafe.Pointer; localSize uintptr; victim unsafe.Pointer; victimSize uintptr; New func() interface{}}",
      "type" : "Struct",
      "underlying" : 164
    }, {
      "local-name" : "noCopy",
      "name" : "sync.noCopy",
      "package" : 7,
      "type" : "Named",
      "underlying" : 59
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 13,
      "type" : "Basic",
      "underlying" : 166
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 167
    }, {
      "name" : "func() interface{}",
      "params" : 5,
      "recv" : -1,
      "results" : 64,
      "type" : "Signature",
      "underlying" : 168,
      "variadic" : false
    }, {
      "local-name" : "exitFunc",
      "name" : "github.com/sirupsen/logrus.exitFunc",
      "package" : 11,
      "type" : "Named",
      "underlying" : 170
    }, {
      "name" : "func(int)",
      "params" : 171,
      "recv" : -1,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 170,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 50
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 171
    }, {
      "local-name" : "Fields",
      "name" : "github.com/sirupsen/logrus.Fields",
      "package" : 11,
      "type" : "Named",
      "underlying" : 173
    }, {
      "elem" : 63,
      "key" : 13,
      "name" : "map[string]interface{}",
      "type" : "Map",
      "underlying" : 173
    }, {
      "elem" : 175,
      "name" : "*runtime.Frame",
      "type" : "Pointer",
      "underlying" : 174
    }, {
      "local-name" : "Frame",
      "name" : "runtime.Frame",
      "package" : 14,
      "type" : "Named",
      "underlying" : 176
    }, {
      "fields" : [ {
        "name" : "PC",
        "type" : 167
      }, {
        "name" : "Func",
        "type" : 177
      }, {
        "name" : "Function",
        "type" : 13
      }, {
        "name" : "File",
        "type" : 13
      }, {
        "name" : "Line",
        "type" : 50
      }, {
        "name" : "Entry",
        "type" : 167
      }, {
        "name" : "funcInfo",
        "type" : 180
      } ],
      "name" : "struct{PC uintptr; Func *runtime.Func; Function string; File string; Line int; Entry uintptr; funcInfo runtime.funcInfo}",
      "type" : "Struct",
      "underlying" : 176
    }, {
      "elem" : 178,
      "name" : "*runtime.Func",
      "type" : "Pointer",
      "underlying" : 177
    }, {
      "local-name" : "Func",
      "name" : "runtime.Func",
      "package" : 14,
      "type" : "Named",
      "underlying" : 179
    }, {
      "fields" : [ {
        "name" : "opaque",
        "type" : 59
      } ],
      "name" : "struct{opaque struct{}}",
      "type" : "Struct",
      "underlying" : 179
    }, {
      "local-name" : "funcInfo",
      "name" : "runtime.funcInfo",
      "package" : 14,
      "type" : "Named",
      "underlying" : 181
    }, {
      "fields" : [ {
        "name" : "_func",
        "type" : 182
      }, {
        "name" : "datap",
        "type" : 188
      } ],
      "name" : "struct{*runtime._func; datap *runtime.moduledata}",
      "type" : "Struct",
      "underlying" : 181
    }, {
      "elem" : 183,
      "name" : "*runtime._func",
      "type" : "Pointer",
      "underlying" : 182
    }, {
      "local-name" : "_func",
      "name" : "runtime._func",
      "package" : 14,
      "type" : "Named",
      "underlying" : 184
    }, {
      "fields" : [ {
        "name" : "entry",
        "type" : 167
      }, {
        "name" : "nameoff",
        "type" : 88
      }, {
        "name" : "args",
        "type" : 88
      }, {
        "name" : "deferreturn",
        "type" : 89
      }, {
        "name" : "pcsp",
        "type" : 88
      }, {
        "name" : "pcfile",
        "type" : 88
      }, {
        "name" : "pcln",
        "type" : 88
      }, {
        "name" : "npcdata",
        "type" : 88
      }, {
        "name" : "funcID",
        "type" : 185
      }, {
        "name" : "_",
        "type" : 186
      }, {
        "name" : "nfuncdata",
        "type" : 54
      } ],
      "name" : "struct{entry uintptr; nameoff int32; args int32; deferreturn uint32; pcsp int32; pcfile int32; pcln int32; npcdata int32; funcID runtime.funcID; _ [2]int8; nfuncdata uint8}",
      "type" : "Struct",
      "underlying" : 184
    }, {
      "local-name" : "funcID",
      "name" : "runtime.funcID",
      "package" : 14,
      "type" : "Named",
      "underlying" : 54
    }, {
      "elem" : 187,
      "name" : "[2]int8",
      "type" : "Array",
      "underlying" : 186
    }, {
      "name" : "int8",
      "type" : "Basic",
      "underlying" : 187
    }, {
      "elem" : 189,
      "name" : "*runtime.moduledata",
      "type" : "Pointer",
      "underlying" : 188
    }, {
      "local-name" : "moduledata",
      "name" : "runtime.moduledata",
      "package" : 14,
      "type" : "Named",
      "underlying" : 190
    }, {
      "fields" : [ {
        "name" : "pclntable",
        "type" : 122
      }, {
        "name" : "ftab",
        "type" : 191
      }, {
        "name" : "filetab",
        "type" : 194
      }, {
        "name" : "findfunctab",
        "type" : 167
      }, {
        "name" : "minpc",
        "type" : 167
      }, {
        "name" : "maxpc",
        "type" : 167
      }, {
        "name" : "text",
        "type" : 167
      }, {
        "name" : "etext",
        "type" : 167
      }, {
        "name" : "noptrdata",
        "type" : 167
      }, {
        "name" : "enoptrdata",
        "type" : 167
      }, {
        "name" : "data",
        "type" : 167
      }, {
        "name" : "edata",
        "type" : 167
      }, {
        "name" : "bss",
        "type" : 167
      }, {
        "name" : "ebss",
        "type" : 167
      }, {
        "name" : "noptrbss",
        "type" : 167
      }, {
        "name" : "enoptrbss",
        "type" : 167
      }, {
        "name" : "end",
        "type" : 167
      }, {
        "name" : "gcdata",
        "type" : 167
      }, {
        "name" : "gcbss",
        "type" : 167
      }, {
        "name" : "types",
        "type" : 167
      }, {
        "name" : "etypes",
        "type" : 167
      }, {
        "name" : "textsectmap",
        "type" : 195
      }, {
        "name" : "typelinks",
        "type" : 198
      }, {
        "name" : "itablinks",
        "type" : 199
      }, {
        "name" : "ptab",
        "type" : 222
      }, {
        "name" : "pluginpath",
        "type" : 13
      }, {
        "name" : "pkghashes",
        "type" : 225
      }, {
        "name" : "modulename",
        "type" : 13
      }, {
        "name" : "modulehashes",
        "type" : 225
      }, {
        "name" : "hasmain",
        "type" : 54
      }, {
        "name" : "gcdatamask",
        "type" : 229
      }, {
        "name" : "gcbssmask",
        "type" : 229
      }, {
        "name" : "typemap",
        "type" : 232
      }, {
        "name" : "bad",
        "type" : 12
      }, {
        "name" : "next",
        "type" : 188
      } ],
      "name" : "struct{pclntable []byte; ftab []runtime.functab; filetab []uint32; findfunctab uintptr; minpc uintptr; maxpc uintptr; text uintptr; etext uintptr; noptrdata uintptr; enoptrdata uintptr; data uintptr; edata uintptr; bss uintptr; ebss uintptr; noptrbss uintptr; enoptrbss uintptr; end uintptr; gcdata uintptr; gcbss uintptr; types uintptr; etypes uintptr; textsectmap []runtime.textsect; typelinks []int32; itablinks []*runtime.itab; ptab []runtime.ptabEntry; pluginpath string; pkghashes []runtime.modulehash; modulename string; modulehashes []runtime.modulehash; hasmain uint8; gcdatamask runtime.bitvector; gcbssmask runtime.bitvector; typemap map[runtime.typeOff]*runtime._type; bad bool; next *runtime.moduledata}",
      "type" : "Struct",
      "underlying" : 190
    }, {
      "elem" : 192,
      "name" : "[]runtime.functab",
      "type" : "Slice",
      "underlying" : 191
    }, {
      "local-name" : "functab",
      "name" : "runtime.functab",
      "package" : 14,
      "type" : "Named",
      "underlying" : 193
    }, {
      "fields" : [ {
        "name" : "entry",
        "type" : 167
      }, {
        "name" : "funcoff",
        "type" : 167
      } ],
      "name" : "struct{entry uintptr; funcoff uintptr}",
      "type" : "Struct",
      "underlying" : 193
    }, {
      "elem" : 89,
      "name" : "[]uint32",
      "type" : "Slice",
      "underlying" : 194
    }, {
      "elem" : 196,
      "name" : "[]runtime.textsect",
      "type" : "Slice",
      "underlying" : 195
    }, {
      "local-name" : "textsect",
      "name" : "runtime.textsect",
      "package" : 14,
      "type" : "Named",
      "underlying" : 197
    }, {
      "fields" : [ {
        "name" : "vaddr",
        "type" : 167
      }, {
        "name" : "length",
        "type" : 167
      }, {
        "name" : "baseaddr",
        "type" : 167
      } ],
      "name" : "struct{vaddr uintptr; length uintptr; baseaddr uintptr}",
      "type" : "Struct",
      "underlying" : 197
    }, {
      "elem" : 88,
      "name" : "[]int32",
      "type" : "Slice",
      "underlying" : 198
    }, {
      "elem" : 200,
      "name" : "[]*runtime.itab",
      "type" : "Slice",
      "underlying" : 199
    }, {
      "elem" : 201,
      "name" : "*runtime.itab",
      "type" : "Pointer",
      "underlying" : 200
    }, {
      "local-name" : "itab",
      "name" : "runtime.itab",
      "package" : 14,
      "type" : "Named",
      "underlying" : 202
    }, {
      "fields" : [ {
        "name" : "inter",
        "type" : 203
      }, {
        "name" : "_type",
        "type" : 219
      }, {
        "name" : "hash",
        "type" : 89
      }, {
        "name" : "_",
        "type" : 220
      }, {
        "name" : "fun",
        "type" : 221
      } ],
      "name" : "struct{inter *runtime.interfacetype; _type *runtime._type; hash uint32; _ [4]byte; fun [1]uintptr}",
      "type" : "Struct",
      "underlying" : 202
    }, {
      "elem" : 204,
      "name" : "*runtime.interfacetype",
      "type" : "Pointer",
      "underlying" : 203
    }, {
      "local-name" : "interfacetype",
      "name" : "runtime.interfacetype",
      "package" : 14,
      "type" : "Named",
      "underlying" : 205
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 206
      }, {
        "name" : "pkgpath",
        "type" : 214
      }, {
        "name" : "mhdr",
        "type" : 216
      } ],
      "name" : "struct{typ runtime._type; pkgpath runtime.name; mhdr []runtime.imethod}",
      "type" : "Struct",
      "underlying" : 205
    }, {
      "local-name" : "_type",
      "name" : "runtime._type",
      "package" : 14,
      "type" : "Named",
      "underlying" : 207
    }, {
      "fields" : [ {
        "name" : "size",
        "type" : 167
      }, {
        "name" : "ptrdata",
        "type" : 167
      }, {
        "name" : "hash",
        "type" : 89
      }, {
        "name" : "tflag",
        "type" : 208
      }, {
        "name" : "align",
        "type" : 54
      }, {
        "name" : "fieldAlign",
        "type" : 54
      }, {
        "name" : "kind",
        "type" : 54
      }, {
        "name" : "equal",
        "type" : 209
      }, {
        "name" : "gcdata",
        "type" : 211
      }, {
        "name" : "str",
        "type" : 212
      }, {
        "name" : "ptrToThis",
        "type" : 213
      } ],
      "name" : "struct{size uintptr; ptrdata uintptr; hash uint32; tflag runtime.tflag; align uint8; fieldAlign uint8; kind uint8; equal func(unsafe.Pointer, unsafe.Pointer) bool; gcdata *byte; str runtime.nameOff; ptrToThis runtime.typeOff}",
      "type" : "Struct",
      "underlying" : 207
    }, {
      "local-name" : "tflag",
      "name" : "runtime.tflag",
      "package" : 14,
      "type" : "Named",
      "underlying" : 54
    }, {
      "name" : "func(unsafe.Pointer, unsafe.Pointer) bool",
      "params" : 210,
      "recv" : -1,
      "results" : 25,
      "type" : "Signature",
      "underlying" : 209,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 166
      }, {
        "name" : "",
        "type" : 166
      } ],
      "name" : "(unsafe.Pointer, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 210
    }, {
      "elem" : 123,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 211
    }, {
      "local-name" : "nameOff",
      "name" : "runtime.nameOff",
      "package" : 14,
      "type" : "Named",
      "underlying" : 88
    }, {
      "local-name" : "typeOff",
      "name" : "runtime.typeOff",
      "package" : 14,
      "type" : "Named",
      "underlying" : 88
    }, {
      "local-name" : "name",
      "name" : "runtime.name",
      "package" : 14,
      "type" : "Named",
      "underlying" : 215
    }, {
      "fields" : [ {
        "name" : "bytes",
        "type" : 211
      } ],
      "name" : "struct{bytes *byte}",
      "type" : "Struct",
      "underlying" : 215
    }, {
      "elem" : 217,
      "name" : "[]runtime.imethod",
      "type" : "Slice",
      "underlying" : 216
    }, {
      "local-name" : "imethod",
      "name" : "runtime.imethod",
      "package" : 14,
      "type" : "Named",
      "underlying" : 218
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 212
      }, {
        "name" : "ityp",
        "type" : 213
      } ],
      "name" : "struct{name runtime.nameOff; ityp runtime.typeOff}",
      "type" : "Struct",
      "underlying" : 218
    }, {
      "elem" : 206,
      "name" : "*runtime._type",
      "type" : "Pointer",
      "underlying" : 219
    }, {
      "elem" : 123,
      "name" : "[4]byte",
      "type" : "Array",
      "underlying" : 220
    }, {
      "elem" : 167,
      "name" : "[1]uintptr",
      "type" : "Array",
      "underlying" : 221
    }, {
      "elem" : 223,
      "name" : "[]runtime.ptabEntry",
      "type" : "Slice",
      "underlying" : 222
    }, {
      "local-name" : "ptabEntry",
      "name" : "runtime.ptabEntry",
      "package" : 14,
      "type" : "Named",
      "underlying" : 224
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 212
      }, {
        "name" : "typ",
        "type" : 213
      } ],
      "name" : "struct{name runtime.nameOff; typ runtime.typeOff}",
      "type" : "Struct",
      "underlying" : 224
    }, {
      "elem" : 226,
      "name" : "[]runtime.modulehash",
      "type" : "Slice",
      "underlying" : 225
    }, {
      "local-name" : "modulehash",
      "name" : "runtime.modulehash",
      "package" : 14,
      "type" : "Named",
      "underlying" : 227
    }, {
      "fields" : [ {
        "name" : "modulename",
        "type" : 13
      }, {
        "name" : "linktimehash",
        "type" : 13
      }, {
        "name" : "runtimehash",
        "type" : 228
      } ],
      "name" : "struct{modulename string; linktimehash string; runtimehash *string}",
      "type" : "Struct",
      "underlying" : 227
    }, {
      "elem" : 13,
      "name" : "*string",
      "type" : "Pointer",
      "underlying" : 228
    }, {
      "local-name" : "bitvector",
      "name" : "runtime.bitvector",
      "package" : 14,
      "type" : "Named",
      "underlying" : 230
    }, {
      "fields" : [ {
        "name" : "n",
        "type" : 88
      }, {
        "name" : "bytedata",
        "type" : 231
      } ],
      "name" : "struct{n int32; bytedata *uint8}",
      "type" : "Struct",
      "underlying" : 230
    }, {
      "elem" : 54,
      "name" : "*uint8",
      "type" : "Pointer",
      "underlying" : 231
    }, {
      "elem" : 219,
      "key" : 213,
      "name" : "map[runtime.typeOff]*runtime._type",
      "type" : "Map",
      "underlying" : 232
    }, {
      "elem" : 234,
      "name" : "*bytes.Buffer",
      "type" : "Pointer",
      "underlying" : 233
    }, {
      "local-name" : "Buffer",
      "name" : "bytes.Buffer",
      "package" : 15,
      "type" : "Named",
      "underlying" : 235
    }, {
      "fields" : [ {
        "name" : "buf",
        "type" : 122
      }, {
        "name" : "off",
        "type" : 50
      }, {
        "name" : "lastRead",
        "type" : 236
      } ],
      "name" : "struct{buf []byte; off int; lastRead bytes.readOp}",
      "type" : "Struct",
      "underlying" : 235
    }, {
      "local-name" : "readOp",
      "name" : "bytes.readOp",
      "package" : 15,
      "type" : "Named",
      "underlying" : 187
    }, {
      "elem" : 238,
      "name" : "*github.com/cilium/cilium/pkg/datapath/loader/metrics.SpanStat",
      "type" : "Pointer",
      "underlying" : 237
    }, {
      "local-name" : "SpanStat",
      "name" : "github.com/cilium/cilium/pkg/datapath/loader/metrics.SpanStat",
      "package" : 16,
      "type" : "Named",
      "underlying" : 239
    }, {
      "fields" : [ {
        "name" : "BpfCompilation",
        "type" : 240
      }, {
        "name" : "BpfWaitForELF",
        "type" : 240
      }, {
        "name" : "BpfWriteELF",
        "type" : 240
      }, {
        "name" : "BpfLoadProg",
        "type" : 240
      } ],
      "name" : "struct{BpfCompilation github.com/cilium/cilium/pkg/spanstat.SpanStat; BpfWaitForELF github.com/cilium/cilium/pkg/spanstat.SpanStat; BpfWriteELF github.com/cilium/cilium/pkg/spanstat.SpanStat; BpfLoadProg github.com/cilium/cilium/pkg/spanstat.SpanStat}",
      "type" : "Struct",
      "underlying" : 239
    }, {
      "local-name" : "SpanStat",
      "name" : "github.com/cilium/cilium/pkg/spanstat.SpanStat",
      "package" : 17,
      "type" : "Named",
      "underlying" : 241
    }, {
      "fields" : [ {
        "name" : "spanStart",
        "type" : 40
      }, {
        "name" : "successDuration",
        "type" : 242
      }, {
        "name" : "failureDuration",
        "type" : 242
      } ],
      "name" : "struct{spanStart time.Time; successDuration time.Duration; failureDuration time.Duration}",
      "type" : "Struct",
      "underlying" : 241
    }, {
      "local-name" : "Duration",
      "name" : "time.Duration",
      "package" : 4,
      "type" : "Named",
      "underlying" : 43
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.Loader) func(ctx context.Context, ifName string, direction string) error",
      "params" : 244,
      "recv" : 29,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 243,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ctx",
        "type" : 36
      }, {
        "name" : "ifName",
        "type" : 13
      }, {
        "name" : "direction",
        "type" : 13
      } ],
      "name" : "(ctx context.Context, ifName string, direction string)",
      "type" : "Tuple",
      "underlying" : 244
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.Loader) func(cfg github.com/cilium/cilium/pkg/datapath.EndpointConfiguration) (string, error)",
      "params" : 246,
      "recv" : 30,
      "results" : 249,
      "type" : "Signature",
      "underlying" : 245,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "cfg",
        "type" : 247
      } ],
      "name" : "(cfg github.com/cilium/cilium/pkg/datapath.EndpointConfiguration)",
      "type" : "Tuple",
      "underlying" : 246
    }, {
      "local-name" : "EndpointConfiguration",
      "name" : "github.com/cilium/cilium/pkg/datapath.EndpointConfiguration",
      "package" : 2,
      "type" : "Named",
      "underlying" : 248
    }, {
      "methods" : [ {
        "name" : "ConntrackLocalLocked",
        "type" : 67
      }, {
        "name" : "GetCIDRPrefixLengths",
        "type" : 70
      }, {
        "name" : "GetID",
        "type" : 112
      }, {
        "name" : "GetIdentity",
        "type" : 116
      }, {
        "name" : "GetNodeMAC",
        "type" : 119
      }, {
        "name" : "GetOptions",
        "type" : 75
      }, {
        "name" : "GetPolicyVerdictLogFilter",
        "type" : 110
      }, {
        "name" : "HasIpvlanDataPath",
        "type" : 67
      }, {
        "name" : "IPv4Address",
        "type" : 124
      }, {
        "name" : "IPv6Address",
        "type" : 127
      }, {
        "name" : "IsHost",
        "type" : 67
      }, {
        "name" : "RequireARPPassthrough",
        "type" : 67
      }, {
        "name" : "RequireEgressProg",
        "type" : 67
      }, {
        "name" : "RequireEndpointRoute",
        "type" : 67
      }, {
        "name" : "RequireRouting",
        "type" : 67
      }, {
        "name" : "StringID",
        "type" : 130
      } ],
      "name" : "interface{github.com/cilium/cilium/pkg/datapath.CompileTimeConfiguration; github.com/cilium/cilium/pkg/datapath.LoadTimeConfiguration}",
      "type" : "Interface",
      "underlying" : 248
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 13
      }, {
        "name" : "",
        "type" : 15
      } ],
      "name" : "(string, error)",
      "type" : "Tuple",
      "underlying" : 249
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.Loader) func(ctx context.Context, o github.com/cilium/cilium/pkg/datapath.BaseProgramOwner, deviceMTU int, iptMgr github.com/cilium/cilium/pkg/datapath.IptablesManager, p github.com/cilium/cilium/pkg/datapath.Proxy, r github.com/cilium/cilium/pkg/datapath.RouteReserver) error",
      "params" : 251,
      "recv" : 40,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 250,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ctx",
        "type" : 36
      }, {
        "name" : "o",
        "type" : 252
      }, {
        "name" : "deviceMTU",
        "type" : 50
      }, {
        "name" : "iptMgr",
        "type" : 19
      }, {
        "name" : "p",
        "type" : 287
      }, {
        "name" : "r",
        "type" : 290
      } ],
      "name" : "(ctx context.Context, o github.com/cilium/cilium/pkg/datapath.BaseProgramOwner, deviceMTU int, iptMgr github.com/cilium/cilium/pkg/datapath.IptablesManager, p github.com/cilium/cilium/pkg/datapath.Proxy, r github.com/cilium/cilium/pkg/datapath.RouteReserver)",
      "type" : "Tuple",
      "underlying" : 251
    }, {
      "local-name" : "BaseProgramOwner",
      "name" : "github.com/cilium/cilium/pkg/datapath.BaseProgramOwner",
      "package" : 2,
      "type" : "Named",
      "underlying" : 253
    }, {
      "methods" : [ {
        "name" : "Datapath",
        "type" : 254
      }, {
        "name" : "GetCIDRPrefixLengths",
        "type" : 70
      }, {
        "name" : "GetCompilationLock",
        "type" : 255
      }, {
        "name" : "GetOptions",
        "type" : 75
      }, {
        "name" : "LocalConfig",
        "type" : 258
      }, {
        "name" : "SetPrefilter",
        "type" : 275
      } ],
      "name" : "interface{Datapath() github.com/cilium/cilium/pkg/datapath.Datapath; GetCompilationLock() *github.com/cilium/cilium/pkg/lock.RWMutex; LocalConfig() *github.com/cilium/cilium/pkg/datapath.LocalNodeConfiguration; SetPrefilter(pf github.com/cilium/cilium/pkg/datapath.PreFilter); github.com/cilium/cilium/pkg/datapath.DeviceConfiguration}",
      "type" : "Interface",
      "underlying" : 253
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.BaseProgramOwner) func() github.com/cilium/cilium/pkg/datapath.Datapath",
      "params" : 5,
      "recv" : 31,
      "results" : 6,
      "type" : "Signature",
      "underlying" : 254,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.BaseProgramOwner) func() *github.com/cilium/cilium/pkg/lock.RWMutex",
      "params" : 5,
      "recv" : 32,
      "results" : 256,
      "type" : "Signature",
      "underlying" : 255,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 257
      } ],
      "name" : "(*github.com/cilium/cilium/pkg/lock.RWMutex)",
      "type" : "Tuple",
      "underlying" : 256
    }, {
      "elem" : 80,
      "name" : "*github.com/cilium/cilium/pkg/lock.RWMutex",
      "type" : "Pointer",
      "underlying" : 257
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.BaseProgramOwner) func() *github.com/cilium/cilium/pkg/datapath.LocalNodeConfiguration",
      "params" : 5,
      "recv" : 33,
      "results" : 259,
      "type" : "Signature",
      "underlying" : 258,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 260
      } ],
      "name" : "(*github.com/cilium/cilium/pkg/datapath.LocalNodeConfiguration)",
      "type" : "Tuple",
      "underlying" : 259
    }, {
      "elem" : 261,
      "name" : "*github.com/cilium/cilium/pkg/datapath.LocalNodeConfiguration",
      "type" : "Pointer",
      "underlying" : 260
    }, {
      "local-name" : "LocalNodeConfiguration",
      "name" : "github.com/cilium/cilium/pkg/datapath.LocalNodeConfiguration",
      "package" : 2,
      "type" : "Named",
      "underlying" : 262
    }, {
      "fields" : [ {
        "name" : "MtuConfig",
        "type" : 263
      }, {
        "name" : "AuxiliaryPrefixes",
        "type" : 265
      }, {
        "name" : "EnableIPv4",
        "type" : 12
      }, {
        "name" : "EnableIPv6",
        "type" : 12
      }, {
        "name" : "UseSingleClusterRoute",
        "type" : 12
      }, {
        "name" : "EnableEncapsulation",
        "type" : 12
      }, {
        "name" : "EnableAutoDirectRouting",
        "type" : 12
      }, {
        "name" : "EnableLocalNodeRoute",
        "type" : 12
      }, {
        "name" : "EnableIPSec",
        "type" : 12
      }, {
        "name" : "EncryptNode",
        "type" : 12
      }, {
        "name" : "IPv4PodSubnets",
        "type" : 274
      }, {
        "name" : "IPv6PodSubnets",
        "type" : 274
      } ],
      "name" : "struct{MtuConfig github.com/cilium/cilium/pkg/mtu.Configuration; AuxiliaryPrefixes []*github.com/cilium/cilium/pkg/cidr.CIDR; EnableIPv4 bool; EnableIPv6 bool; UseSingleClusterRoute bool; EnableEncapsulation bool; EnableAutoDirectRouting bool; EnableLocalNodeRoute bool; EnableIPSec bool; EncryptNode bool; IPv4PodSubnets []*net.IPNet; IPv6PodSubnets []*net.IPNet}",
      "type" : "Struct",
      "underlying" : 262
    }, {
      "local-name" : "Configuration",
      "name" : "github.com/cilium/cilium/pkg/mtu.Configuration",
      "package" : 18,
      "type" : "Named",
      "underlying" : 264
    }, {
      "fields" : [ {
        "name" : "standardMTU",
        "type" : 50
      }, {
        "name" : "tunnelMTU",
        "type" : 50
      }, {
        "name" : "preEncryptMTU",
        "type" : 50
      }, {
        "name" : "postEncryptMTU",
        "type" : 50
      }, {
        "name" : "encapEnabled",
        "type" : 12
      }, {
        "name" : "encryptEnabled",
        "type" : 12
      } ],
      "name" : "struct{standardMTU int; tunnelMTU int; preEncryptMTU int; postEncryptMTU int; encapEnabled bool; encryptEnabled bool}",
      "type" : "Struct",
      "underlying" : 264
    }, {
      "elem" : 266,
      "name" : "[]*github.com/cilium/cilium/pkg/cidr.CIDR",
      "type" : "Slice",
      "underlying" : 265
    }, {
      "elem" : 267,
      "name" : "*github.com/cilium/cilium/pkg/cidr.CIDR",
      "type" : "Pointer",
      "underlying" : 266
    }, {
      "local-name" : "CIDR",
      "name" : "github.com/cilium/cilium/pkg/cidr.CIDR",
      "package" : 19,
      "type" : "Named",
      "underlying" : 268
    }, {
      "fields" : [ {
        "name" : "IPNet",
        "type" : 269
      } ],
      "name" : "struct{*net.IPNet}",
      "type" : "Struct",
      "underlying" : 268
    }, {
      "elem" : 270,
      "name" : "*net.IPNet",
      "type" : "Pointer",
      "underlying" : 269
    }, {
      "local-name" : "IPNet",
      "name" : "net.IPNet",
      "package" : 20,
      "type" : "Named",
      "underlying" : 271
    }, {
      "fields" : [ {
        "name" : "IP",
        "type" : 272
      }, {
        "name" : "Mask",
        "type" : 273
      } ],
      "name" : "struct{IP net.IP; Mask net.IPMask}",
      "type" : "Struct",
      "underlying" : 271
    }, {
      "local-name" : "IP",
      "name" : "net.IP",
      "package" : 20,
      "type" : "Named",
      "underlying" : 122
    }, {
      "local-name" : "IPMask",
      "name" : "net.IPMask",
      "package" : 20,
      "type" : "Named",
      "underlying" : 122
    }, {
      "elem" : 269,
      "name" : "[]*net.IPNet",
      "type" : "Slice",
      "underlying" : 274
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.BaseProgramOwner) func(pf github.com/cilium/cilium/pkg/datapath.PreFilter)",
      "params" : 276,
      "recv" : 37,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 275,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pf",
        "type" : 277
      } ],
      "name" : "(pf github.com/cilium/cilium/pkg/datapath.PreFilter)",
      "type" : "Tuple",
      "underlying" : 276
    }, {
      "local-name" : "PreFilter",
      "name" : "github.com/cilium/cilium/pkg/datapath.PreFilter",
      "package" : 2,
      "type" : "Named",
      "underlying" : 278
    }, {
      "methods" : [ {
        "name" : "Delete",
        "type" : 279
      }, {
        "name" : "Dump",
        "type" : 282
      }, {
        "name" : "Insert",
        "type" : 279
      }, {
        "name" : "WriteConfig",
        "type" : 285
      } ],
      "name" : "interface{Delete(revision int64, cidrs []net.IPNet) error; Dump(to []string) ([]string, int64); Insert(revision int64, cidrs []net.IPNet) error; WriteConfig(fw io.Writer)}",
      "type" : "Interface",
      "underlying" : 278
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.PreFilter) func(revision int64, cidrs []net.IPNet) error",
      "params" : 280,
      "recv" : 34,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 279,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "revision",
        "type" : 43
      }, {
        "name" : "cidrs",
        "type" : 281
      } ],
      "name" : "(revision int64, cidrs []net.IPNet)",
      "type" : "Tuple",
      "underlying" : 280
    }, {
      "elem" : 270,
      "name" : "[]net.IPNet",
      "type" : "Slice",
      "underlying" : 281
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.PreFilter) func(to []string) ([]string, int64)",
      "params" : 283,
      "recv" : 35,
      "results" : 284,
      "type" : "Signature",
      "underlying" : 282,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "to",
        "type" : 99
      } ],
      "name" : "(to []string)",
      "type" : "Tuple",
      "underlying" : 283
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 99
      }, {
        "name" : "",
        "type" : 43
      } ],
      "name" : "([]string, int64)",
      "type" : "Tuple",
      "underlying" : 284
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.PreFilter) func(fw io.Writer)",
      "params" : 286,
      "recv" : 36,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 285,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "fw",
        "type" : 142
      } ],
      "name" : "(fw io.Writer)",
      "type" : "Tuple",
      "underlying" : 286
    }, {
      "local-name" : "Proxy",
      "name" : "github.com/cilium/cilium/pkg/datapath.Proxy",
      "package" : 2,
      "type" : "Named",
      "underlying" : 288
    }, {
      "methods" : [ {
        "name" : "ReinstallRules",
        "type" : 289
      } ],
      "name" : "interface{ReinstallRules()}",
      "type" : "Interface",
      "underlying" : 288
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.Proxy) func()",
      "params" : 5,
      "recv" : 38,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 289,
      "variadic" : false
    }, {
      "local-name" : "RouteReserver",
      "name" : "github.com/cilium/cilium/pkg/datapath.RouteReserver",
      "package" : 2,
      "type" : "Named",
      "underlying" : 291
    }, {
      "methods" : [ {
        "name" : "ReserveLocalRoutes",
        "type" : 292
      } ],
      "name" : "interface{ReserveLocalRoutes()}",
      "type" : "Interface",
      "underlying" : 291
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.RouteReserver) func()",
      "params" : 5,
      "recv" : 39,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 292,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.Loader) func(ep github.com/cilium/cilium/pkg/datapath.Endpoint)",
      "params" : 294,
      "recv" : 41,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 293,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ep",
        "type" : 65
      } ],
      "name" : "(ep github.com/cilium/cilium/pkg/datapath.Endpoint)",
      "type" : "Tuple",
      "underlying" : 294
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.Datapath) func() github.com/cilium/cilium/pkg/datapath.NodeAddressing",
      "params" : 5,
      "recv" : 48,
      "results" : 296,
      "type" : "Signature",
      "underlying" : 295,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 297
      } ],
      "name" : "(github.com/cilium/cilium/pkg/datapath.NodeAddressing)",
      "type" : "Tuple",
      "underlying" : 296
    }, {
      "local-name" : "NodeAddressing",
      "name" : "github.com/cilium/cilium/pkg/datapath.NodeAddressing",
      "package" : 2,
      "type" : "Named",
      "underlying" : 298
    }, {
      "methods" : [ {
        "name" : "IPv4",
        "type" : 299
      }, {
        "name" : "IPv6",
        "type" : 299
      } ],
      "name" : "interface{IPv4() github.com/cilium/cilium/pkg/datapath.NodeAddressingFamily; IPv6() github.com/cilium/cilium/pkg/datapath.NodeAddressingFamily}",
      "type" : "Interface",
      "underlying" : 298
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.NodeAddressing) func() github.com/cilium/cilium/pkg/datapath.NodeAddressingFamily",
      "params" : 5,
      "recv" : 47,
      "results" : 300,
      "type" : "Signature",
      "underlying" : 299,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 301
      } ],
      "name" : "(github.com/cilium/cilium/pkg/datapath.NodeAddressingFamily)",
      "type" : "Tuple",
      "underlying" : 300
    }, {
      "local-name" : "NodeAddressingFamily",
      "name" : "github.com/cilium/cilium/pkg/datapath.NodeAddressingFamily",
      "package" : 2,
      "type" : "Named",
      "underlying" : 302
    }, {
      "methods" : [ {
        "name" : "AllocationCIDR",
        "type" : 303
      }, {
        "name" : "LoadBalancerNodeAddresses",
        "type" : 305
      }, {
        "name" : "LocalAddresses",
        "type" : 308
      }, {
        "name" : "PrimaryExternal",
        "type" : 310
      }, {
        "name" : "Router",
        "type" : 310
      } ],
      "name" : "interface{AllocationCIDR() *github.com/cilium/cilium/pkg/cidr.CIDR; LoadBalancerNodeAddresses() []net.IP; LocalAddresses() ([]net.IP, error); PrimaryExternal() net.IP; Router() net.IP}",
      "type" : "Interface",
      "underlying" : 302
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.NodeAddressingFamily) func() *github.com/cilium/cilium/pkg/cidr.CIDR",
      "params" : 5,
      "recv" : 43,
      "results" : 304,
      "type" : "Signature",
      "underlying" : 303,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 266
      } ],
      "name" : "(*github.com/cilium/cilium/pkg/cidr.CIDR)",
      "type" : "Tuple",
      "underlying" : 304
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.NodeAddressingFamily) func() []net.IP",
      "params" : 5,
      "recv" : 44,
      "results" : 306,
      "type" : "Signature",
      "underlying" : 305,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 307
      } ],
      "name" : "([]net.IP)",
      "type" : "Tuple",
      "underlying" : 306
    }, {
      "elem" : 272,
      "name" : "[]net.IP",
      "type" : "Slice",
      "underlying" : 307
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.NodeAddressingFamily) func() ([]net.IP, error)",
      "params" : 5,
      "recv" : 45,
      "results" : 309,
      "type" : "Signature",
      "underlying" : 308,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 307
      }, {
        "name" : "",
        "type" : 15
      } ],
      "name" : "([]net.IP, error)",
      "type" : "Tuple",
      "underlying" : 309
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.NodeAddressingFamily) func() net.IP",
      "params" : 5,
      "recv" : 46,
      "results" : 311,
      "type" : "Signature",
      "underlying" : 310,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 272
      } ],
      "name" : "(net.IP)",
      "type" : "Tuple",
      "underlying" : 311
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.Datapath) func() github.com/cilium/cilium/pkg/datapath.NodeHandler",
      "params" : 5,
      "recv" : 53,
      "results" : 313,
      "type" : "Signature",
      "underlying" : 312,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 314
      } ],
      "name" : "(github.com/cilium/cilium/pkg/datapath.NodeHandler)",
      "type" : "Tuple",
      "underlying" : 313
    }, {
      "local-name" : "NodeHandler",
      "name" : "github.com/cilium/cilium/pkg/datapath.NodeHandler",
      "package" : 2,
      "type" : "Named",
      "underlying" : 315
    }, {
      "methods" : [ {
        "name" : "NodeAdd",
        "type" : 316
      }, {
        "name" : "NodeConfigurationChanged",
        "type" : 326
      }, {
        "name" : "NodeDelete",
        "type" : 328
      }, {
        "name" : "NodeUpdate",
        "type" : 330
      }, {
        "name" : "NodeValidateImplementation",
        "type" : 328
      } ],
      "name" : "interface{NodeAdd(newNode github.com/cilium/cilium/pkg/node/types.Node) error; NodeConfigurationChanged(config github.com/cilium/cilium/pkg/datapath.LocalNodeConfiguration) error; NodeDelete(node github.com/cilium/cilium/pkg/node/types.Node) error; NodeUpdate(oldNode github.com/cilium/cilium/pkg/node/types.Node, newNode github.com/cilium/cilium/pkg/node/types.Node) error; NodeValidateImplementation(node github.com/cilium/cilium/pkg/node/types.Node) error}",
      "type" : "Interface",
      "underlying" : 315
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.NodeHandler) func(newNode github.com/cilium/cilium/pkg/node/types.Node) error",
      "params" : 317,
      "recv" : 49,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 316,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "newNode",
        "type" : 318
      } ],
      "name" : "(newNode github.com/cilium/cilium/pkg/node/types.Node)",
      "type" : "Tuple",
      "underlying" : 317
    }, {
      "local-name" : "Node",
      "name" : "github.com/cilium/cilium/pkg/node/types.Node",
      "package" : 21,
      "type" : "Named",
      "underlying" : 319
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 13
      }, {
        "name" : "Cluster",
        "type" : 13
      }, {
        "name" : "IPAddresses",
        "type" : 320
      }, {
        "name" : "IPv4AllocCIDR",
        "type" : 266
      }, {
        "name" : "IPv6AllocCIDR",
        "type" : 266
      }, {
        "name" : "IPv4HealthIP",
        "type" : 272
      }, {
        "name" : "IPv6HealthIP",
        "type" : 272
      }, {
        "name" : "ClusterID",
        "type" : 50
      }, {
        "name" : "Source",
        "type" : 324
      }, {
        "name" : "EncryptionKey",
        "type" : 54
      }, {
        "name" : "Labels",
        "type" : 325
      } ],
      "name" : "struct{Name string; Cluster string; IPAddresses []github.com/cilium/cilium/pkg/node/types.Address; IPv4AllocCIDR *github.com/cilium/cilium/pkg/cidr.CIDR; IPv6AllocCIDR *github.com/cilium/cilium/pkg/cidr.CIDR; IPv4HealthIP net.IP; IPv6HealthIP net.IP; ClusterID int; Source github.com/cilium/cilium/pkg/source.Source; EncryptionKey uint8; Labels map[string]string}",
      "type" : "Struct",
      "underlying" : 319
    }, {
      "elem" : 321,
      "name" : "[]github.com/cilium/cilium/pkg/node/types.Address",
      "type" : "Slice",
      "underlying" : 320
    }, {
      "local-name" : "Address",
      "name" : "github.com/cilium/cilium/pkg/node/types.Address",
      "package" : 21,
      "type" : "Named",
      "underlying" : 322
    }, {
      "fields" : [ {
        "name" : "Type",
        "type" : 323
      }, {
        "name" : "IP",
        "type" : 272
      } ],
      "name" : "struct{Type github.com/cilium/cilium/pkg/node/addressing.AddressType; IP net.IP}",
      "type" : "Struct",
      "underlying" : 322
    }, {
      "local-name" : "AddressType",
      "name" : "github.com/cilium/cilium/pkg/node/addressing.AddressType",
      "package" : 22,
      "type" : "Named",
      "underlying" : 13
    }, {
      "local-name" : "Source",
      "name" : "github.com/cilium/cilium/pkg/source.Source",
      "package" : 23,
      "type" : "Named",
      "underlying" : 13
    }, {
      "elem" : 13,
      "key" : 13,
      "name" : "map[string]string",
      "type" : "Map",
      "underlying" : 325
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.NodeHandler) func(config github.com/cilium/cilium/pkg/datapath.LocalNodeConfiguration) error",
      "params" : 327,
      "recv" : 50,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 326,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "config",
        "type" : 261
      } ],
      "name" : "(config github.com/cilium/cilium/pkg/datapath.LocalNodeConfiguration)",
      "type" : "Tuple",
      "underlying" : 327
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.NodeHandler) func(node github.com/cilium/cilium/pkg/node/types.Node) error",
      "params" : 329,
      "recv" : 51,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 328,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "node",
        "type" : 318
      } ],
      "name" : "(node github.com/cilium/cilium/pkg/node/types.Node)",
      "type" : "Tuple",
      "underlying" : 329
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.NodeHandler) func(oldNode github.com/cilium/cilium/pkg/node/types.Node, newNode github.com/cilium/cilium/pkg/node/types.Node) error",
      "params" : 331,
      "recv" : 52,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 330,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "oldNode",
        "type" : 318
      }, {
        "name" : "newNode",
        "type" : 318
      } ],
      "name" : "(oldNode github.com/cilium/cilium/pkg/node/types.Node, newNode github.com/cilium/cilium/pkg/node/types.Node)",
      "type" : "Tuple",
      "underlying" : 331
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.Datapath) func(netNS string) (int, int, error)",
      "params" : 333,
      "recv" : 54,
      "results" : 334,
      "type" : "Signature",
      "underlying" : 332,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "netNS",
        "type" : 13
      } ],
      "name" : "(netNS string)",
      "type" : "Tuple",
      "underlying" : 333
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 50
      }, {
        "name" : "",
        "type" : 50
      }, {
        "name" : "",
        "type" : 15
      } ],
      "name" : "(int, int, error)",
      "type" : "Tuple",
      "underlying" : 334
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.ConfigWriter) func(w io.Writer, cfg github.com/cilium/cilium/pkg/datapath.EndpointConfiguration) error",
      "params" : 336,
      "recv" : 57,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 335,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "w",
        "type" : 142
      }, {
        "name" : "cfg",
        "type" : 247
      } ],
      "name" : "(w io.Writer, cfg github.com/cilium/cilium/pkg/datapath.EndpointConfiguration)",
      "type" : "Tuple",
      "underlying" : 336
    }, {
      "local-name" : "ConfigWriter",
      "name" : "github.com/cilium/cilium/pkg/datapath.ConfigWriter",
      "package" : 2,
      "type" : "Named",
      "underlying" : 338
    }, {
      "methods" : [ {
        "name" : "WriteEndpointConfig",
        "type" : 335
      }, {
        "name" : "WriteNetdevConfig",
        "type" : 339
      }, {
        "name" : "WriteNodeConfig",
        "type" : 341
      }, {
        "name" : "WriteTemplateConfig",
        "type" : 335
      } ],
      "name" : "interface{WriteEndpointConfig(w io.Writer, cfg github.com/cilium/cilium/pkg/datapath.EndpointConfiguration) error; WriteNetdevConfig(io.Writer, github.com/cilium/cilium/pkg/datapath.DeviceConfiguration) error; WriteNodeConfig(io.Writer, *github.com/cilium/cilium/pkg/datapath.LocalNodeConfiguration) error; WriteTemplateConfig(w io.Writer, cfg github.com/cilium/cilium/pkg/datapath.EndpointConfiguration) error}",
      "type" : "Interface",
      "underlying" : 338
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.ConfigWriter) func(io.Writer, github.com/cilium/cilium/pkg/datapath.DeviceConfiguration) error",
      "params" : 340,
      "recv" : 55,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 339,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 142
      }, {
        "name" : "",
        "type" : 73
      } ],
      "name" : "(io.Writer, github.com/cilium/cilium/pkg/datapath.DeviceConfiguration)",
      "type" : "Tuple",
      "underlying" : 340
    }, {
      "name" : "(github.com/cilium/cilium/pkg/datapath.ConfigWriter) func(io.Writer, *github.com/cilium/cilium/pkg/datapath.LocalNodeConfiguration) error",
      "params" : 342,
      "recv" : 56,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 341,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 142
      }, {
        "name" : "",
        "type" : 260
      } ],
      "name" : "(io.Writer, *github.com/cilium/cilium/pkg/datapath.LocalNodeConfiguration)",
      "type" : "Tuple",
      "underlying" : 342
    }, {
      "name" : "(github.com/cilium/cilium/pkg/endpoint/regeneration.Owner) func() (s6 []int, s4 []int)",
      "params" : 5,
      "recv" : 59,
      "results" : 71,
      "type" : "Signature",
      "underlying" : 343,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/endpoint/regeneration.Owner) func() *github.com/cilium/cilium/pkg/lock.RWMutex",
      "params" : 5,
      "recv" : 60,
      "results" : 256,
      "type" : "Signature",
      "underlying" : 344,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/endpoint/regeneration.Owner) func() *github.com/cilium/cilium/pkg/policy.Repository",
      "params" : 5,
      "recv" : 77,
      "results" : 346,
      "type" : "Signature",
      "underlying" : 345,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 347
      } ],
      "name" : "(*github.com/cilium/cilium/pkg/policy.Repository)",
      "type" : "Tuple",
      "underlying" : 346
    }, {
      "elem" : 348,
      "name" : "*github.com/cilium/cilium/pkg/policy.Repository",
      "type" : "Pointer",
      "underlying" : 347
    }, {
      "local-name" : "Repository",
      "name" : "github.com/cilium/cilium/pkg/policy.Repository",
      "package" : 24,
      "type" : "Named",
      "underlying" : 349
    }, {
      "fields" : [ {
        "name" : "Mutex",
        "type" : 80
      }, {
        "name" : "rules",
        "type" : 350
      }, {
        "name" : "revision",
        "type" : 42
      }, {
        "name" : "RepositoryChangeQueue",
        "type" : 453
      }, {
        "name" : "RuleReactionQueue",
        "type" : 453
      }, {
        "name" : "selectorCache",
        "type" : 470
      }, {
        "name" : "policyCache",
        "type" : 509
      }, {
        "name" : "certManager",
        "type" : 525
      }, {
        "name" : "getEnvoyHTTPRules",
        "type" : 532
      } ],
      "name" : "struct{Mutex github.com/cilium/cilium/pkg/lock.RWMutex; rules github.com/cilium/cilium/pkg/policy.ruleSlice; revision uint64; RepositoryChangeQueue *github.com/cilium/cilium/pkg/eventqueue.EventQueue; RuleReactionQueue *github.com/cilium/cilium/pkg/eventqueue.EventQueue; selectorCache *github.com/cilium/cilium/pkg/policy.SelectorCache; policyCache *github.com/cilium/cilium/pkg/policy.PolicyCache; certManager github.com/cilium/cilium/pkg/policy.CertificateManager; getEnvoyHTTPRules func(github.com/cilium/cilium/pkg/policy.CertificateManager, *github.com/cilium/cilium/pkg/policy/api.L7Rules, string) (*github.com/cilium/proxy/go/cilium/api.HttpNetworkPolicyRules, bool)}",
      "type" : "Struct",
      "underlying" : 349
    }, {
      "local-name" : "ruleSlice",
      "name" : "github.com/cilium/cilium/pkg/policy.ruleSlice",
      "package" : 24,
      "type" : "Named",
      "underlying" : 351
    }, {
      "elem" : 352,
      "name" : "[]*github.com/cilium/cilium/pkg/policy.rule",
      "type" : "Slice",
      "underlying" : 351
    }, {
      "elem" : 353,
      "name" : "*github.com/cilium/cilium/pkg/policy.rule",
      "type" : "Pointer",
      "underlying" : 352
    }, {
      "local-name" : "rule",
      "name" : "github.com/cilium/cilium/pkg/policy.rule",
      "package" : 24,
      "type" : "Named",
      "underlying" : 354
    }, {
      "fields" : [ {
        "name" : "Rule",
        "type" : 355
      }, {
        "name" : "metadata",
        "type" : 449
      } ],
      "name" : "struct{github.com/cilium/cilium/pkg/policy/api.Rule; metadata *github.com/cilium/cilium/pkg/policy.ruleMetadata}",
      "type" : "Struct",
      "underlying" : 354
    }, {
      "local-name" : "Rule",
      "name" : "github.com/cilium/cilium/pkg/policy/api.Rule",
      "package" : 25,
      "type" : "Named",
      "underlying" : 356
    }, {
      "fields" : [ {
        "name" : "EndpointSelector",
        "type" : 357
      }, {
        "name" : "NodeSelector",
        "type" : 357
      }, {
        "name" : "Ingress",
        "type" : 372
      }, {
        "name" : "Egress",
        "type" : 423
      }, {
        "name" : "Labels",
        "type" : 445
      }, {
        "name" : "Description",
        "type" : 13
      } ],
      "name" : "struct{EndpointSelector github.com/cilium/cilium/pkg/policy/api.EndpointSelector \"json:\\\"endpointSelector,omitempty\\\"\"; NodeSelector github.com/cilium/cilium/pkg/policy/api.EndpointSelector \"json:\\\"nodeSelector,omitempty\\\"\"; Ingress []github.com/cilium/cilium/pkg/policy/api.IngressRule \"json:\\\"ingress,omitempty\\\"\"; Egress []github.com/cilium/cilium/pkg/policy/api.EgressRule \"json:\\\"egress,omitempty\\\"\"; Labels github.com/cilium/cilium/pkg/labels.LabelArray \"json:\\\"labels,omitempty\\\"\"; Description string \"json:\\\"description,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 356
    }, {
      "local-name" : "EndpointSelector",
      "name" : "github.com/cilium/cilium/pkg/policy/api.EndpointSelector",
      "package" : 25,
      "type" : "Named",
      "underlying" : 358
    }, {
      "fields" : [ {
        "name" : "LabelSelector",
        "type" : 359
      }, {
        "name" : "requirements",
        "type" : 366
      }, {
        "name" : "cachedLabelSelectorString",
        "type" : 13
      } ],
      "name" : "struct{*github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1.LabelSelector; requirements *github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/labels.Requirements; cachedLabelSelectorString string}",
      "type" : "Struct",
      "underlying" : 358
    }, {
      "elem" : 360,
      "name" : "*github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1.LabelSelector",
      "type" : "Pointer",
      "underlying" : 359
    }, {
      "local-name" : "LabelSelector",
      "name" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1.LabelSelector",
      "package" : 26,
      "type" : "Named",
      "underlying" : 361
    }, {
      "fields" : [ {
        "name" : "MatchLabels",
        "type" : 325
      }, {
        "name" : "MatchExpressions",
        "type" : 362
      } ],
      "name" : "struct{MatchLabels map[string]string \"json:\\\"matchLabels,omitempty\\\" protobuf:\\\"bytes,1,rep,name=matchLabels\\\"\"; MatchExpressions []github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1.LabelSelectorRequirement \"json:\\\"matchExpressions,omitempty\\\" protobuf:\\\"bytes,2,rep,name=matchExpressions\\\"\"}",
      "type" : "Struct",
      "underlying" : 361
    }, {
      "elem" : 363,
      "name" : "[]github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1.LabelSelectorRequirement",
      "type" : "Slice",
      "underlying" : 362
    }, {
      "local-name" : "LabelSelectorRequirement",
      "name" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1.LabelSelectorRequirement",
      "package" : 26,
      "type" : "Named",
      "underlying" : 364
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 13
      }, {
        "name" : "Operator",
        "type" : 365
      }, {
        "name" : "Values",
        "type" : 99
      } ],
      "name" : "struct{Key string \"json:\\\"key\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"key\\\" protobuf:\\\"bytes,1,opt,name=key\\\"\"; Operator github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1.LabelSelectorOperator \"json:\\\"operator\\\" protobuf:\\\"bytes,2,opt,name=operator,casttype=LabelSelectorOperator\\\"\"; Values []string \"json:\\\"values,omitempty\\\" protobuf:\\\"bytes,3,rep,name=values\\\"\"}",
      "type" : "Struct",
      "underlying" : 364
    }, {
      "local-name" : "LabelSelectorOperator",
      "name" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1.LabelSelectorOperator",
      "package" : 26,
      "type" : "Named",
      "underlying" : 13
    }, {
      "elem" : 367,
      "name" : "*github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/labels.Requirements",
      "type" : "Pointer",
      "underlying" : 366
    }, {
      "local-name" : "Requirements",
      "name" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/labels.Requirements",
      "package" : 27,
      "type" : "Named",
      "underlying" : 368
    }, {
      "elem" : 369,
      "name" : "[]github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/labels.Requirement",
      "type" : "Slice",
      "underlying" : 368
    }, {
      "local-name" : "Requirement",
      "name" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/labels.Requirement",
      "package" : 27,
      "type" : "Named",
      "underlying" : 370
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 13
      }, {
        "name" : "operator",
        "type" : 371
      }, {
        "name" : "strValues",
        "type" : 99
      } ],
      "name" : "struct{key string; operator github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/selection.Operator; strValues []string}",
      "type" : "Struct",
      "underlying" : 370
    }, {
      "local-name" : "Operator",
      "name" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/selection.Operator",
      "package" : 28,
      "type" : "Named",
      "underlying" : 13
    }, {
      "elem" : 373,
      "name" : "[]github.com/cilium/cilium/pkg/policy/api.IngressRule",
      "type" : "Slice",
      "underlying" : 372
    }, {
      "local-name" : "IngressRule",
      "name" : "github.com/cilium/cilium/pkg/policy/api.IngressRule",
      "package" : 25,
      "type" : "Named",
      "underlying" : 374
    }, {
      "fields" : [ {
        "name" : "FromEndpoints",
        "type" : 375
      }, {
        "name" : "FromRequires",
        "type" : 375
      }, {
        "name" : "ToPorts",
        "type" : 376
      }, {
        "name" : "FromCIDR",
        "type" : 412
      }, {
        "name" : "FromCIDRSet",
        "type" : 415
      }, {
        "name" : "FromEntities",
        "type" : 419
      }, {
        "name" : "aggregatedSelectors",
        "type" : 422
      } ],
      "name" : "struct{FromEndpoints []github.com/cilium/cilium/pkg/policy/api.EndpointSelector \"json:\\\"fromEndpoints,omitempty\\\"\"; FromRequires []github.com/cilium/cilium/pkg/policy/api.EndpointSelector \"json:\\\"fromRequires,omitempty\\\"\"; ToPorts []github.com/cilium/cilium/pkg/policy/api.PortRule \"json:\\\"toPorts,omitempty\\\"\"; FromCIDR github.com/cilium/cilium/pkg/policy/api.CIDRSlice \"json:\\\"fromCIDR,omitempty\\\"\"; FromCIDRSet github.com/cilium/cilium/pkg/policy/api.CIDRRuleSlice \"json:\\\"fromCIDRSet,omitempty\\\"\"; FromEntities github.com/cilium/cilium/pkg/policy/api.EntitySlice \"json:\\\"fromEntities,omitempty\\\"\"; aggregatedSelectors github.com/cilium/cilium/pkg/policy/api.EndpointSelectorSlice}",
      "type" : "Struct",
      "underlying" : 374
    }, {
      "elem" : 357,
      "name" : "[]github.com/cilium/cilium/pkg/policy/api.EndpointSelector",
      "type" : "Slice",
      "underlying" : 375
    }, {
      "elem" : 377,
      "name" : "[]github.com/cilium/cilium/pkg/policy/api.PortRule",
      "type" : "Slice",
      "underlying" : 376
    }, {
      "local-name" : "PortRule",
      "name" : "github.com/cilium/cilium/pkg/policy/api.PortRule",
      "package" : 25,
      "type" : "Named",
      "underlying" : 378
    }, {
      "fields" : [ {
        "name" : "Ports",
        "type" : 379
      }, {
        "name" : "TerminatingTLS",
        "type" : 383
      }, {
        "name" : "OriginatingTLS",
        "type" : 383
      }, {
        "name" : "Rules",
        "type" : 389
      } ],
      "name" : "struct{Ports []github.com/cilium/cilium/pkg/policy/api.PortProtocol \"json:\\\"ports,omitempty\\\"\"; TerminatingTLS *github.com/cilium/cilium/pkg/policy/api.TLSContext \"json:\\\"terminatingTLS,omitempty\\\"\"; OriginatingTLS *github.com/cilium/cilium/pkg/policy/api.TLSContext \"json:\\\"originatingTLS,omitempty\\\"\"; Rules *github.com/cilium/cilium/pkg/policy/api.L7Rules \"json:\\\"rules,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 378
    }, {
      "elem" : 380,
      "name" : "[]github.com/cilium/cilium/pkg/policy/api.PortProtocol",
      "type" : "Slice",
      "underlying" : 379
    }, {
      "local-name" : "PortProtocol",
      "name" : "github.com/cilium/cilium/pkg/policy/api.PortProtocol",
      "package" : 25,
      "type" : "Named",
      "underlying" : 381
    }, {
      "fields" : [ {
        "name" : "Port",
        "type" : 13
      }, {
        "name" : "Protocol",
        "type" : 382
      } ],
      "name" : "struct{Port string \"json:\\\"port\\\"\"; Protocol github.com/cilium/cilium/pkg/policy/api.L4Proto \"json:\\\"protocol,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 381
    }, {
      "local-name" : "L4Proto",
      "name" : "github.com/cilium/cilium/pkg/policy/api.L4Proto",
      "package" : 25,
      "type" : "Named",
      "underlying" : 13
    }, {
      "elem" : 384,
      "name" : "*github.com/cilium/cilium/pkg/policy/api.TLSContext",
      "type" : "Pointer",
      "underlying" : 383
    }, {
      "local-name" : "TLSContext",
      "name" : "github.com/cilium/cilium/pkg/policy/api.TLSContext",
      "package" : 25,
      "type" : "Named",
      "underlying" : 385
    }, {
      "fields" : [ {
        "name" : "Secret",
        "type" : 386
      }, {
        "name" : "TrustedCA",
        "type" : 13
      }, {
        "name" : "Certificate",
        "type" : 13
      }, {
        "name" : "PrivateKey",
        "type" : 13
      } ],
      "name" : "struct{Secret *github.com/cilium/cilium/pkg/policy/api.Secret \"json:\\\"secret,omitempty\\\"\"; TrustedCA string \"json:\\\"trustedCA,omitempty\\\"\"; Certificate string \"json:\\\"certificate,omitempty\\\"\"; PrivateKey string \"json:\\\"privateKey,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 385
    }, {
      "elem" : 387,
      "name" : "*github.com/cilium/cilium/pkg/policy/api.Secret",
      "type" : "Pointer",
      "underlying" : 386
    }, {
      "local-name" : "Secret",
      "name" : "github.com/cilium/cilium/pkg/policy/api.Secret",
      "package" : 25,
      "type" : "Named",
      "underlying" : 388
    }, {
      "fields" : [ {
        "name" : "Namespace",
        "type" : 13
      }, {
        "name" : "Name",
        "type" : 13
      } ],
      "name" : "struct{Namespace string \"json:\\\"namespace,omitempty\\\"\"; Name string \"json:\\\"name\\\"\"}",
      "type" : "Struct",
      "underlying" : 388
    }, {
      "elem" : 390,
      "name" : "*github.com/cilium/cilium/pkg/policy/api.L7Rules",
      "type" : "Pointer",
      "underlying" : 389
    }, {
      "local-name" : "L7Rules",
      "name" : "github.com/cilium/cilium/pkg/policy/api.L7Rules",
      "package" : 25,
      "type" : "Named",
      "underlying" : 391
    }, {
      "fields" : [ {
        "name" : "HTTP",
        "type" : 392
      }, {
        "name" : "Kafka",
        "type" : 400
      }, {
        "name" : "DNS",
        "type" : 407
      }, {
        "name" : "L7Proto",
        "type" : 13
      }, {
        "name" : "L7",
        "type" : 410
      } ],
      "name" : "struct{HTTP []github.com/cilium/cilium/pkg/policy/api.PortRuleHTTP \"json:\\\"http,omitempty\\\"\"; Kafka []github.com/cilium/cilium/pkg/policy/api.PortRuleKafka \"json:\\\"kafka,omitempty\\\"\"; DNS []github.com/cilium/cilium/pkg/policy/api.PortRuleDNS \"json:\\\"dns,omitempty\\\"\"; L7Proto string \"json:\\\"l7proto,omitempty\\\"\"; L7 []github.com/cilium/cilium/pkg/policy/api.PortRuleL7 \"json:\\\"l7,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 391
    }, {
      "elem" : 393,
      "name" : "[]github.com/cilium/cilium/pkg/policy/api.PortRuleHTTP",
      "type" : "Slice",
      "underlying" : 392
    }, {
      "local-name" : "PortRuleHTTP",
      "name" : "github.com/cilium/cilium/pkg/policy/api.PortRuleHTTP",
      "package" : 25,
      "type" : "Named",
      "underlying" : 394
    }, {
      "fields" : [ {
        "name" : "Path",
        "type" : 13
      }, {
        "name" : "Method",
        "type" : 13
      }, {
        "name" : "Host",
        "type" : 13
      }, {
        "name" : "Headers",
        "type" : 99
      }, {
        "name" : "HeaderMatches",
        "type" : 395
      } ],
      "name" : "struct{Path string \"json:\\\"path,omitempty\\\"\"; Method string \"json:\\\"method,omitempty\\\"\"; Host string \"json:\\\"host,omitempty\\\"\"; Headers []string \"json:\\\"headers,omitempty\\\"\"; HeaderMatches []*github.com/cilium/cilium/pkg/policy/api.HeaderMatch \"json:\\\"headerMatches,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 394
    }, {
      "elem" : 396,
      "name" : "[]*github.com/cilium/cilium/pkg/policy/api.HeaderMatch",
      "type" : "Slice",
      "underlying" : 395
    }, {
      "elem" : 397,
      "name" : "*github.com/cilium/cilium/pkg/policy/api.HeaderMatch",
      "type" : "Pointer",
      "underlying" : 396
    }, {
      "local-name" : "HeaderMatch",
      "name" : "github.com/cilium/cilium/pkg/policy/api.HeaderMatch",
      "package" : 25,
      "type" : "Named",
      "underlying" : 398
    }, {
      "fields" : [ {
        "name" : "Mismatch",
        "type" : 399
      }, {
        "name" : "Name",
        "type" : 13
      }, {
        "name" : "Secret",
        "type" : 386
      }, {
        "name" : "Value",
        "type" : 13
      } ],
      "name" : "struct{Mismatch github.com/cilium/cilium/pkg/policy/api.MismatchAction \"json:\\\"mismatch,omitempty\\\"\"; Name string \"json:\\\"name\\\"\"; Secret *github.com/cilium/cilium/pkg/policy/api.Secret \"json:\\\"secret,omitempty\\\"\"; Value string \"json:\\\"value,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 398
    }, {
      "local-name" : "MismatchAction",
      "name" : "github.com/cilium/cilium/pkg/policy/api.MismatchAction",
      "package" : 25,
      "type" : "Named",
      "underlying" : 13
    }, {
      "elem" : 401,
      "name" : "[]github.com/cilium/cilium/pkg/policy/api.PortRuleKafka",
      "type" : "Slice",
      "underlying" : 400
    }, {
      "local-name" : "PortRuleKafka",
      "name" : "github.com/cilium/cilium/pkg/policy/api.PortRuleKafka",
      "package" : 25,
      "type" : "Named",
      "underlying" : 402
    }, {
      "fields" : [ {
        "name" : "Role",
        "type" : 13
      }, {
        "name" : "APIKey",
        "type" : 13
      }, {
        "name" : "APIVersion",
        "type" : 13
      }, {
        "name" : "ClientID",
        "type" : 13
      }, {
        "name" : "Topic",
        "type" : 13
      }, {
        "name" : "apiKeyInt",
        "type" : 403
      }, {
        "name" : "apiVersionInt",
        "type" : 406
      } ],
      "name" : "struct{Role string \"json:\\\"role,omitempty\\\"\"; APIKey string \"json:\\\"apiKey,omitempty\\\"\"; APIVersion string \"json:\\\"apiVersion,omitempty\\\"\"; ClientID string \"json:\\\"clientID,omitempty\\\"\"; Topic string \"json:\\\"topic,omitempty\\\"\"; apiKeyInt github.com/cilium/cilium/pkg/policy/api.KafkaRole; apiVersionInt *int16}",
      "type" : "Struct",
      "underlying" : 402
    }, {
      "local-name" : "KafkaRole",
      "name" : "github.com/cilium/cilium/pkg/policy/api.KafkaRole",
      "package" : 25,
      "type" : "Named",
      "underlying" : 404
    }, {
      "elem" : 405,
      "name" : "[]int16",
      "type" : "Slice",
      "underlying" : 404
    }, {
      "name" : "int16",
      "type" : "Basic",
      "underlying" : 405
    }, {
      "elem" : 405,
      "name" : "*int16",
      "type" : "Pointer",
      "underlying" : 406
    }, {
      "elem" : 408,
      "name" : "[]github.com/cilium/cilium/pkg/policy/api.PortRuleDNS",
      "type" : "Slice",
      "underlying" : 407
    }, {
      "local-name" : "PortRuleDNS",
      "name" : "github.com/cilium/cilium/pkg/policy/api.PortRuleDNS",
      "package" : 25,
      "type" : "Named",
      "underlying" : 409
    }, {
      "fields" : [ {
        "name" : "MatchName",
        "type" : 13
      }, {
        "name" : "MatchPattern",
        "type" : 13
      } ],
      "name" : "struct{MatchName string \"json:\\\"matchName,omitempty\\\"\"; MatchPattern string \"json:\\\"matchPattern,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 409
    }, {
      "elem" : 411,
      "name" : "[]github.com/cilium/cilium/pkg/policy/api.PortRuleL7",
      "type" : "Slice",
      "underlying" : 410
    }, {
      "local-name" : "PortRuleL7",
      "name" : "github.com/cilium/cilium/pkg/policy/api.PortRuleL7",
      "package" : 25,
      "type" : "Named",
      "underlying" : 325
    }, {
      "local-name" : "CIDRSlice",
      "name" : "github.com/cilium/cilium/pkg/policy/api.CIDRSlice",
      "package" : 25,
      "type" : "Named",
      "underlying" : 413
    }, {
      "elem" : 414,
      "name" : "[]github.com/cilium/cilium/pkg/policy/api.CIDR",
      "type" : "Slice",
      "underlying" : 413
    }, {
      "local-name" : "CIDR",
      "name" : "github.com/cilium/cilium/pkg/policy/api.CIDR",
      "package" : 25,
      "type" : "Named",
      "underlying" : 13
    }, {
      "local-name" : "CIDRRuleSlice",
      "name" : "github.com/cilium/cilium/pkg/policy/api.CIDRRuleSlice",
      "package" : 25,
      "type" : "Named",
      "underlying" : 416
    }, {
      "elem" : 417,
      "name" : "[]github.com/cilium/cilium/pkg/policy/api.CIDRRule",
      "type" : "Slice",
      "underlying" : 416
    }, {
      "local-name" : "CIDRRule",
      "name" : "github.com/cilium/cilium/pkg/policy/api.CIDRRule",
      "package" : 25,
      "type" : "Named",
      "underlying" : 418
    }, {
      "fields" : [ {
        "name" : "Cidr",
        "type" : 414
      }, {
        "name" : "ExceptCIDRs",
        "type" : 413
      }, {
        "name" : "Generated",
        "type" : 12
      } ],
      "name" : "struct{Cidr github.com/cilium/cilium/pkg/policy/api.CIDR \"json:\\\"cidr\\\"\"; ExceptCIDRs []github.com/cilium/cilium/pkg/policy/api.CIDR \"json:\\\"except,omitempty\\\"\"; Generated bool \"json:\\\"-\\\"\"}",
      "type" : "Struct",
      "underlying" : 418
    }, {
      "local-name" : "EntitySlice",
      "name" : "github.com/cilium/cilium/pkg/policy/api.EntitySlice",
      "package" : 25,
      "type" : "Named",
      "underlying" : 420
    }, {
      "elem" : 421,
      "name" : "[]github.com/cilium/cilium/pkg/policy/api.Entity",
      "type" : "Slice",
      "underlying" : 420
    }, {
      "local-name" : "Entity",
      "name" : "github.com/cilium/cilium/pkg/policy/api.Entity",
      "package" : 25,
      "type" : "Named",
      "underlying" : 13
    }, {
      "local-name" : "EndpointSelectorSlice",
      "name" : "github.com/cilium/cilium/pkg/policy/api.EndpointSelectorSlice",
      "package" : 25,
      "type" : "Named",
      "underlying" : 375
    }, {
      "elem" : 424,
      "name" : "[]github.com/cilium/cilium/pkg/policy/api.EgressRule",
      "type" : "Slice",
      "underlying" : 423
    }, {
      "local-name" : "EgressRule",
      "name" : "github.com/cilium/cilium/pkg/policy/api.EgressRule",
      "package" : 25,
      "type" : "Named",
      "underlying" : 425
    }, {
      "fields" : [ {
        "name" : "ToEndpoints",
        "type" : 375
      }, {
        "name" : "ToRequires",
        "type" : 375
      }, {
        "name" : "ToPorts",
        "type" : 376
      }, {
        "name" : "ToCIDR",
        "type" : 412
      }, {
        "name" : "ToCIDRSet",
        "type" : 415
      }, {
        "name" : "ToEntities",
        "type" : 419
      }, {
        "name" : "ToServices",
        "type" : 426
      }, {
        "name" : "ToFQDNs",
        "type" : 436
      }, {
        "name" : "ToGroups",
        "type" : 439
      }, {
        "name" : "aggregatedSelectors",
        "type" : 422
      } ],
      "name" : "struct{ToEndpoints []github.com/cilium/cilium/pkg/policy/api.EndpointSelector \"json:\\\"toEndpoints,omitempty\\\"\"; ToRequires []github.com/cilium/cilium/pkg/policy/api.EndpointSelector \"json:\\\"toRequires,omitempty\\\"\"; ToPorts []github.com/cilium/cilium/pkg/policy/api.PortRule \"json:\\\"toPorts,omitempty\\\"\"; ToCIDR github.com/cilium/cilium/pkg/policy/api.CIDRSlice \"json:\\\"toCIDR,omitempty\\\"\"; ToCIDRSet github.com/cilium/cilium/pkg/policy/api.CIDRRuleSlice \"json:\\\"toCIDRSet,omitempty\\\"\"; ToEntities github.com/cilium/cilium/pkg/policy/api.EntitySlice \"json:\\\"toEntities,omitempty\\\"\"; ToServices []github.com/cilium/cilium/pkg/policy/api.Service \"json:\\\"toServices,omitempty\\\"\"; ToFQDNs github.com/cilium/cilium/pkg/policy/api.FQDNSelectorSlice \"json:\\\"toFQDNs,omitempty\\\"\"; ToGroups []github.com/cilium/cilium/pkg/policy/api.ToGroups \"json:\\\"toGroups,omitempty\\\"\"; aggregatedSelectors github.com/cilium/cilium/pkg/policy/api.EndpointSelectorSlice}",
      "type" : "Struct",
      "underlying" : 425
    }, {
      "elem" : 427,
      "name" : "[]github.com/cilium/cilium/pkg/policy/api.Service",
      "type" : "Slice",
      "underlying" : 426
    }, {
      "local-name" : "Service",
      "name" : "github.com/cilium/cilium/pkg/policy/api.Service",
      "package" : 25,
      "type" : "Named",
      "underlying" : 428
    }, {
      "fields" : [ {
        "name" : "K8sServiceSelector",
        "type" : 429
      }, {
        "name" : "K8sService",
        "type" : 433
      } ],
      "name" : "struct{K8sServiceSelector *github.com/cilium/cilium/pkg/policy/api.K8sServiceSelectorNamespace \"json:\\\"k8sServiceSelector,omitempty\\\"\"; K8sService *github.com/cilium/cilium/pkg/policy/api.K8sServiceNamespace \"json:\\\"k8sService,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 428
    }, {
      "elem" : 430,
      "name" : "*github.com/cilium/cilium/pkg/policy/api.K8sServiceSelectorNamespace",
      "type" : "Pointer",
      "underlying" : 429
    }, {
      "local-name" : "K8sServiceSelectorNamespace",
      "name" : "github.com/cilium/cilium/pkg/policy/api.K8sServiceSelectorNamespace",
      "package" : 25,
      "type" : "Named",
      "underlying" : 431
    }, {
      "fields" : [ {
        "name" : "Selector",
        "type" : 432
      }, {
        "name" : "Namespace",
        "type" : 13
      } ],
      "name" : "struct{Selector github.com/cilium/cilium/pkg/policy/api.ServiceSelector \"json:\\\"selector\\\"\"; Namespace string \"json:\\\"namespace,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 431
    }, {
      "local-name" : "ServiceSelector",
      "name" : "github.com/cilium/cilium/pkg/policy/api.ServiceSelector",
      "package" : 25,
      "type" : "Named",
      "underlying" : 358
    }, {
      "elem" : 434,
      "name" : "*github.com/cilium/cilium/pkg/policy/api.K8sServiceNamespace",
      "type" : "Pointer",
      "underlying" : 433
    }, {
      "local-name" : "K8sServiceNamespace",
      "name" : "github.com/cilium/cilium/pkg/policy/api.K8sServiceNamespace",
      "package" : 25,
      "type" : "Named",
      "underlying" : 435
    }, {
      "fields" : [ {
        "name" : "ServiceName",
        "type" : 13
      }, {
        "name" : "Namespace",
        "type" : 13
      } ],
      "name" : "struct{ServiceName string \"json:\\\"serviceName,omitempty\\\"\"; Namespace string \"json:\\\"namespace,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 435
    }, {
      "local-name" : "FQDNSelectorSlice",
      "name" : "github.com/cilium/cilium/pkg/policy/api.FQDNSelectorSlice",
      "package" : 25,
      "type" : "Named",
      "underlying" : 437
    }, {
      "elem" : 438,
      "name" : "[]github.com/cilium/cilium/pkg/policy/api.FQDNSelector",
      "type" : "Slice",
      "underlying" : 437
    }, {
      "local-name" : "FQDNSelector",
      "name" : "github.com/cilium/cilium/pkg/policy/api.FQDNSelector",
      "package" : 25,
      "type" : "Named",
      "underlying" : 409
    }, {
      "elem" : 440,
      "name" : "[]github.com/cilium/cilium/pkg/policy/api.ToGroups",
      "type" : "Slice",
      "underlying" : 439
    }, {
      "local-name" : "ToGroups",
      "name" : "github.com/cilium/cilium/pkg/policy/api.ToGroups",
      "package" : 25,
      "type" : "Named",
      "underlying" : 441
    }, {
      "fields" : [ {
        "name" : "AWS",
        "type" : 442
      } ],
      "name" : "struct{AWS *github.com/cilium/cilium/pkg/policy/api.AWSGroup \"json:\\\"aws,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 441
    }, {
      "elem" : 443,
      "name" : "*github.com/cilium/cilium/pkg/policy/api.AWSGroup",
      "type" : "Pointer",
      "underlying" : 442
    }, {
      "local-name" : "AWSGroup",
      "name" : "github.com/cilium/cilium/pkg/policy/api.AWSGroup",
      "package" : 25,
      "type" : "Named",
      "underlying" : 444
    }, {
      "fields" : [ {
        "name" : "Labels",
        "type" : 325
      }, {
        "name" : "SecurityGroupsIds",
        "type" : 99
      }, {
        "name" : "SecurityGroupsNames",
        "type" : 99
      }, {
        "name" : "Region",
        "type" : 13
      } ],
      "name" : "struct{Labels map[string]string \"json:\\\"labels,omitempty\\\"\"; SecurityGroupsIds []string \"json:\\\"securityGroupsIds,omitempty\\\"\"; SecurityGroupsNames []string \"json:\\\"securityGroupsNames,omitempty\\\"\"; Region string \"json:\\\"region,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 444
    }, {
      "local-name" : "LabelArray",
      "name" : "github.com/cilium/cilium/pkg/labels.LabelArray",
      "package" : 29,
      "type" : "Named",
      "underlying" : 446
    }, {
      "elem" : 447,
      "name" : "[]github.com/cilium/cilium/pkg/labels.Label",
      "type" : "Slice",
      "underlying" : 446
    }, {
      "local-name" : "Label",
      "name" : "github.com/cilium/cilium/pkg/labels.Label",
      "package" : 29,
      "type" : "Named",
      "underlying" : 448
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 13
      }, {
        "name" : "Value",
        "type" : 13
      }, {
        "name" : "Source",
        "type" : 13
      } ],
      "name" : "struct{Key string \"json:\\\"key\\\"\"; Value string \"json:\\\"value,omitempty\\\"\"; Source string \"json:\\\"source\\\"\"}",
      "type" : "Struct",
      "underlying" : 448
    }, {
      "elem" : 450,
      "name" : "*github.com/cilium/cilium/pkg/policy.ruleMetadata",
      "type" : "Pointer",
      "underlying" : 449
    }, {
      "local-name" : "ruleMetadata",
      "name" : "github.com/cilium/cilium/pkg/policy.ruleMetadata",
      "package" : 24,
      "type" : "Named",
      "underlying" : 451
    }, {
      "fields" : [ {
        "name" : "Mutex",
        "type" : 80
      }, {
        "name" : "IdentitySelected",
        "type" : 452
      } ],
      "name" : "struct{Mutex github.com/cilium/cilium/pkg/lock.RWMutex; IdentitySelected map[github.com/cilium/cilium/pkg/identity.NumericIdentity]bool}",
      "type" : "Struct",
      "underlying" : 451
    }, {
      "elem" : 12,
      "key" : 118,
      "name" : "map[github.com/cilium/cilium/pkg/identity.NumericIdentity]bool",
      "type" : "Map",
      "underlying" : 452
    }, {
      "elem" : 454,
      "name" : "*github.com/cilium/cilium/pkg/eventqueue.EventQueue",
      "type" : "Pointer",
      "underlying" : 453
    }, {
      "local-name" : "EventQueue",
      "name" : "github.com/cilium/cilium/pkg/eventqueue.EventQueue",
      "package" : 30,
      "type" : "Named",
      "underlying" : 455
    }, {
      "fields" : [ {
        "name" : "events",
        "type" : 456
      }, {
        "name" : "close",
        "type" : 465
      }, {
        "name" : "drain",
        "type" : 465
      }, {
        "name" : "eventQueueOnce",
        "type" : 468
      }, {
        "name" : "closeOnce",
        "type" : 468
      }, {
        "name" : "name",
        "type" : 13
      }, {
        "name" : "eventsMu",
        "type" : 80
      }, {
        "name" : "eventsClosed",
        "type" : 465
      } ],
      "name" : "struct{events chan *github.com/cilium/cilium/pkg/eventqueue.Event; close chan struct{}; drain chan struct{}; eventQueueOnce sync.Once; closeOnce sync.Once; name string; eventsMu github.com/cilium/cilium/pkg/lock.RWMutex; eventsClosed chan struct{}}",
      "type" : "Struct",
      "underlying" : 455
    }, {
      "dir" : "both",
      "elem" : 457,
      "name" : "chan *github.com/cilium/cilium/pkg/eventqueue.Event",
      "type" : "Chan",
      "underlying" : 456
    }, {
      "elem" : 458,
      "name" : "*github.com/cilium/cilium/pkg/eventqueue.Event",
      "type" : "Pointer",
      "underlying" : 457
    }, {
      "local-name" : "Event",
      "name" : "github.com/cilium/cilium/pkg/eventqueue.Event",
      "package" : 30,
      "type" : "Named",
      "underlying" : 459
    }, {
      "fields" : [ {
        "name" : "Metadata",
        "type" : 460
      }, {
        "name" : "eventResults",
        "type" : 464
      }, {
        "name" : "cancelled",
        "type" : 465
      }, {
        "name" : "stats",
        "type" : 466
      }, {
        "name" : "enqueued",
        "type" : 88
      } ],
      "name" : "struct{Metadata github.com/cilium/cilium/pkg/eventqueue.EventHandler; eventResults chan interface{}; cancelled chan struct{}; stats github.com/cilium/cilium/pkg/eventqueue.eventStatistics; enqueued int32}",
      "type" : "Struct",
      "underlying" : 459
    }, {
      "local-name" : "EventHandler",
      "name" : "github.com/cilium/cilium/pkg/eventqueue.EventHandler",
      "package" : 30,
      "type" : "Named",
      "underlying" : 461
    }, {
      "methods" : [ {
        "name" : "Handle",
        "type" : 462
      } ],
      "name" : "interface{Handle(chan interface{})}",
      "type" : "Interface",
      "underlying" : 461
    }, {
      "name" : "(github.com/cilium/cilium/pkg/eventqueue.EventHandler) func(chan interface{})",
      "params" : 463,
      "recv" : 61,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 462,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 464
      } ],
      "name" : "(chan interface{})",
      "type" : "Tuple",
      "underlying" : 463
    }, {
      "dir" : "both",
      "elem" : 63,
      "name" : "chan interface{}",
      "type" : "Chan",
      "underlying" : 464
    }, {
      "dir" : "both",
      "elem" : 59,
      "name" : "chan struct{}",
      "type" : "Chan",
      "underlying" : 465
    }, {
      "local-name" : "eventStatistics",
      "name" : "github.com/cilium/cilium/pkg/eventqueue.eventStatistics",
      "package" : 30,
      "type" : "Named",
      "underlying" : 467
    }, {
      "fields" : [ {
        "name" : "waitEnqueue",
        "type" : 240
      }, {
        "name" : "durationStat",
        "type" : 240
      }, {
        "name" : "waitConsumeOffQueue",
        "type" : 240
      } ],
      "name" : "struct{waitEnqueue github.com/cilium/cilium/pkg/spanstat.SpanStat; durationStat github.com/cilium/cilium/pkg/spanstat.SpanStat; waitConsumeOffQueue github.com/cilium/cilium/pkg/spanstat.SpanStat}",
      "type" : "Struct",
      "underlying" : 467
    }, {
      "local-name" : "Once",
      "name" : "sync.Once",
      "package" : 7,
      "type" : "Named",
      "underlying" : 469
    }, {
      "fields" : [ {
        "name" : "done",
        "type" : 89
      }, {
        "name" : "m",
        "type" : 86
      } ],
      "name" : "struct{done uint32; m sync.Mutex}",
      "type" : "Struct",
      "underlying" : 469
    }, {
      "elem" : 471,
      "name" : "*github.com/cilium/cilium/pkg/policy.SelectorCache",
      "type" : "Pointer",
      "underlying" : 470
    }, {
      "local-name" : "SelectorCache",
      "name" : "github.com/cilium/cilium/pkg/policy.SelectorCache",
      "package" : 24,
      "type" : "Named",
      "underlying" : 472
    }, {
      "fields" : [ {
        "name" : "mutex",
        "type" : 80
      }, {
        "name" : "idCache",
        "type" : 473
      }, {
        "name" : "selectors",
        "type" : 477
      }, {
        "name" : "localIdentityNotifier",
        "type" : 501
      } ],
      "name" : "struct{mutex github.com/cilium/cilium/pkg/lock.RWMutex; idCache github.com/cilium/cilium/pkg/policy.scIdentityCache; selectors map[string]github.com/cilium/cilium/pkg/policy.identitySelector; localIdentityNotifier github.com/cilium/cilium/pkg/policy.identityNotifier}",
      "type" : "Struct",
      "underlying" : 472
    }, {
      "local-name" : "scIdentityCache",
      "name" : "github.com/cilium/cilium/pkg/policy.scIdentityCache",
      "package" : 24,
      "type" : "Named",
      "underlying" : 474
    }, {
      "elem" : 475,
      "key" : 118,
      "name" : "map[github.com/cilium/cilium/pkg/identity.NumericIdentity]github.com/cilium/cilium/pkg/policy.scIdentity",
      "type" : "Map",
      "underlying" : 474
    }, {
      "local-name" : "scIdentity",
      "name" : "github.com/cilium/cilium/pkg/policy.scIdentity",
      "package" : 24,
      "type" : "Named",
      "underlying" : 476
    }, {
      "fields" : [ {
        "name" : "NID",
        "type" : 118
      }, {
        "name" : "lbls",
        "type" : 445
      }, {
        "name" : "namespace",
        "type" : 13
      } ],
      "name" : "struct{NID github.com/cilium/cilium/pkg/identity.NumericIdentity; lbls github.com/cilium/cilium/pkg/labels.LabelArray; namespace string}",
      "type" : "Struct",
      "underlying" : 476
    }, {
      "elem" : 478,
      "key" : 13,
      "name" : "map[string]github.com/cilium/cilium/pkg/policy.identitySelector",
      "type" : "Map",
      "underlying" : 477
    }, {
      "local-name" : "identitySelector",
      "name" : "github.com/cilium/cilium/pkg/policy.identitySelector",
      "package" : 24,
      "type" : "Named",
      "underlying" : 479
    }, {
      "methods" : [ {
        "name" : "GetSelections",
        "type" : 480
      }, {
        "name" : "IsNone",
        "type" : 485
      }, {
        "name" : "IsWildcard",
        "type" : 485
      }, {
        "name" : "Selects",
        "type" : 486
      }, {
        "name" : "String",
        "type" : 488
      }, {
        "name" : "addUser",
        "type" : 489
      }, {
        "name" : "notifyUsers",
        "type" : 496
      }, {
        "name" : "numUsers",
        "type" : 498
      }, {
        "name" : "removeUser",
        "type" : 499
      } ],
      "name" : "interface{addUser(github.com/cilium/cilium/pkg/policy.CachedSelectionUser) (added bool); notifyUsers(added []github.com/cilium/cilium/pkg/identity.NumericIdentity, deleted []github.com/cilium/cilium/pkg/identity.NumericIdentity); numUsers() int; removeUser(github.com/cilium/cilium/pkg/policy.CachedSelectionUser, github.com/cilium/cilium/pkg/policy.identityNotifier) (last bool); github.com/cilium/cilium/pkg/policy.CachedSelector}",
      "type" : "Interface",
      "underlying" : 479
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.CachedSelector) func() []github.com/cilium/cilium/pkg/identity.NumericIdentity",
      "params" : 5,
      "recv" : 65,
      "results" : 481,
      "type" : "Signature",
      "underlying" : 480,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 482
      } ],
      "name" : "([]github.com/cilium/cilium/pkg/identity.NumericIdentity)",
      "type" : "Tuple",
      "underlying" : 481
    }, {
      "elem" : 118,
      "name" : "[]github.com/cilium/cilium/pkg/identity.NumericIdentity",
      "type" : "Slice",
      "underlying" : 482
    }, {
      "local-name" : "CachedSelector",
      "name" : "github.com/cilium/cilium/pkg/policy.CachedSelector",
      "package" : 24,
      "type" : "Named",
      "underlying" : 484
    }, {
      "methods" : [ {
        "name" : "GetSelections",
        "type" : 480
      }, {
        "name" : "IsNone",
        "type" : 485
      }, {
        "name" : "IsWildcard",
        "type" : 485
      }, {
        "name" : "Selects",
        "type" : 486
      }, {
        "name" : "String",
        "type" : 488
      } ],
      "name" : "interface{GetSelections() []github.com/cilium/cilium/pkg/identity.NumericIdentity; IsNone() bool; IsWildcard() bool; Selects(nid github.com/cilium/cilium/pkg/identity.NumericIdentity) bool; String() string}",
      "type" : "Interface",
      "underlying" : 484
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.CachedSelector) func() bool",
      "params" : 5,
      "recv" : 62,
      "results" : 25,
      "type" : "Signature",
      "underlying" : 485,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.CachedSelector) func(nid github.com/cilium/cilium/pkg/identity.NumericIdentity) bool",
      "params" : 487,
      "recv" : 63,
      "results" : 25,
      "type" : "Signature",
      "underlying" : 486,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "nid",
        "type" : 118
      } ],
      "name" : "(nid github.com/cilium/cilium/pkg/identity.NumericIdentity)",
      "type" : "Tuple",
      "underlying" : 487
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.CachedSelector) func() string",
      "params" : 5,
      "recv" : 64,
      "results" : 18,
      "type" : "Signature",
      "underlying" : 488,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.identitySelector) func(github.com/cilium/cilium/pkg/policy.CachedSelectionUser) (added bool)",
      "params" : 490,
      "recv" : 67,
      "results" : 495,
      "type" : "Signature",
      "underlying" : 489,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 491
      } ],
      "name" : "(github.com/cilium/cilium/pkg/policy.CachedSelectionUser)",
      "type" : "Tuple",
      "underlying" : 490
    }, {
      "local-name" : "CachedSelectionUser",
      "name" : "github.com/cilium/cilium/pkg/policy.CachedSelectionUser",
      "package" : 24,
      "type" : "Named",
      "underlying" : 492
    }, {
      "methods" : [ {
        "name" : "IdentitySelectionUpdated",
        "type" : 493
      } ],
      "name" : "interface{IdentitySelectionUpdated(selector github.com/cilium/cilium/pkg/policy.CachedSelector, selections []github.com/cilium/cilium/pkg/identity.NumericIdentity, added []github.com/cilium/cilium/pkg/identity.NumericIdentity, deleted []github.com/cilium/cilium/pkg/identity.NumericIdentity)}",
      "type" : "Interface",
      "underlying" : 492
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.CachedSelectionUser) func(selector github.com/cilium/cilium/pkg/policy.CachedSelector, selections []github.com/cilium/cilium/pkg/identity.NumericIdentity, added []github.com/cilium/cilium/pkg/identity.NumericIdentity, deleted []github.com/cilium/cilium/pkg/identity.NumericIdentity)",
      "params" : 494,
      "recv" : 66,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 493,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "selector",
        "type" : 483
      }, {
        "name" : "selections",
        "type" : 482
      }, {
        "name" : "added",
        "type" : 482
      }, {
        "name" : "deleted",
        "type" : 482
      } ],
      "name" : "(selector github.com/cilium/cilium/pkg/policy.CachedSelector, selections []github.com/cilium/cilium/pkg/identity.NumericIdentity, added []github.com/cilium/cilium/pkg/identity.NumericIdentity, deleted []github.com/cilium/cilium/pkg/identity.NumericIdentity)",
      "type" : "Tuple",
      "underlying" : 494
    }, {
      "fields" : [ {
        "name" : "added",
        "type" : 12
      } ],
      "name" : "(added bool)",
      "type" : "Tuple",
      "underlying" : 495
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.identitySelector) func(added []github.com/cilium/cilium/pkg/identity.NumericIdentity, deleted []github.com/cilium/cilium/pkg/identity.NumericIdentity)",
      "params" : 497,
      "recv" : 68,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 496,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "added",
        "type" : 482
      }, {
        "name" : "deleted",
        "type" : 482
      } ],
      "name" : "(added []github.com/cilium/cilium/pkg/identity.NumericIdentity, deleted []github.com/cilium/cilium/pkg/identity.NumericIdentity)",
      "type" : "Tuple",
      "underlying" : 497
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.identitySelector) func() int",
      "params" : 5,
      "recv" : 69,
      "results" : 171,
      "type" : "Signature",
      "underlying" : 498,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.identitySelector) func(github.com/cilium/cilium/pkg/policy.CachedSelectionUser, github.com/cilium/cilium/pkg/policy.identityNotifier) (last bool)",
      "params" : 500,
      "recv" : 73,
      "results" : 508,
      "type" : "Signature",
      "underlying" : 499,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 491
      }, {
        "name" : "",
        "type" : 501
      } ],
      "name" : "(github.com/cilium/cilium/pkg/policy.CachedSelectionUser, github.com/cilium/cilium/pkg/policy.identityNotifier)",
      "type" : "Tuple",
      "underlying" : 500
    }, {
      "local-name" : "identityNotifier",
      "name" : "github.com/cilium/cilium/pkg/policy.identityNotifier",
      "package" : 24,
      "type" : "Named",
      "underlying" : 502
    }, {
      "methods" : [ {
        "name" : "Lock",
        "type" : 503
      }, {
        "name" : "RegisterForIdentityUpdatesLocked",
        "type" : 504
      }, {
        "name" : "Unlock",
        "type" : 503
      }, {
        "name" : "UnregisterForIdentityUpdatesLocked",
        "type" : 507
      } ],
      "name" : "interface{Lock(); RegisterForIdentityUpdatesLocked(selector github.com/cilium/cilium/pkg/policy/api.FQDNSelector) (identities []github.com/cilium/cilium/pkg/identity.NumericIdentity); Unlock(); UnregisterForIdentityUpdatesLocked(selector github.com/cilium/cilium/pkg/policy/api.FQDNSelector)}",
      "type" : "Interface",
      "underlying" : 502
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.identityNotifier) func()",
      "params" : 5,
      "recv" : 70,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 503,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.identityNotifier) func(selector github.com/cilium/cilium/pkg/policy/api.FQDNSelector) (identities []github.com/cilium/cilium/pkg/identity.NumericIdentity)",
      "params" : 505,
      "recv" : 71,
      "results" : 506,
      "type" : "Signature",
      "underlying" : 504,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "selector",
        "type" : 438
      } ],
      "name" : "(selector github.com/cilium/cilium/pkg/policy/api.FQDNSelector)",
      "type" : "Tuple",
      "underlying" : 505
    }, {
      "fields" : [ {
        "name" : "identities",
        "type" : 482
      } ],
      "name" : "(identities []github.com/cilium/cilium/pkg/identity.NumericIdentity)",
      "type" : "Tuple",
      "underlying" : 506
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.identityNotifier) func(selector github.com/cilium/cilium/pkg/policy/api.FQDNSelector)",
      "params" : 505,
      "recv" : 72,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 507,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "last",
        "type" : 12
      } ],
      "name" : "(last bool)",
      "type" : "Tuple",
      "underlying" : 508
    }, {
      "elem" : 510,
      "name" : "*github.com/cilium/cilium/pkg/policy.PolicyCache",
      "type" : "Pointer",
      "underlying" : 509
    }, {
      "local-name" : "PolicyCache",
      "name" : "github.com/cilium/cilium/pkg/policy.PolicyCache",
      "package" : 24,
      "type" : "Named",
      "underlying" : 511
    }, {
      "fields" : [ {
        "name" : "Mutex",
        "type" : 512
      }, {
        "name" : "repo",
        "type" : 347
      }, {
        "name" : "policies",
        "type" : 516
      } ],
      "name" : "struct{github.com/cilium/cilium/pkg/lock.Mutex; repo *github.com/cilium/cilium/pkg/policy.Repository; policies map[github.com/cilium/cilium/pkg/identity.NumericIdentity]*github.com/cilium/cilium/pkg/policy.cachedSelectorPolicy}",
      "type" : "Struct",
      "underlying" : 511
    }, {
      "local-name" : "Mutex",
      "name" : "github.com/cilium/cilium/pkg/lock.Mutex",
      "package" : 6,
      "type" : "Named",
      "underlying" : 513
    }, {
      "fields" : [ {
        "name" : "internalMutex",
        "type" : 514
      } ],
      "name" : "struct{github.com/cilium/cilium/pkg/lock.internalMutex}",
      "type" : "Struct",
      "underlying" : 513
    }, {
      "local-name" : "internalMutex",
      "name" : "github.com/cilium/cilium/pkg/lock.internalMutex",
      "package" : 6,
      "type" : "Named",
      "underlying" : 515
    }, {
      "fields" : [ {
        "name" : "Mutex",
        "type" : 86
      } ],
      "name" : "struct{sync.Mutex}",
      "type" : "Struct",
      "underlying" : 515
    }, {
      "elem" : 517,
      "key" : 118,
      "name" : "map[github.com/cilium/cilium/pkg/identity.NumericIdentity]*github.com/cilium/cilium/pkg/policy.cachedSelectorPolicy",
      "type" : "Map",
      "underlying" : 516
    }, {
      "elem" : 518,
      "name" : "*github.com/cilium/cilium/pkg/policy.cachedSelectorPolicy",
      "type" : "Pointer",
      "underlying" : 517
    }, {
      "local-name" : "cachedSelectorPolicy",
      "name" : "github.com/cilium/cilium/pkg/policy.cachedSelectorPolicy",
      "package" : 24,
      "type" : "Named",
      "underlying" : 519
    }, {
      "fields" : [ {
        "name" : "Mutex",
        "type" : 512
      }, {
        "name" : "identity",
        "type" : 520
      }, {
        "name" : "policy",
        "type" : 166
      } ],
      "name" : "struct{github.com/cilium/cilium/pkg/lock.Mutex; identity *github.com/cilium/cilium/pkg/identity.Identity; policy unsafe.Pointer}",
      "type" : "Struct",
      "underlying" : 519
    }, {
      "elem" : 521,
      "name" : "*github.com/cilium/cilium/pkg/identity.Identity",
      "type" : "Pointer",
      "underlying" : 520
    }, {
      "local-name" : "Identity",
      "name" : "github.com/cilium/cilium/pkg/identity.Identity",
      "package" : 8,
      "type" : "Named",
      "underlying" : 522
    }, {
      "fields" : [ {
        "name" : "ID",
        "type" : 118
      }, {
        "name" : "Labels",
        "type" : 523
      }, {
        "name" : "LabelsSHA256",
        "type" : 13
      }, {
        "name" : "LabelArray",
        "type" : 445
      }, {
        "name" : "CIDRLabel",
        "type" : 523
      }, {
        "name" : "ReferenceCount",
        "type" : 50
      } ],
      "name" : "struct{ID github.com/cilium/cilium/pkg/identity.NumericIdentity \"json:\\\"id\\\"\"; Labels github.com/cilium/cilium/pkg/labels.Labels \"json:\\\"labels\\\"\"; LabelsSHA256 string \"json:\\\"labelsSHA256\\\"\"; LabelArray github.com/cilium/cilium/pkg/labels.LabelArray \"json:\\\"-\\\"\"; CIDRLabel github.com/cilium/cilium/pkg/labels.Labels \"json:\\\"-\\\"\"; ReferenceCount int \"json:\\\"-\\\"\"}",
      "type" : "Struct",
      "underlying" : 522
    }, {
      "local-name" : "Labels",
      "name" : "github.com/cilium/cilium/pkg/labels.Labels",
      "package" : 29,
      "type" : "Named",
      "underlying" : 524
    }, {
      "elem" : 447,
      "key" : 13,
      "name" : "map[string]github.com/cilium/cilium/pkg/labels.Label",
      "type" : "Map",
      "underlying" : 524
    }, {
      "local-name" : "CertificateManager",
      "name" : "github.com/cilium/cilium/pkg/policy.CertificateManager",
      "package" : 24,
      "type" : "Named",
      "underlying" : 526
    }, {
      "methods" : [ {
        "name" : "GetSecretString",
        "type" : 527
      }, {
        "name" : "GetTLSContext",
        "type" : 529
      } ],
      "name" : "interface{GetSecretString(ctx context.Context, secret *github.com/cilium/cilium/pkg/policy/api.Secret, defaultNs string) (string, error); GetTLSContext(ctx context.Context, tls *github.com/cilium/cilium/pkg/policy/api.TLSContext, defaultNs string) (ca string, public string, private string, err error)}",
      "type" : "Interface",
      "underlying" : 526
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.CertificateManager) func(ctx context.Context, secret *github.com/cilium/cilium/pkg/policy/api.Secret, defaultNs string) (string, error)",
      "params" : 528,
      "recv" : 74,
      "results" : 249,
      "type" : "Signature",
      "underlying" : 527,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ctx",
        "type" : 36
      }, {
        "name" : "secret",
        "type" : 386
      }, {
        "name" : "defaultNs",
        "type" : 13
      } ],
      "name" : "(ctx context.Context, secret *github.com/cilium/cilium/pkg/policy/api.Secret, defaultNs string)",
      "type" : "Tuple",
      "underlying" : 528
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.CertificateManager) func(ctx context.Context, tls *github.com/cilium/cilium/pkg/policy/api.TLSContext, defaultNs string) (ca string, public string, private string, err error)",
      "params" : 530,
      "recv" : 75,
      "results" : 531,
      "type" : "Signature",
      "underlying" : 529,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ctx",
        "type" : 36
      }, {
        "name" : "tls",
        "type" : 383
      }, {
        "name" : "defaultNs",
        "type" : 13
      } ],
      "name" : "(ctx context.Context, tls *github.com/cilium/cilium/pkg/policy/api.TLSContext, defaultNs string)",
      "type" : "Tuple",
      "underlying" : 530
    }, {
      "fields" : [ {
        "name" : "ca",
        "type" : 13
      }, {
        "name" : "public",
        "type" : 13
      }, {
        "name" : "private",
        "type" : 13
      }, {
        "name" : "err",
        "type" : 15
      } ],
      "name" : "(ca string, public string, private string, err error)",
      "type" : "Tuple",
      "underlying" : 531
    }, {
      "name" : "func(github.com/cilium/cilium/pkg/policy.CertificateManager, *github.com/cilium/cilium/pkg/policy/api.L7Rules, string) (*github.com/cilium/proxy/go/cilium/api.HttpNetworkPolicyRules, bool)",
      "params" : 533,
      "recv" : -1,
      "results" : 534,
      "type" : "Signature",
      "underlying" : 532,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 525
      }, {
        "name" : "",
        "type" : 389
      }, {
        "name" : "",
        "type" : 13
      } ],
      "name" : "(github.com/cilium/cilium/pkg/policy.CertificateManager, *github.com/cilium/cilium/pkg/policy/api.L7Rules, string)",
      "type" : "Tuple",
      "underlying" : 533
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 535
      }, {
        "name" : "",
        "type" : 12
      } ],
      "name" : "(*github.com/cilium/proxy/go/cilium/api.HttpNetworkPolicyRules, bool)",
      "type" : "Tuple",
      "underlying" : 534
    }, {
      "elem" : 536,
      "name" : "*github.com/cilium/proxy/go/cilium/api.HttpNetworkPolicyRules",
      "type" : "Pointer",
      "underlying" : 535
    }, {
      "local-name" : "HttpNetworkPolicyRules",
      "name" : "github.com/cilium/proxy/go/cilium/api.HttpNetworkPolicyRules",
      "package" : 31,
      "type" : "Named",
      "underlying" : 537
    }, {
      "fields" : [ {
        "name" : "HttpRules",
        "type" : 538
      }, {
        "name" : "XXX_NoUnkeyedLiteral",
        "type" : 59
      }, {
        "name" : "XXX_unrecognized",
        "type" : 122
      }, {
        "name" : "XXX_sizecache",
        "type" : 88
      } ],
      "name" : "struct{HttpRules []*github.com/cilium/proxy/go/cilium/api.HttpNetworkPolicyRule \"protobuf:\\\"bytes,1,rep,name=http_rules,json=httpRules,proto3\\\" json:\\\"http_rules,omitempty\\\"\"; XXX_NoUnkeyedLiteral struct{} \"json:\\\"-\\\"\"; XXX_unrecognized []byte \"json:\\\"-\\\"\"; XXX_sizecache int32 \"json:\\\"-\\\"\"}",
      "type" : "Struct",
      "underlying" : 537
    }, {
      "elem" : 539,
      "name" : "[]*github.com/cilium/proxy/go/cilium/api.HttpNetworkPolicyRule",
      "type" : "Slice",
      "underlying" : 538
    }, {
      "elem" : 540,
      "name" : "*github.com/cilium/proxy/go/cilium/api.HttpNetworkPolicyRule",
      "type" : "Pointer",
      "underlying" : 539
    }, {
      "local-name" : "HttpNetworkPolicyRule",
      "name" : "github.com/cilium/proxy/go/cilium/api.HttpNetworkPolicyRule",
      "package" : 31,
      "type" : "Named",
      "underlying" : 541
    }, {
      "fields" : [ {
        "name" : "Headers",
        "type" : 542
      }, {
        "name" : "HeaderMatches",
        "type" : 549
      }, {
        "name" : "XXX_NoUnkeyedLiteral",
        "type" : 59
      }, {
        "name" : "XXX_unrecognized",
        "type" : 122
      }, {
        "name" : "XXX_sizecache",
        "type" : 88
      } ],
      "name" : "struct{Headers []*github.com/cilium/proxy/go/envoy/api/v2/route.HeaderMatcher \"protobuf:\\\"bytes,1,rep,name=headers,proto3\\\" json:\\\"headers,omitempty\\\"\"; HeaderMatches []*github.com/cilium/proxy/go/cilium/api.HeaderMatch \"protobuf:\\\"bytes,2,rep,name=header_matches,json=headerMatches,proto3\\\" json:\\\"header_matches,omitempty\\\"\"; XXX_NoUnkeyedLiteral struct{} \"json:\\\"-\\\"\"; XXX_unrecognized []byte \"json:\\\"-\\\"\"; XXX_sizecache int32 \"json:\\\"-\\\"\"}",
      "type" : "Struct",
      "underlying" : 541
    }, {
      "elem" : 543,
      "name" : "[]*github.com/cilium/proxy/go/envoy/api/v2/route.HeaderMatcher",
      "type" : "Slice",
      "underlying" : 542
    }, {
      "elem" : 544,
      "name" : "*github.com/cilium/proxy/go/envoy/api/v2/route.HeaderMatcher",
      "type" : "Pointer",
      "underlying" : 543
    }, {
      "local-name" : "HeaderMatcher",
      "name" : "github.com/cilium/proxy/go/envoy/api/v2/route.HeaderMatcher",
      "package" : 32,
      "type" : "Named",
      "underlying" : 545
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 13
      }, {
        "name" : "HeaderMatchSpecifier",
        "type" : 546
      }, {
        "name" : "InvertMatch",
        "type" : 12
      }, {
        "name" : "XXX_NoUnkeyedLiteral",
        "type" : 59
      }, {
        "name" : "XXX_unrecognized",
        "type" : 122
      }, {
        "name" : "XXX_sizecache",
        "type" : 88
      } ],
      "name" : "struct{Name string \"protobuf:\\\"bytes,1,opt,name=name,proto3\\\" json:\\\"name,omitempty\\\"\"; HeaderMatchSpecifier github.com/cilium/proxy/go/envoy/api/v2/route.isHeaderMatcher_HeaderMatchSpecifier \"protobuf_oneof:\\\"header_match_specifier\\\"\"; InvertMatch bool \"protobuf:\\\"varint,8,opt,name=invert_match,json=invertMatch,proto3\\\" json:\\\"invert_match,omitempty\\\"\"; XXX_NoUnkeyedLiteral struct{} \"json:\\\"-\\\"\"; XXX_unrecognized []byte \"json:\\\"-\\\"\"; XXX_sizecache int32 \"json:\\\"-\\\"\"}",
      "type" : "Struct",
      "underlying" : 545
    }, {
      "local-name" : "isHeaderMatcher_HeaderMatchSpecifier",
      "name" : "github.com/cilium/proxy/go/envoy/api/v2/route.isHeaderMatcher_HeaderMatchSpecifier",
      "package" : 32,
      "type" : "Named",
      "underlying" : 547
    }, {
      "methods" : [ {
        "name" : "isHeaderMatcher_HeaderMatchSpecifier",
        "type" : 548
      } ],
      "name" : "interface{isHeaderMatcher_HeaderMatchSpecifier()}",
      "type" : "Interface",
      "underlying" : 547
    }, {
      "name" : "(github.com/cilium/proxy/go/envoy/api/v2/route.isHeaderMatcher_HeaderMatchSpecifier) func()",
      "params" : 5,
      "recv" : 76,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 548,
      "variadic" : false
    }, {
      "elem" : 550,
      "name" : "[]*github.com/cilium/proxy/go/cilium/api.HeaderMatch",
      "type" : "Slice",
      "underlying" : 549
    }, {
      "elem" : 551,
      "name" : "*github.com/cilium/proxy/go/cilium/api.HeaderMatch",
      "type" : "Pointer",
      "underlying" : 550
    }, {
      "local-name" : "HeaderMatch",
      "name" : "github.com/cilium/proxy/go/cilium/api.HeaderMatch",
      "package" : 31,
      "type" : "Named",
      "underlying" : 552
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 13
      }, {
        "name" : "Value",
        "type" : 13
      }, {
        "name" : "MatchAction",
        "type" : 553
      }, {
        "name" : "MismatchAction",
        "type" : 554
      }, {
        "name" : "XXX_NoUnkeyedLiteral",
        "type" : 59
      }, {
        "name" : "XXX_unrecognized",
        "type" : 122
      }, {
        "name" : "XXX_sizecache",
        "type" : 88
      } ],
      "name" : "struct{Name string \"protobuf:\\\"bytes,1,opt,name=name,proto3\\\" json:\\\"name,omitempty\\\"\"; Value string \"protobuf:\\\"bytes,2,opt,name=value,proto3\\\" json:\\\"value,omitempty\\\"\"; MatchAction github.com/cilium/proxy/go/cilium/api.HeaderMatch_MatchAction \"protobuf:\\\"varint,3,opt,name=match_action,json=matchAction,proto3,enum=cilium.HeaderMatch_MatchAction\\\" json:\\\"match_action,omitempty\\\"\"; MismatchAction github.com/cilium/proxy/go/cilium/api.HeaderMatch_MismatchAction \"protobuf:\\\"varint,4,opt,name=mismatch_action,json=mismatchAction,proto3,enum=cilium.HeaderMatch_MismatchAction\\\" json:\\\"mismatch_action,omitempty\\\"\"; XXX_NoUnkeyedLiteral struct{} \"json:\\\"-\\\"\"; XXX_unrecognized []byte \"json:\\\"-\\\"\"; XXX_sizecache int32 \"json:\\\"-\\\"\"}",
      "type" : "Struct",
      "underlying" : 552
    }, {
      "local-name" : "HeaderMatch_MatchAction",
      "name" : "github.com/cilium/proxy/go/cilium/api.HeaderMatch_MatchAction",
      "package" : 31,
      "type" : "Named",
      "underlying" : 88
    }, {
      "local-name" : "HeaderMatch_MismatchAction",
      "name" : "github.com/cilium/proxy/go/cilium/api.HeaderMatch_MismatchAction",
      "package" : 31,
      "type" : "Named",
      "underlying" : 88
    }, {
      "name" : "(github.com/cilium/cilium/pkg/endpoint/regeneration.Owner) func(ctx context.Context, epID uint64) (func(), error)",
      "params" : 556,
      "recv" : 78,
      "results" : 557,
      "type" : "Signature",
      "underlying" : 555,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ctx",
        "type" : 36
      }, {
        "name" : "epID",
        "type" : 42
      } ],
      "name" : "(ctx context.Context, epID uint64)",
      "type" : "Tuple",
      "underlying" : 556
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 558
      }, {
        "name" : "",
        "type" : 15
      } ],
      "name" : "(func(), error)",
      "type" : "Tuple",
      "underlying" : 557
    }, {
      "name" : "func()",
      "params" : 5,
      "recv" : -1,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 558,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/endpoint/regeneration.Owner) func(typ github.com/cilium/cilium/pkg/monitor/api.AgentNotification, text string) error",
      "params" : 560,
      "recv" : 79,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 559,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 561
      }, {
        "name" : "text",
        "type" : 13
      } ],
      "name" : "(typ github.com/cilium/cilium/pkg/monitor/api.AgentNotification, text string)",
      "type" : "Tuple",
      "underlying" : 560
    }, {
      "local-name" : "AgentNotification",
      "name" : "github.com/cilium/cilium/pkg/monitor/api.AgentNotification",
      "package" : 33,
      "type" : "Named",
      "underlying" : 89
    }, {
      "local-name" : "OpLabels",
      "name" : "github.com/cilium/cilium/pkg/labels.OpLabels",
      "package" : 29,
      "type" : "Named",
      "underlying" : 563
    }, {
      "fields" : [ {
        "name" : "Custom",
        "type" : 523
      }, {
        "name" : "OrchestrationIdentity",
        "type" : 523
      }, {
        "name" : "Disabled",
        "type" : 523
      }, {
        "name" : "OrchestrationInfo",
        "type" : 523
      } ],
      "name" : "struct{Custom github.com/cilium/cilium/pkg/labels.Labels; OrchestrationIdentity github.com/cilium/cilium/pkg/labels.Labels; Disabled github.com/cilium/cilium/pkg/labels.Labels; OrchestrationInfo github.com/cilium/cilium/pkg/labels.Labels}",
      "type" : "Struct",
      "underlying" : 563
    }, {
      "elem" : 565,
      "name" : "*github.com/cilium/cilium/pkg/maps/policymap.PolicyMap",
      "type" : "Pointer",
      "underlying" : 564
    }, {
      "local-name" : "PolicyMap",
      "name" : "github.com/cilium/cilium/pkg/maps/policymap.PolicyMap",
      "package" : 34,
      "type" : "Named",
      "underlying" : 566
    }, {
      "fields" : [ {
        "name" : "Map",
        "type" : 567
      } ],
      "name" : "struct{*github.com/cilium/cilium/pkg/bpf.Map}",
      "type" : "Struct",
      "underlying" : 566
    }, {
      "elem" : 568,
      "name" : "*github.com/cilium/cilium/pkg/bpf.Map",
      "type" : "Pointer",
      "underlying" : 567
    }, {
      "local-name" : "Map",
      "name" : "github.com/cilium/cilium/pkg/bpf.Map",
      "package" : 35,
      "type" : "Named",
      "underlying" : 569
    }, {
      "fields" : [ {
        "name" : "MapInfo",
        "type" : 570
      }, {
        "name" : "fd",
        "type" : 50
      }, {
        "name" : "name",
        "type" : 13
      }, {
        "name" : "path",
        "type" : 13
      }, {
        "name" : "lock",
        "type" : 80
      }, {
        "name" : "inParallelMode",
        "type" : 12
      }, {
        "name" : "cachedCommonName",
        "type" : 13
      }, {
        "name" : "enableSync",
        "type" : 12
      }, {
        "name" : "openLock",
        "type" : 512
      }, {
        "name" : "NonPersistent",
        "type" : 12
      }, {
        "name" : "dumpParser",
        "type" : 589
      }, {
        "name" : "cache",
        "type" : 593
      }, {
        "name" : "errorResolverLastScheduled",
        "type" : 40
      }, {
        "name" : "outstandingErrors",
        "type" : 50
      } ],
      "name" : "struct{github.com/cilium/cilium/pkg/bpf.MapInfo; fd int; name string; path string; lock github.com/cilium/cilium/pkg/lock.RWMutex; inParallelMode bool; cachedCommonName string; enableSync bool; openLock github.com/cilium/cilium/pkg/lock.Mutex; NonPersistent bool; dumpParser github.com/cilium/cilium/pkg/bpf.DumpParser; cache map[string]*github.com/cilium/cilium/pkg/bpf.cacheEntry; errorResolverLastScheduled time.Time; outstandingErrors int}",
      "type" : "Struct",
      "underlying" : 569
    }, {
      "local-name" : "MapInfo",
      "name" : "github.com/cilium/cilium/pkg/bpf.MapInfo",
      "package" : 35,
      "type" : "Named",
      "underlying" : 571
    }, {
      "fields" : [ {
        "name" : "MapType",
        "type" : 572
      }, {
        "name" : "MapKey",
        "type" : 573
      }, {
        "name" : "KeySize",
        "type" : 89
      }, {
        "name" : "MapValue",
        "type" : 581
      }, {
        "name" : "ReadValueSize",
        "type" : 89
      }, {
        "name" : "ValueSize",
        "type" : 89
      }, {
        "name" : "MaxEntries",
        "type" : 89
      }, {
        "name" : "Flags",
        "type" : 89
      }, {
        "name" : "InnerID",
        "type" : 89
      }, {
        "name" : "OwnerProgType",
        "type" : 588
      } ],
      "name" : "struct{MapType github.com/cilium/cilium/pkg/bpf.MapType; MapKey github.com/cilium/cilium/pkg/bpf.MapKey; KeySize uint32; MapValue github.com/cilium/cilium/pkg/bpf.MapValue; ReadValueSize uint32; ValueSize uint32; MaxEntries uint32; Flags uint32; InnerID uint32; OwnerProgType github.com/cilium/cilium/pkg/bpf.ProgType}",
      "type" : "Struct",
      "underlying" : 571
    }, {
      "local-name" : "MapType",
      "name" : "github.com/cilium/cilium/pkg/bpf.MapType",
      "package" : 35,
      "type" : "Named",
      "underlying" : 50
    }, {
      "local-name" : "MapKey",
      "name" : "github.com/cilium/cilium/pkg/bpf.MapKey",
      "package" : 35,
      "type" : "Named",
      "underlying" : 574
    }, {
      "methods" : [ {
        "name" : "DeepCopyMapKey",
        "type" : 575
      }, {
        "name" : "GetKeyPtr",
        "type" : 577
      }, {
        "name" : "NewValue",
        "type" : 579
      }, {
        "name" : "String",
        "type" : 585
      } ],
      "name" : "interface{DeepCopyMapKey() github.com/cilium/cilium/pkg/bpf.MapKey; GetKeyPtr() unsafe.Pointer; NewValue() github.com/cilium/cilium/pkg/bpf.MapValue; fmt.Stringer}",
      "type" : "Interface",
      "underlying" : 574
    }, {
      "name" : "(github.com/cilium/cilium/pkg/bpf.MapKey) func() github.com/cilium/cilium/pkg/bpf.MapKey",
      "params" : 5,
      "recv" : 80,
      "results" : 576,
      "type" : "Signature",
      "underlying" : 575,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 573
      } ],
      "name" : "(github.com/cilium/cilium/pkg/bpf.MapKey)",
      "type" : "Tuple",
      "underlying" : 576
    }, {
      "name" : "(github.com/cilium/cilium/pkg/bpf.MapKey) func() unsafe.Pointer",
      "params" : 5,
      "recv" : 81,
      "results" : 578,
      "type" : "Signature",
      "underlying" : 577,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 166
      } ],
      "name" : "(unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 578
    }, {
      "name" : "(github.com/cilium/cilium/pkg/bpf.MapKey) func() github.com/cilium/cilium/pkg/bpf.MapValue",
      "params" : 5,
      "recv" : 85,
      "results" : 580,
      "type" : "Signature",
      "underlying" : 579,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 581
      } ],
      "name" : "(github.com/cilium/cilium/pkg/bpf.MapValue)",
      "type" : "Tuple",
      "underlying" : 580
    }, {
      "local-name" : "MapValue",
      "name" : "github.com/cilium/cilium/pkg/bpf.MapValue",
      "package" : 35,
      "type" : "Named",
      "underlying" : 582
    }, {
      "methods" : [ {
        "name" : "DeepCopyMapValue",
        "type" : 583
      }, {
        "name" : "GetValuePtr",
        "type" : 584
      }, {
        "name" : "String",
        "type" : 585
      } ],
      "name" : "interface{DeepCopyMapValue() github.com/cilium/cilium/pkg/bpf.MapValue; GetValuePtr() unsafe.Pointer; fmt.Stringer}",
      "type" : "Interface",
      "underlying" : 582
    }, {
      "name" : "(github.com/cilium/cilium/pkg/bpf.MapValue) func() github.com/cilium/cilium/pkg/bpf.MapValue",
      "params" : 5,
      "recv" : 82,
      "results" : 580,
      "type" : "Signature",
      "underlying" : 583,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/bpf.MapValue) func() unsafe.Pointer",
      "params" : 5,
      "recv" : 83,
      "results" : 578,
      "type" : "Signature",
      "underlying" : 584,
      "variadic" : false
    }, {
      "name" : "(fmt.Stringer) func() string",
      "params" : 5,
      "recv" : 84,
      "results" : 18,
      "type" : "Signature",
      "underlying" : 585,
      "variadic" : false
    }, {
      "local-name" : "Stringer",
      "name" : "fmt.Stringer",
      "package" : 36,
      "type" : "Named",
      "underlying" : 587
    }, {
      "methods" : [ {
        "name" : "String",
        "type" : 585
      } ],
      "name" : "interface{String() string}",
      "type" : "Interface",
      "underlying" : 587
    }, {
      "local-name" : "ProgType",
      "name" : "github.com/cilium/cilium/pkg/bpf.ProgType",
      "package" : 35,
      "type" : "Named",
      "underlying" : 50
    }, {
      "local-name" : "DumpParser",
      "name" : "github.com/cilium/cilium/pkg/bpf.DumpParser",
      "package" : 35,
      "type" : "Named",
      "underlying" : 590
    }, {
      "name" : "func(key []byte, value []byte, mapKey github.com/cilium/cilium/pkg/bpf.MapKey, mapValue github.com/cilium/cilium/pkg/bpf.MapValue) (github.com/cilium/cilium/pkg/bpf.MapKey, github.com/cilium/cilium/pkg/bpf.MapValue, error)",
      "params" : 591,
      "recv" : -1,
      "results" : 592,
      "type" : "Signature",
      "underlying" : 590,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 122
      }, {
        "name" : "value",
        "type" : 122
      }, {
        "name" : "mapKey",
        "type" : 573
      }, {
        "name" : "mapValue",
        "type" : 581
      } ],
      "name" : "(key []byte, value []byte, mapKey github.com/cilium/cilium/pkg/bpf.MapKey, mapValue github.com/cilium/cilium/pkg/bpf.MapValue)",
      "type" : "Tuple",
      "underlying" : 591
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 573
      }, {
        "name" : "",
        "type" : 581
      }, {
        "name" : "",
        "type" : 15
      } ],
      "name" : "(github.com/cilium/cilium/pkg/bpf.MapKey, github.com/cilium/cilium/pkg/bpf.MapValue, error)",
      "type" : "Tuple",
      "underlying" : 592
    }, {
      "elem" : 594,
      "key" : 13,
      "name" : "map[string]*github.com/cilium/cilium/pkg/bpf.cacheEntry",
      "type" : "Map",
      "underlying" : 593
    }, {
      "elem" : 595,
      "name" : "*github.com/cilium/cilium/pkg/bpf.cacheEntry",
      "type" : "Pointer",
      "underlying" : 594
    }, {
      "local-name" : "cacheEntry",
      "name" : "github.com/cilium/cilium/pkg/bpf.cacheEntry",
      "package" : 35,
      "type" : "Named",
      "underlying" : 596
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 573
      }, {
        "name" : "Value",
        "type" : 581
      }, {
        "name" : "DesiredAction",
        "type" : 597
      }, {
        "name" : "LastError",
        "type" : 15
      } ],
      "name" : "struct{Key github.com/cilium/cilium/pkg/bpf.MapKey; Value github.com/cilium/cilium/pkg/bpf.MapValue; DesiredAction github.com/cilium/cilium/pkg/bpf.DesiredAction; LastError error}",
      "type" : "Struct",
      "underlying" : 596
    }, {
      "local-name" : "DesiredAction",
      "name" : "github.com/cilium/cilium/pkg/bpf.DesiredAction",
      "package" : 35,
      "type" : "Named",
      "underlying" : 50
    }, {
      "elem" : 599,
      "name" : "*github.com/cilium/cilium/pkg/endpoint.EndpointStatus",
      "type" : "Pointer",
      "underlying" : 598
    }, {
      "local-name" : "EndpointStatus",
      "name" : "github.com/cilium/cilium/pkg/endpoint.EndpointStatus",
      "package" : 0,
      "type" : "Named",
      "underlying" : 600
    }, {
      "fields" : [ {
        "name" : "CurrentStatuses",
        "type" : 601
      }, {
        "name" : "Log",
        "type" : 610
      }, {
        "name" : "Index",
        "type" : 50
      }, {
        "name" : "indexMU",
        "type" : 80
      } ],
      "name" : "struct{CurrentStatuses github.com/cilium/cilium/pkg/endpoint.componentStatus \"json:\\\"current-status,omitempty\\\"\"; Log github.com/cilium/cilium/pkg/endpoint.statusLog \"json:\\\"log,omitempty\\\"\"; Index int \"json:\\\"index\\\"\"; indexMU github.com/cilium/cilium/pkg/lock.RWMutex}",
      "type" : "Struct",
      "underlying" : 600
    }, {
      "local-name" : "componentStatus",
      "name" : "github.com/cilium/cilium/pkg/endpoint.componentStatus",
      "package" : 0,
      "type" : "Named",
      "underlying" : 602
    }, {
      "elem" : 603,
      "key" : 609,
      "name" : "map[github.com/cilium/cilium/pkg/endpoint.StatusType]*github.com/cilium/cilium/pkg/endpoint.statusLogMsg",
      "type" : "Map",
      "underlying" : 602
    }, {
      "elem" : 604,
      "name" : "*github.com/cilium/cilium/pkg/endpoint.statusLogMsg",
      "type" : "Pointer",
      "underlying" : 603
    }, {
      "local-name" : "statusLogMsg",
      "name" : "github.com/cilium/cilium/pkg/endpoint.statusLogMsg",
      "package" : 0,
      "type" : "Named",
      "underlying" : 605
    }, {
      "fields" : [ {
        "name" : "Status",
        "type" : 606
      }, {
        "name" : "Timestamp",
        "type" : 40
      } ],
      "name" : "struct{Status github.com/cilium/cilium/pkg/endpoint.Status \"json:\\\"status\\\"\"; Timestamp time.Time \"json:\\\"timestamp\\\"\"}",
      "type" : "Struct",
      "underlying" : 605
    }, {
      "local-name" : "Status",
      "name" : "github.com/cilium/cilium/pkg/endpoint.Status",
      "package" : 0,
      "type" : "Named",
      "underlying" : 607
    }, {
      "fields" : [ {
        "name" : "Code",
        "type" : 608
      }, {
        "name" : "Msg",
        "type" : 13
      }, {
        "name" : "Type",
        "type" : 609
      }, {
        "name" : "State",
        "type" : 13
      } ],
      "name" : "struct{Code github.com/cilium/cilium/pkg/endpoint.StatusCode \"json:\\\"code\\\"\"; Msg string \"json:\\\"msg\\\"\"; Type github.com/cilium/cilium/pkg/endpoint.StatusType \"json:\\\"status-type\\\"\"; State string \"json:\\\"state\\\"\"}",
      "type" : "Struct",
      "underlying" : 607
    }, {
      "local-name" : "StatusCode",
      "name" : "github.com/cilium/cilium/pkg/endpoint.StatusCode",
      "package" : 0,
      "type" : "Named",
      "underlying" : 50
    }, {
      "local-name" : "StatusType",
      "name" : "github.com/cilium/cilium/pkg/endpoint.StatusType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 50
    }, {
      "local-name" : "statusLog",
      "name" : "github.com/cilium/cilium/pkg/endpoint.statusLog",
      "package" : 0,
      "type" : "Named",
      "underlying" : 611
    }, {
      "elem" : 603,
      "name" : "[]*github.com/cilium/cilium/pkg/endpoint.statusLogMsg",
      "type" : "Slice",
      "underlying" : 611
    }, {
      "elem" : 613,
      "name" : "*github.com/cilium/cilium/pkg/fqdn.DNSCache",
      "type" : "Pointer",
      "underlying" : 612
    }, {
      "local-name" : "DNSCache",
      "name" : "github.com/cilium/cilium/pkg/fqdn.DNSCache",
      "package" : 37,
      "type" : "Named",
      "underlying" : 614
    }, {
      "fields" : [ {
        "name" : "RWMutex",
        "type" : 80
      }, {
        "name" : "forward",
        "type" : 615
      }, {
        "name" : "reverse",
        "type" : 621
      }, {
        "name" : "lastCleanup",
        "type" : 40
      }, {
        "name" : "cleanup",
        "type" : 623
      }, {
        "name" : "overLimit",
        "type" : 624
      }, {
        "name" : "perHostLimit",
        "type" : 50
      }, {
        "name" : "minTTL",
        "type" : 50
      } ],
      "name" : "struct{github.com/cilium/cilium/pkg/lock.RWMutex; forward map[string]github.com/cilium/cilium/pkg/fqdn.ipEntries; reverse map[string]github.com/cilium/cilium/pkg/fqdn.nameEntries; lastCleanup time.Time; cleanup map[int64][]string; overLimit map[string]bool; perHostLimit int; minTTL int}",
      "type" : "Struct",
      "underlying" : 614
    }, {
      "elem" : 616,
      "key" : 13,
      "name" : "map[string]github.com/cilium/cilium/pkg/fqdn.ipEntries",
      "type" : "Map",
      "underlying" : 615
    }, {
      "local-name" : "ipEntries",
      "name" : "github.com/cilium/cilium/pkg/fqdn.ipEntries",
      "package" : 37,
      "type" : "Named",
      "underlying" : 617
    }, {
      "elem" : 618,
      "key" : 13,
      "name" : "map[string]*github.com/cilium/cilium/pkg/fqdn.cacheEntry",
      "type" : "Map",
      "underlying" : 617
    }, {
      "elem" : 619,
      "name" : "*github.com/cilium/cilium/pkg/fqdn.cacheEntry",
      "type" : "Pointer",
      "underlying" : 618
    }, {
      "local-name" : "cacheEntry",
      "name" : "github.com/cilium/cilium/pkg/fqdn.cacheEntry",
      "package" : 37,
      "type" : "Named",
      "underlying" : 620
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 13
      }, {
        "name" : "LookupTime",
        "type" : 40
      }, {
        "name" : "ExpirationTime",
        "type" : 40
      }, {
        "name" : "TTL",
        "type" : 50
      }, {
        "name" : "IPs",
        "type" : 307
      } ],
      "name" : "struct{Name string \"json:\\\"fqdn,omitempty\\\"\"; LookupTime time.Time \"json:\\\"lookup-time,omitempty\\\"\"; ExpirationTime time.Time \"json:\\\"expiration-time,omitempty\\\"\"; TTL int \"json:\\\"ttl,omitempty\\\"\"; IPs []net.IP \"json:\\\"ips,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 620
    }, {
      "elem" : 622,
      "key" : 13,
      "name" : "map[string]github.com/cilium/cilium/pkg/fqdn.nameEntries",
      "type" : "Map",
      "underlying" : 621
    }, {
      "local-name" : "nameEntries",
      "name" : "github.com/cilium/cilium/pkg/fqdn.nameEntries",
      "package" : 37,
      "type" : "Named",
      "underlying" : 617
    }, {
      "elem" : 99,
      "key" : 43,
      "name" : "map[int64][]string",
      "type" : "Map",
      "underlying" : 623
    }, {
      "elem" : 12,
      "key" : 13,
      "name" : "map[string]bool",
      "type" : "Map",
      "underlying" : 624
    }, {
      "elem" : 626,
      "name" : "*github.com/cilium/cilium/pkg/fqdn.DNSZombieMappings",
      "type" : "Pointer",
      "underlying" : 625
    }, {
      "local-name" : "DNSZombieMappings",
      "name" : "github.com/cilium/cilium/pkg/fqdn.DNSZombieMappings",
      "package" : 37,
      "type" : "Named",
      "underlying" : 627
    }, {
      "fields" : [ {
        "name" : "Mutex",
        "type" : 512
      }, {
        "name" : "deletes",
        "type" : 628
      }, {
        "name" : "lastCTGCUpdate",
        "type" : 40
      }, {
        "name" : "max",
        "type" : 50
      } ],
      "name" : "struct{github.com/cilium/cilium/pkg/lock.Mutex; deletes map[string]*github.com/cilium/cilium/pkg/fqdn.DNSZombieMapping; lastCTGCUpdate time.Time; max int}",
      "type" : "Struct",
      "underlying" : 627
    }, {
      "elem" : 629,
      "key" : 13,
      "name" : "map[string]*github.com/cilium/cilium/pkg/fqdn.DNSZombieMapping",
      "type" : "Map",
      "underlying" : 628
    }, {
      "elem" : 630,
      "name" : "*github.com/cilium/cilium/pkg/fqdn.DNSZombieMapping",
      "type" : "Pointer",
      "underlying" : 629
    }, {
      "local-name" : "DNSZombieMapping",
      "name" : "github.com/cilium/cilium/pkg/fqdn.DNSZombieMapping",
      "package" : 37,
      "type" : "Named",
      "underlying" : 631
    }, {
      "fields" : [ {
        "name" : "Names",
        "type" : 99
      }, {
        "name" : "IP",
        "type" : 272
      }, {
        "name" : "AliveAt",
        "type" : 40
      }, {
        "name" : "DeletePendingAt",
        "type" : 40
      } ],
      "name" : "struct{Names []string \"json:\\\"names,omitempty\\\"\"; IP net.IP \"json:\\\"ip,omitempty\\\"\"; AliveAt time.Time \"json:\\\"alive-at,omitempty\\\"\"; DeletePendingAt time.Time \"json:\\\"delete-pending-at,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 631
    }, {
      "elem" : 633,
      "name" : "*github.com/cilium/cilium/pkg/trigger.Trigger",
      "type" : "Pointer",
      "underlying" : 632
    }, {
      "local-name" : "Trigger",
      "name" : "github.com/cilium/cilium/pkg/trigger.Trigger",
      "package" : 38,
      "type" : "Named",
      "underlying" : 634
    }, {
      "fields" : [ {
        "name" : "mutex",
        "type" : 512
      }, {
        "name" : "trigger",
        "type" : 12
      }, {
        "name" : "params",
        "type" : 635
      }, {
        "name" : "lastTrigger",
        "type" : 40
      }, {
        "name" : "wakeupChan",
        "type" : 645
      }, {
        "name" : "closeChan",
        "type" : 465
      }, {
        "name" : "numFolds",
        "type" : 50
      }, {
        "name" : "foldedReasons",
        "type" : 646
      }, {
        "name" : "waitStart",
        "type" : 40
      } ],
      "name" : "struct{mutex github.com/cilium/cilium/pkg/lock.Mutex; trigger bool; params github.com/cilium/cilium/pkg/trigger.Parameters; lastTrigger time.Time; wakeupChan chan bool; closeChan chan struct{}; numFolds int; foldedReasons github.com/cilium/cilium/pkg/trigger.reasonStack; waitStart time.Time}",
      "type" : "Struct",
      "underlying" : 634
    }, {
      "local-name" : "Parameters",
      "name" : "github.com/cilium/cilium/pkg/trigger.Parameters",
      "package" : 38,
      "type" : "Named",
      "underlying" : 636
    }, {
      "fields" : [ {
        "name" : "MinInterval",
        "type" : 242
      }, {
        "name" : "TriggerFunc",
        "type" : 637
      }, {
        "name" : "MetricsObserver",
        "type" : 639
      }, {
        "name" : "Name",
        "type" : 13
      }, {
        "name" : "sleepInterval",
        "type" : 242
      } ],
      "name" : "struct{MinInterval time.Duration; TriggerFunc func(reasons []string); MetricsObserver github.com/cilium/cilium/pkg/trigger.MetricsObserver; Name string; sleepInterval time.Duration}",
      "type" : "Struct",
      "underlying" : 636
    }, {
      "name" : "func(reasons []string)",
      "params" : 638,
      "recv" : -1,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 637,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "reasons",
        "type" : 99
      } ],
      "name" : "(reasons []string)",
      "type" : "Tuple",
      "underlying" : 638
    }, {
      "local-name" : "MetricsObserver",
      "name" : "github.com/cilium/cilium/pkg/trigger.MetricsObserver",
      "package" : 38,
      "type" : "Named",
      "underlying" : 640
    }, {
      "methods" : [ {
        "name" : "PostRun",
        "type" : 641
      }, {
        "name" : "QueueEvent",
        "type" : 643
      } ],
      "name" : "interface{PostRun(callDuration time.Duration, latency time.Duration, folds int); QueueEvent(reason string)}",
      "type" : "Interface",
      "underlying" : 640
    }, {
      "name" : "(github.com/cilium/cilium/pkg/trigger.MetricsObserver) func(callDuration time.Duration, latency time.Duration, folds int)",
      "params" : 642,
      "recv" : 86,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 641,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "callDuration",
        "type" : 242
      }, {
        "name" : "latency",
        "type" : 242
      }, {
        "name" : "folds",
        "type" : 50
      } ],
      "name" : "(callDuration time.Duration, latency time.Duration, folds int)",
      "type" : "Tuple",
      "underlying" : 642
    }, {
      "name" : "(github.com/cilium/cilium/pkg/trigger.MetricsObserver) func(reason string)",
      "params" : 644,
      "recv" : 87,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 643,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "reason",
        "type" : 13
      } ],
      "name" : "(reason string)",
      "type" : "Tuple",
      "underlying" : 644
    }, {
      "dir" : "both",
      "elem" : 12,
      "name" : "chan bool",
      "type" : "Chan",
      "underlying" : 645
    }, {
      "local-name" : "reasonStack",
      "name" : "github.com/cilium/cilium/pkg/trigger.reasonStack",
      "package" : 38,
      "type" : "Named",
      "underlying" : 647
    }, {
      "elem" : 59,
      "key" : 13,
      "name" : "map[string]struct{}",
      "type" : "Map",
      "underlying" : 647
    }, {
      "elem" : 649,
      "name" : "*github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.Pod",
      "type" : "Pointer",
      "underlying" : 648
    }, {
      "local-name" : "Pod",
      "name" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.Pod",
      "package" : 39,
      "type" : "Named",
      "underlying" : 650
    }, {
      "fields" : [ {
        "name" : "TypeMeta",
        "type" : 651
      }, {
        "name" : "ObjectMeta",
        "type" : 653
      }, {
        "name" : "Spec",
        "type" : 656
      }, {
        "name" : "Status",
        "type" : 668
      } ],
      "name" : "struct{github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1.TypeMeta \"json:\\\",inline\\\"\"; github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1.ObjectMeta \"json:\\\"metadata,omitempty\\\" protobuf:\\\"bytes,1,opt,name=metadata\\\"\"; Spec github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.PodSpec \"json:\\\"spec,omitempty\\\" protobuf:\\\"bytes,2,opt,name=spec\\\"\"; Status github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.PodStatus \"json:\\\"status,omitempty\\\" protobuf:\\\"bytes,3,opt,name=status\\\"\"}",
      "type" : "Struct",
      "underlying" : 650
    }, {
      "local-name" : "TypeMeta",
      "name" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1.TypeMeta",
      "package" : 26,
      "type" : "Named",
      "underlying" : 652
    }, {
      "fields" : [ {
        "name" : "Kind",
        "type" : 13
      }, {
        "name" : "APIVersion",
        "type" : 13
      } ],
      "name" : "struct{Kind string \"json:\\\"kind,omitempty\\\" protobuf:\\\"bytes,1,opt,name=kind\\\"\"; APIVersion string \"json:\\\"apiVersion,omitempty\\\" protobuf:\\\"bytes,2,opt,name=apiVersion\\\"\"}",
      "type" : "Struct",
      "underlying" : 652
    }, {
      "local-name" : "ObjectMeta",
      "name" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1.ObjectMeta",
      "package" : 26,
      "type" : "Named",
      "underlying" : 654
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 13
      }, {
        "name" : "Namespace",
        "type" : 13
      }, {
        "name" : "UID",
        "type" : 655
      }, {
        "name" : "ResourceVersion",
        "type" : 13
      }, {
        "name" : "Labels",
        "type" : 325
      }, {
        "name" : "Annotations",
        "type" : 325
      } ],
      "name" : "struct{Name string \"json:\\\"name,omitempty\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; Namespace string \"json:\\\"namespace,omitempty\\\" protobuf:\\\"bytes,3,opt,name=namespace\\\"\"; UID k8s.io/apimachinery/pkg/types.UID \"json:\\\"uid,omitempty\\\" protobuf:\\\"bytes,5,opt,name=uid,casttype=k8s.io/kubernetes/pkg/types.UID\\\"\"; ResourceVersion string \"json:\\\"resourceVersion,omitempty\\\" protobuf:\\\"bytes,6,opt,name=resourceVersion\\\"\"; Labels map[string]string \"json:\\\"labels,omitempty\\\" protobuf:\\\"bytes,11,rep,name=labels\\\"\"; Annotations map[string]string \"json:\\\"annotations,omitempty\\\" protobuf:\\\"bytes,12,rep,name=annotations\\\"\"}",
      "type" : "Struct",
      "underlying" : 654
    }, {
      "local-name" : "UID",
      "name" : "k8s.io/apimachinery/pkg/types.UID",
      "package" : 40,
      "type" : "Named",
      "underlying" : 13
    }, {
      "local-name" : "PodSpec",
      "name" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.PodSpec",
      "package" : 39,
      "type" : "Named",
      "underlying" : 657
    }, {
      "fields" : [ {
        "name" : "InitContainers",
        "type" : 658
      }, {
        "name" : "Containers",
        "type" : 658
      }, {
        "name" : "ServiceAccountName",
        "type" : 13
      }, {
        "name" : "HostNetwork",
        "type" : 12
      } ],
      "name" : "struct{InitContainers []github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.Container \"json:\\\"initContainers,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"name\\\" protobuf:\\\"bytes,20,rep,name=initContainers\\\"\"; Containers []github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.Container \"json:\\\"containers\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"name\\\" protobuf:\\\"bytes,2,rep,name=containers\\\"\"; ServiceAccountName string \"json:\\\"serviceAccountName,omitempty\\\" protobuf:\\\"bytes,8,opt,name=serviceAccountName\\\"\"; HostNetwork bool \"json:\\\"hostNetwork,omitempty\\\" protobuf:\\\"varint,11,opt,name=hostNetwork\\\"\"}",
      "type" : "Struct",
      "underlying" : 657
    }, {
      "elem" : 659,
      "name" : "[]github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.Container",
      "type" : "Slice",
      "underlying" : 658
    }, {
      "local-name" : "Container",
      "name" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.Container",
      "package" : 39,
      "type" : "Named",
      "underlying" : 660
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 13
      }, {
        "name" : "Image",
        "type" : 13
      }, {
        "name" : "Ports",
        "type" : 661
      }, {
        "name" : "VolumeMounts",
        "type" : 665
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; Image string \"json:\\\"image,omitempty\\\" protobuf:\\\"bytes,2,opt,name=image\\\"\"; Ports []github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.ContainerPort \"json:\\\"ports,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"containerPort\\\" protobuf:\\\"bytes,6,rep,name=ports\\\"\"; VolumeMounts []github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.VolumeMount \"json:\\\"volumeMounts,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"mountPath\\\" protobuf:\\\"bytes,9,rep,name=volumeMounts\\\"\"}",
      "type" : "Struct",
      "underlying" : 660
    }, {
      "elem" : 662,
      "name" : "[]github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.ContainerPort",
      "type" : "Slice",
      "underlying" : 661
    }, {
      "local-name" : "ContainerPort",
      "name" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.ContainerPort",
      "package" : 39,
      "type" : "Named",
      "underlying" : 663
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 13
      }, {
        "name" : "HostPort",
        "type" : 88
      }, {
        "name" : "ContainerPort",
        "type" : 88
      }, {
        "name" : "Protocol",
        "type" : 664
      }, {
        "name" : "HostIP",
        "type" : 13
      } ],
      "name" : "struct{Name string \"json:\\\"name,omitempty\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; HostPort int32 \"json:\\\"hostPort,omitempty\\\" protobuf:\\\"varint,2,opt,name=hostPort\\\"\"; ContainerPort int32 \"json:\\\"containerPort\\\" protobuf:\\\"varint,3,opt,name=containerPort\\\"\"; Protocol github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.Protocol \"json:\\\"protocol,omitempty\\\" protobuf:\\\"bytes,4,opt,name=protocol,casttype=Protocol\\\"\"; HostIP string \"json:\\\"hostIP,omitempty\\\" protobuf:\\\"bytes,5,opt,name=hostIP\\\"\"}",
      "type" : "Struct",
      "underlying" : 663
    }, {
      "local-name" : "Protocol",
      "name" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.Protocol",
      "package" : 39,
      "type" : "Named",
      "underlying" : 13
    }, {
      "elem" : 666,
      "name" : "[]github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.VolumeMount",
      "type" : "Slice",
      "underlying" : 665
    }, {
      "local-name" : "VolumeMount",
      "name" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.VolumeMount",
      "package" : 39,
      "type" : "Named",
      "underlying" : 667
    }, {
      "fields" : [ {
        "name" : "MountPath",
        "type" : 13
      } ],
      "name" : "struct{MountPath string \"json:\\\"mountPath\\\" protobuf:\\\"bytes,3,opt,name=mountPath\\\"\"}",
      "type" : "Struct",
      "underlying" : 667
    }, {
      "local-name" : "PodStatus",
      "name" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.PodStatus",
      "package" : 39,
      "type" : "Named",
      "underlying" : 669
    }, {
      "fields" : [ {
        "name" : "HostIP",
        "type" : 13
      }, {
        "name" : "PodIP",
        "type" : 13
      }, {
        "name" : "PodIPs",
        "type" : 670
      }, {
        "name" : "StartTime",
        "type" : 673
      } ],
      "name" : "struct{HostIP string \"json:\\\"hostIP,omitempty\\\" protobuf:\\\"bytes,5,opt,name=hostIP\\\"\"; PodIP string \"json:\\\"podIP,omitempty\\\" protobuf:\\\"bytes,6,opt,name=podIP\\\"\"; PodIPs []github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.PodIP \"json:\\\"podIPs,omitempty\\\" protobuf:\\\"bytes,12,rep,name=podIPs\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"ip\\\"\"; StartTime *github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1.Time \"json:\\\"startTime,omitempty\\\" protobuf:\\\"bytes,7,opt,name=startTime\\\"\"}",
      "type" : "Struct",
      "underlying" : 669
    }, {
      "elem" : 671,
      "name" : "[]github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.PodIP",
      "type" : "Slice",
      "underlying" : 670
    }, {
      "local-name" : "PodIP",
      "name" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/core/v1.PodIP",
      "package" : 39,
      "type" : "Named",
      "underlying" : 672
    }, {
      "fields" : [ {
        "name" : "IP",
        "type" : 13
      } ],
      "name" : "struct{IP string \"json:\\\"ip,omitempty\\\" protobuf:\\\"bytes,1,opt,name=ip\\\"\"}",
      "type" : "Struct",
      "underlying" : 672
    }, {
      "elem" : 674,
      "name" : "*github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1.Time",
      "type" : "Pointer",
      "underlying" : 673
    }, {
      "local-name" : "Time",
      "name" : "github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1.Time",
      "package" : 26,
      "type" : "Named",
      "underlying" : 675
    }, {
      "fields" : [ {
        "name" : "Time",
        "type" : 40
      } ],
      "name" : "struct{time.Time \"protobuf:\\\"-\\\"\"}",
      "type" : "Struct",
      "underlying" : 675
    }, {
      "local-name" : "NamedPortsMap",
      "name" : "github.com/cilium/cilium/pkg/policy.NamedPortsMap",
      "package" : 24,
      "type" : "Named",
      "underlying" : 677
    }, {
      "elem" : 678,
      "key" : 13,
      "name" : "map[string]github.com/cilium/cilium/pkg/policy.NamedPort",
      "type" : "Map",
      "underlying" : 677
    }, {
      "local-name" : "NamedPort",
      "name" : "github.com/cilium/cilium/pkg/policy.NamedPort",
      "package" : 24,
      "type" : "Named",
      "underlying" : 679
    }, {
      "fields" : [ {
        "name" : "Port",
        "type" : 11
      }, {
        "name" : "Proto",
        "type" : 54
      } ],
      "name" : "struct{Port uint16; Proto uint8}",
      "type" : "Struct",
      "underlying" : 679
    }, {
      "elem" : 12,
      "key" : 681,
      "name" : "map[*github.com/cilium/cilium/pkg/endpoint.policySignal]bool",
      "type" : "Map",
      "underlying" : 680
    }, {
      "elem" : 682,
      "name" : "*github.com/cilium/cilium/pkg/endpoint.policySignal",
      "type" : "Pointer",
      "underlying" : 681
    }, {
      "local-name" : "policySignal",
      "name" : "github.com/cilium/cilium/pkg/endpoint.policySignal",
      "package" : 0,
      "type" : "Named",
      "underlying" : 683
    }, {
      "fields" : [ {
        "name" : "wantedRev",
        "type" : 42
      }, {
        "name" : "ch",
        "type" : 465
      }, {
        "name" : "ctx",
        "type" : 36
      }, {
        "name" : "done",
        "type" : 684
      } ],
      "name" : "struct{wantedRev uint64; ch chan struct{}; ctx context.Context; done func(ts time.Time)}",
      "type" : "Struct",
      "underlying" : 683
    }, {
      "name" : "func(ts time.Time)",
      "params" : 685,
      "recv" : -1,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 684,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ts",
        "type" : 40
      } ],
      "name" : "(ts time.Time)",
      "type" : "Tuple",
      "underlying" : 685
    }, {
      "local-name" : "EndpointProxy",
      "name" : "github.com/cilium/cilium/pkg/endpoint.EndpointProxy",
      "package" : 0,
      "type" : "Named",
      "underlying" : 687
    }, {
      "methods" : [ {
        "name" : "CreateOrUpdateRedirect",
        "type" : 688
      }, {
        "name" : "RemoveNetworkPolicy",
        "type" : 747
      }, {
        "name" : "RemoveRedirect",
        "type" : 749
      }, {
        "name" : "UpdateNetworkPolicy",
        "type" : 752
      }, {
        "name" : "UseCurrentNetworkPolicy",
        "type" : 789
      } ],
      "name" : "interface{CreateOrUpdateRedirect(l4 github.com/cilium/cilium/pkg/policy.ProxyPolicy, id string, localEndpoint github.com/cilium/cilium/pkg/proxy/logger.EndpointUpdater, wg *github.com/cilium/cilium/pkg/completion.WaitGroup) (proxyPort uint16, err error, finalizeFunc github.com/cilium/cilium/pkg/revert.FinalizeFunc, revertFunc github.com/cilium/cilium/pkg/revert.RevertFunc); RemoveNetworkPolicy(ep github.com/cilium/cilium/pkg/proxy/logger.EndpointInfoSource); RemoveRedirect(id string, wg *github.com/cilium/cilium/pkg/completion.WaitGroup) (error, github.com/cilium/cilium/pkg/revert.FinalizeFunc, github.com/cilium/cilium/pkg/revert.RevertFunc); UpdateNetworkPolicy(ep github.com/cilium/cilium/pkg/proxy/logger.EndpointUpdater, policy *github.com/cilium/cilium/pkg/policy.L4Policy, npMap github.com/cilium/cilium/pkg/policy.NamedPortsMap, ingressPolicyEnforced bool, egressPolicyEnforced bool, wg *github.com/cilium/cilium/pkg/completion.WaitGroup) (error, func() error); UseCurrentNetworkPolicy(ep github.com/cilium/cilium/pkg/proxy/logger.EndpointUpdater, policy *github.com/cilium/cilium/pkg/policy.L4Policy, wg *github.com/cilium/cilium/pkg/completion.WaitGroup)}",
      "type" : "Interface",
      "underlying" : 687
    }, {
      "name" : "(github.com/cilium/cilium/pkg/endpoint.EndpointProxy) func(l4 github.com/cilium/cilium/pkg/policy.ProxyPolicy, id string, localEndpoint github.com/cilium/cilium/pkg/proxy/logger.EndpointUpdater, wg *github.com/cilium/cilium/pkg/completion.WaitGroup) (proxyPort uint16, err error, finalizeFunc github.com/cilium/cilium/pkg/revert.FinalizeFunc, revertFunc github.com/cilium/cilium/pkg/revert.RevertFunc)",
      "params" : 689,
      "recv" : 101,
      "results" : 743,
      "type" : "Signature",
      "underlying" : 688,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "l4",
        "type" : 690
      }, {
        "name" : "id",
        "type" : 13
      }, {
        "name" : "localEndpoint",
        "type" : 708
      }, {
        "name" : "wg",
        "type" : 733
      } ],
      "name" : "(l4 github.com/cilium/cilium/pkg/policy.ProxyPolicy, id string, localEndpoint github.com/cilium/cilium/pkg/proxy/logger.EndpointUpdater, wg *github.com/cilium/cilium/pkg/completion.WaitGroup)",
      "type" : "Tuple",
      "underlying" : 689
    }, {
      "local-name" : "ProxyPolicy",
      "name" : "github.com/cilium/cilium/pkg/policy.ProxyPolicy",
      "package" : 24,
      "type" : "Named",
      "underlying" : 691
    }, {
      "methods" : [ {
        "name" : "CopyL7RulesPerEndpoint",
        "type" : 692
      }, {
        "name" : "GetIngress",
        "type" : 702
      }, {
        "name" : "GetL7Parser",
        "type" : 703
      }, {
        "name" : "GetPort",
        "type" : 706
      } ],
      "name" : "interface{CopyL7RulesPerEndpoint() github.com/cilium/cilium/pkg/policy.L7DataMap; GetIngress() bool; GetL7Parser() github.com/cilium/cilium/pkg/policy.L7ParserType; GetPort() uint16}",
      "type" : "Interface",
      "underlying" : 691
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.ProxyPolicy) func() github.com/cilium/cilium/pkg/policy.L7DataMap",
      "params" : 5,
      "recv" : 88,
      "results" : 693,
      "type" : "Signature",
      "underlying" : 692,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 694
      } ],
      "name" : "(github.com/cilium/cilium/pkg/policy.L7DataMap)",
      "type" : "Tuple",
      "underlying" : 693
    }, {
      "local-name" : "L7DataMap",
      "name" : "github.com/cilium/cilium/pkg/policy.L7DataMap",
      "package" : 24,
      "type" : "Named",
      "underlying" : 695
    }, {
      "elem" : 696,
      "key" : 483,
      "name" : "map[github.com/cilium/cilium/pkg/policy.CachedSelector]*github.com/cilium/cilium/pkg/policy.PerSelectorPolicy",
      "type" : "Map",
      "underlying" : 695
    }, {
      "elem" : 697,
      "name" : "*github.com/cilium/cilium/pkg/policy.PerSelectorPolicy",
      "type" : "Pointer",
      "underlying" : 696
    }, {
      "local-name" : "PerSelectorPolicy",
      "name" : "github.com/cilium/cilium/pkg/policy.PerSelectorPolicy",
      "package" : 24,
      "type" : "Named",
      "underlying" : 698
    }, {
      "fields" : [ {
        "name" : "TerminatingTLS",
        "type" : 699
      }, {
        "name" : "OriginatingTLS",
        "type" : 699
      }, {
        "name" : "EnvoyHTTPRules",
        "type" : 535
      }, {
        "name" : "CanShortCircuit",
        "type" : 12
      }, {
        "name" : "L7Rules",
        "type" : 390
      } ],
      "name" : "struct{TerminatingTLS *github.com/cilium/cilium/pkg/policy.TLSContext \"json:\\\"terminatingTLS,omitempty\\\"\"; OriginatingTLS *github.com/cilium/cilium/pkg/policy.TLSContext \"json:\\\"originatingTLS,omitempty\\\"\"; EnvoyHTTPRules *github.com/cilium/proxy/go/cilium/api.HttpNetworkPolicyRules \"json:\\\"-\\\"\"; CanShortCircuit bool \"json:\\\"-\\\"\"; github.com/cilium/cilium/pkg/policy/api.L7Rules}",
      "type" : "Struct",
      "underlying" : 698
    }, {
      "elem" : 700,
      "name" : "*github.com/cilium/cilium/pkg/policy.TLSContext",
      "type" : "Pointer",
      "underlying" : 699
    }, {
      "local-name" : "TLSContext",
      "name" : "github.com/cilium/cilium/pkg/policy.TLSContext",
      "package" : 24,
      "type" : "Named",
      "underlying" : 701
    }, {
      "fields" : [ {
        "name" : "TrustedCA",
        "type" : 13
      }, {
        "name" : "CertificateChain",
        "type" : 13
      }, {
        "name" : "PrivateKey",
        "type" : 13
      } ],
      "name" : "struct{TrustedCA string \"json:\\\"trustedCA,omitempty\\\"\"; CertificateChain string \"json:\\\"certificateChain,omitempty\\\"\"; PrivateKey string \"json:\\\"privateKey,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 701
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.ProxyPolicy) func() bool",
      "params" : 5,
      "recv" : 89,
      "results" : 25,
      "type" : "Signature",
      "underlying" : 702,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.ProxyPolicy) func() github.com/cilium/cilium/pkg/policy.L7ParserType",
      "params" : 5,
      "recv" : 90,
      "results" : 704,
      "type" : "Signature",
      "underlying" : 703,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 705
      } ],
      "name" : "(github.com/cilium/cilium/pkg/policy.L7ParserType)",
      "type" : "Tuple",
      "underlying" : 704
    }, {
      "local-name" : "L7ParserType",
      "name" : "github.com/cilium/cilium/pkg/policy.L7ParserType",
      "package" : 24,
      "type" : "Named",
      "underlying" : 13
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.ProxyPolicy) func() uint16",
      "params" : 5,
      "recv" : 91,
      "results" : 707,
      "type" : "Signature",
      "underlying" : 706,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 11
      } ],
      "name" : "(uint16)",
      "type" : "Tuple",
      "underlying" : 707
    }, {
      "local-name" : "EndpointUpdater",
      "name" : "github.com/cilium/cilium/pkg/proxy/logger.EndpointUpdater",
      "package" : 41,
      "type" : "Named",
      "underlying" : 709
    }, {
      "methods" : [ {
        "name" : "ConntrackName",
        "type" : 710
      }, {
        "name" : "ConntrackNameLocked",
        "type" : 710
      }, {
        "name" : "GetEgressPolicyEnabledLocked",
        "type" : 713
      }, {
        "name" : "GetID",
        "type" : 714
      }, {
        "name" : "GetIPv4Address",
        "type" : 710
      }, {
        "name" : "GetIPv6Address",
        "type" : 710
      }, {
        "name" : "GetIdentity",
        "type" : 715
      }, {
        "name" : "GetIngressPolicyEnabledLocked",
        "type" : 713
      }, {
        "name" : "GetLabels",
        "type" : 716
      }, {
        "name" : "GetLabelsSHA",
        "type" : 710
      }, {
        "name" : "GetProxyInfoByFields",
        "type" : 718
      }, {
        "name" : "HasSidecarProxy",
        "type" : 713
      }, {
        "name" : "OnProxyPolicyUpdate",
        "type" : 728
      }, {
        "name" : "ProxyID",
        "type" : 720
      }, {
        "name" : "UpdateProxyStatistics",
        "type" : 730
      } ],
      "name" : "interface{OnProxyPolicyUpdate(policyRevision uint64); UpdateProxyStatistics(l4Protocol string, port uint16, ingress bool, request bool, verdict github.com/cilium/cilium/pkg/proxy/accesslog.FlowVerdict); github.com/cilium/cilium/pkg/proxy/logger.EndpointInfoSource}",
      "type" : "Interface",
      "underlying" : 709
    }, {
      "name" : "(github.com/cilium/cilium/pkg/proxy/logger.EndpointInfoSource) func() string",
      "params" : 5,
      "recv" : 98,
      "results" : 18,
      "type" : "Signature",
      "underlying" : 710,
      "variadic" : false
    }, {
      "local-name" : "EndpointInfoSource",
      "name" : "github.com/cilium/cilium/pkg/proxy/logger.EndpointInfoSource",
      "package" : 41,
      "type" : "Named",
      "underlying" : 712
    }, {
      "methods" : [ {
        "name" : "ConntrackName",
        "type" : 710
      }, {
        "name" : "ConntrackNameLocked",
        "type" : 710
      }, {
        "name" : "GetEgressPolicyEnabledLocked",
        "type" : 713
      }, {
        "name" : "GetID",
        "type" : 714
      }, {
        "name" : "GetIPv4Address",
        "type" : 710
      }, {
        "name" : "GetIPv6Address",
        "type" : 710
      }, {
        "name" : "GetIdentity",
        "type" : 715
      }, {
        "name" : "GetIngressPolicyEnabledLocked",
        "type" : 713
      }, {
        "name" : "GetLabels",
        "type" : 716
      }, {
        "name" : "GetLabelsSHA",
        "type" : 710
      }, {
        "name" : "GetProxyInfoByFields",
        "type" : 718
      }, {
        "name" : "HasSidecarProxy",
        "type" : 713
      }, {
        "name" : "ProxyID",
        "type" : 720
      } ],
      "name" : "interface{ConntrackName() string; ConntrackNameLocked() string; GetEgressPolicyEnabledLocked() bool; GetID() uint64; GetIPv4Address() string; GetIPv6Address() string; GetIdentity() github.com/cilium/cilium/pkg/identity.NumericIdentity; GetIngressPolicyEnabledLocked() bool; GetLabels() []string; GetLabelsSHA() string; GetProxyInfoByFields() (uint64, string, string, []string, string, uint64, error); HasSidecarProxy() bool; ProxyID(npMap github.com/cilium/cilium/pkg/policy.NamedPortsMap, l4 *github.com/cilium/cilium/pkg/policy.L4Filter) (string, error)}",
      "type" : "Interface",
      "underlying" : 712
    }, {
      "name" : "(github.com/cilium/cilium/pkg/proxy/logger.EndpointInfoSource) func() bool",
      "params" : 5,
      "recv" : 92,
      "results" : 25,
      "type" : "Signature",
      "underlying" : 713,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/proxy/logger.EndpointInfoSource) func() uint64",
      "params" : 5,
      "recv" : 93,
      "results" : 113,
      "type" : "Signature",
      "underlying" : 714,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/proxy/logger.EndpointInfoSource) func() github.com/cilium/cilium/pkg/identity.NumericIdentity",
      "params" : 5,
      "recv" : 94,
      "results" : 117,
      "type" : "Signature",
      "underlying" : 715,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/proxy/logger.EndpointInfoSource) func() []string",
      "params" : 5,
      "recv" : 95,
      "results" : 717,
      "type" : "Signature",
      "underlying" : 716,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 99
      } ],
      "name" : "([]string)",
      "type" : "Tuple",
      "underlying" : 717
    }, {
      "name" : "(github.com/cilium/cilium/pkg/proxy/logger.EndpointInfoSource) func() (uint64, string, string, []string, string, uint64, error)",
      "params" : 5,
      "recv" : 96,
      "results" : 719,
      "type" : "Signature",
      "underlying" : 718,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 42
      }, {
        "name" : "",
        "type" : 13
      }, {
        "name" : "",
        "type" : 13
      }, {
        "name" : "",
        "type" : 99
      }, {
        "name" : "",
        "type" : 13
      }, {
        "name" : "",
        "type" : 42
      }, {
        "name" : "",
        "type" : 15
      } ],
      "name" : "(uint64, string, string, []string, string, uint64, error)",
      "type" : "Tuple",
      "underlying" : 719
    }, {
      "name" : "(github.com/cilium/cilium/pkg/proxy/logger.EndpointInfoSource) func(npMap github.com/cilium/cilium/pkg/policy.NamedPortsMap, l4 *github.com/cilium/cilium/pkg/policy.L4Filter) (string, error)",
      "params" : 721,
      "recv" : 97,
      "results" : 249,
      "type" : "Signature",
      "underlying" : 720,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "npMap",
        "type" : 676
      }, {
        "name" : "l4",
        "type" : 722
      } ],
      "name" : "(npMap github.com/cilium/cilium/pkg/policy.NamedPortsMap, l4 *github.com/cilium/cilium/pkg/policy.L4Filter)",
      "type" : "Tuple",
      "underlying" : 721
    }, {
      "elem" : 723,
      "name" : "*github.com/cilium/cilium/pkg/policy.L4Filter",
      "type" : "Pointer",
      "underlying" : 722
    }, {
      "local-name" : "L4Filter",
      "name" : "github.com/cilium/cilium/pkg/policy.L4Filter",
      "package" : 24,
      "type" : "Named",
      "underlying" : 724
    }, {
      "fields" : [ {
        "name" : "Port",
        "type" : 50
      }, {
        "name" : "PortName",
        "type" : 13
      }, {
        "name" : "Protocol",
        "type" : 382
      }, {
        "name" : "U8Proto",
        "type" : 725
      }, {
        "name" : "wildcard",
        "type" : 483
      }, {
        "name" : "L7RulesPerSelector",
        "type" : 694
      }, {
        "name" : "L7Parser",
        "type" : 705
      }, {
        "name" : "Ingress",
        "type" : 12
      }, {
        "name" : "DerivedFromRules",
        "type" : 726
      }, {
        "name" : "policy",
        "type" : 166
      } ],
      "name" : "struct{Port int \"json:\\\"port\\\"\"; PortName string \"json:\\\"port-name,omitempty\\\"\"; Protocol github.com/cilium/cilium/pkg/policy/api.L4Proto \"json:\\\"protocol\\\"\"; U8Proto github.com/cilium/cilium/pkg/u8proto.U8proto \"json:\\\"-\\\"\"; wildcard github.com/cilium/cilium/pkg/policy.CachedSelector; L7RulesPerSelector github.com/cilium/cilium/pkg/policy.L7DataMap \"json:\\\"l7-rules,omitempty\\\"\"; L7Parser github.com/cilium/cilium/pkg/policy.L7ParserType \"json:\\\"-\\\"\"; Ingress bool \"json:\\\"-\\\"\"; DerivedFromRules github.com/cilium/cilium/pkg/labels.LabelArrayList \"json:\\\"-\\\"\"; policy unsafe.Pointer}",
      "type" : "Struct",
      "underlying" : 724
    }, {
      "local-name" : "U8proto",
      "name" : "github.com/cilium/cilium/pkg/u8proto.U8proto",
      "package" : 42,
      "type" : "Named",
      "underlying" : 54
    }, {
      "local-name" : "LabelArrayList",
      "name" : "github.com/cilium/cilium/pkg/labels.LabelArrayList",
      "package" : 29,
      "type" : "Named",
      "underlying" : 727
    }, {
      "elem" : 445,
      "name" : "[]github.com/cilium/cilium/pkg/labels.LabelArray",
      "type" : "Slice",
      "underlying" : 727
    }, {
      "name" : "(github.com/cilium/cilium/pkg/proxy/logger.EndpointUpdater) func(policyRevision uint64)",
      "params" : 729,
      "recv" : 99,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 728,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "policyRevision",
        "type" : 42
      } ],
      "name" : "(policyRevision uint64)",
      "type" : "Tuple",
      "underlying" : 729
    }, {
      "name" : "(github.com/cilium/cilium/pkg/proxy/logger.EndpointUpdater) func(l4Protocol string, port uint16, ingress bool, request bool, verdict github.com/cilium/cilium/pkg/proxy/accesslog.FlowVerdict)",
      "params" : 731,
      "recv" : 100,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 730,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "l4Protocol",
        "type" : 13
      }, {
        "name" : "port",
        "type" : 11
      }, {
        "name" : "ingress",
        "type" : 12
      }, {
        "name" : "request",
        "type" : 12
      }, {
        "name" : "verdict",
        "type" : 732
      } ],
      "name" : "(l4Protocol string, port uint16, ingress bool, request bool, verdict github.com/cilium/cilium/pkg/proxy/accesslog.FlowVerdict)",
      "type" : "Tuple",
      "underlying" : 731
    }, {
      "local-name" : "FlowVerdict",
      "name" : "github.com/cilium/cilium/pkg/proxy/accesslog.FlowVerdict",
      "package" : 43,
      "type" : "Named",
      "underlying" : 13
    }, {
      "elem" : 734,
      "name" : "*github.com/cilium/cilium/pkg/completion.WaitGroup",
      "type" : "Pointer",
      "underlying" : 733
    }, {
      "local-name" : "WaitGroup",
      "name" : "github.com/cilium/cilium/pkg/completion.WaitGroup",
      "package" : 44,
      "type" : "Named",
      "underlying" : 735
    }, {
      "fields" : [ {
        "name" : "ctx",
        "type" : 36
      }, {
        "name" : "cancel",
        "type" : 736
      }, {
        "name" : "counterLocker",
        "type" : 512
      }, {
        "name" : "pendingCompletions",
        "type" : 737
      } ],
      "name" : "struct{ctx context.Context; cancel context.CancelFunc; counterLocker github.com/cilium/cilium/pkg/lock.Mutex; pendingCompletions []*github.com/cilium/cilium/pkg/completion.Completion}",
      "type" : "Struct",
      "underlying" : 735
    }, {
      "local-name" : "CancelFunc",
      "name" : "context.CancelFunc",
      "package" : 3,
      "type" : "Named",
      "underlying" : 558
    }, {
      "elem" : 738,
      "name" : "[]*github.com/cilium/cilium/pkg/completion.Completion",
      "type" : "Slice",
      "underlying" : 737
    }, {
      "elem" : 739,
      "name" : "*github.com/cilium/cilium/pkg/completion.Completion",
      "type" : "Pointer",
      "underlying" : 738
    }, {
      "local-name" : "Completion",
      "name" : "github.com/cilium/cilium/pkg/completion.Completion",
      "package" : 44,
      "type" : "Named",
      "underlying" : 740
    }, {
      "fields" : [ {
        "name" : "cancel",
        "type" : 736
      }, {
        "name" : "lock",
        "type" : 512
      }, {
        "name" : "completed",
        "type" : 465
      }, {
        "name" : "callback",
        "type" : 741
      }, {
        "name" : "err",
        "type" : 15
      } ],
      "name" : "struct{cancel context.CancelFunc; lock github.com/cilium/cilium/pkg/lock.Mutex; completed chan struct{}; callback func(err error); err error}",
      "type" : "Struct",
      "underlying" : 740
    }, {
      "name" : "func(err error)",
      "params" : 742,
      "recv" : -1,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 741,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "err",
        "type" : 15
      } ],
      "name" : "(err error)",
      "type" : "Tuple",
      "underlying" : 742
    }, {
      "fields" : [ {
        "name" : "proxyPort",
        "type" : 11
      }, {
        "name" : "err",
        "type" : 15
      }, {
        "name" : "finalizeFunc",
        "type" : 744
      }, {
        "name" : "revertFunc",
        "type" : 745
      } ],
      "name" : "(proxyPort uint16, err error, finalizeFunc github.com/cilium/cilium/pkg/revert.FinalizeFunc, revertFunc github.com/cilium/cilium/pkg/revert.RevertFunc)",
      "type" : "Tuple",
      "underlying" : 743
    }, {
      "local-name" : "FinalizeFunc",
      "name" : "github.com/cilium/cilium/pkg/revert.FinalizeFunc",
      "package" : 45,
      "type" : "Named",
      "underlying" : 558
    }, {
      "local-name" : "RevertFunc",
      "name" : "github.com/cilium/cilium/pkg/revert.RevertFunc",
      "package" : 45,
      "type" : "Named",
      "underlying" : 746
    }, {
      "name" : "func() error",
      "params" : 5,
      "recv" : -1,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 746,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/endpoint.EndpointProxy) func(ep github.com/cilium/cilium/pkg/proxy/logger.EndpointInfoSource)",
      "params" : 748,
      "recv" : 102,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 747,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ep",
        "type" : 711
      } ],
      "name" : "(ep github.com/cilium/cilium/pkg/proxy/logger.EndpointInfoSource)",
      "type" : "Tuple",
      "underlying" : 748
    }, {
      "name" : "(github.com/cilium/cilium/pkg/endpoint.EndpointProxy) func(id string, wg *github.com/cilium/cilium/pkg/completion.WaitGroup) (error, github.com/cilium/cilium/pkg/revert.FinalizeFunc, github.com/cilium/cilium/pkg/revert.RevertFunc)",
      "params" : 750,
      "recv" : 103,
      "results" : 751,
      "type" : "Signature",
      "underlying" : 749,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "id",
        "type" : 13
      }, {
        "name" : "wg",
        "type" : 733
      } ],
      "name" : "(id string, wg *github.com/cilium/cilium/pkg/completion.WaitGroup)",
      "type" : "Tuple",
      "underlying" : 750
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 15
      }, {
        "name" : "",
        "type" : 744
      }, {
        "name" : "",
        "type" : 745
      } ],
      "name" : "(error, github.com/cilium/cilium/pkg/revert.FinalizeFunc, github.com/cilium/cilium/pkg/revert.RevertFunc)",
      "type" : "Tuple",
      "underlying" : 751
    }, {
      "name" : "(github.com/cilium/cilium/pkg/endpoint.EndpointProxy) func(ep github.com/cilium/cilium/pkg/proxy/logger.EndpointUpdater, policy *github.com/cilium/cilium/pkg/policy.L4Policy, npMap github.com/cilium/cilium/pkg/policy.NamedPortsMap, ingressPolicyEnforced bool, egressPolicyEnforced bool, wg *github.com/cilium/cilium/pkg/completion.WaitGroup) (error, func() error)",
      "params" : 753,
      "recv" : 106,
      "results" : 788,
      "type" : "Signature",
      "underlying" : 752,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ep",
        "type" : 708
      }, {
        "name" : "policy",
        "type" : 754
      }, {
        "name" : "npMap",
        "type" : 676
      }, {
        "name" : "ingressPolicyEnforced",
        "type" : 12
      }, {
        "name" : "egressPolicyEnforced",
        "type" : 12
      }, {
        "name" : "wg",
        "type" : 733
      } ],
      "name" : "(ep github.com/cilium/cilium/pkg/proxy/logger.EndpointUpdater, policy *github.com/cilium/cilium/pkg/policy.L4Policy, npMap github.com/cilium/cilium/pkg/policy.NamedPortsMap, ingressPolicyEnforced bool, egressPolicyEnforced bool, wg *github.com/cilium/cilium/pkg/completion.WaitGroup)",
      "type" : "Tuple",
      "underlying" : 753
    }, {
      "elem" : 755,
      "name" : "*github.com/cilium/cilium/pkg/policy.L4Policy",
      "type" : "Pointer",
      "underlying" : 754
    }, {
      "local-name" : "L4Policy",
      "name" : "github.com/cilium/cilium/pkg/policy.L4Policy",
      "package" : 24,
      "type" : "Named",
      "underlying" : 756
    }, {
      "fields" : [ {
        "name" : "Ingress",
        "type" : 757
      }, {
        "name" : "Egress",
        "type" : 757
      }, {
        "name" : "Revision",
        "type" : 42
      }, {
        "name" : "mutex",
        "type" : 80
      }, {
        "name" : "users",
        "type" : 759
      } ],
      "name" : "struct{Ingress github.com/cilium/cilium/pkg/policy.L4PolicyMap; Egress github.com/cilium/cilium/pkg/policy.L4PolicyMap; Revision uint64; mutex github.com/cilium/cilium/pkg/lock.RWMutex; users map[*github.com/cilium/cilium/pkg/policy.EndpointPolicy]struct{}}",
      "type" : "Struct",
      "underlying" : 756
    }, {
      "local-name" : "L4PolicyMap",
      "name" : "github.com/cilium/cilium/pkg/policy.L4PolicyMap",
      "package" : 24,
      "type" : "Named",
      "underlying" : 758
    }, {
      "elem" : 722,
      "key" : 13,
      "name" : "map[string]*github.com/cilium/cilium/pkg/policy.L4Filter",
      "type" : "Map",
      "underlying" : 758
    }, {
      "elem" : 59,
      "key" : 760,
      "name" : "map[*github.com/cilium/cilium/pkg/policy.EndpointPolicy]struct{}",
      "type" : "Map",
      "underlying" : 759
    }, {
      "elem" : 761,
      "name" : "*github.com/cilium/cilium/pkg/policy.EndpointPolicy",
      "type" : "Pointer",
      "underlying" : 760
    }, {
      "local-name" : "EndpointPolicy",
      "name" : "github.com/cilium/cilium/pkg/policy.EndpointPolicy",
      "package" : 24,
      "type" : "Named",
      "underlying" : 762
    }, {
      "fields" : [ {
        "name" : "selectorPolicy",
        "type" : 763
      }, {
        "name" : "NamedPortsMap",
        "type" : 676
      }, {
        "name" : "PolicyMapState",
        "type" : 776
      }, {
        "name" : "policyMapChanges",
        "type" : 782
      }, {
        "name" : "PolicyOwner",
        "type" : 784
      } ],
      "name" : "struct{*github.com/cilium/cilium/pkg/policy.selectorPolicy; NamedPortsMap github.com/cilium/cilium/pkg/policy.NamedPortsMap; PolicyMapState github.com/cilium/cilium/pkg/policy.MapState; policyMapChanges github.com/cilium/cilium/pkg/policy.MapChanges; PolicyOwner github.com/cilium/cilium/pkg/policy.PolicyOwner}",
      "type" : "Struct",
      "underlying" : 762
    }, {
      "elem" : 764,
      "name" : "*github.com/cilium/cilium/pkg/policy.selectorPolicy",
      "type" : "Pointer",
      "underlying" : 763
    }, {
      "local-name" : "selectorPolicy",
      "name" : "github.com/cilium/cilium/pkg/policy.selectorPolicy",
      "package" : 24,
      "type" : "Named",
      "underlying" : 765
    }, {
      "fields" : [ {
        "name" : "Revision",
        "type" : 42
      }, {
        "name" : "SelectorCache",
        "type" : 470
      }, {
        "name" : "L4Policy",
        "type" : 754
      }, {
        "name" : "CIDRPolicy",
        "type" : 766
      }, {
        "name" : "IngressPolicyEnabled",
        "type" : 12
      }, {
        "name" : "EgressPolicyEnabled",
        "type" : 12
      } ],
      "name" : "struct{Revision uint64; SelectorCache *github.com/cilium/cilium/pkg/policy.SelectorCache; L4Policy *github.com/cilium/cilium/pkg/policy.L4Policy; CIDRPolicy *github.com/cilium/cilium/pkg/policy.CIDRPolicy; IngressPolicyEnabled bool; EgressPolicyEnabled bool}",
      "type" : "Struct",
      "underlying" : 765
    }, {
      "elem" : 767,
      "name" : "*github.com/cilium/cilium/pkg/policy.CIDRPolicy",
      "type" : "Pointer",
      "underlying" : 766
    }, {
      "local-name" : "CIDRPolicy",
      "name" : "github.com/cilium/cilium/pkg/policy.CIDRPolicy",
      "package" : 24,
      "type" : "Named",
      "underlying" : 768
    }, {
      "fields" : [ {
        "name" : "Ingress",
        "type" : 769
      }, {
        "name" : "Egress",
        "type" : 769
      } ],
      "name" : "struct{Ingress github.com/cilium/cilium/pkg/policy.CIDRPolicyMap; Egress github.com/cilium/cilium/pkg/policy.CIDRPolicyMap}",
      "type" : "Struct",
      "underlying" : 768
    }, {
      "local-name" : "CIDRPolicyMap",
      "name" : "github.com/cilium/cilium/pkg/policy.CIDRPolicyMap",
      "package" : 24,
      "type" : "Named",
      "underlying" : 770
    }, {
      "fields" : [ {
        "name" : "Map",
        "type" : 771
      }, {
        "name" : "IPv6PrefixCount",
        "type" : 775
      }, {
        "name" : "IPv4PrefixCount",
        "type" : 775
      } ],
      "name" : "struct{Map map[string]*github.com/cilium/cilium/pkg/policy.CIDRPolicyMapRule; IPv6PrefixCount map[int]int; IPv4PrefixCount map[int]int}",
      "type" : "Struct",
      "underlying" : 770
    }, {
      "elem" : 772,
      "key" : 13,
      "name" : "map[string]*github.com/cilium/cilium/pkg/policy.CIDRPolicyMapRule",
      "type" : "Map",
      "underlying" : 771
    }, {
      "elem" : 773,
      "name" : "*github.com/cilium/cilium/pkg/policy.CIDRPolicyMapRule",
      "type" : "Pointer",
      "underlying" : 772
    }, {
      "local-name" : "CIDRPolicyMapRule",
      "name" : "github.com/cilium/cilium/pkg/policy.CIDRPolicyMapRule",
      "package" : 24,
      "type" : "Named",
      "underlying" : 774
    }, {
      "fields" : [ {
        "name" : "Prefix",
        "type" : 270
      }, {
        "name" : "DerivedFromRules",
        "type" : 726
      } ],
      "name" : "struct{Prefix net.IPNet; DerivedFromRules github.com/cilium/cilium/pkg/labels.LabelArrayList}",
      "type" : "Struct",
      "underlying" : 774
    }, {
      "elem" : 50,
      "key" : 50,
      "name" : "map[int]int",
      "type" : "Map",
      "underlying" : 775
    }, {
      "local-name" : "MapState",
      "name" : "github.com/cilium/cilium/pkg/policy.MapState",
      "package" : 24,
      "type" : "Named",
      "underlying" : 777
    }, {
      "elem" : 778,
      "key" : 780,
      "name" : "map[github.com/cilium/cilium/pkg/policy.Key]github.com/cilium/cilium/pkg/policy.MapStateEntry",
      "type" : "Map",
      "underlying" : 777
    }, {
      "local-name" : "MapStateEntry",
      "name" : "github.com/cilium/cilium/pkg/policy.MapStateEntry",
      "package" : 24,
      "type" : "Named",
      "underlying" : 779
    }, {
      "fields" : [ {
        "name" : "ProxyPort",
        "type" : 11
      }, {
        "name" : "DerivedFromRules",
        "type" : 726
      } ],
      "name" : "struct{ProxyPort uint16; DerivedFromRules github.com/cilium/cilium/pkg/labels.LabelArrayList}",
      "type" : "Struct",
      "underlying" : 779
    }, {
      "local-name" : "Key",
      "name" : "github.com/cilium/cilium/pkg/policy.Key",
      "package" : 24,
      "type" : "Named",
      "underlying" : 781
    }, {
      "fields" : [ {
        "name" : "Identity",
        "type" : 89
      }, {
        "name" : "DestPort",
        "type" : 11
      }, {
        "name" : "Nexthdr",
        "type" : 54
      }, {
        "name" : "TrafficDirection",
        "type" : 54
      } ],
      "name" : "struct{Identity uint32; DestPort uint16; Nexthdr uint8; TrafficDirection uint8}",
      "type" : "Struct",
      "underlying" : 781
    }, {
      "local-name" : "MapChanges",
      "name" : "github.com/cilium/cilium/pkg/policy.MapChanges",
      "package" : 24,
      "type" : "Named",
      "underlying" : 783
    }, {
      "fields" : [ {
        "name" : "mutex",
        "type" : 512
      }, {
        "name" : "adds",
        "type" : 776
      }, {
        "name" : "deletes",
        "type" : 776
      } ],
      "name" : "struct{mutex github.com/cilium/cilium/pkg/lock.Mutex; adds github.com/cilium/cilium/pkg/policy.MapState; deletes github.com/cilium/cilium/pkg/policy.MapState}",
      "type" : "Struct",
      "underlying" : 783
    }, {
      "local-name" : "PolicyOwner",
      "name" : "github.com/cilium/cilium/pkg/policy.PolicyOwner",
      "package" : 24,
      "type" : "Named",
      "underlying" : 785
    }, {
      "methods" : [ {
        "name" : "GetID",
        "type" : 786
      }, {
        "name" : "LookupRedirectPortLocked",
        "type" : 787
      } ],
      "name" : "interface{GetID() uint64; LookupRedirectPortLocked(npMap github.com/cilium/cilium/pkg/policy.NamedPortsMap, l4 *github.com/cilium/cilium/pkg/policy.L4Filter) uint16}",
      "type" : "Interface",
      "underlying" : 785
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.PolicyOwner) func() uint64",
      "params" : 5,
      "recv" : 104,
      "results" : 113,
      "type" : "Signature",
      "underlying" : 786,
      "variadic" : false
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.PolicyOwner) func(npMap github.com/cilium/cilium/pkg/policy.NamedPortsMap, l4 *github.com/cilium/cilium/pkg/policy.L4Filter) uint16",
      "params" : 721,
      "recv" : 105,
      "results" : 707,
      "type" : "Signature",
      "underlying" : 787,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 15
      }, {
        "name" : "",
        "type" : 746
      } ],
      "name" : "(error, func() error)",
      "type" : "Tuple",
      "underlying" : 788
    }, {
      "name" : "(github.com/cilium/cilium/pkg/endpoint.EndpointProxy) func(ep github.com/cilium/cilium/pkg/proxy/logger.EndpointUpdater, policy *github.com/cilium/cilium/pkg/policy.L4Policy, wg *github.com/cilium/cilium/pkg/completion.WaitGroup)",
      "params" : 790,
      "recv" : 107,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 789,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ep",
        "type" : 708
      }, {
        "name" : "policy",
        "type" : 754
      }, {
        "name" : "wg",
        "type" : 733
      } ],
      "name" : "(ep github.com/cilium/cilium/pkg/proxy/logger.EndpointUpdater, policy *github.com/cilium/cilium/pkg/policy.L4Policy, wg *github.com/cilium/cilium/pkg/completion.WaitGroup)",
      "type" : "Tuple",
      "underlying" : 790
    }, {
      "elem" : 792,
      "key" : 13,
      "name" : "map[string]*github.com/cilium/cilium/api/v1/models.ProxyStatistics",
      "type" : "Map",
      "underlying" : 791
    }, {
      "elem" : 793,
      "name" : "*github.com/cilium/cilium/api/v1/models.ProxyStatistics",
      "type" : "Pointer",
      "underlying" : 792
    }, {
      "local-name" : "ProxyStatistics",
      "name" : "github.com/cilium/cilium/api/v1/models.ProxyStatistics",
      "package" : 46,
      "type" : "Named",
      "underlying" : 794
    }, {
      "fields" : [ {
        "name" : "AllocatedProxyPort",
        "type" : 43
      }, {
        "name" : "Location",
        "type" : 13
      }, {
        "name" : "Port",
        "type" : 43
      }, {
        "name" : "Protocol",
        "type" : 13
      }, {
        "name" : "Statistics",
        "type" : 795
      } ],
      "name" : "struct{AllocatedProxyPort int64 \"json:\\\"allocated-proxy-port,omitempty\\\"\"; Location string \"json:\\\"location,omitempty\\\"\"; Port int64 \"json:\\\"port,omitempty\\\"\"; Protocol string \"json:\\\"protocol,omitempty\\\"\"; Statistics *github.com/cilium/cilium/api/v1/models.RequestResponseStatistics \"json:\\\"statistics,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 794
    }, {
      "elem" : 796,
      "name" : "*github.com/cilium/cilium/api/v1/models.RequestResponseStatistics",
      "type" : "Pointer",
      "underlying" : 795
    }, {
      "local-name" : "RequestResponseStatistics",
      "name" : "github.com/cilium/cilium/api/v1/models.RequestResponseStatistics",
      "package" : 46,
      "type" : "Named",
      "underlying" : 797
    }, {
      "fields" : [ {
        "name" : "Requests",
        "type" : 798
      }, {
        "name" : "Responses",
        "type" : 798
      } ],
      "name" : "struct{Requests *github.com/cilium/cilium/api/v1/models.MessageForwardingStatistics \"json:\\\"requests,omitempty\\\"\"; Responses *github.com/cilium/cilium/api/v1/models.MessageForwardingStatistics \"json:\\\"responses,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 797
    }, {
      "elem" : 799,
      "name" : "*github.com/cilium/cilium/api/v1/models.MessageForwardingStatistics",
      "type" : "Pointer",
      "underlying" : 798
    }, {
      "local-name" : "MessageForwardingStatistics",
      "name" : "github.com/cilium/cilium/api/v1/models.MessageForwardingStatistics",
      "package" : 46,
      "type" : "Named",
      "underlying" : 800
    }, {
      "fields" : [ {
        "name" : "Denied",
        "type" : 43
      }, {
        "name" : "Error",
        "type" : 43
      }, {
        "name" : "Forwarded",
        "type" : 43
      }, {
        "name" : "Received",
        "type" : 43
      } ],
      "name" : "struct{Denied int64 \"json:\\\"denied,omitempty\\\"\"; Error int64 \"json:\\\"error,omitempty\\\"\"; Forwarded int64 \"json:\\\"forwarded,omitempty\\\"\"; Received int64 \"json:\\\"received,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 800
    }, {
      "elem" : 802,
      "name" : "*github.com/cilium/cilium/pkg/controller.Manager",
      "type" : "Pointer",
      "underlying" : 801
    }, {
      "local-name" : "Manager",
      "name" : "github.com/cilium/cilium/pkg/controller.Manager",
      "package" : 47,
      "type" : "Named",
      "underlying" : 803
    }, {
      "fields" : [ {
        "name" : "controllers",
        "type" : 804
      }, {
        "name" : "mutex",
        "type" : 80
      } ],
      "name" : "struct{controllers github.com/cilium/cilium/pkg/controller.controllerMap; mutex github.com/cilium/cilium/pkg/lock.RWMutex}",
      "type" : "Struct",
      "underlying" : 803
    }, {
      "local-name" : "controllerMap",
      "name" : "github.com/cilium/cilium/pkg/controller.controllerMap",
      "package" : 47,
      "type" : "Named",
      "underlying" : 805
    }, {
      "elem" : 806,
      "key" : 13,
      "name" : "map[string]*github.com/cilium/cilium/pkg/controller.Controller",
      "type" : "Map",
      "underlying" : 805
    }, {
      "elem" : 807,
      "name" : "*github.com/cilium/cilium/pkg/controller.Controller",
      "type" : "Pointer",
      "underlying" : 806
    }, {
      "local-name" : "Controller",
      "name" : "github.com/cilium/cilium/pkg/controller.Controller",
      "package" : 47,
      "type" : "Named",
      "underlying" : 808
    }, {
      "fields" : [ {
        "name" : "mutex",
        "type" : 80
      }, {
        "name" : "name",
        "type" : 13
      }, {
        "name" : "params",
        "type" : 809
      }, {
        "name" : "successCount",
        "type" : 50
      }, {
        "name" : "lastSuccessStamp",
        "type" : 40
      }, {
        "name" : "failureCount",
        "type" : 50
      }, {
        "name" : "consecutiveErrors",
        "type" : 50
      }, {
        "name" : "lastError",
        "type" : 15
      }, {
        "name" : "lastErrorStamp",
        "type" : 40
      }, {
        "name" : "lastDuration",
        "type" : 242
      }, {
        "name" : "uuid",
        "type" : 13
      }, {
        "name" : "stop",
        "type" : 465
      }, {
        "name" : "update",
        "type" : 465
      }, {
        "name" : "ctxDoFunc",
        "type" : 36
      }, {
        "name" : "cancelDoFunc",
        "type" : 736
      }, {
        "name" : "terminated",
        "type" : 465
      } ],
      "name" : "struct{mutex github.com/cilium/cilium/pkg/lock.RWMutex; name string; params github.com/cilium/cilium/pkg/controller.ControllerParams; successCount int; lastSuccessStamp time.Time; failureCount int; consecutiveErrors int; lastError error; lastErrorStamp time.Time; lastDuration time.Duration; uuid string; stop chan struct{}; update chan struct{}; ctxDoFunc context.Context; cancelDoFunc context.CancelFunc; terminated chan struct{}}",
      "type" : "Struct",
      "underlying" : 808
    }, {
      "local-name" : "ControllerParams",
      "name" : "github.com/cilium/cilium/pkg/controller.ControllerParams",
      "package" : 47,
      "type" : "Named",
      "underlying" : 810
    }, {
      "fields" : [ {
        "name" : "DoFunc",
        "type" : 811
      }, {
        "name" : "StopFunc",
        "type" : 811
      }, {
        "name" : "RunInterval",
        "type" : 242
      }, {
        "name" : "ErrorRetryBaseDuration",
        "type" : 242
      }, {
        "name" : "NoErrorRetry",
        "type" : 12
      }, {
        "name" : "Context",
        "type" : 36
      } ],
      "name" : "struct{DoFunc github.com/cilium/cilium/pkg/controller.ControllerFunc; StopFunc github.com/cilium/cilium/pkg/controller.ControllerFunc; RunInterval time.Duration; ErrorRetryBaseDuration time.Duration; NoErrorRetry bool; Context context.Context}",
      "type" : "Struct",
      "underlying" : 810
    }, {
      "local-name" : "ControllerFunc",
      "name" : "github.com/cilium/cilium/pkg/controller.ControllerFunc",
      "package" : 47,
      "type" : "Named",
      "underlying" : 812
    }, {
      "name" : "func(ctx context.Context) error",
      "params" : 813,
      "recv" : -1,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 812,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ctx",
        "type" : 36
      } ],
      "name" : "(ctx context.Context)",
      "type" : "Tuple",
      "underlying" : 813
    }, {
      "elem" : 11,
      "key" : 13,
      "name" : "map[string]uint16",
      "type" : "Map",
      "underlying" : 814
    }, {
      "local-name" : "SelectorPolicy",
      "name" : "github.com/cilium/cilium/pkg/policy.SelectorPolicy",
      "package" : 24,
      "type" : "Named",
      "underlying" : 816
    }, {
      "methods" : [ {
        "name" : "Consume",
        "type" : 817
      } ],
      "name" : "interface{Consume(owner github.com/cilium/cilium/pkg/policy.PolicyOwner, npMap github.com/cilium/cilium/pkg/policy.NamedPortsMap) *github.com/cilium/cilium/pkg/policy.EndpointPolicy}",
      "type" : "Interface",
      "underlying" : 816
    }, {
      "name" : "(github.com/cilium/cilium/pkg/policy.SelectorPolicy) func(owner github.com/cilium/cilium/pkg/policy.PolicyOwner, npMap github.com/cilium/cilium/pkg/policy.NamedPortsMap) *github.com/cilium/cilium/pkg/policy.EndpointPolicy",
      "params" : 818,
      "recv" : 108,
      "results" : 819,
      "type" : "Signature",
      "underlying" : 817,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "owner",
        "type" : 784
      }, {
        "name" : "npMap",
        "type" : 676
      } ],
      "name" : "(owner github.com/cilium/cilium/pkg/policy.PolicyOwner, npMap github.com/cilium/cilium/pkg/policy.NamedPortsMap)",
      "type" : "Tuple",
      "underlying" : 818
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 760
      } ],
      "name" : "(*github.com/cilium/cilium/pkg/policy.EndpointPolicy)",
      "type" : "Tuple",
      "underlying" : 819
    }, {
      "elem" : 821,
      "name" : "*github.com/cilium/cilium/pkg/policy.VisibilityPolicy",
      "type" : "Pointer",
      "underlying" : 820
    }, {
      "local-name" : "VisibilityPolicy",
      "name" : "github.com/cilium/cilium/pkg/policy.VisibilityPolicy",
      "package" : 24,
      "type" : "Named",
      "underlying" : 822
    }, {
      "fields" : [ {
        "name" : "Ingress",
        "type" : 823
      }, {
        "name" : "Egress",
        "type" : 823
      }, {
        "name" : "Error",
        "type" : 15
      } ],
      "name" : "struct{Ingress github.com/cilium/cilium/pkg/policy.DirectionalVisibilityPolicy; Egress github.com/cilium/cilium/pkg/policy.DirectionalVisibilityPolicy; Error error}",
      "type" : "Struct",
      "underlying" : 822
    }, {
      "local-name" : "DirectionalVisibilityPolicy",
      "name" : "github.com/cilium/cilium/pkg/policy.DirectionalVisibilityPolicy",
      "package" : 24,
      "type" : "Named",
      "underlying" : 824
    }, {
      "elem" : 825,
      "key" : 13,
      "name" : "map[string]*github.com/cilium/cilium/pkg/policy.VisibilityMetadata",
      "type" : "Map",
      "underlying" : 824
    }, {
      "elem" : 826,
      "name" : "*github.com/cilium/cilium/pkg/policy.VisibilityMetadata",
      "type" : "Pointer",
      "underlying" : 825
    }, {
      "local-name" : "VisibilityMetadata",
      "name" : "github.com/cilium/cilium/pkg/policy.VisibilityMetadata",
      "package" : 24,
      "type" : "Named",
      "underlying" : 827
    }, {
      "fields" : [ {
        "name" : "Parser",
        "type" : 705
      }, {
        "name" : "Port",
        "type" : 11
      }, {
        "name" : "Proto",
        "type" : 725
      }, {
        "name" : "Ingress",
        "type" : 12
      }, {
        "name" : "L7Metadata",
        "type" : 694
      } ],
      "name" : "struct{Parser github.com/cilium/cilium/pkg/policy.L7ParserType; Port uint16; Proto github.com/cilium/cilium/pkg/u8proto.U8proto; Ingress bool; L7Metadata github.com/cilium/cilium/pkg/policy.L7DataMap}",
      "type" : "Struct",
      "underlying" : 827
    }, {
      "local-name" : "DatapathRegenerationLevel",
      "name" : "github.com/cilium/cilium/pkg/endpoint/regeneration.DatapathRegenerationLevel",
      "package" : 1,
      "type" : "Named",
      "underlying" : 50
    }, {
      "local-name" : "EndpointDatapathConfiguration",
      "name" : "github.com/cilium/cilium/api/v1/models.EndpointDatapathConfiguration",
      "package" : 46,
      "type" : "Named",
      "underlying" : 830
    }, {
      "fields" : [ {
        "name" : "ExternalIpam",
        "type" : 12
      }, {
        "name" : "InstallEndpointRoute",
        "type" : 12
      }, {
        "name" : "RequireArpPassthrough",
        "type" : 12
      }, {
        "name" : "RequireEgressProg",
        "type" : 12
      }, {
        "name" : "RequireRouting",
        "type" : 831
      } ],
      "name" : "struct{ExternalIpam bool \"json:\\\"external-ipam,omitempty\\\"\"; InstallEndpointRoute bool \"json:\\\"install-endpoint-route,omitempty\\\"\"; RequireArpPassthrough bool \"json:\\\"require-arp-passthrough,omitempty\\\"\"; RequireEgressProg bool \"json:\\\"require-egress-prog,omitempty\\\"\"; RequireRouting *bool \"json:\\\"require-routing,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 830
    }, {
      "elem" : 12,
      "name" : "*bool",
      "type" : "Pointer",
      "underlying" : 831
    }, {
      "local-name" : "IdentityAllocator",
      "name" : "github.com/cilium/cilium/pkg/identity/cache.IdentityAllocator",
      "package" : 48,
      "type" : "Named",
      "underlying" : 833
    }, {
      "methods" : [ {
        "name" : "AllocateIdentity",
        "type" : 834
      }, {
        "name" : "LookupIdentityByID",
        "type" : 837
      }, {
        "name" : "Release",
        "type" : 840
      }, {
        "name" : "WaitForInitialGlobalIdentities",
        "type" : 843
      } ],
      "name" : "interface{AllocateIdentity(context.Context, github.com/cilium/cilium/pkg/labels.Labels, bool) (*github.com/cilium/cilium/pkg/identity.Identity, bool, error); LookupIdentityByID(ctx context.Context, id github.com/cilium/cilium/pkg/identity.NumericIdentity) *github.com/cilium/cilium/pkg/identity.Identity; Release(context.Context, *github.com/cilium/cilium/pkg/identity.Identity) (released bool, err error); WaitForInitialGlobalIdentities(context.Context) error}",
      "type" : "Interface",
      "underlying" : 833
    }, {
      "name" : "(github.com/cilium/cilium/pkg/identity/cache.IdentityAllocator) func(context.Context, github.com/cilium/cilium/pkg/labels.Labels, bool) (*github.com/cilium/cilium/pkg/identity.Identity, bool, error)",
      "params" : 835,
      "recv" : 109,
      "results" : 836,
      "type" : "Signature",
      "underlying" : 834,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 36
      }, {
        "name" : "",
        "type" : 523
      }, {
        "name" : "",
        "type" : 12
      } ],
      "name" : "(context.Context, github.com/cilium/cilium/pkg/labels.Labels, bool)",
      "type" : "Tuple",
      "underlying" : 835
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 520
      }, {
        "name" : "",
        "type" : 12
      }, {
        "name" : "",
        "type" : 15
      } ],
      "name" : "(*github.com/cilium/cilium/pkg/identity.Identity, bool, error)",
      "type" : "Tuple",
      "underlying" : 836
    }, {
      "name" : "(github.com/cilium/cilium/pkg/identity/cache.IdentityAllocator) func(ctx context.Context, id github.com/cilium/cilium/pkg/identity.NumericIdentity) *github.com/cilium/cilium/pkg/identity.Identity",
      "params" : 838,
      "recv" : 110,
      "results" : 839,
      "type" : "Signature",
      "underlying" : 837,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ctx",
        "type" : 36
      }, {
        "name" : "id",
        "type" : 118
      } ],
      "name" : "(ctx context.Context, id github.com/cilium/cilium/pkg/identity.NumericIdentity)",
      "type" : "Tuple",
      "underlying" : 838
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 520
      } ],
      "name" : "(*github.com/cilium/cilium/pkg/identity.Identity)",
      "type" : "Tuple",
      "underlying" : 839
    }, {
      "name" : "(github.com/cilium/cilium/pkg/identity/cache.IdentityAllocator) func(context.Context, *github.com/cilium/cilium/pkg/identity.Identity) (released bool, err error)",
      "params" : 841,
      "recv" : 111,
      "results" : 842,
      "type" : "Signature",
      "underlying" : 840,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 36
      }, {
        "name" : "",
        "type" : 520
      } ],
      "name" : "(context.Context, *github.com/cilium/cilium/pkg/identity.Identity)",
      "type" : "Tuple",
      "underlying" : 841
    }, {
      "fields" : [ {
        "name" : "released",
        "type" : 12
      }, {
        "name" : "err",
        "type" : 15
      } ],
      "name" : "(released bool, err error)",
      "type" : "Tuple",
      "underlying" : 842
    }, {
      "name" : "(github.com/cilium/cilium/pkg/identity/cache.IdentityAllocator) func(context.Context) error",
      "params" : 844,
      "recv" : 112,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 843,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 36
      } ],
      "name" : "(context.Context)",
      "type" : "Tuple",
      "underlying" : 844
    }, {
      "name" : "untyped string",
      "type" : "Basic",
      "underlying" : 845
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 15,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 30,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 3,
      "type" : 36,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 3,
      "type" : 36,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 3,
      "type" : 36,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 3,
      "type" : 36,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 73,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 73,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 68,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 68,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 114,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 114,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 114,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 114,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 114,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 114,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 65,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 65,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 12,
      "type" : 142,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 11,
      "type" : 150,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 11,
      "type" : 150,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 11,
      "type" : 157,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 65,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 30,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 30,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 30,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 252,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 252,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 252,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 277,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 277,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 277,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 252,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 287,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 290,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 30,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 30,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 301,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 301,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 301,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 301,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 297,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 314,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 314,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 314,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 314,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 337,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 337,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 337,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 30,
      "type" : 460,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 483,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 483,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 483,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 483,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 491,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 478,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 478,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 478,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 501,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 501,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 501,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 478,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 525,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 525,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 32,
      "type" : 546,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 35,
      "type" : 573,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 35,
      "type" : 573,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 35,
      "type" : 581,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 35,
      "type" : 581,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 36,
      "type" : 586,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 35,
      "type" : 573,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 38,
      "type" : 639,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 38,
      "type" : 639,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 690,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 690,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 690,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 690,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 41,
      "type" : 711,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 41,
      "type" : 711,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 41,
      "type" : 711,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 41,
      "type" : 711,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 41,
      "type" : 711,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 41,
      "type" : 711,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 41,
      "type" : 711,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 41,
      "type" : 708,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 41,
      "type" : 708,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 686,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 686,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 686,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 784,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 784,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 686,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 686,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 24,
      "type" : 815,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 48,
      "type" : 832,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 48,
      "type" : 832,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 48,
      "type" : 832,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 48,
      "type" : 832,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}