{
  "usage" : {
    "file" : "lob.go",
    "label1" : "cast-basic",
    "label2" : "ffi",
    "line" : "257",
    "module" : "github.com/godror/godror",
    "pkg" : "github.com/godror/godror",
    "project" : "xo/usql",
    "snippet" : "if C.dpiLob_writeBytes(dl.dpiLob, C.uint64_t(offset)+1, (*C.char)(unsafe.Pointer(&p[0])), n) == C.DPI_FAILURE {",
    "version" : "v0.16.0"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 13, 14, 15 ],
      "exit" : false,
      "out-vars" : [ 13, 14, 15 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3, 6 ],
      "in-vars" : [ 13, 14, 15 ],
      "exit" : false,
      "out-vars" : [ 13, 14, 15 ],
      "decl-vars" : [ ],
      "line-start" : 248,
      "ast" : {
        "condition" : {
          "go-type" : 25,
          "kind" : "expression",
          "operator" : "!",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "opened",
              "variable" : 18
            },
            "go-type" : 25,
            "kind" : "expression",
            "target" : {
              "go-type" : 13,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "dl",
                "variable" : 13
              }
            },
            "type" : "selector"
          },
          "type" : "unary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 254,
      "code" : "if !dl.opened {\n\n\tif C.dpiLob_openResource(dl.dpiLob) == C.DPI_FAILURE {\n\t\treturn 0, errors.Errorf(\"openResources(%p): %w\", dl.dpiLob, dl.conn.getError())\n\t}\n\tdl.opened = true\n}",
      "entry" : false,
      "use-vars" : [ 13 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4, 5 ],
      "in-vars" : [ 13, 14, 15 ],
      "exit" : false,
      "out-vars" : [ 13, 14, 15 ],
      "decl-vars" : [ ],
      "line-start" : 250,
      "ast" : {
        "condition" : {
          "go-type" : -1,
          "kind" : "expression",
          "left" : {
            "arguments" : [ {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "dpiLob",
                "variable" : 19
              },
              "go-type" : 95,
              "kind" : "expression",
              "target" : {
                "go-type" : 13,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "dl",
                  "variable" : 13
                }
              },
              "type" : "selector"
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : -1,
              "kind" : "expression",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 4,
                "value" : "C"
              },
              "type" : "identifier",
              "value" : {
                "ident-kind" : "NoKind",
                "kind" : "ident",
                "value" : "dpiLob_openResource"
              }
            },
            "go-type" : -1,
            "kind" : "expression",
            "type" : "call"
          },
          "operator" : "==",
          "right" : {
            "go-type" : -1,
            "kind" : "expression",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 4,
              "value" : "C"
            },
            "type" : "identifier",
            "value" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "DPI_FAILURE"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 252,
      "code" : "if C.dpiLob_openResource(dl.dpiLob) == C.DPI_FAILURE {\n\treturn 0, errors.Errorf(\"openResources(%p): %w\", dl.dpiLob, dl.conn.getError())\n}",
      "entry" : false,
      "use-vars" : [ 13 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 13 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 251,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 6,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "0"
          }
        }, {
          "arguments" : [ {
            "go-type" : 12,
            "kind" : "constant",
            "value" : {
              "type" : "STRING",
              "value" : "openResources(%p): %w"
            }
          }, {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "dpiLob",
              "variable" : 19
            },
            "go-type" : 95,
            "kind" : "expression",
            "target" : {
              "go-type" : 13,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "dl",
                "variable" : 13
              }
            },
            "type" : "selector"
          }, {
            "arguments" : [ ],
            "ellipsis" : false,
            "function" : {
              "field" : {
                "function" : 2,
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "getError"
              },
              "go-type" : 105,
              "kind" : "expression",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "conn",
                  "variable" : 20
                },
                "go-type" : 16,
                "kind" : "expression",
                "target" : {
                  "go-type" : 13,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "dl",
                    "variable" : 13
                  }
                },
                "type" : "selector"
              },
              "type" : "selector"
            },
            "go-type" : 7,
            "kind" : "expression",
            "type" : "call"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 103,
            "kind" : "expression",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 5,
              "value" : "errors"
            },
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Errorf"
            }
          },
          "go-type" : 7,
          "kind" : "expression",
          "type" : "call"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 251,
      "code" : "return 0, errors.Errorf(\"openResources(%p): %w\", dl.dpiLob, dl.conn.getError())",
      "entry" : false,
      "use-vars" : [ 13 ]
    }, {
      "update-vars" : [ 13 ],
      "successors" : [ 6 ],
      "in-vars" : [ 13, 14, 15 ],
      "exit" : false,
      "out-vars" : [ 13, 14, 15 ],
      "decl-vars" : [ ],
      "line-start" : 253,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "opened",
            "variable" : 18
          },
          "go-type" : 25,
          "kind" : "expression",
          "target" : {
            "go-type" : 13,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "dl",
              "variable" : 13
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 25,
          "kind" : "constant",
          "value" : {
            "type" : "BOOL",
            "value" : "true"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 253,
      "code" : "dl.opened = true",
      "entry" : false,
      "use-vars" : [ 13 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 7 ],
      "in-vars" : [ 13, 14, 15 ],
      "exit" : false,
      "out-vars" : [ 14, 15, 13, 22 ],
      "decl-vars" : [ 22 ],
      "line-start" : 256,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "n"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "arguments" : [ {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "p",
                "variable" : 14
              }
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 107,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Builtin",
                "kind" : "ident",
                "value" : "len"
              }
            },
            "go-type" : 6,
            "kind" : "expression",
            "type" : "call"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : -1,
            "kind" : "expression",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 4,
              "value" : "C"
            },
            "type" : "identifier",
            "value" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "uint64_t"
            }
          },
          "go-type" : -1,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 256,
      "code" : "n := C.uint64_t(len(p))",
      "entry" : false,
      "use-vars" : [ 14 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 8, 9 ],
      "in-vars" : [ 13, 22, 14, 15 ],
      "exit" : false,
      "out-vars" : [ 22, 13 ],
      "decl-vars" : [ ],
      "line-start" : 257,
      "ast" : {
        "condition" : {
          "go-type" : -1,
          "kind" : "expression",
          "left" : {
            "arguments" : [ {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "dpiLob",
                "variable" : 19
              },
              "go-type" : 95,
              "kind" : "expression",
              "target" : {
                "go-type" : 13,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "dl",
                  "variable" : 13
                }
              },
              "type" : "selector"
            }, {
              "go-type" : -1,
              "kind" : "expression",
              "left" : {
                "arguments" : [ {
                  "go-type" : 4,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "offset",
                    "variable" : 15
                  }
                } ],
                "ellipsis" : false,
                "function" : {
                  "go-type" : -1,
                  "kind" : "expression",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 4,
                    "value" : "C"
                  },
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "NoKind",
                    "kind" : "ident",
                    "value" : "uint64_t"
                  }
                },
                "go-type" : -1,
                "kind" : "expression",
                "type" : "call"
              },
              "operator" : "+",
              "right" : {
                "go-type" : 109,
                "kind" : "constant",
                "value" : {
                  "type" : "INT",
                  "value" : "1"
                }
              },
              "type" : "binary"
            }, {
              "coerced-to" : {
                "contained" : {
                  "go-type" : -1,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 4,
                    "value" : "C"
                  },
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "NoKind",
                    "kind" : "ident",
                    "value" : "char"
                  }
                },
                "go-type" : -1,
                "kind" : "type",
                "type" : "pointer"
              },
              "go-type" : -1,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 110,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 6,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 110,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 110,
                "kind" : "expression",
                "target" : {
                  "go-type" : 111,
                  "kind" : "expression",
                  "operator" : "&",
                  "target" : {
                    "go-type" : 3,
                    "index" : {
                      "go-type" : 6,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "0"
                      }
                    },
                    "kind" : "expression",
                    "target" : {
                      "go-type" : 2,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "p",
                        "variable" : 14
                      }
                    },
                    "type" : "index"
                  },
                  "type" : "unary"
                },
                "type" : "cast"
              },
              "type" : "cast"
            }, {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "n",
                "variable" : 22
              }
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : -1,
              "kind" : "expression",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 4,
                "value" : "C"
              },
              "type" : "identifier",
              "value" : {
                "ident-kind" : "NoKind",
                "kind" : "ident",
                "value" : "dpiLob_writeBytes"
              }
            },
            "go-type" : -1,
            "kind" : "expression",
            "type" : "call"
          },
          "operator" : "==",
          "right" : {
            "go-type" : -1,
            "kind" : "expression",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 4,
              "value" : "C"
            },
            "type" : "identifier",
            "value" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "DPI_FAILURE"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 259,
      "code" : "if C.dpiLob_writeBytes(dl.dpiLob, C.uint64_t(offset)+1, (*C.char)(unsafe.Pointer(&p[0])), n) == C.DPI_FAILURE {\n\treturn int(n), errors.Errorf(\"writeBytes: %w\", dl.conn.getError())\n}",
      "entry" : false,
      "use-vars" : [ 22, 14, 13, 15 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 13, 22 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 258,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "coerced-to" : {
            "go-type" : 6,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 6,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "int"
            }
          },
          "go-type" : -1,
          "kind" : "expression",
          "target" : {
            "go-type" : -1,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "n",
              "variable" : 22
            }
          },
          "type" : "cast"
        }, {
          "arguments" : [ {
            "go-type" : 12,
            "kind" : "constant",
            "value" : {
              "type" : "STRING",
              "value" : "writeBytes: %w"
            }
          }, {
            "arguments" : [ ],
            "ellipsis" : false,
            "function" : {
              "field" : {
                "function" : 2,
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "getError"
              },
              "go-type" : 105,
              "kind" : "expression",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "conn",
                  "variable" : 20
                },
                "go-type" : 16,
                "kind" : "expression",
                "target" : {
                  "go-type" : 13,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "dl",
                    "variable" : 13
                  }
                },
                "type" : "selector"
              },
              "type" : "selector"
            },
            "go-type" : 7,
            "kind" : "expression",
            "type" : "call"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 103,
            "kind" : "expression",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 5,
              "value" : "errors"
            },
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Errorf"
            }
          },
          "go-type" : 7,
          "kind" : "expression",
          "type" : "call"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 258,
      "code" : "return int(n), errors.Errorf(\"writeBytes: %w\", dl.conn.getError())",
      "entry" : false,
      "use-vars" : [ 22, 13 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 22 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 260,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "coerced-to" : {
            "go-type" : 6,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 6,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "int"
            }
          },
          "go-type" : -1,
          "kind" : "expression",
          "target" : {
            "go-type" : -1,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "n",
              "variable" : 22
            }
          },
          "type" : "cast"
        }, {
          "go-type" : 112,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 260,
      "code" : "return int(n), nil",
      "entry" : false,
      "use-vars" : [ 22 ]
    } ],
    "code" : "// WriteAt writes p starting at offset.\nfunc (dl *DirectLob) WriteAt(p []byte, offset int64) (int, error) {\n\tif !dl.opened {\n\n\t\tif C.dpiLob_openResource(dl.dpiLob) == C.DPI_FAILURE {\n\t\t\treturn 0, errors.Errorf(\"openResources(%p): %w\", dl.dpiLob, dl.conn.getError())\n\t\t}\n\t\tdl.opened = true\n\t}\n\n\tn := C.uint64_t(len(p))\n\tif C.dpiLob_writeBytes(dl.dpiLob, C.uint64_t(offset)+1, (*C.char)(unsafe.Pointer(&p[0])), n) == C.DPI_FAILURE {\n\t\treturn int(n), errors.Errorf(\"writeBytes: %w\", dl.conn.getError())\n\t}\n\treturn int(n), nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "WriteAt",
      "package" : 0,
      "type" : 0,
      "exported" : true
    }, {
      "name" : "Errorf",
      "package" : 5,
      "type" : 103,
      "exported" : true
    }, {
      "name" : "getError",
      "package" : 0,
      "type" : 106,
      "exported" : false
    } ],
    "line-end" : 261,
    "line-start" : 247,
    "names" : [ "WriteAt" ],
    "package" : 0,
    "packages" : [ {
      "name" : "godror",
      "path" : "github.com/godror/godror"
    }, {
      "name" : "driver",
      "path" : "database/sql/driver"
    }, {
      "name" : "time",
      "path" : "time"
    }, {
      "name" : "sync",
      "path" : "sync"
    }, {
      "name" : "C",
      "path" : "C"
    }, {
      "name" : "xerrors",
      "path" : "golang.org/x/xerrors"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 14, 15 ],
    "receivers" : [ 13 ],
    "results" : [ 16, 17 ],
    "type" : "function",
    "types" : [ {
      "name" : "(*github.com/godror/godror.DirectLob) func(p []byte, offset int64) (int, error)",
      "params" : 1,
      "recv" : 13,
      "results" : 5,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "p",
        "type" : 2
      }, {
        "name" : "offset",
        "type" : 4
      } ],
      "name" : "(p []byte, offset int64)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 2
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 3
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 6
      }, {
        "name" : "",
        "type" : 7
      } ],
      "name" : "(int, error)",
      "type" : "Tuple",
      "underlying" : 5
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 6
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 9
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 8
    }, {
      "name" : "(error) func() string",
      "params" : 10,
      "recv" : 0,
      "results" : 11,
      "type" : "Signature",
      "underlying" : 9,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 10
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 12
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 11
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 12
    }, {
      "elem" : 14,
      "name" : "*github.com/godror/godror.DirectLob",
      "type" : "Pointer",
      "underlying" : 13
    }, {
      "local-name" : "DirectLob",
      "name" : "github.com/godror/godror.DirectLob",
      "package" : 0,
      "type" : "Named",
      "underlying" : 15
    }, {
      "fields" : [ {
        "name" : "conn",
        "type" : 16
      }, {
        "name" : "dpiLob",
        "type" : 95
      }, {
        "name" : "opened",
        "type" : 25
      } ],
      "name" : "struct{conn *github.com/godror/godror.conn; dpiLob *invalid type; opened bool}",
      "type" : "Struct",
      "underlying" : 15
    }, {
      "elem" : 17,
      "name" : "*github.com/godror/godror.conn",
      "type" : "Pointer",
      "underlying" : 16
    }, {
      "local-name" : "conn",
      "name" : "github.com/godror/godror.conn",
      "package" : 0,
      "type" : "Named",
      "underlying" : 18
    }, {
      "fields" : [ {
        "name" : "currentTT",
        "type" : 19
      }, {
        "name" : "params",
        "type" : 21
      }, {
        "name" : "Client",
        "type" : 82
      }, {
        "name" : "Server",
        "type" : 82
      }, {
        "name" : "tranParams",
        "type" : 84
      }, {
        "name" : "mu",
        "type" : 86
      }, {
        "name" : "poolKey",
        "type" : 12
      }, {
        "name" : "drv",
        "type" : 92
      }, {
        "name" : "dpiConn",
        "type" : 95
      }, {
        "name" : "tzOffSecs",
        "type" : 6
      }, {
        "name" : "inTransaction",
        "type" : 25
      }, {
        "name" : "newSession",
        "type" : 25
      }, {
        "name" : "released",
        "type" : 25
      } ],
      "name" : "struct{currentTT github.com/godror/godror.TraceTag; params github.com/godror/godror.ConnectionParams; Client github.com/godror/godror.VersionInfo; Server github.com/godror/godror.VersionInfo; tranParams github.com/godror/godror.tranParams; mu sync.RWMutex; poolKey string; drv *github.com/godror/godror.drv; dpiConn *invalid type; tzOffSecs int; inTransaction bool; newSession bool; released bool}",
      "type" : "Struct",
      "underlying" : 18
    }, {
      "local-name" : "TraceTag",
      "name" : "github.com/godror/godror.TraceTag",
      "package" : 0,
      "type" : "Named",
      "underlying" : 20
    }, {
      "fields" : [ {
        "name" : "ClientIdentifier",
        "type" : 12
      }, {
        "name" : "ClientInfo",
        "type" : 12
      }, {
        "name" : "DbOp",
        "type" : 12
      }, {
        "name" : "Module",
        "type" : 12
      }, {
        "name" : "Action",
        "type" : 12
      } ],
      "name" : "struct{ClientIdentifier string; ClientInfo string; DbOp string; Module string; Action string}",
      "type" : "Struct",
      "underlying" : 20
    }, {
      "local-name" : "ConnectionParams",
      "name" : "github.com/godror/godror.ConnectionParams",
      "package" : 0,
      "type" : "Named",
      "underlying" : 22
    }, {
      "fields" : [ {
        "name" : "CommonParams",
        "type" : 23
      }, {
        "name" : "ConnParams",
        "type" : 76
      }, {
        "name" : "PoolParams",
        "type" : 79
      }, {
        "name" : "NewPassword",
        "type" : 12
      }, {
        "name" : "onInitStmts",
        "type" : 62
      }, {
        "name" : "StandaloneConnection",
        "type" : 25
      } ],
      "name" : "struct{github.com/godror/godror.CommonParams; github.com/godror/godror.ConnParams; github.com/godror/godror.PoolParams; NewPassword string; onInitStmts []string; StandaloneConnection bool}",
      "type" : "Struct",
      "underlying" : 22
    }, {
      "local-name" : "CommonParams",
      "name" : "github.com/godror/godror.CommonParams",
      "package" : 0,
      "type" : "Named",
      "underlying" : 24
    }, {
      "fields" : [ {
        "name" : "Username",
        "type" : 12
      }, {
        "name" : "Password",
        "type" : 12
      }, {
        "name" : "DSN",
        "type" : 12
      }, {
        "name" : "EnableEvents",
        "type" : 25
      }, {
        "name" : "OnInit",
        "type" : 26
      }, {
        "name" : "Timezone",
        "type" : 65
      } ],
      "name" : "struct{Username string; Password string; DSN string; EnableEvents bool; OnInit func(database/sql/driver.Conn) error; Timezone *time.Location}",
      "type" : "Struct",
      "underlying" : 24
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 25
    }, {
      "name" : "func(database/sql/driver.Conn) error",
      "params" : 27,
      "recv" : -1,
      "results" : 35,
      "type" : "Signature",
      "underlying" : 26,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 28
      } ],
      "name" : "(database/sql/driver.Conn)",
      "type" : "Tuple",
      "underlying" : 27
    }, {
      "local-name" : "Conn",
      "name" : "database/sql/driver.Conn",
      "package" : 1,
      "type" : "Named",
      "underlying" : 29
    }, {
      "methods" : [ {
        "name" : "Begin",
        "type" : 30
      }, {
        "name" : "Close",
        "type" : 36
      }, {
        "name" : "Prepare",
        "type" : 37
      } ],
      "name" : "interface{Begin() (database/sql/driver.Tx, error); Close() error; Prepare(query string) (database/sql/driver.Stmt, error)}",
      "type" : "Interface",
      "underlying" : 29
    }, {
      "name" : "(database/sql/driver.Conn) func() (database/sql/driver.Tx, error)",
      "params" : 10,
      "recv" : 2,
      "results" : 31,
      "type" : "Signature",
      "underlying" : 30,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 32
      }, {
        "name" : "",
        "type" : 7
      } ],
      "name" : "(database/sql/driver.Tx, error)",
      "type" : "Tuple",
      "underlying" : 31
    }, {
      "local-name" : "Tx",
      "name" : "database/sql/driver.Tx",
      "package" : 1,
      "type" : "Named",
      "underlying" : 33
    }, {
      "methods" : [ {
        "name" : "Commit",
        "type" : 34
      }, {
        "name" : "Rollback",
        "type" : 34
      } ],
      "name" : "interface{Commit() error; Rollback() error}",
      "type" : "Interface",
      "underlying" : 33
    }, {
      "name" : "(database/sql/driver.Tx) func() error",
      "params" : 10,
      "recv" : 1,
      "results" : 35,
      "type" : "Signature",
      "underlying" : 34,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 7
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 35
    }, {
      "name" : "(database/sql/driver.Conn) func() error",
      "params" : 10,
      "recv" : 3,
      "results" : 35,
      "type" : "Signature",
      "underlying" : 36,
      "variadic" : false
    }, {
      "name" : "(database/sql/driver.Conn) func(query string) (database/sql/driver.Stmt, error)",
      "params" : 38,
      "recv" : 12,
      "results" : 39,
      "type" : "Signature",
      "underlying" : 37,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "query",
        "type" : 12
      } ],
      "name" : "(query string)",
      "type" : "Tuple",
      "underlying" : 38
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 40
      }, {
        "name" : "",
        "type" : 7
      } ],
      "name" : "(database/sql/driver.Stmt, error)",
      "type" : "Tuple",
      "underlying" : 39
    }, {
      "local-name" : "Stmt",
      "name" : "database/sql/driver.Stmt",
      "package" : 1,
      "type" : "Named",
      "underlying" : 41
    }, {
      "methods" : [ {
        "name" : "Close",
        "type" : 42
      }, {
        "name" : "Exec",
        "type" : 43
      }, {
        "name" : "NumInput",
        "type" : 53
      }, {
        "name" : "Query",
        "type" : 55
      } ],
      "name" : "interface{Close() error; Exec(args []database/sql/driver.Value) (database/sql/driver.Result, error); NumInput() int; Query(args []database/sql/driver.Value) (database/sql/driver.Rows, error)}",
      "type" : "Interface",
      "underlying" : 41
    }, {
      "name" : "(database/sql/driver.Stmt) func() error",
      "params" : 10,
      "recv" : 4,
      "results" : 35,
      "type" : "Signature",
      "underlying" : 42,
      "variadic" : false
    }, {
      "name" : "(database/sql/driver.Stmt) func(args []database/sql/driver.Value) (database/sql/driver.Result, error)",
      "params" : 44,
      "recv" : 6,
      "results" : 48,
      "type" : "Signature",
      "underlying" : 43,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "args",
        "type" : 45
      } ],
      "name" : "(args []database/sql/driver.Value)",
      "type" : "Tuple",
      "underlying" : 44
    }, {
      "elem" : 46,
      "name" : "[]database/sql/driver.Value",
      "type" : "Slice",
      "underlying" : 45
    }, {
      "local-name" : "Value",
      "name" : "database/sql/driver.Value",
      "package" : 1,
      "type" : "Named",
      "underlying" : 47
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 47
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 49
      }, {
        "name" : "",
        "type" : 7
      } ],
      "name" : "(database/sql/driver.Result, error)",
      "type" : "Tuple",
      "underlying" : 48
    }, {
      "local-name" : "Result",
      "name" : "database/sql/driver.Result",
      "package" : 1,
      "type" : "Named",
      "underlying" : 50
    }, {
      "methods" : [ {
        "name" : "LastInsertId",
        "type" : 51
      }, {
        "name" : "RowsAffected",
        "type" : 51
      } ],
      "name" : "interface{LastInsertId() (int64, error); RowsAffected() (int64, error)}",
      "type" : "Interface",
      "underlying" : 50
    }, {
      "name" : "(database/sql/driver.Result) func() (int64, error)",
      "params" : 10,
      "recv" : 5,
      "results" : 52,
      "type" : "Signature",
      "underlying" : 51,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 4
      }, {
        "name" : "",
        "type" : 7
      } ],
      "name" : "(int64, error)",
      "type" : "Tuple",
      "underlying" : 52
    }, {
      "name" : "(database/sql/driver.Stmt) func() int",
      "params" : 10,
      "recv" : 7,
      "results" : 54,
      "type" : "Signature",
      "underlying" : 53,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 6
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 54
    }, {
      "name" : "(database/sql/driver.Stmt) func(args []database/sql/driver.Value) (database/sql/driver.Rows, error)",
      "params" : 44,
      "recv" : 11,
      "results" : 56,
      "type" : "Signature",
      "underlying" : 55,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 57
      }, {
        "name" : "",
        "type" : 7
      } ],
      "name" : "(database/sql/driver.Rows, error)",
      "type" : "Tuple",
      "underlying" : 56
    }, {
      "local-name" : "Rows",
      "name" : "database/sql/driver.Rows",
      "package" : 1,
      "type" : "Named",
      "underlying" : 58
    }, {
      "methods" : [ {
        "name" : "Close",
        "type" : 59
      }, {
        "name" : "Columns",
        "type" : 60
      }, {
        "name" : "Next",
        "type" : 63
      } ],
      "name" : "interface{Close() error; Columns() []string; Next(dest []database/sql/driver.Value) error}",
      "type" : "Interface",
      "underlying" : 58
    }, {
      "name" : "(database/sql/driver.Rows) func() error",
      "params" : 10,
      "recv" : 8,
      "results" : 35,
      "type" : "Signature",
      "underlying" : 59,
      "variadic" : false
    }, {
      "name" : "(database/sql/driver.Rows) func() []string",
      "params" : 10,
      "recv" : 9,
      "results" : 61,
      "type" : "Signature",
      "underlying" : 60,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 62
      } ],
      "name" : "([]string)",
      "type" : "Tuple",
      "underlying" : 61
    }, {
      "elem" : 12,
      "name" : "[]string",
      "type" : "Slice",
      "underlying" : 62
    }, {
      "name" : "(database/sql/driver.Rows) func(dest []database/sql/driver.Value) error",
      "params" : 64,
      "recv" : 10,
      "results" : 35,
      "type" : "Signature",
      "underlying" : 63,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dest",
        "type" : 45
      } ],
      "name" : "(dest []database/sql/driver.Value)",
      "type" : "Tuple",
      "underlying" : 64
    }, {
      "elem" : 66,
      "name" : "*time.Location",
      "type" : "Pointer",
      "underlying" : 65
    }, {
      "local-name" : "Location",
      "name" : "time.Location",
      "package" : 2,
      "type" : "Named",
      "underlying" : 67
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 12
      }, {
        "name" : "zone",
        "type" : 68
      }, {
        "name" : "tx",
        "type" : 71
      }, {
        "name" : "cacheStart",
        "type" : 4
      }, {
        "name" : "cacheEnd",
        "type" : 4
      }, {
        "name" : "cacheZone",
        "type" : 75
      } ],
      "name" : "struct{name string; zone []time.zone; tx []time.zoneTrans; cacheStart int64; cacheEnd int64; cacheZone *time.zone}",
      "type" : "Struct",
      "underlying" : 67
    }, {
      "elem" : 69,
      "name" : "[]time.zone",
      "type" : "Slice",
      "underlying" : 68
    }, {
      "local-name" : "zone",
      "name" : "time.zone",
      "package" : 2,
      "type" : "Named",
      "underlying" : 70
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 12
      }, {
        "name" : "offset",
        "type" : 6
      }, {
        "name" : "isDST",
        "type" : 25
      } ],
      "name" : "struct{name string; offset int; isDST bool}",
      "type" : "Struct",
      "underlying" : 70
    }, {
      "elem" : 72,
      "name" : "[]time.zoneTrans",
      "type" : "Slice",
      "underlying" : 71
    }, {
      "local-name" : "zoneTrans",
      "name" : "time.zoneTrans",
      "package" : 2,
      "type" : "Named",
      "underlying" : 73
    }, {
      "fields" : [ {
        "name" : "when",
        "type" : 4
      }, {
        "name" : "index",
        "type" : 74
      }, {
        "name" : "isstd",
        "type" : 25
      }, {
        "name" : "isutc",
        "type" : 25
      } ],
      "name" : "struct{when int64; index uint8; isstd bool; isutc bool}",
      "type" : "Struct",
      "underlying" : 73
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 74
    }, {
      "elem" : 69,
      "name" : "*time.zone",
      "type" : "Pointer",
      "underlying" : 75
    }, {
      "local-name" : "ConnParams",
      "name" : "github.com/godror/godror.ConnParams",
      "package" : 0,
      "type" : "Named",
      "underlying" : 77
    }, {
      "fields" : [ {
        "name" : "NewPassword",
        "type" : 12
      }, {
        "name" : "ConnClass",
        "type" : 12
      }, {
        "name" : "IsSysDBA",
        "type" : 25
      }, {
        "name" : "IsSysOper",
        "type" : 25
      }, {
        "name" : "IsSysASM",
        "type" : 25
      }, {
        "name" : "IsPrelim",
        "type" : 25
      }, {
        "name" : "ShardingKey",
        "type" : 78
      }, {
        "name" : "SuperShardingKey",
        "type" : 78
      } ],
      "name" : "struct{NewPassword string; ConnClass string; IsSysDBA bool; IsSysOper bool; IsSysASM bool; IsPrelim bool; ShardingKey []interface{}; SuperShardingKey []interface{}}",
      "type" : "Struct",
      "underlying" : 77
    }, {
      "elem" : 47,
      "name" : "[]interface{}",
      "type" : "Slice",
      "underlying" : 78
    }, {
      "local-name" : "PoolParams",
      "name" : "github.com/godror/godror.PoolParams",
      "package" : 0,
      "type" : "Named",
      "underlying" : 80
    }, {
      "fields" : [ {
        "name" : "MinSessions",
        "type" : 6
      }, {
        "name" : "MaxSessions",
        "type" : 6
      }, {
        "name" : "SessionIncrement",
        "type" : 6
      }, {
        "name" : "WaitTimeout",
        "type" : 81
      }, {
        "name" : "MaxLifeTime",
        "type" : 81
      }, {
        "name" : "SessionTimeout",
        "type" : 81
      }, {
        "name" : "Heterogeneous",
        "type" : 25
      }, {
        "name" : "ExternalAuth",
        "type" : 25
      } ],
      "name" : "struct{MinSessions int; MaxSessions int; SessionIncrement int; WaitTimeout time.Duration; MaxLifeTime time.Duration; SessionTimeout time.Duration; Heterogeneous bool; ExternalAuth bool}",
      "type" : "Struct",
      "underlying" : 80
    }, {
      "local-name" : "Duration",
      "name" : "time.Duration",
      "package" : 2,
      "type" : "Named",
      "underlying" : 4
    }, {
      "local-name" : "VersionInfo",
      "name" : "github.com/godror/godror.VersionInfo",
      "package" : 0,
      "type" : "Named",
      "underlying" : 83
    }, {
      "fields" : [ {
        "name" : "ServerRelease",
        "type" : 12
      }, {
        "name" : "Version",
        "type" : 74
      }, {
        "name" : "Release",
        "type" : 74
      }, {
        "name" : "Update",
        "type" : 74
      }, {
        "name" : "PortRelease",
        "type" : 74
      }, {
        "name" : "PortUpdate",
        "type" : 74
      }, {
        "name" : "Full",
        "type" : 74
      } ],
      "name" : "struct{ServerRelease string; Version uint8; Release uint8; Update uint8; PortRelease uint8; PortUpdate uint8; Full uint8}",
      "type" : "Struct",
      "underlying" : 83
    }, {
      "local-name" : "tranParams",
      "name" : "github.com/godror/godror.tranParams",
      "package" : 0,
      "type" : "Named",
      "underlying" : 85
    }, {
      "fields" : [ {
        "name" : "RW",
        "type" : 12
      }, {
        "name" : "Level",
        "type" : 12
      } ],
      "name" : "struct{RW string; Level string}",
      "type" : "Struct",
      "underlying" : 85
    }, {
      "local-name" : "RWMutex",
      "name" : "sync.RWMutex",
      "package" : 3,
      "type" : "Named",
      "underlying" : 87
    }, {
      "fields" : [ {
        "name" : "w",
        "type" : 88
      }, {
        "name" : "writerSem",
        "type" : 91
      }, {
        "name" : "readerSem",
        "type" : 91
      }, {
        "name" : "readerCount",
        "type" : 90
      }, {
        "name" : "readerWait",
        "type" : 90
      } ],
      "name" : "struct{w sync.Mutex; writerSem uint32; readerSem uint32; readerCount int32; readerWait int32}",
      "type" : "Struct",
      "underlying" : 87
    }, {
      "local-name" : "Mutex",
      "name" : "sync.Mutex",
      "package" : 3,
      "type" : "Named",
      "underlying" : 89
    }, {
      "fields" : [ {
        "name" : "state",
        "type" : 90
      }, {
        "name" : "sema",
        "type" : 91
      } ],
      "name" : "struct{state int32; sema uint32}",
      "type" : "Struct",
      "underlying" : 89
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 90
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 91
    }, {
      "elem" : 93,
      "name" : "*github.com/godror/godror.drv",
      "type" : "Pointer",
      "underlying" : 92
    }, {
      "local-name" : "drv",
      "name" : "github.com/godror/godror.drv",
      "package" : 0,
      "type" : "Named",
      "underlying" : 94
    }, {
      "fields" : [ {
        "name" : "mu",
        "type" : 88
      }, {
        "name" : "dpiContext",
        "type" : 95
      }, {
        "name" : "pools",
        "type" : 97
      }, {
        "name" : "clientVersion",
        "type" : 82
      } ],
      "name" : "struct{mu sync.Mutex; dpiContext *invalid type; pools map[string]*github.com/godror/godror.connPool; clientVersion github.com/godror/godror.VersionInfo}",
      "type" : "Struct",
      "underlying" : 94
    }, {
      "elem" : 96,
      "name" : "*invalid type",
      "type" : "Pointer",
      "underlying" : 95
    }, {
      "name" : "invalid type",
      "type" : "Basic",
      "underlying" : 96
    }, {
      "elem" : 98,
      "key" : 12,
      "name" : "map[string]*github.com/godror/godror.connPool",
      "type" : "Map",
      "underlying" : 97
    }, {
      "elem" : 99,
      "name" : "*github.com/godror/godror.connPool",
      "type" : "Pointer",
      "underlying" : 98
    }, {
      "local-name" : "connPool",
      "name" : "github.com/godror/godror.connPool",
      "package" : 0,
      "type" : "Named",
      "underlying" : 100
    }, {
      "fields" : [ {
        "name" : "dpiPool",
        "type" : 95
      }, {
        "name" : "params",
        "type" : 101
      }, {
        "name" : "timeZone",
        "type" : 65
      }, {
        "name" : "key",
        "type" : 12
      } ],
      "name" : "struct{dpiPool *invalid type; params github.com/godror/godror.commonAndPoolParams; timeZone *time.Location; key string}",
      "type" : "Struct",
      "underlying" : 100
    }, {
      "local-name" : "commonAndPoolParams",
      "name" : "github.com/godror/godror.commonAndPoolParams",
      "package" : 0,
      "type" : "Named",
      "underlying" : 102
    }, {
      "fields" : [ {
        "name" : "CommonParams",
        "type" : 23
      }, {
        "name" : "PoolParams",
        "type" : 79
      } ],
      "name" : "struct{github.com/godror/godror.CommonParams; github.com/godror/godror.PoolParams}",
      "type" : "Struct",
      "underlying" : 102
    }, {
      "name" : "func(format string, a ...interface{}) error",
      "params" : 104,
      "recv" : -1,
      "results" : 35,
      "type" : "Signature",
      "underlying" : 103,
      "variadic" : true
    }, {
      "fields" : [ {
        "name" : "format",
        "type" : 12
      }, {
        "name" : "a",
        "type" : 78
      } ],
      "name" : "(format string, a []interface{})",
      "type" : "Tuple",
      "underlying" : 104
    }, {
      "name" : "func() error",
      "params" : 10,
      "recv" : -1,
      "results" : 35,
      "type" : "Signature",
      "underlying" : 105,
      "variadic" : false
    }, {
      "name" : "(*github.com/godror/godror.conn) func() error",
      "params" : 10,
      "recv" : 21,
      "results" : 35,
      "type" : "Signature",
      "underlying" : 106,
      "variadic" : false
    }, {
      "name" : "func([]byte) int",
      "params" : 108,
      "recv" : -1,
      "results" : 54,
      "type" : "Signature",
      "underlying" : 107,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 2
      } ],
      "name" : "([]byte)",
      "type" : "Tuple",
      "underlying" : 108
    }, {
      "name" : "untyped int",
      "type" : "Basic",
      "underlying" : 109
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 6,
      "type" : "Basic",
      "underlying" : 110
    }, {
      "elem" : 3,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 111
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 112
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 32,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 28,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 28,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 40,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 49,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 40,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 40,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 57,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 57,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 57,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 40,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 28,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dl",
      "package" : 0,
      "type" : 13,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "p",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "offset",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 6,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res1]",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "opened",
      "package" : 0,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "dpiLob",
      "package" : 0,
      "type" : 95,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "conn",
      "package" : 0,
      "type" : 16,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "c",
      "package" : 0,
      "type" : 16,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "n",
      "package" : 0,
      "type" : 96,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}