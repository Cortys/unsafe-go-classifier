{
  "usage" : {
    "file" : "helper_unsafe.go",
    "label1" : "cast-basic",
    "label2" : "serialization",
    "line" : "368",
    "module" : "github.com/hashicorp/go-msgpack",
    "pkg" : "github.com/hashicorp/go-msgpack/codec",
    "project" : "mattermost/mattermost-server",
    "snippet" : "urv := (*unsafeReflectValue)(unsafe.Pointer(&rv))",
    "version" : "v1.1.5"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 21, 22, 23, 19 ],
      "exit" : false,
      "out-vars" : [ 21, 22, 23, 19 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 21, 22, 23, 19 ],
      "exit" : false,
      "out-vars" : [ 22, 23, 19 ],
      "decl-vars" : [ 24 ],
      "line-start" : 368,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "urv"
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 105,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 105,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "unsafeReflectValue"
              }
            },
            "go-type" : 104,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 104,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 61,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 2,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 61,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 61,
            "kind" : "expression",
            "target" : {
              "go-type" : 107,
              "kind" : "expression",
              "operator" : "&",
              "target" : {
                "go-type" : 51,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "rv",
                  "variable" : 21
                }
              },
              "type" : "unary"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 368,
      "code" : "urv := (*unsafeReflectValue)(unsafe.Pointer(&rv))",
      "entry" : false,
      "use-vars" : [ 21 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 22, 23, 19 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 369,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 46,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "go-type" : 46,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 46,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uint"
                }
              },
              "go-type" : 108,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 108,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ptr",
                "variable" : 25
              },
              "go-type" : 61,
              "kind" : "expression",
              "target" : {
                "go-type" : 104,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "urv",
                  "variable" : 24
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 46,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 46,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "uint"
            }
          },
          "go-type" : 46,
          "kind" : "expression",
          "target" : {
            "arguments" : [ {
              "arguments" : [ ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "DecodeUint64"
                },
                "go-type" : 50,
                "kind" : "expression",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "d",
                    "variable" : 26
                  },
                  "go-type" : 13,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 8,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "d",
                      "variable" : 19
                    }
                  },
                  "type" : "selector"
                },
                "type" : "selector"
              },
              "go-type" : 93,
              "kind" : "expression",
              "type" : "call"
            }, {
              "go-type" : 58,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "uintBitsize",
                "variable" : 22
              }
            } ],
            "ellipsis" : false,
            "function" : {
              "field" : {
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "UintV"
              },
              "go-type" : 109,
              "kind" : "expression",
              "target" : {
                "go-type" : 103,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "chkOvf",
                  "variable" : 23
                }
              },
              "type" : "selector"
            },
            "go-type" : 93,
            "kind" : "expression",
            "type" : "call"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 369,
      "code" : "*(*uint)(urv.ptr) = uint(chkOvf.UintV(d.d.DecodeUint64(), uintBitsize))",
      "entry" : false,
      "use-vars" : [ 22, 23, 19 ]
    } ],
    "code" : "func (d *Decoder) kUint(f *codecFnInfo, rv reflect.Value) {\n\turv := (*unsafeReflectValue)(unsafe.Pointer(&rv))\n\t*(*uint)(urv.ptr) = uint(chkOvf.UintV(d.d.DecodeUint64(), uintBitsize))\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "kUint",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "UintV",
      "package" : 0,
      "type" : 109,
      "exported" : true
    }, {
      "name" : "DecodeUint64",
      "package" : 0,
      "type" : 50,
      "exported" : true
    } ],
    "line-end" : 370,
    "line-start" : 367,
    "names" : [ "kUint" ],
    "package" : 0,
    "packages" : [ {
      "name" : "codec",
      "path" : "github.com/hashicorp/go-msgpack/codec"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "time",
      "path" : "time"
    }, {
      "name" : "io",
      "path" : "io"
    }, {
      "name" : "sync",
      "path" : "sync"
    } ],
    "params" : [ 20, 21 ],
    "receivers" : [ 19 ],
    "results" : [ ],
    "type" : "function",
    "types" : [ {
      "name" : "func(f *github.com/hashicorp/go-msgpack/codec.codecFnInfo, rv reflect.Value)",
      "params" : 1,
      "recv" : 19,
      "results" : 11,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "f",
        "type" : 2
      }, {
        "name" : "rv",
        "type" : 51
      } ],
      "name" : "(f *github.com/hashicorp/go-msgpack/codec.codecFnInfo, rv reflect.Value)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*github.com/hashicorp/go-msgpack/codec.codecFnInfo",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "codecFnInfo",
      "name" : "github.com/hashicorp/go-msgpack/codec.codecFnInfo",
      "package" : 0,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "ti",
        "type" : 5
      }, {
        "name" : "xfFn",
        "type" : 94
      }, {
        "name" : "xfTag",
        "type" : 93
      }, {
        "name" : "seq",
        "type" : 102
      }, {
        "name" : "addrD",
        "type" : 17
      }, {
        "name" : "addrF",
        "type" : 17
      }, {
        "name" : "addrE",
        "type" : 17
      } ],
      "name" : "struct{ti *github.com/hashicorp/go-msgpack/codec.typeInfo; xfFn github.com/hashicorp/go-msgpack/codec.Ext; xfTag uint64; seq github.com/hashicorp/go-msgpack/codec.seqType; addrD bool; addrF bool; addrE bool}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "elem" : 6,
      "name" : "*github.com/hashicorp/go-msgpack/codec.typeInfo",
      "type" : "Pointer",
      "underlying" : 5
    }, {
      "local-name" : "typeInfo",
      "name" : "github.com/hashicorp/go-msgpack/codec.typeInfo",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "fields" : [ {
        "name" : "rt",
        "type" : 8
      }, {
        "name" : "elem",
        "type" : 8
      }, {
        "name" : "pkgpath",
        "type" : 29
      }, {
        "name" : "rtid",
        "type" : 31
      }, {
        "name" : "numMeth",
        "type" : 80
      }, {
        "name" : "kind",
        "type" : 58
      }, {
        "name" : "chandir",
        "type" : 58
      }, {
        "name" : "anyOmitEmpty",
        "type" : 17
      }, {
        "name" : "toArray",
        "type" : 17
      }, {
        "name" : "keyType",
        "type" : 81
      }, {
        "name" : "mbs",
        "type" : 17
      }, {
        "name" : "sfiSort",
        "type" : 82
      }, {
        "name" : "sfiSrc",
        "type" : 82
      }, {
        "name" : "key",
        "type" : 8
      }, {
        "name" : "sfiNamesSort",
        "type" : 89
      }, {
        "name" : "bm",
        "type" : 17
      }, {
        "name" : "bmp",
        "type" : 17
      }, {
        "name" : "bu",
        "type" : 17
      }, {
        "name" : "bup",
        "type" : 17
      }, {
        "name" : "tm",
        "type" : 17
      }, {
        "name" : "tmp",
        "type" : 17
      }, {
        "name" : "tu",
        "type" : 17
      }, {
        "name" : "tup",
        "type" : 17
      }, {
        "name" : "jm",
        "type" : 17
      }, {
        "name" : "jmp",
        "type" : 17
      }, {
        "name" : "ju",
        "type" : 17
      }, {
        "name" : "jup",
        "type" : 17
      }, {
        "name" : "cs",
        "type" : 17
      }, {
        "name" : "csp",
        "type" : 17
      }, {
        "name" : "mf",
        "type" : 17
      }, {
        "name" : "mfp",
        "type" : 17
      }, {
        "name" : "flags",
        "type" : 90
      }, {
        "name" : "infoFieldOmitempty",
        "type" : 17
      }, {
        "name" : "_",
        "type" : 91
      }, {
        "name" : "_",
        "type" : 92
      } ],
      "name" : "struct{rt reflect.Type; elem reflect.Type; pkgpath string; rtid uintptr; numMeth uint16; kind uint8; chandir uint8; anyOmitEmpty bool; toArray bool; keyType github.com/hashicorp/go-msgpack/codec.valueType; mbs bool; sfiSort []*github.com/hashicorp/go-msgpack/codec.structFieldInfo; sfiSrc []*github.com/hashicorp/go-msgpack/codec.structFieldInfo; key reflect.Type; sfiNamesSort []byte; bm bool; bmp bool; bu bool; bup bool; tm bool; tmp bool; tu bool; tup bool; jm bool; jmp bool; ju bool; jup bool; cs bool; csp bool; mf bool; mfp bool; flags github.com/hashicorp/go-msgpack/codec.typeInfoFlag; infoFieldOmitempty bool; _ [6]byte; _ [2]uint64}",
      "type" : "Struct",
      "underlying" : 7
    }, {
      "local-name" : "Type",
      "name" : "reflect.Type",
      "package" : 1,
      "type" : "Named",
      "underlying" : 9
    }, {
      "methods" : [ {
        "name" : "Align",
        "type" : 10
      }, {
        "name" : "AssignableTo",
        "type" : 14
      }, {
        "name" : "Bits",
        "type" : 10
      }, {
        "name" : "ChanDir",
        "type" : 18
      }, {
        "name" : "Comparable",
        "type" : 21
      }, {
        "name" : "ConvertibleTo",
        "type" : 14
      }, {
        "name" : "Elem",
        "type" : 22
      }, {
        "name" : "Field",
        "type" : 24
      }, {
        "name" : "FieldAlign",
        "type" : 10
      }, {
        "name" : "FieldByIndex",
        "type" : 33
      }, {
        "name" : "FieldByName",
        "type" : 35
      }, {
        "name" : "FieldByNameFunc",
        "type" : 38
      }, {
        "name" : "Implements",
        "type" : 14
      }, {
        "name" : "In",
        "type" : 42
      }, {
        "name" : "IsVariadic",
        "type" : 21
      }, {
        "name" : "Key",
        "type" : 22
      }, {
        "name" : "Kind",
        "type" : 43
      }, {
        "name" : "Len",
        "type" : 10
      }, {
        "name" : "Method",
        "type" : 47
      }, {
        "name" : "MethodByName",
        "type" : 68
      }, {
        "name" : "Name",
        "type" : 70
      }, {
        "name" : "NumField",
        "type" : 10
      }, {
        "name" : "NumIn",
        "type" : 10
      }, {
        "name" : "NumMethod",
        "type" : 10
      }, {
        "name" : "NumOut",
        "type" : 10
      }, {
        "name" : "Out",
        "type" : 42
      }, {
        "name" : "PkgPath",
        "type" : 70
      }, {
        "name" : "Size",
        "type" : 71
      }, {
        "name" : "String",
        "type" : 70
      }, {
        "name" : "common",
        "type" : 73
      }, {
        "name" : "uncommon",
        "type" : 75
      } ],
      "name" : "interface{Align() int; AssignableTo(u reflect.Type) bool; Bits() int; ChanDir() reflect.ChanDir; Comparable() bool; ConvertibleTo(u reflect.Type) bool; Elem() reflect.Type; Field(i int) reflect.StructField; FieldAlign() int; FieldByIndex(index []int) reflect.StructField; FieldByName(name string) (reflect.StructField, bool); FieldByNameFunc(match func(string) bool) (reflect.StructField, bool); Implements(u reflect.Type) bool; In(i int) reflect.Type; IsVariadic() bool; Key() reflect.Type; Kind() reflect.Kind; Len() int; Method(int) reflect.Method; MethodByName(string) (reflect.Method, bool); Name() string; NumField() int; NumIn() int; NumMethod() int; NumOut() int; Out(i int) reflect.Type; PkgPath() string; Size() uintptr; String() string; common() *reflect.rtype; uncommon() *reflect.uncommonType}",
      "type" : "Interface",
      "underlying" : 9
    }, {
      "name" : "func() int",
      "params" : 11,
      "recv" : 0,
      "results" : 12,
      "type" : "Signature",
      "underlying" : 10,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 11
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 13
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 12
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "name" : "func(u reflect.Type) bool",
      "params" : 15,
      "recv" : 1,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 14,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "u",
        "type" : 8
      } ],
      "name" : "(u reflect.Type)",
      "type" : "Tuple",
      "underlying" : 15
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 17
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 16
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 17
    }, {
      "name" : "func() reflect.ChanDir",
      "params" : 11,
      "recv" : 2,
      "results" : 19,
      "type" : "Signature",
      "underlying" : 18,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 20
      } ],
      "name" : "(reflect.ChanDir)",
      "type" : "Tuple",
      "underlying" : 19
    }, {
      "local-name" : "ChanDir",
      "name" : "reflect.ChanDir",
      "package" : 1,
      "type" : "Named",
      "underlying" : 13
    }, {
      "name" : "func() bool",
      "params" : 11,
      "recv" : 3,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 21,
      "variadic" : false
    }, {
      "name" : "func() reflect.Type",
      "params" : 11,
      "recv" : 4,
      "results" : 23,
      "type" : "Signature",
      "underlying" : 22,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 8
      } ],
      "name" : "(reflect.Type)",
      "type" : "Tuple",
      "underlying" : 23
    }, {
      "name" : "func(i int) reflect.StructField",
      "params" : 25,
      "recv" : 5,
      "results" : 26,
      "type" : "Signature",
      "underlying" : 24,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 13
      } ],
      "name" : "(i int)",
      "type" : "Tuple",
      "underlying" : 25
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 27
      } ],
      "name" : "(reflect.StructField)",
      "type" : "Tuple",
      "underlying" : 26
    }, {
      "local-name" : "StructField",
      "name" : "reflect.StructField",
      "package" : 1,
      "type" : "Named",
      "underlying" : 28
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 29
      }, {
        "name" : "PkgPath",
        "type" : 29
      }, {
        "name" : "Type",
        "type" : 8
      }, {
        "name" : "Tag",
        "type" : 30
      }, {
        "name" : "Offset",
        "type" : 31
      }, {
        "name" : "Index",
        "type" : 32
      }, {
        "name" : "Anonymous",
        "type" : 17
      } ],
      "name" : "struct{Name string; PkgPath string; Type reflect.Type; Tag reflect.StructTag; Offset uintptr; Index []int; Anonymous bool}",
      "type" : "Struct",
      "underlying" : 28
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 29
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 1,
      "type" : "Named",
      "underlying" : 29
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 31
    }, {
      "elem" : 13,
      "name" : "[]int",
      "type" : "Slice",
      "underlying" : 32
    }, {
      "name" : "func(index []int) reflect.StructField",
      "params" : 34,
      "recv" : 6,
      "results" : 26,
      "type" : "Signature",
      "underlying" : 33,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "index",
        "type" : 32
      } ],
      "name" : "(index []int)",
      "type" : "Tuple",
      "underlying" : 34
    }, {
      "name" : "func(name string) (reflect.StructField, bool)",
      "params" : 36,
      "recv" : 7,
      "results" : 37,
      "type" : "Signature",
      "underlying" : 35,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 29
      } ],
      "name" : "(name string)",
      "type" : "Tuple",
      "underlying" : 36
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 27
      }, {
        "name" : "",
        "type" : 17
      } ],
      "name" : "(reflect.StructField, bool)",
      "type" : "Tuple",
      "underlying" : 37
    }, {
      "name" : "func(match func(string) bool) (reflect.StructField, bool)",
      "params" : 39,
      "recv" : 8,
      "results" : 37,
      "type" : "Signature",
      "underlying" : 38,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "match",
        "type" : 40
      } ],
      "name" : "(match func(string) bool)",
      "type" : "Tuple",
      "underlying" : 39
    }, {
      "name" : "func(string) bool",
      "params" : 41,
      "recv" : -1,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 40,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 29
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 41
    }, {
      "name" : "func(i int) reflect.Type",
      "params" : 25,
      "recv" : 9,
      "results" : 23,
      "type" : "Signature",
      "underlying" : 42,
      "variadic" : false
    }, {
      "name" : "func() reflect.Kind",
      "params" : 11,
      "recv" : 10,
      "results" : 44,
      "type" : "Signature",
      "underlying" : 43,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 45
      } ],
      "name" : "(reflect.Kind)",
      "type" : "Tuple",
      "underlying" : 44
    }, {
      "local-name" : "Kind",
      "name" : "reflect.Kind",
      "package" : 1,
      "type" : "Named",
      "underlying" : 46
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 46
    }, {
      "name" : "func(int) reflect.Method",
      "params" : 12,
      "recv" : 11,
      "results" : 48,
      "type" : "Signature",
      "underlying" : 47,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 49
      } ],
      "name" : "(reflect.Method)",
      "type" : "Tuple",
      "underlying" : 48
    }, {
      "local-name" : "Method",
      "name" : "reflect.Method",
      "package" : 1,
      "type" : "Named",
      "underlying" : 50
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 29
      }, {
        "name" : "PkgPath",
        "type" : 29
      }, {
        "name" : "Type",
        "type" : 8
      }, {
        "name" : "Func",
        "type" : 51
      }, {
        "name" : "Index",
        "type" : 13
      } ],
      "name" : "struct{Name string; PkgPath string; Type reflect.Type; Func reflect.Value; Index int}",
      "type" : "Struct",
      "underlying" : 50
    }, {
      "local-name" : "Value",
      "name" : "reflect.Value",
      "package" : 1,
      "type" : "Named",
      "underlying" : 52
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 53
      }, {
        "name" : "ptr",
        "type" : 61
      }, {
        "name" : "flag",
        "type" : 67
      } ],
      "name" : "struct{typ *reflect.rtype; ptr unsafe.Pointer; reflect.flag}",
      "type" : "Struct",
      "underlying" : 52
    }, {
      "elem" : 54,
      "name" : "*reflect.rtype",
      "type" : "Pointer",
      "underlying" : 53
    }, {
      "local-name" : "rtype",
      "name" : "reflect.rtype",
      "package" : 1,
      "type" : "Named",
      "underlying" : 55
    }, {
      "fields" : [ {
        "name" : "size",
        "type" : 31
      }, {
        "name" : "ptrdata",
        "type" : 31
      }, {
        "name" : "hash",
        "type" : 56
      }, {
        "name" : "tflag",
        "type" : 57
      }, {
        "name" : "align",
        "type" : 58
      }, {
        "name" : "fieldAlign",
        "type" : 58
      }, {
        "name" : "kind",
        "type" : 58
      }, {
        "name" : "equal",
        "type" : 59
      }, {
        "name" : "gcdata",
        "type" : 62
      }, {
        "name" : "str",
        "type" : 64
      }, {
        "name" : "ptrToThis",
        "type" : 66
      } ],
      "name" : "struct{size uintptr; ptrdata uintptr; hash uint32; tflag reflect.tflag; align uint8; fieldAlign uint8; kind uint8; equal func(unsafe.Pointer, unsafe.Pointer) bool; gcdata *byte; str reflect.nameOff; ptrToThis reflect.typeOff}",
      "type" : "Struct",
      "underlying" : 55
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 56
    }, {
      "local-name" : "tflag",
      "name" : "reflect.tflag",
      "package" : 1,
      "type" : "Named",
      "underlying" : 58
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 58
    }, {
      "name" : "func(unsafe.Pointer, unsafe.Pointer) bool",
      "params" : 60,
      "recv" : -1,
      "results" : 16,
      "type" : "Signature",
      "underlying" : 59,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 61
      }, {
        "name" : "",
        "type" : 61
      } ],
      "name" : "(unsafe.Pointer, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 60
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 2,
      "type" : "Basic",
      "underlying" : 61
    }, {
      "elem" : 63,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 62
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 63
    }, {
      "local-name" : "nameOff",
      "name" : "reflect.nameOff",
      "package" : 1,
      "type" : "Named",
      "underlying" : 65
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 65
    }, {
      "local-name" : "typeOff",
      "name" : "reflect.typeOff",
      "package" : 1,
      "type" : "Named",
      "underlying" : 65
    }, {
      "local-name" : "flag",
      "name" : "reflect.flag",
      "package" : 1,
      "type" : "Named",
      "underlying" : 31
    }, {
      "name" : "func(string) (reflect.Method, bool)",
      "params" : 41,
      "recv" : 12,
      "results" : 69,
      "type" : "Signature",
      "underlying" : 68,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 49
      }, {
        "name" : "",
        "type" : 17
      } ],
      "name" : "(reflect.Method, bool)",
      "type" : "Tuple",
      "underlying" : 69
    }, {
      "name" : "func() string",
      "params" : 11,
      "recv" : 13,
      "results" : 41,
      "type" : "Signature",
      "underlying" : 70,
      "variadic" : false
    }, {
      "name" : "func() uintptr",
      "params" : 11,
      "recv" : 14,
      "results" : 72,
      "type" : "Signature",
      "underlying" : 71,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 31
      } ],
      "name" : "(uintptr)",
      "type" : "Tuple",
      "underlying" : 72
    }, {
      "name" : "func() *reflect.rtype",
      "params" : 11,
      "recv" : 15,
      "results" : 74,
      "type" : "Signature",
      "underlying" : 73,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 53
      } ],
      "name" : "(*reflect.rtype)",
      "type" : "Tuple",
      "underlying" : 74
    }, {
      "name" : "func() *reflect.uncommonType",
      "params" : 11,
      "recv" : 16,
      "results" : 76,
      "type" : "Signature",
      "underlying" : 75,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 77
      } ],
      "name" : "(*reflect.uncommonType)",
      "type" : "Tuple",
      "underlying" : 76
    }, {
      "elem" : 78,
      "name" : "*reflect.uncommonType",
      "type" : "Pointer",
      "underlying" : 77
    }, {
      "local-name" : "uncommonType",
      "name" : "reflect.uncommonType",
      "package" : 1,
      "type" : "Named",
      "underlying" : 79
    }, {
      "fields" : [ {
        "name" : "pkgPath",
        "type" : 64
      }, {
        "name" : "mcount",
        "type" : 80
      }, {
        "name" : "xcount",
        "type" : 80
      }, {
        "name" : "moff",
        "type" : 56
      }, {
        "name" : "_",
        "type" : 56
      } ],
      "name" : "struct{pkgPath reflect.nameOff; mcount uint16; xcount uint16; moff uint32; _ uint32}",
      "type" : "Struct",
      "underlying" : 79
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 80
    }, {
      "local-name" : "valueType",
      "name" : "github.com/hashicorp/go-msgpack/codec.valueType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 58
    }, {
      "elem" : 83,
      "name" : "[]*github.com/hashicorp/go-msgpack/codec.structFieldInfo",
      "type" : "Slice",
      "underlying" : 82
    }, {
      "elem" : 84,
      "name" : "*github.com/hashicorp/go-msgpack/codec.structFieldInfo",
      "type" : "Pointer",
      "underlying" : 83
    }, {
      "local-name" : "structFieldInfo",
      "name" : "github.com/hashicorp/go-msgpack/codec.structFieldInfo",
      "package" : 0,
      "type" : "Named",
      "underlying" : 85
    }, {
      "fields" : [ {
        "name" : "encName",
        "type" : 29
      }, {
        "name" : "fieldName",
        "type" : 29
      }, {
        "name" : "is",
        "type" : 86
      }, {
        "name" : "nis",
        "type" : 58
      }, {
        "name" : "encNameAsciiAlphaNum",
        "type" : 17
      }, {
        "name" : "structFieldInfoFlag",
        "type" : 87
      }, {
        "name" : "_",
        "type" : 88
      } ],
      "name" : "struct{encName string; fieldName string; is [14]uint16; nis uint8; encNameAsciiAlphaNum bool; github.com/hashicorp/go-msgpack/codec.structFieldInfoFlag; _ [1]byte}",
      "type" : "Struct",
      "underlying" : 85
    }, {
      "elem" : 80,
      "name" : "[14]uint16",
      "type" : "Array",
      "underlying" : 86
    }, {
      "local-name" : "structFieldInfoFlag",
      "name" : "github.com/hashicorp/go-msgpack/codec.structFieldInfoFlag",
      "package" : 0,
      "type" : "Named",
      "underlying" : 58
    }, {
      "elem" : 63,
      "name" : "[1]byte",
      "type" : "Array",
      "underlying" : 88
    }, {
      "elem" : 63,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 89
    }, {
      "local-name" : "typeInfoFlag",
      "name" : "github.com/hashicorp/go-msgpack/codec.typeInfoFlag",
      "package" : 0,
      "type" : "Named",
      "underlying" : 58
    }, {
      "elem" : 63,
      "name" : "[6]byte",
      "type" : "Array",
      "underlying" : 91
    }, {
      "elem" : 93,
      "name" : "[2]uint64",
      "type" : "Array",
      "underlying" : 92
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 93
    }, {
      "local-name" : "Ext",
      "name" : "github.com/hashicorp/go-msgpack/codec.Ext",
      "package" : 0,
      "type" : "Named",
      "underlying" : 95
    }, {
      "methods" : [ {
        "name" : "ConvertExt",
        "type" : 96
      }, {
        "name" : "ReadExt",
        "type" : 100
      }, {
        "name" : "UpdateExt",
        "type" : 2
      }, {
        "name" : "WriteExt",
        "type" : 6
      } ],
      "name" : "interface{github.com/hashicorp/go-msgpack/codec.BytesExt; github.com/hashicorp/go-msgpack/codec.InterfaceExt}",
      "type" : "Interface",
      "underlying" : 95
    }, {
      "name" : "func(v interface{}) interface{}",
      "params" : 97,
      "recv" : 17,
      "results" : 99,
      "type" : "Signature",
      "underlying" : 96,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "v",
        "type" : 98
      } ],
      "name" : "(v interface{})",
      "type" : "Tuple",
      "underlying" : 97
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 98
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 98
      } ],
      "name" : "(interface{})",
      "type" : "Tuple",
      "underlying" : 99
    }, {
      "name" : "func(dst interface{}, src []byte)",
      "params" : 101,
      "recv" : 18,
      "results" : 11,
      "type" : "Signature",
      "underlying" : 100,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dst",
        "type" : 98
      }, {
        "name" : "src",
        "type" : 89
      } ],
      "name" : "(dst interface{}, src []byte)",
      "type" : "Tuple",
      "underlying" : 101
    }, {
      "local-name" : "seqType",
      "name" : "github.com/hashicorp/go-msgpack/codec.seqType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 58
    }, {
      "local-name" : "checkOverflow",
      "name" : "github.com/hashicorp/go-msgpack/codec.checkOverflow",
      "package" : 0,
      "type" : "Named",
      "underlying" : 12
    }, {
      "elem" : 105,
      "name" : "*github.com/hashicorp/go-msgpack/codec.unsafeReflectValue",
      "type" : "Pointer",
      "underlying" : 104
    }, {
      "local-name" : "unsafeReflectValue",
      "name" : "github.com/hashicorp/go-msgpack/codec.unsafeReflectValue",
      "package" : 0,
      "type" : "Named",
      "underlying" : 106
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 61
      }, {
        "name" : "ptr",
        "type" : 61
      }, {
        "name" : "flag",
        "type" : 31
      } ],
      "name" : "struct{typ unsafe.Pointer; ptr unsafe.Pointer; flag uintptr}",
      "type" : "Struct",
      "underlying" : 106
    }, {
      "elem" : 51,
      "name" : "*reflect.Value",
      "type" : "Pointer",
      "underlying" : 107
    }, {
      "elem" : 46,
      "name" : "*uint",
      "type" : "Pointer",
      "underlying" : 108
    }, {
      "name" : "func(v uint64, bitsize uint8) uint64",
      "params" : 110,
      "recv" : -1,
      "results" : 111,
      "type" : "Signature",
      "underlying" : 109,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "v",
        "type" : 93
      }, {
        "name" : "bitsize",
        "type" : 58
      } ],
      "name" : "(v uint64, bitsize uint8)",
      "type" : "Tuple",
      "underlying" : 110
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 93
      } ],
      "name" : "(uint64)",
      "type" : "Tuple",
      "underlying" : 111
    } ],
    "variables" : [ {
      "name" : "",
      "package" : 1,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 1,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 4,
      "exported" : false
    }, {
      "name" : "d",
      "package" : 0,
      "type" : 8,
      "exported" : false
    }, {
      "name" : "f",
      "package" : 0,
      "type" : 2,
      "exported" : false
    }, {
      "name" : "rv",
      "package" : 0,
      "type" : 51,
      "exported" : false
    }, {
      "name" : "uintBitsize",
      "package" : 0,
      "type" : 58,
      "exported" : false
    }, {
      "name" : "chkOvf",
      "package" : 0,
      "type" : 103,
      "exported" : false
    }, {
      "name" : "urv",
      "package" : 0,
      "type" : 104,
      "exported" : false
    }, {
      "name" : "ptr",
      "package" : 0,
      "type" : 61,
      "exported" : false
    }, {
      "name" : "d",
      "package" : 0,
      "type" : 13,
      "exported" : false
    } ]
  },
  "go-version" : "1.14.3"
}