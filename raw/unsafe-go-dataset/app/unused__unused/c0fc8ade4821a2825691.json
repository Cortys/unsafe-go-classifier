{
  "usage" : {
    "file" : "safe_slice.go",
    "label1" : "unused",
    "label2" : "unused",
    "line" : "30",
    "module" : "github.com/modern-go/reflect2",
    "pkg" : "github.com/modern-go/reflect2",
    "project" : "kubernetes/kubernetes",
    "snippet" : "func (type2 *safeSliceType) UnsafeGetIndex(obj unsafe.Pointer, index int) unsafe.Pointer {",
    "version" : "v1.0.1"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 31,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 30,
            "kind" : "constant",
            "value" : {
              "type" : "STRING",
              "value" : "does not support unsafe operation"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 98,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Builtin",
              "kind" : "ident",
              "value" : "panic"
            }
          },
          "go-type" : 13,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 31,
      "code" : "panic(\"does not support unsafe operation\")",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func (type2 *safeSliceType) UnsafeGetIndex(obj unsafe.Pointer, index int) unsafe.Pointer {\n\tpanic(\"does not support unsafe operation\")\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "UnsafeGetIndex",
      "package" : 0,
      "type" : 0,
      "exported" : true
    } ],
    "line-end" : 32,
    "line-start" : 30,
    "names" : [ "UnsafeGetIndex" ],
    "package" : 0,
    "packages" : [ {
      "name" : "reflect2",
      "path" : "github.com/modern-go/reflect2"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "concurrent",
      "path" : "github.com/modern-go/concurrent"
    }, {
      "name" : "sync",
      "path" : "sync"
    }, {
      "name" : "atomic",
      "path" : "sync/atomic"
    } ],
    "params" : [ 18, 19 ],
    "receivers" : [ 17 ],
    "results" : [ 20 ],
    "type" : "function",
    "types" : [ {
      "name" : "(*github.com/modern-go/reflect2.safeSliceType) func(obj unsafe.Pointer, index int) unsafe.Pointer",
      "params" : 1,
      "recv" : 17,
      "results" : 4,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "obj",
        "type" : 2
      }, {
        "name" : "index",
        "type" : 3
      } ],
      "name" : "(obj unsafe.Pointer, index int)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 2
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 3
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 2
      } ],
      "name" : "(unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 4
    }, {
      "elem" : 6,
      "name" : "*github.com/modern-go/reflect2.safeSliceType",
      "type" : "Pointer",
      "underlying" : 5
    }, {
      "local-name" : "safeSliceType",
      "name" : "github.com/modern-go/reflect2.safeSliceType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "fields" : [ {
        "name" : "safeType",
        "type" : 8
      } ],
      "name" : "struct{github.com/modern-go/reflect2.safeType}",
      "type" : "Struct",
      "underlying" : 7
    }, {
      "local-name" : "safeType",
      "name" : "github.com/modern-go/reflect2.safeType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 9
    }, {
      "fields" : [ {
        "name" : "Type",
        "type" : 10
      }, {
        "name" : "cfg",
        "type" : 81
      } ],
      "name" : "struct{reflect.Type; cfg *github.com/modern-go/reflect2.frozenConfig}",
      "type" : "Struct",
      "underlying" : 9
    }, {
      "local-name" : "Type",
      "name" : "reflect.Type",
      "package" : 2,
      "type" : "Named",
      "underlying" : 11
    }, {
      "methods" : [ {
        "name" : "Align",
        "type" : 12
      }, {
        "name" : "AssignableTo",
        "type" : 15
      }, {
        "name" : "Bits",
        "type" : 12
      }, {
        "name" : "ChanDir",
        "type" : 19
      }, {
        "name" : "Comparable",
        "type" : 22
      }, {
        "name" : "ConvertibleTo",
        "type" : 15
      }, {
        "name" : "Elem",
        "type" : 23
      }, {
        "name" : "Field",
        "type" : 25
      }, {
        "name" : "FieldAlign",
        "type" : 12
      }, {
        "name" : "FieldByIndex",
        "type" : 34
      }, {
        "name" : "FieldByName",
        "type" : 36
      }, {
        "name" : "FieldByNameFunc",
        "type" : 39
      }, {
        "name" : "Implements",
        "type" : 15
      }, {
        "name" : "In",
        "type" : 43
      }, {
        "name" : "IsVariadic",
        "type" : 22
      }, {
        "name" : "Key",
        "type" : 23
      }, {
        "name" : "Kind",
        "type" : 44
      }, {
        "name" : "Len",
        "type" : 12
      }, {
        "name" : "Method",
        "type" : 48
      }, {
        "name" : "MethodByName",
        "type" : 68
      }, {
        "name" : "Name",
        "type" : 70
      }, {
        "name" : "NumField",
        "type" : 12
      }, {
        "name" : "NumIn",
        "type" : 12
      }, {
        "name" : "NumMethod",
        "type" : 12
      }, {
        "name" : "NumOut",
        "type" : 12
      }, {
        "name" : "Out",
        "type" : 43
      }, {
        "name" : "PkgPath",
        "type" : 70
      }, {
        "name" : "Size",
        "type" : 71
      }, {
        "name" : "String",
        "type" : 70
      }, {
        "name" : "common",
        "type" : 73
      }, {
        "name" : "uncommon",
        "type" : 75
      } ],
      "name" : "interface{Align() int; AssignableTo(u reflect.Type) bool; Bits() int; ChanDir() reflect.ChanDir; Comparable() bool; ConvertibleTo(u reflect.Type) bool; Elem() reflect.Type; Field(i int) reflect.StructField; FieldAlign() int; FieldByIndex(index []int) reflect.StructField; FieldByName(name string) (reflect.StructField, bool); FieldByNameFunc(match func(string) bool) (reflect.StructField, bool); Implements(u reflect.Type) bool; In(i int) reflect.Type; IsVariadic() bool; Key() reflect.Type; Kind() reflect.Kind; Len() int; Method(int) reflect.Method; MethodByName(string) (reflect.Method, bool); Name() string; NumField() int; NumIn() int; NumMethod() int; NumOut() int; Out(i int) reflect.Type; PkgPath() string; Size() uintptr; String() string; common() *reflect.rtype; uncommon() *reflect.uncommonType}",
      "type" : "Interface",
      "underlying" : 11
    }, {
      "name" : "(reflect.Type) func() int",
      "params" : 13,
      "recv" : 0,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 12,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 3
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 14
    }, {
      "name" : "(reflect.Type) func(u reflect.Type) bool",
      "params" : 16,
      "recv" : 1,
      "results" : 17,
      "type" : "Signature",
      "underlying" : 15,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "u",
        "type" : 10
      } ],
      "name" : "(u reflect.Type)",
      "type" : "Tuple",
      "underlying" : 16
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 18
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 17
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 18
    }, {
      "name" : "(reflect.Type) func() reflect.ChanDir",
      "params" : 13,
      "recv" : 2,
      "results" : 20,
      "type" : "Signature",
      "underlying" : 19,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 21
      } ],
      "name" : "(reflect.ChanDir)",
      "type" : "Tuple",
      "underlying" : 20
    }, {
      "local-name" : "ChanDir",
      "name" : "reflect.ChanDir",
      "package" : 2,
      "type" : "Named",
      "underlying" : 3
    }, {
      "name" : "(reflect.Type) func() bool",
      "params" : 13,
      "recv" : 3,
      "results" : 17,
      "type" : "Signature",
      "underlying" : 22,
      "variadic" : false
    }, {
      "name" : "(reflect.Type) func() reflect.Type",
      "params" : 13,
      "recv" : 4,
      "results" : 24,
      "type" : "Signature",
      "underlying" : 23,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 10
      } ],
      "name" : "(reflect.Type)",
      "type" : "Tuple",
      "underlying" : 24
    }, {
      "name" : "(reflect.Type) func(i int) reflect.StructField",
      "params" : 26,
      "recv" : 5,
      "results" : 27,
      "type" : "Signature",
      "underlying" : 25,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 3
      } ],
      "name" : "(i int)",
      "type" : "Tuple",
      "underlying" : 26
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 28
      } ],
      "name" : "(reflect.StructField)",
      "type" : "Tuple",
      "underlying" : 27
    }, {
      "local-name" : "StructField",
      "name" : "reflect.StructField",
      "package" : 2,
      "type" : "Named",
      "underlying" : 29
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 30
      }, {
        "name" : "PkgPath",
        "type" : 30
      }, {
        "name" : "Type",
        "type" : 10
      }, {
        "name" : "Tag",
        "type" : 31
      }, {
        "name" : "Offset",
        "type" : 32
      }, {
        "name" : "Index",
        "type" : 33
      }, {
        "name" : "Anonymous",
        "type" : 18
      } ],
      "name" : "struct{Name string; PkgPath string; Type reflect.Type; Tag reflect.StructTag; Offset uintptr; Index []int; Anonymous bool}",
      "type" : "Struct",
      "underlying" : 29
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 30
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 2,
      "type" : "Named",
      "underlying" : 30
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 32
    }, {
      "elem" : 3,
      "name" : "[]int",
      "type" : "Slice",
      "underlying" : 33
    }, {
      "name" : "(reflect.Type) func(index []int) reflect.StructField",
      "params" : 35,
      "recv" : 6,
      "results" : 27,
      "type" : "Signature",
      "underlying" : 34,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "index",
        "type" : 33
      } ],
      "name" : "(index []int)",
      "type" : "Tuple",
      "underlying" : 35
    }, {
      "name" : "(reflect.Type) func(name string) (reflect.StructField, bool)",
      "params" : 37,
      "recv" : 7,
      "results" : 38,
      "type" : "Signature",
      "underlying" : 36,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 30
      } ],
      "name" : "(name string)",
      "type" : "Tuple",
      "underlying" : 37
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 28
      }, {
        "name" : "",
        "type" : 18
      } ],
      "name" : "(reflect.StructField, bool)",
      "type" : "Tuple",
      "underlying" : 38
    }, {
      "name" : "(reflect.Type) func(match func(string) bool) (reflect.StructField, bool)",
      "params" : 40,
      "recv" : 8,
      "results" : 38,
      "type" : "Signature",
      "underlying" : 39,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "match",
        "type" : 41
      } ],
      "name" : "(match func(string) bool)",
      "type" : "Tuple",
      "underlying" : 40
    }, {
      "name" : "func(string) bool",
      "params" : 42,
      "recv" : -1,
      "results" : 17,
      "type" : "Signature",
      "underlying" : 41,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 30
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 42
    }, {
      "name" : "(reflect.Type) func(i int) reflect.Type",
      "params" : 26,
      "recv" : 9,
      "results" : 24,
      "type" : "Signature",
      "underlying" : 43,
      "variadic" : false
    }, {
      "name" : "(reflect.Type) func() reflect.Kind",
      "params" : 13,
      "recv" : 10,
      "results" : 45,
      "type" : "Signature",
      "underlying" : 44,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 46
      } ],
      "name" : "(reflect.Kind)",
      "type" : "Tuple",
      "underlying" : 45
    }, {
      "local-name" : "Kind",
      "name" : "reflect.Kind",
      "package" : 2,
      "type" : "Named",
      "underlying" : 47
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 47
    }, {
      "name" : "(reflect.Type) func(int) reflect.Method",
      "params" : 14,
      "recv" : 11,
      "results" : 49,
      "type" : "Signature",
      "underlying" : 48,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 50
      } ],
      "name" : "(reflect.Method)",
      "type" : "Tuple",
      "underlying" : 49
    }, {
      "local-name" : "Method",
      "name" : "reflect.Method",
      "package" : 2,
      "type" : "Named",
      "underlying" : 51
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 30
      }, {
        "name" : "PkgPath",
        "type" : 30
      }, {
        "name" : "Type",
        "type" : 10
      }, {
        "name" : "Func",
        "type" : 52
      }, {
        "name" : "Index",
        "type" : 3
      } ],
      "name" : "struct{Name string; PkgPath string; Type reflect.Type; Func reflect.Value; Index int}",
      "type" : "Struct",
      "underlying" : 51
    }, {
      "local-name" : "Value",
      "name" : "reflect.Value",
      "package" : 2,
      "type" : "Named",
      "underlying" : 53
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 54
      }, {
        "name" : "ptr",
        "type" : 2
      }, {
        "name" : "flag",
        "type" : 67
      } ],
      "name" : "struct{typ *reflect.rtype; ptr unsafe.Pointer; reflect.flag}",
      "type" : "Struct",
      "underlying" : 53
    }, {
      "elem" : 55,
      "name" : "*reflect.rtype",
      "type" : "Pointer",
      "underlying" : 54
    }, {
      "local-name" : "rtype",
      "name" : "reflect.rtype",
      "package" : 2,
      "type" : "Named",
      "underlying" : 56
    }, {
      "fields" : [ {
        "name" : "size",
        "type" : 32
      }, {
        "name" : "ptrdata",
        "type" : 32
      }, {
        "name" : "hash",
        "type" : 57
      }, {
        "name" : "tflag",
        "type" : 58
      }, {
        "name" : "align",
        "type" : 59
      }, {
        "name" : "fieldAlign",
        "type" : 59
      }, {
        "name" : "kind",
        "type" : 59
      }, {
        "name" : "equal",
        "type" : 60
      }, {
        "name" : "gcdata",
        "type" : 62
      }, {
        "name" : "str",
        "type" : 64
      }, {
        "name" : "ptrToThis",
        "type" : 66
      } ],
      "name" : "struct{size uintptr; ptrdata uintptr; hash uint32; tflag reflect.tflag; align uint8; fieldAlign uint8; kind uint8; equal func(unsafe.Pointer, unsafe.Pointer) bool; gcdata *byte; str reflect.nameOff; ptrToThis reflect.typeOff}",
      "type" : "Struct",
      "underlying" : 56
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 57
    }, {
      "local-name" : "tflag",
      "name" : "reflect.tflag",
      "package" : 2,
      "type" : "Named",
      "underlying" : 59
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 59
    }, {
      "name" : "func(unsafe.Pointer, unsafe.Pointer) bool",
      "params" : 61,
      "recv" : -1,
      "results" : 17,
      "type" : "Signature",
      "underlying" : 60,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 2
      }, {
        "name" : "",
        "type" : 2
      } ],
      "name" : "(unsafe.Pointer, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 61
    }, {
      "elem" : 63,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 62
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 63
    }, {
      "local-name" : "nameOff",
      "name" : "reflect.nameOff",
      "package" : 2,
      "type" : "Named",
      "underlying" : 65
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 65
    }, {
      "local-name" : "typeOff",
      "name" : "reflect.typeOff",
      "package" : 2,
      "type" : "Named",
      "underlying" : 65
    }, {
      "local-name" : "flag",
      "name" : "reflect.flag",
      "package" : 2,
      "type" : "Named",
      "underlying" : 32
    }, {
      "name" : "(reflect.Type) func(string) (reflect.Method, bool)",
      "params" : 42,
      "recv" : 12,
      "results" : 69,
      "type" : "Signature",
      "underlying" : 68,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 50
      }, {
        "name" : "",
        "type" : 18
      } ],
      "name" : "(reflect.Method, bool)",
      "type" : "Tuple",
      "underlying" : 69
    }, {
      "name" : "(reflect.Type) func() string",
      "params" : 13,
      "recv" : 13,
      "results" : 42,
      "type" : "Signature",
      "underlying" : 70,
      "variadic" : false
    }, {
      "name" : "(reflect.Type) func() uintptr",
      "params" : 13,
      "recv" : 14,
      "results" : 72,
      "type" : "Signature",
      "underlying" : 71,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 32
      } ],
      "name" : "(uintptr)",
      "type" : "Tuple",
      "underlying" : 72
    }, {
      "name" : "(reflect.Type) func() *reflect.rtype",
      "params" : 13,
      "recv" : 15,
      "results" : 74,
      "type" : "Signature",
      "underlying" : 73,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 54
      } ],
      "name" : "(*reflect.rtype)",
      "type" : "Tuple",
      "underlying" : 74
    }, {
      "name" : "(reflect.Type) func() *reflect.uncommonType",
      "params" : 13,
      "recv" : 16,
      "results" : 76,
      "type" : "Signature",
      "underlying" : 75,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 77
      } ],
      "name" : "(*reflect.uncommonType)",
      "type" : "Tuple",
      "underlying" : 76
    }, {
      "elem" : 78,
      "name" : "*reflect.uncommonType",
      "type" : "Pointer",
      "underlying" : 77
    }, {
      "local-name" : "uncommonType",
      "name" : "reflect.uncommonType",
      "package" : 2,
      "type" : "Named",
      "underlying" : 79
    }, {
      "fields" : [ {
        "name" : "pkgPath",
        "type" : 64
      }, {
        "name" : "mcount",
        "type" : 80
      }, {
        "name" : "xcount",
        "type" : 80
      }, {
        "name" : "moff",
        "type" : 57
      }, {
        "name" : "_",
        "type" : 57
      } ],
      "name" : "struct{pkgPath reflect.nameOff; mcount uint16; xcount uint16; moff uint32; _ uint32}",
      "type" : "Struct",
      "underlying" : 79
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 80
    }, {
      "elem" : 82,
      "name" : "*github.com/modern-go/reflect2.frozenConfig",
      "type" : "Pointer",
      "underlying" : 81
    }, {
      "local-name" : "frozenConfig",
      "name" : "github.com/modern-go/reflect2.frozenConfig",
      "package" : 0,
      "type" : "Named",
      "underlying" : 83
    }, {
      "fields" : [ {
        "name" : "useSafeImplementation",
        "type" : 18
      }, {
        "name" : "cache",
        "type" : 84
      } ],
      "name" : "struct{useSafeImplementation bool; cache *github.com/modern-go/concurrent.Map}",
      "type" : "Struct",
      "underlying" : 83
    }, {
      "elem" : 85,
      "name" : "*github.com/modern-go/concurrent.Map",
      "type" : "Pointer",
      "underlying" : 84
    }, {
      "local-name" : "Map",
      "name" : "github.com/modern-go/concurrent.Map",
      "package" : 3,
      "type" : "Named",
      "underlying" : 86
    }, {
      "fields" : [ {
        "name" : "Map",
        "type" : 87
      } ],
      "name" : "struct{sync.Map}",
      "type" : "Struct",
      "underlying" : 86
    }, {
      "local-name" : "Map",
      "name" : "sync.Map",
      "package" : 4,
      "type" : "Named",
      "underlying" : 88
    }, {
      "fields" : [ {
        "name" : "mu",
        "type" : 89
      }, {
        "name" : "read",
        "type" : 91
      }, {
        "name" : "dirty",
        "type" : 94
      }, {
        "name" : "misses",
        "type" : 3
      } ],
      "name" : "struct{mu sync.Mutex; read sync/atomic.Value; dirty map[interface{}]*sync.entry; misses int}",
      "type" : "Struct",
      "underlying" : 88
    }, {
      "local-name" : "Mutex",
      "name" : "sync.Mutex",
      "package" : 4,
      "type" : "Named",
      "underlying" : 90
    }, {
      "fields" : [ {
        "name" : "state",
        "type" : 65
      }, {
        "name" : "sema",
        "type" : 57
      } ],
      "name" : "struct{state int32; sema uint32}",
      "type" : "Struct",
      "underlying" : 90
    }, {
      "local-name" : "Value",
      "name" : "sync/atomic.Value",
      "package" : 5,
      "type" : "Named",
      "underlying" : 92
    }, {
      "fields" : [ {
        "name" : "v",
        "type" : 93
      } ],
      "name" : "struct{v interface{}}",
      "type" : "Struct",
      "underlying" : 92
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 93
    }, {
      "elem" : 95,
      "key" : 93,
      "name" : "map[interface{}]*sync.entry",
      "type" : "Map",
      "underlying" : 94
    }, {
      "elem" : 96,
      "name" : "*sync.entry",
      "type" : "Pointer",
      "underlying" : 95
    }, {
      "local-name" : "entry",
      "name" : "sync.entry",
      "package" : 4,
      "type" : "Named",
      "underlying" : 97
    }, {
      "fields" : [ {
        "name" : "p",
        "type" : 2
      } ],
      "name" : "struct{p unsafe.Pointer}",
      "type" : "Struct",
      "underlying" : 97
    }, {
      "name" : "func(interface{})",
      "params" : 99,
      "recv" : -1,
      "results" : 13,
      "type" : "Signature",
      "underlying" : 98,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 93
      } ],
      "name" : "(interface{})",
      "type" : "Tuple",
      "underlying" : 99
    } ],
    "variables" : [ {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "type2",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "obj",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "index",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}