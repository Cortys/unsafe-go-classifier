{
  "usage" : {
    "file" : "blas.go",
    "label1" : "cast-struct",
    "label2" : "ffi",
    "line" : "2805",
    "module" : "gorgonia.org/cu",
    "pkg" : "gorgonia.org/cu/blas",
    "project" : "gorgonia/gorgonia",
    "snippet" : "impl.e = status(C.cublasCsyr(C.cublasHandle_t(impl.h), uplo2cublasUplo(ul), C.int(n), (*C.cuComplex)(unsafe.Pointer(&alpha)), (*C.cuComplex)(unsafe.Pointer(&x[0])), C.int(incX), (*C.cuComplex)(unsafe.Pointer(&a[0])), C.int(lda)))",
    "version" : "v0.9.2"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 113, 112, 108, 106, 107, 109, 110, 111 ],
      "exit" : false,
      "out-vars" : [ 108, 106, 107, 109, 110, 111, 113, 112 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3, 4 ],
      "in-vars" : [ 110, 111, 113, 112, 108, 106, 107, 109 ],
      "exit" : false,
      "out-vars" : [ 108, 106, 107, 109, 110, 111, 113, 112 ],
      "decl-vars" : [ ],
      "line-start" : 2792,
      "ast" : {
        "condition" : {
          "go-type" : 301,
          "kind" : "expression",
          "left" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "e",
              "variable" : 114
            },
            "go-type" : 14,
            "kind" : "expression",
            "target" : {
              "go-type" : 8,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "impl",
                "variable" : 106
              }
            },
            "type" : "selector"
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 302,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 2794,
      "code" : "if impl.e != nil {\n\treturn\n}",
      "entry" : false,
      "use-vars" : [ 106 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 2793,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ ]
      },
      "assign-vars" : [ ],
      "line-end" : 2793,
      "code" : "return",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5, 6 ],
      "in-vars" : [ 111, 113, 112, 108, 106, 107, 109, 110 ],
      "exit" : false,
      "out-vars" : [ 106, 107, 109, 110, 111, 113, 112, 108 ],
      "decl-vars" : [ ],
      "line-start" : 2796,
      "ast" : {
        "condition" : {
          "go-type" : 301,
          "kind" : "expression",
          "left" : {
            "go-type" : 4,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "n",
              "variable" : 108
            }
          },
          "operator" : "<",
          "right" : {
            "go-type" : 4,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 2798,
      "code" : "if n < 0 {\n\tpanic(\"blas: n < 0\")\n}",
      "entry" : false,
      "use-vars" : [ 108 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6 ],
      "in-vars" : [ 107, 109, 110, 111, 113, 112, 108, 106 ],
      "exit" : false,
      "out-vars" : [ 112, 108, 106, 107, 109, 110, 111, 113 ],
      "decl-vars" : [ ],
      "line-start" : 2797,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 18,
            "kind" : "constant",
            "value" : {
              "type" : "STRING",
              "value" : "blas: n < 0"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 303,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Builtin",
              "kind" : "ident",
              "value" : "panic"
            }
          },
          "go-type" : 7,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 2797,
      "code" : "panic(\"blas: n < 0\")",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 7, 8 ],
      "in-vars" : [ 111, 113, 112, 108, 106, 107, 109, 110 ],
      "exit" : false,
      "out-vars" : [ 106, 107, 109, 110, 111, 113, 112, 108 ],
      "decl-vars" : [ ],
      "line-start" : 2799,
      "ast" : {
        "condition" : {
          "go-type" : 301,
          "kind" : "expression",
          "left" : {
            "go-type" : 4,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "incX",
              "variable" : 111
            }
          },
          "operator" : "==",
          "right" : {
            "go-type" : 4,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 2801,
      "code" : "if incX == 0 {\n\tpanic(\"blas: zero x index increment\")\n}",
      "entry" : false,
      "use-vars" : [ 111 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 8 ],
      "in-vars" : [ 111, 113, 112, 108, 106, 107, 109, 110 ],
      "exit" : false,
      "out-vars" : [ 113, 112, 108, 106, 107, 109, 110, 111 ],
      "decl-vars" : [ ],
      "line-start" : 2800,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 18,
            "kind" : "constant",
            "value" : {
              "type" : "STRING",
              "value" : "blas: zero x index increment"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 303,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Builtin",
              "kind" : "ident",
              "value" : "panic"
            }
          },
          "go-type" : 7,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 2800,
      "code" : "panic(\"blas: zero x index increment\")",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 9, 10 ],
      "in-vars" : [ 113, 112, 108, 106, 107, 109, 110, 111 ],
      "exit" : false,
      "out-vars" : [ 108, 106, 107, 109, 110, 111, 113, 112 ],
      "decl-vars" : [ ],
      "line-start" : 2802,
      "ast" : {
        "condition" : {
          "go-type" : 301,
          "kind" : "expression",
          "left" : {
            "go-type" : 301,
            "kind" : "expression",
            "target" : {
              "go-type" : 301,
              "kind" : "expression",
              "left" : {
                "go-type" : 301,
                "kind" : "expression",
                "left" : {
                  "go-type" : 4,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "incX",
                    "variable" : 111
                  }
                },
                "operator" : ">",
                "right" : {
                  "go-type" : 4,
                  "kind" : "constant",
                  "value" : {
                    "type" : "INT",
                    "value" : "0"
                  }
                },
                "type" : "binary"
              },
              "operator" : "&&",
              "right" : {
                "go-type" : 301,
                "kind" : "expression",
                "left" : {
                  "go-type" : 4,
                  "kind" : "expression",
                  "left" : {
                    "go-type" : 4,
                    "kind" : "expression",
                    "target" : {
                      "go-type" : 4,
                      "kind" : "expression",
                      "left" : {
                        "go-type" : 4,
                        "kind" : "expression",
                        "type" : "identifier",
                        "value" : {
                          "ident-kind" : "Var",
                          "kind" : "ident",
                          "value" : "n",
                          "variable" : 108
                        }
                      },
                      "operator" : "-",
                      "right" : {
                        "go-type" : 4,
                        "kind" : "constant",
                        "value" : {
                          "type" : "INT",
                          "value" : "1"
                        }
                      },
                      "type" : "binary"
                    },
                    "type" : "paren"
                  },
                  "operator" : "*",
                  "right" : {
                    "go-type" : 4,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "incX",
                      "variable" : 111
                    }
                  },
                  "type" : "binary"
                },
                "operator" : ">=",
                "right" : {
                  "arguments" : [ {
                    "go-type" : 6,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "x",
                      "variable" : 110
                    }
                  } ],
                  "ellipsis" : false,
                  "function" : {
                    "go-type" : 306,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Builtin",
                      "kind" : "ident",
                      "value" : "len"
                    }
                  },
                  "go-type" : 4,
                  "kind" : "expression",
                  "type" : "call"
                },
                "type" : "binary"
              },
              "type" : "binary"
            },
            "type" : "paren"
          },
          "operator" : "||",
          "right" : {
            "go-type" : 301,
            "kind" : "expression",
            "target" : {
              "go-type" : 301,
              "kind" : "expression",
              "left" : {
                "go-type" : 301,
                "kind" : "expression",
                "left" : {
                  "go-type" : 4,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "incX",
                    "variable" : 111
                  }
                },
                "operator" : "<",
                "right" : {
                  "go-type" : 4,
                  "kind" : "constant",
                  "value" : {
                    "type" : "INT",
                    "value" : "0"
                  }
                },
                "type" : "binary"
              },
              "operator" : "&&",
              "right" : {
                "go-type" : 301,
                "kind" : "expression",
                "left" : {
                  "go-type" : 4,
                  "kind" : "expression",
                  "left" : {
                    "go-type" : 4,
                    "kind" : "expression",
                    "target" : {
                      "go-type" : 4,
                      "kind" : "expression",
                      "left" : {
                        "go-type" : 4,
                        "kind" : "constant",
                        "value" : {
                          "type" : "INT",
                          "value" : "1"
                        }
                      },
                      "operator" : "-",
                      "right" : {
                        "go-type" : 4,
                        "kind" : "expression",
                        "type" : "identifier",
                        "value" : {
                          "ident-kind" : "Var",
                          "kind" : "ident",
                          "value" : "n",
                          "variable" : 108
                        }
                      },
                      "type" : "binary"
                    },
                    "type" : "paren"
                  },
                  "operator" : "*",
                  "right" : {
                    "go-type" : 4,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "incX",
                      "variable" : 111
                    }
                  },
                  "type" : "binary"
                },
                "operator" : ">=",
                "right" : {
                  "arguments" : [ {
                    "go-type" : 6,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "x",
                      "variable" : 110
                    }
                  } ],
                  "ellipsis" : false,
                  "function" : {
                    "go-type" : 306,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Builtin",
                      "kind" : "ident",
                      "value" : "len"
                    }
                  },
                  "go-type" : 4,
                  "kind" : "expression",
                  "type" : "call"
                },
                "type" : "binary"
              },
              "type" : "binary"
            },
            "type" : "paren"
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 2804,
      "code" : "if (incX > 0 && (n-1)*incX >= len(x)) || (incX < 0 && (1-n)*incX >= len(x)) {\n\tpanic(\"blas: x index out of range\")\n}",
      "entry" : false,
      "use-vars" : [ 108, 110, 111 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 10 ],
      "in-vars" : [ 107, 109, 110, 111, 113, 112, 108, 106 ],
      "exit" : false,
      "out-vars" : [ 112, 108, 106, 107, 109, 110, 111, 113 ],
      "decl-vars" : [ ],
      "line-start" : 2803,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 18,
            "kind" : "constant",
            "value" : {
              "type" : "STRING",
              "value" : "blas: x index out of range"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 303,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Builtin",
              "kind" : "ident",
              "value" : "panic"
            }
          },
          "go-type" : 7,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 2803,
      "code" : "panic(\"blas: x index out of range\")",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 106 ],
      "successors" : [ 1 ],
      "in-vars" : [ 111, 113, 112, 108, 106, 107, 109, 110 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 2805,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "e",
            "variable" : 114
          },
          "go-type" : 14,
          "kind" : "expression",
          "target" : {
            "go-type" : 8,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "impl",
              "variable" : 106
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "arguments" : [ {
            "arguments" : [ {
              "arguments" : [ {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "h",
                  "variable" : 115
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "go-type" : 8,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "impl",
                    "variable" : 106
                  }
                },
                "type" : "selector"
              } ],
              "ellipsis" : false,
              "function" : {
                "go-type" : -1,
                "kind" : "expression",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 5,
                  "value" : "C"
                },
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "cublasHandle_t"
                }
              },
              "go-type" : -1,
              "kind" : "expression",
              "type" : "call"
            }, {
              "arguments" : [ {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "ul",
                  "variable" : 107
                }
              } ],
              "ellipsis" : false,
              "function" : {
                "go-type" : 311,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "function" : 2,
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "uplo2cublasUplo"
                }
              },
              "go-type" : 11,
              "kind" : "expression",
              "type" : "call"
            }, {
              "arguments" : [ {
                "go-type" : 4,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "n",
                  "variable" : 108
                }
              } ],
              "ellipsis" : false,
              "function" : {
                "go-type" : -1,
                "kind" : "expression",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 5,
                  "value" : "C"
                },
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "int"
                }
              },
              "go-type" : -1,
              "kind" : "expression",
              "type" : "call"
            }, {
              "coerced-to" : {
                "contained" : {
                  "go-type" : -1,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 5,
                    "value" : "C"
                  },
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "NoKind",
                    "kind" : "ident",
                    "value" : "cuComplex"
                  }
                },
                "go-type" : -1,
                "kind" : "type",
                "type" : "pointer"
              },
              "go-type" : -1,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 112,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 3,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 112,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 112,
                "kind" : "expression",
                "target" : {
                  "go-type" : 314,
                  "kind" : "expression",
                  "operator" : "&",
                  "target" : {
                    "go-type" : 5,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "alpha",
                      "variable" : 109
                    }
                  },
                  "type" : "unary"
                },
                "type" : "cast"
              },
              "type" : "cast"
            }, {
              "coerced-to" : {
                "contained" : {
                  "go-type" : -1,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 5,
                    "value" : "C"
                  },
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "NoKind",
                    "kind" : "ident",
                    "value" : "cuComplex"
                  }
                },
                "go-type" : -1,
                "kind" : "type",
                "type" : "pointer"
              },
              "go-type" : -1,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 112,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 3,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 112,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 112,
                "kind" : "expression",
                "target" : {
                  "go-type" : 314,
                  "kind" : "expression",
                  "operator" : "&",
                  "target" : {
                    "go-type" : 5,
                    "index" : {
                      "go-type" : 4,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "0"
                      }
                    },
                    "kind" : "expression",
                    "target" : {
                      "go-type" : 6,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "x",
                        "variable" : 110
                      }
                    },
                    "type" : "index"
                  },
                  "type" : "unary"
                },
                "type" : "cast"
              },
              "type" : "cast"
            }, {
              "arguments" : [ {
                "go-type" : 4,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "incX",
                  "variable" : 111
                }
              } ],
              "ellipsis" : false,
              "function" : {
                "go-type" : -1,
                "kind" : "expression",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 5,
                  "value" : "C"
                },
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "int"
                }
              },
              "go-type" : -1,
              "kind" : "expression",
              "type" : "call"
            }, {
              "coerced-to" : {
                "contained" : {
                  "go-type" : -1,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 5,
                    "value" : "C"
                  },
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "NoKind",
                    "kind" : "ident",
                    "value" : "cuComplex"
                  }
                },
                "go-type" : -1,
                "kind" : "type",
                "type" : "pointer"
              },
              "go-type" : -1,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 112,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 3,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 112,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 112,
                "kind" : "expression",
                "target" : {
                  "go-type" : 314,
                  "kind" : "expression",
                  "operator" : "&",
                  "target" : {
                    "go-type" : 5,
                    "index" : {
                      "go-type" : 4,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "0"
                      }
                    },
                    "kind" : "expression",
                    "target" : {
                      "go-type" : 6,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "a",
                        "variable" : 112
                      }
                    },
                    "type" : "index"
                  },
                  "type" : "unary"
                },
                "type" : "cast"
              },
              "type" : "cast"
            }, {
              "arguments" : [ {
                "go-type" : 4,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "lda",
                  "variable" : 113
                }
              } ],
              "ellipsis" : false,
              "function" : {
                "go-type" : -1,
                "kind" : "expression",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 5,
                  "value" : "C"
                },
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "int"
                }
              },
              "go-type" : -1,
              "kind" : "expression",
              "type" : "call"
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : -1,
              "kind" : "expression",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "C"
              },
              "type" : "identifier",
              "value" : {
                "ident-kind" : "NoKind",
                "kind" : "ident",
                "value" : "cublasCsyr"
              }
            },
            "go-type" : -1,
            "kind" : "expression",
            "type" : "call"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 309,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "status"
            }
          },
          "go-type" : 14,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 2805,
      "code" : "impl.e = status(C.cublasCsyr(C.cublasHandle_t(impl.h), uplo2cublasUplo(ul), C.int(n), (*C.cuComplex)(unsafe.Pointer(&alpha)), (*C.cuComplex)(unsafe.Pointer(&x[0])), C.int(incX), (*C.cuComplex)(unsafe.Pointer(&a[0])), C.int(lda)))",
      "entry" : false,
      "use-vars" : [ 107, 108, 113, 106, 111, 109, 112, 110 ]
    } ],
    "code" : "func (impl *Standard) Csyr(ul blas.Uplo, n int, alpha complex64, x []complex64, incX int, a []complex64, lda int) {\n\n\tif impl.e != nil {\n\t\treturn\n\t}\n\n\tif n < 0 {\n\t\tpanic(\"blas: n < 0\")\n\t}\n\tif incX == 0 {\n\t\tpanic(\"blas: zero x index increment\")\n\t}\n\tif (incX > 0 && (n-1)*incX >= len(x)) || (incX < 0 && (1-n)*incX >= len(x)) {\n\t\tpanic(\"blas: x index out of range\")\n\t}\n\timpl.e = status(C.cublasCsyr(C.cublasHandle_t(impl.h), uplo2cublasUplo(ul), C.int(n), (*C.cuComplex)(unsafe.Pointer(&alpha)), (*C.cuComplex)(unsafe.Pointer(&x[0])), C.int(incX), (*C.cuComplex)(unsafe.Pointer(&a[0])), C.int(lda)))\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "Csyr",
      "package" : 0,
      "type" : 0,
      "exported" : true
    }, {
      "name" : "status",
      "package" : 0,
      "type" : 309,
      "exported" : false
    }, {
      "name" : "uplo2cublasUplo",
      "package" : 0,
      "type" : 311,
      "exported" : false
    } ],
    "line-end" : 2806,
    "line-start" : 2790,
    "names" : [ "Csyr" ],
    "package" : 0,
    "packages" : [ {
      "name" : "cublas",
      "path" : "gorgonia.org/cu/blas"
    }, {
      "name" : "blas",
      "path" : "gonum.org/v1/gonum/blas"
    }, {
      "name" : "cu",
      "path" : "gorgonia.org/cu"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "sync",
      "path" : "sync"
    }, {
      "name" : "C",
      "path" : "C"
    } ],
    "params" : [ 107, 108, 109, 110, 111, 112, 113 ],
    "receivers" : [ 106 ],
    "results" : [ ],
    "type" : "function",
    "types" : [ {
      "name" : "(*gorgonia.org/cu/blas.Standard) func(ul gonum.org/v1/gonum/blas.Uplo, n int, alpha complex64, x []complex64, incX int, a []complex64, lda int)",
      "params" : 1,
      "recv" : 106,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ul",
        "type" : 2
      }, {
        "name" : "n",
        "type" : 4
      }, {
        "name" : "alpha",
        "type" : 5
      }, {
        "name" : "x",
        "type" : 6
      }, {
        "name" : "incX",
        "type" : 4
      }, {
        "name" : "a",
        "type" : 6
      }, {
        "name" : "lda",
        "type" : 4
      } ],
      "name" : "(ul gonum.org/v1/gonum/blas.Uplo, n int, alpha complex64, x []complex64, incX int, a []complex64, lda int)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "local-name" : "Uplo",
      "name" : "gonum.org/v1/gonum/blas.Uplo",
      "package" : 1,
      "type" : "Named",
      "underlying" : 3
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 3
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 4
    }, {
      "name" : "complex64",
      "type" : "Basic",
      "underlying" : 5
    }, {
      "elem" : 5,
      "name" : "[]complex64",
      "type" : "Slice",
      "underlying" : 6
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 7
    }, {
      "elem" : 9,
      "name" : "*gorgonia.org/cu/blas.Standard",
      "type" : "Pointer",
      "underlying" : 8
    }, {
      "local-name" : "Standard",
      "name" : "gorgonia.org/cu/blas.Standard",
      "package" : 0,
      "type" : "Named",
      "underlying" : 10
    }, {
      "fields" : [ {
        "name" : "h",
        "type" : 11
      }, {
        "name" : "o",
        "type" : 12
      }, {
        "name" : "m",
        "type" : 13
      }, {
        "name" : "e",
        "type" : 14
      }, {
        "name" : "Context",
        "type" : 19
      }, {
        "name" : "dataOnDev",
        "type" : 297
      }, {
        "name" : "Mutex",
        "type" : 298
      } ],
      "name" : "struct{h invalid type; o gorgonia.org/cu/blas.Order; m gorgonia.org/cu/blas.PointerMode; e error; gorgonia.org/cu.Context; dataOnDev bool; sync.Mutex}",
      "type" : "Struct",
      "underlying" : 10
    }, {
      "name" : "invalid type",
      "type" : "Basic",
      "underlying" : 11
    }, {
      "local-name" : "Order",
      "name" : "gorgonia.org/cu/blas.Order",
      "package" : 0,
      "type" : "Named",
      "underlying" : 3
    }, {
      "local-name" : "PointerMode",
      "name" : "gorgonia.org/cu/blas.PointerMode",
      "package" : 0,
      "type" : "Named",
      "underlying" : 3
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 15
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 16
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 15
    }, {
      "name" : "(error) func() string",
      "params" : 7,
      "recv" : 0,
      "results" : 17,
      "type" : "Signature",
      "underlying" : 16,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 18
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 17
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 18
    }, {
      "local-name" : "Context",
      "name" : "gorgonia.org/cu.Context",
      "package" : 2,
      "type" : "Named",
      "underlying" : 20
    }, {
      "methods" : [ {
        "name" : "Address",
        "type" : 21
      }, {
        "name" : "AddressMode",
        "type" : 28
      }, {
        "name" : "Array",
        "type" : 32
      }, {
        "name" : "AttachMemAsync",
        "type" : 37
      }, {
        "name" : "BorderColor",
        "type" : 43
      }, {
        "name" : "CUDAContext",
        "type" : 47
      }, {
        "name" : "Close",
        "type" : 51
      }, {
        "name" : "CurrentCacheConfig",
        "type" : 53
      }, {
        "name" : "CurrentDevice",
        "type" : 56
      }, {
        "name" : "CurrentFlags",
        "type" : 59
      }, {
        "name" : "Descriptor",
        "type" : 62
      }, {
        "name" : "Descriptor3",
        "type" : 68
      }, {
        "name" : "DestroyArray",
        "type" : 72
      }, {
        "name" : "DestroyEvent",
        "type" : 73
      }, {
        "name" : "DestroyStream",
        "type" : 78
      }, {
        "name" : "DisablePeerAccess",
        "type" : 81
      }, {
        "name" : "Do",
        "type" : 83
      }, {
        "name" : "Elapsed",
        "type" : 86
      }, {
        "name" : "EnablePeerAccess",
        "type" : 90
      }, {
        "name" : "ErrChan",
        "type" : 92
      }, {
        "name" : "Error",
        "type" : 51
      }, {
        "name" : "FilterMode",
        "type" : 95
      }, {
        "name" : "Format",
        "type" : 98
      }, {
        "name" : "FunctionAttribute",
        "type" : 100
      }, {
        "name" : "GetArray",
        "type" : 106
      }, {
        "name" : "LaunchKernel",
        "type" : 109
      }, {
        "name" : "Limits",
        "type" : 113
      }, {
        "name" : "Load",
        "type" : 117
      }, {
        "name" : "MakeEvent",
        "type" : 122
      }, {
        "name" : "MakeStream",
        "type" : 126
      }, {
        "name" : "MakeStreamWithPriority",
        "type" : 130
      }, {
        "name" : "MaxAnisotropy",
        "type" : 132
      }, {
        "name" : "MemAlloc",
        "type" : 134
      }, {
        "name" : "MemAllocManaged",
        "type" : 137
      }, {
        "name" : "MemAllocPitch",
        "type" : 140
      }, {
        "name" : "MemFree",
        "type" : 143
      }, {
        "name" : "MemFreeHost",
        "type" : 145
      }, {
        "name" : "MemInfo",
        "type" : 147
      }, {
        "name" : "Memcpy",
        "type" : 149
      }, {
        "name" : "Memcpy2D",
        "type" : 151
      }, {
        "name" : "Memcpy2DAsync",
        "type" : 156
      }, {
        "name" : "Memcpy2DUnaligned",
        "type" : 151
      }, {
        "name" : "Memcpy3D",
        "type" : 158
      }, {
        "name" : "Memcpy3DAsync",
        "type" : 162
      }, {
        "name" : "Memcpy3DPeer",
        "type" : 164
      }, {
        "name" : "Memcpy3DPeerAsync",
        "type" : 168
      }, {
        "name" : "MemcpyAsync",
        "type" : 170
      }, {
        "name" : "MemcpyAtoA",
        "type" : 172
      }, {
        "name" : "MemcpyAtoD",
        "type" : 174
      }, {
        "name" : "MemcpyAtoH",
        "type" : 176
      }, {
        "name" : "MemcpyAtoHAsync",
        "type" : 178
      }, {
        "name" : "MemcpyDtoA",
        "type" : 180
      }, {
        "name" : "MemcpyDtoD",
        "type" : 182
      }, {
        "name" : "MemcpyDtoDAsync",
        "type" : 184
      }, {
        "name" : "MemcpyDtoH",
        "type" : 186
      }, {
        "name" : "MemcpyDtoHAsync",
        "type" : 188
      }, {
        "name" : "MemcpyHtoA",
        "type" : 190
      }, {
        "name" : "MemcpyHtoAAsync",
        "type" : 192
      }, {
        "name" : "MemcpyHtoD",
        "type" : 194
      }, {
        "name" : "MemcpyHtoDAsync",
        "type" : 196
      }, {
        "name" : "MemcpyPeer",
        "type" : 198
      }, {
        "name" : "MemcpyPeerAsync",
        "type" : 200
      }, {
        "name" : "MemsetD16",
        "type" : 202
      }, {
        "name" : "MemsetD16Async",
        "type" : 205
      }, {
        "name" : "MemsetD2D16",
        "type" : 207
      }, {
        "name" : "MemsetD2D16Async",
        "type" : 209
      }, {
        "name" : "MemsetD2D32",
        "type" : 211
      }, {
        "name" : "MemsetD2D32Async",
        "type" : 213
      }, {
        "name" : "MemsetD2D8",
        "type" : 215
      }, {
        "name" : "MemsetD2D8Async",
        "type" : 217
      }, {
        "name" : "MemsetD32",
        "type" : 219
      }, {
        "name" : "MemsetD32Async",
        "type" : 221
      }, {
        "name" : "MemsetD8",
        "type" : 223
      }, {
        "name" : "MemsetD8Async",
        "type" : 225
      }, {
        "name" : "ModuleFunction",
        "type" : 227
      }, {
        "name" : "ModuleGlobal",
        "type" : 230
      }, {
        "name" : "Priority",
        "type" : 232
      }, {
        "name" : "QueryEvent",
        "type" : 235
      }, {
        "name" : "QueryStream",
        "type" : 237
      }, {
        "name" : "Record",
        "type" : 238
      }, {
        "name" : "Run",
        "type" : 240
      }, {
        "name" : "SetAddress",
        "type" : 241
      }, {
        "name" : "SetAddress2D",
        "type" : 244
      }, {
        "name" : "SetAddressMode",
        "type" : 246
      }, {
        "name" : "SetBorderColor",
        "type" : 248
      }, {
        "name" : "SetCacheConfig",
        "type" : 250
      }, {
        "name" : "SetCurrentCacheConfig",
        "type" : 252
      }, {
        "name" : "SetFilterMode",
        "type" : 254
      }, {
        "name" : "SetFormat",
        "type" : 256
      }, {
        "name" : "SetFunctionSharedMemConfig",
        "type" : 258
      }, {
        "name" : "SetLimit",
        "type" : 261
      }, {
        "name" : "SetMaxAnisotropy",
        "type" : 263
      }, {
        "name" : "SetMipmapFilterMode",
        "type" : 254
      }, {
        "name" : "SetMipmapLevelBias",
        "type" : 265
      }, {
        "name" : "SetMipmapLevelClamp",
        "type" : 267
      }, {
        "name" : "SetSharedMemConfig",
        "type" : 269
      }, {
        "name" : "SetTexRefFlags",
        "type" : 271
      }, {
        "name" : "SharedMemConfig",
        "type" : 274
      }, {
        "name" : "StreamFlags",
        "type" : 276
      }, {
        "name" : "StreamPriorityRange",
        "type" : 278
      }, {
        "name" : "SurfRefSetArray",
        "type" : 280
      }, {
        "name" : "Synchronize",
        "type" : 282
      }, {
        "name" : "SynchronizeEvent",
        "type" : 235
      }, {
        "name" : "SynchronizeStream",
        "type" : 237
      }, {
        "name" : "TexRefFlags",
        "type" : 283
      }, {
        "name" : "TexRefSetArray",
        "type" : 285
      }, {
        "name" : "Unload",
        "type" : 287
      }, {
        "name" : "Wait",
        "type" : 289
      }, {
        "name" : "WaitOnValue32",
        "type" : 291
      }, {
        "name" : "Work",
        "type" : 294
      }, {
        "name" : "WriteValue32",
        "type" : 291
      } ],
      "name" : "interface{Address(hTexRef gorgonia.org/cu.TexRef) (pdptr gorgonia.org/cu.DevicePtr, err error); AddressMode(hTexRef gorgonia.org/cu.TexRef, dim int) (pam gorgonia.org/cu.AddressMode, err error); Array(hTexRef gorgonia.org/cu.TexRef) (phArray gorgonia.org/cu.Array, err error); AttachMemAsync(hStream gorgonia.org/cu.Stream, dptr gorgonia.org/cu.DevicePtr, length int64, flags uint); BorderColor(hTexRef gorgonia.org/cu.TexRef) (pBorderColor [3]float32, err error); CUDAContext() gorgonia.org/cu.CUContext; Close() error; CurrentCacheConfig() (pconfig gorgonia.org/cu.FuncCacheConfig, err error); CurrentDevice() (device gorgonia.org/cu.Device, err error); CurrentFlags() (flags gorgonia.org/cu.ContextFlags, err error); Descriptor(hArray gorgonia.org/cu.Array) (pArrayDescriptor gorgonia.org/cu.ArrayDesc, err error); Descriptor3(hArray gorgonia.org/cu.Array) (pArrayDescriptor gorgonia.org/cu.Array3Desc, err error); DestroyArray(hArray gorgonia.org/cu.Array); DestroyEvent(event *gorgonia.org/cu.Event); DestroyStream(hStream *gorgonia.org/cu.Stream); DisablePeerAccess(peerContext gorgonia.org/cu.CUContext); Do(fn func() error) error; Elapsed(hStart gorgonia.org/cu.Event, hEnd gorgonia.org/cu.Event) (pMilliseconds float64, err error); EnablePeerAccess(peerContext gorgonia.org/cu.CUContext, Flags uint); ErrChan() chan error; Error() error; FilterMode(hTexRef gorgonia.org/cu.TexRef) (pfm gorgonia.org/cu.FilterMode, err error); Format(hTexRef gorgonia.org/cu.TexRef) (pFormat gorgonia.org/cu.Format, pNumChannels int, err error); FunctionAttribute(fn gorgonia.org/cu.Function, attrib gorgonia.org/cu.FunctionAttribute) (pi int, err error); GetArray(hSurfRef gorgonia.org/cu.SurfRef) (phArray gorgonia.org/cu.Array, err error); LaunchKernel(fn gorgonia.org/cu.Function, gridDimX int, gridDimY int, gridDimZ int, blockDimX int, blockDimY int, blockDimZ int, sharedMemBytes int, stream gorgonia.org/cu.Stream, kernelParams []unsafe.Pointer); Limits(limit gorgonia.org/cu.Limit) (pvalue int64, err error); Load(name string) (m gorgonia.org/cu.Module, err error); MakeEvent(flags gorgonia.org/cu.EventFlags) (event gorgonia.org/cu.Event, err error); MakeStream(flags gorgonia.org/cu.StreamFlags) (stream gorgonia.org/cu.Stream, err error); MakeStreamWithPriority(priority int, flags gorgonia.org/cu.StreamFlags) (stream gorgonia.org/cu.Stream, err error); MaxAnisotropy(hTexRef gorgonia.org/cu.TexRef) (pmaxAniso int, err error); MemAlloc(bytesize int64) (dptr gorgonia.org/cu.DevicePtr, err error); MemAllocManaged(bytesize int64, flags gorgonia.org/cu.MemAttachFlags) (dptr gorgonia.org/cu.DevicePtr, err error); MemAllocPitch(WidthInBytes int64, Height int64, ElementSizeBytes uint) (dptr gorgonia.org/cu.DevicePtr, pPitch int64, err error); MemFree(dptr gorgonia.org/cu.DevicePtr); MemFreeHost(p unsafe.Pointer); MemInfo() (free int64, total int64, err error); Memcpy(dst gorgonia.org/cu.DevicePtr, src gorgonia.org/cu.DevicePtr, ByteCount int64); Memcpy2D(pCopy gorgonia.org/cu.Memcpy2dParam); Memcpy2DAsync(pCopy gorgonia.org/cu.Memcpy2dParam, hStream gorgonia.org/cu.Stream); Memcpy2DUnaligned(pCopy gorgonia.org/cu.Memcpy2dParam); Memcpy3D(pCopy gorgonia.org/cu.Memcpy3dParam); Memcpy3DAsync(pCopy gorgonia.org/cu.Memcpy3dParam, hStream gorgonia.org/cu.Stream); Memcpy3DPeer(pCopy gorgonia.org/cu.Memcpy3dPeerParam); Memcpy3DPeerAsync(pCopy gorgonia.org/cu.Memcpy3dPeerParam, hStream gorgonia.org/cu.Stream); MemcpyAsync(dst gorgonia.org/cu.DevicePtr, src gorgonia.org/cu.DevicePtr, ByteCount int64, hStream gorgonia.org/cu.Stream); MemcpyAtoA(dstArray gorgonia.org/cu.Array, dstOffset int64, srcArray gorgonia.org/cu.Array, srcOffset int64, ByteCount int64); MemcpyAtoD(dstDevice gorgonia.org/cu.DevicePtr, srcArray gorgonia.org/cu.Array, srcOffset int64, ByteCount int64); MemcpyAtoH(dstHost unsafe.Pointer, srcArray gorgonia.org/cu.Array, srcOffset int64, ByteCount int64); MemcpyAtoHAsync(dstHost unsafe.Pointer, srcArray gorgonia.org/cu.Array, srcOffset int64, ByteCount int64, hStream gorgonia.org/cu.Stream); MemcpyDtoA(dstArray gorgonia.org/cu.Array, dstOffset int64, srcDevice gorgonia.org/cu.DevicePtr, ByteCount int64); MemcpyDtoD(dstDevice gorgonia.org/cu.DevicePtr, srcDevice gorgonia.org/cu.DevicePtr, ByteCount int64); MemcpyDtoDAsync(dstDevice gorgonia.org/cu.DevicePtr, srcDevice gorgonia.org/cu.DevicePtr, ByteCount int64, hStream gorgonia.org/cu.Stream); MemcpyDtoH(dstHost unsafe.Pointer, srcDevice gorgonia.org/cu.DevicePtr, ByteCount int64); MemcpyDtoHAsync(dstHost unsafe.Pointer, srcDevice gorgonia.org/cu.DevicePtr, ByteCount int64, hStream gorgonia.org/cu.Stream); MemcpyHtoA(dstArray gorgonia.org/cu.Array, dstOffset int64, srcHost unsafe.Pointer, ByteCount int64); MemcpyHtoAAsync(dstArray gorgonia.org/cu.Array, dstOffset int64, srcHost unsafe.Pointer, ByteCount int64, hStream gorgonia.org/cu.Stream); MemcpyHtoD(dstDevice gorgonia.org/cu.DevicePtr, srcHost unsafe.Pointer, ByteCount int64); MemcpyHtoDAsync(dstDevice gorgonia.org/cu.DevicePtr, srcHost unsafe.Pointer, ByteCount int64, hStream gorgonia.org/cu.Stream); MemcpyPeer(dstDevice gorgonia.org/cu.DevicePtr, dstContext gorgonia.org/cu.CUContext, srcDevice gorgonia.org/cu.DevicePtr, srcContext gorgonia.org/cu.CUContext, ByteCount int64); MemcpyPeerAsync(dstDevice gorgonia.org/cu.DevicePtr, dstContext gorgonia.org/cu.CUContext, srcDevice gorgonia.org/cu.DevicePtr, srcContext gorgonia.org/cu.CUContext, ByteCount int64, hStream gorgonia.org/cu.Stream); MemsetD16(dstDevice gorgonia.org/cu.DevicePtr, us uint16, N int64); MemsetD16Async(dstDevice gorgonia.org/cu.DevicePtr, us uint16, N int64, hStream gorgonia.org/cu.Stream); MemsetD2D16(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, us uint16, Width int64, Height int64); MemsetD2D16Async(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, us uint16, Width int64, Height int64, hStream gorgonia.org/cu.Stream); MemsetD2D32(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, ui uint, Width int64, Height int64); MemsetD2D32Async(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, ui uint, Width int64, Height int64, hStream gorgonia.org/cu.Stream); MemsetD2D8(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, uc byte, Width int64, Height int64); MemsetD2D8Async(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, uc byte, Width int64, Height int64, hStream gorgonia.org/cu.Stream); MemsetD32(dstDevice gorgonia.org/cu.DevicePtr, ui uint, N int64); MemsetD32Async(dstDevice gorgonia.org/cu.DevicePtr, ui uint, N int64, hStream gorgonia.org/cu.Stream); MemsetD8(dstDevice gorgonia.org/cu.DevicePtr, uc byte, N int64); MemsetD8Async(dstDevice gorgonia.org/cu.DevicePtr, uc byte, N int64, hStream gorgonia.org/cu.Stream); ModuleFunction(m gorgonia.org/cu.Module, name string) (function gorgonia.org/cu.Function, err error); ModuleGlobal(m gorgonia.org/cu.Module, name string) (dptr gorgonia.org/cu.DevicePtr, size int64, err error); Priority(hStream gorgonia.org/cu.Stream) (priority int, err error); QueryEvent(hEvent gorgonia.org/cu.Event); QueryStream(hStream gorgonia.org/cu.Stream); Record(hEvent gorgonia.org/cu.Event, hStream gorgonia.org/cu.Stream); Run(chan error) error; SetAddress(hTexRef gorgonia.org/cu.TexRef, dptr gorgonia.org/cu.DevicePtr, bytes int64) (ByteOffset int64, err error); SetAddress2D(hTexRef gorgonia.org/cu.TexRef, desc gorgonia.org/cu.ArrayDesc, dptr gorgonia.org/cu.DevicePtr, Pitch int64); SetAddressMode(hTexRef gorgonia.org/cu.TexRef, dim int, am gorgonia.org/cu.AddressMode); SetBorderColor(hTexRef gorgonia.org/cu.TexRef, pBorderColor [3]float32); SetCacheConfig(fn gorgonia.org/cu.Function, config gorgonia.org/cu.FuncCacheConfig); SetCurrentCacheConfig(config gorgonia.org/cu.FuncCacheConfig); SetFilterMode(hTexRef gorgonia.org/cu.TexRef, fm gorgonia.org/cu.FilterMode); SetFormat(hTexRef gorgonia.org/cu.TexRef, fmt gorgonia.org/cu.Format, NumPackedComponents int); SetFunctionSharedMemConfig(fn gorgonia.org/cu.Function, config gorgonia.org/cu.SharedConfig); SetLimit(limit gorgonia.org/cu.Limit, value int64); SetMaxAnisotropy(hTexRef gorgonia.org/cu.TexRef, maxAniso uint); SetMipmapFilterMode(hTexRef gorgonia.org/cu.TexRef, fm gorgonia.org/cu.FilterMode); SetMipmapLevelBias(hTexRef gorgonia.org/cu.TexRef, bias float64); SetMipmapLevelClamp(hTexRef gorgonia.org/cu.TexRef, minMipmapLevelClamp float64, maxMipmapLevelClamp float64); SetSharedMemConfig(config gorgonia.org/cu.SharedConfig); SetTexRefFlags(hTexRef gorgonia.org/cu.TexRef, Flags gorgonia.org/cu.TexRefFlags); SharedMemConfig() (pConfig gorgonia.org/cu.SharedConfig, err error); StreamFlags(hStream gorgonia.org/cu.Stream) (flags uint, err error); StreamPriorityRange() (leastPriority int, greatestPriority int, err error); SurfRefSetArray(hSurfRef gorgonia.org/cu.SurfRef, hArray gorgonia.org/cu.Array, Flags uint); Synchronize(); SynchronizeEvent(hEvent gorgonia.org/cu.Event); SynchronizeStream(hStream gorgonia.org/cu.Stream); TexRefFlags(hTexRef gorgonia.org/cu.TexRef) (pFlags uint, err error); TexRefSetArray(hTexRef gorgonia.org/cu.TexRef, hArray gorgonia.org/cu.Array, Flags uint); Unload(hmod gorgonia.org/cu.Module); Wait(hStream gorgonia.org/cu.Stream, hEvent gorgonia.org/cu.Event, Flags uint); WaitOnValue32(stream gorgonia.org/cu.Stream, addr gorgonia.org/cu.DevicePtr, value uint32, flags uint); Work() <-chan func() error; WriteValue32(stream gorgonia.org/cu.Stream, addr gorgonia.org/cu.DevicePtr, value uint32, flags uint)}",
      "type" : "Interface",
      "underlying" : 20
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef) (pdptr gorgonia.org/cu.DevicePtr, err error)",
      "params" : 22,
      "recv" : 1,
      "results" : 25,
      "type" : "Signature",
      "underlying" : 21,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hTexRef",
        "type" : 23
      } ],
      "name" : "(hTexRef gorgonia.org/cu.TexRef)",
      "type" : "Tuple",
      "underlying" : 22
    }, {
      "local-name" : "TexRef",
      "name" : "gorgonia.org/cu.TexRef",
      "package" : 2,
      "type" : "Named",
      "underlying" : 24
    }, {
      "fields" : [ {
        "name" : "ref",
        "type" : 11
      } ],
      "name" : "struct{ref invalid type}",
      "type" : "Struct",
      "underlying" : 24
    }, {
      "fields" : [ {
        "name" : "pdptr",
        "type" : 26
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(pdptr gorgonia.org/cu.DevicePtr, err error)",
      "type" : "Tuple",
      "underlying" : 25
    }, {
      "local-name" : "DevicePtr",
      "name" : "gorgonia.org/cu.DevicePtr",
      "package" : 2,
      "type" : "Named",
      "underlying" : 27
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 27
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef, dim int) (pam gorgonia.org/cu.AddressMode, err error)",
      "params" : 29,
      "recv" : 2,
      "results" : 30,
      "type" : "Signature",
      "underlying" : 28,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hTexRef",
        "type" : 23
      }, {
        "name" : "dim",
        "type" : 4
      } ],
      "name" : "(hTexRef gorgonia.org/cu.TexRef, dim int)",
      "type" : "Tuple",
      "underlying" : 29
    }, {
      "fields" : [ {
        "name" : "pam",
        "type" : 31
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(pam gorgonia.org/cu.AddressMode, err error)",
      "type" : "Tuple",
      "underlying" : 30
    }, {
      "local-name" : "AddressMode",
      "name" : "gorgonia.org/cu.AddressMode",
      "package" : 2,
      "type" : "Named",
      "underlying" : 3
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef) (phArray gorgonia.org/cu.Array, err error)",
      "params" : 22,
      "recv" : 3,
      "results" : 33,
      "type" : "Signature",
      "underlying" : 32,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "phArray",
        "type" : 34
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(phArray gorgonia.org/cu.Array, err error)",
      "type" : "Tuple",
      "underlying" : 33
    }, {
      "local-name" : "Array",
      "name" : "gorgonia.org/cu.Array",
      "package" : 2,
      "type" : "Named",
      "underlying" : 35
    }, {
      "fields" : [ {
        "name" : "arr",
        "type" : 36
      } ],
      "name" : "struct{arr *invalid type}",
      "type" : "Struct",
      "underlying" : 35
    }, {
      "elem" : 11,
      "name" : "*invalid type",
      "type" : "Pointer",
      "underlying" : 36
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hStream gorgonia.org/cu.Stream, dptr gorgonia.org/cu.DevicePtr, length int64, flags uint)",
      "params" : 38,
      "recv" : 4,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 37,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hStream",
        "type" : 39
      }, {
        "name" : "dptr",
        "type" : 26
      }, {
        "name" : "length",
        "type" : 41
      }, {
        "name" : "flags",
        "type" : 42
      } ],
      "name" : "(hStream gorgonia.org/cu.Stream, dptr gorgonia.org/cu.DevicePtr, length int64, flags uint)",
      "type" : "Tuple",
      "underlying" : 38
    }, {
      "local-name" : "Stream",
      "name" : "gorgonia.org/cu.Stream",
      "package" : 2,
      "type" : "Named",
      "underlying" : 40
    }, {
      "fields" : [ {
        "name" : "s",
        "type" : 11
      } ],
      "name" : "struct{s invalid type}",
      "type" : "Struct",
      "underlying" : 40
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 41
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 42
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef) (pBorderColor [3]float32, err error)",
      "params" : 22,
      "recv" : 5,
      "results" : 44,
      "type" : "Signature",
      "underlying" : 43,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pBorderColor",
        "type" : 45
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(pBorderColor [3]float32, err error)",
      "type" : "Tuple",
      "underlying" : 44
    }, {
      "elem" : 46,
      "name" : "[3]float32",
      "type" : "Array",
      "underlying" : 45
    }, {
      "name" : "float32",
      "type" : "Basic",
      "underlying" : 46
    }, {
      "name" : "(gorgonia.org/cu.Context) func() gorgonia.org/cu.CUContext",
      "params" : 7,
      "recv" : 6,
      "results" : 48,
      "type" : "Signature",
      "underlying" : 47,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 49
      } ],
      "name" : "(gorgonia.org/cu.CUContext)",
      "type" : "Tuple",
      "underlying" : 48
    }, {
      "local-name" : "CUContext",
      "name" : "gorgonia.org/cu.CUContext",
      "package" : 2,
      "type" : "Named",
      "underlying" : 50
    }, {
      "fields" : [ {
        "name" : "ctx",
        "type" : 11
      } ],
      "name" : "struct{ctx invalid type}",
      "type" : "Struct",
      "underlying" : 50
    }, {
      "name" : "(gorgonia.org/cu.Context) func() error",
      "params" : 7,
      "recv" : 7,
      "results" : 52,
      "type" : "Signature",
      "underlying" : 51,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 14
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 52
    }, {
      "name" : "(gorgonia.org/cu.Context) func() (pconfig gorgonia.org/cu.FuncCacheConfig, err error)",
      "params" : 7,
      "recv" : 8,
      "results" : 54,
      "type" : "Signature",
      "underlying" : 53,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pconfig",
        "type" : 55
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(pconfig gorgonia.org/cu.FuncCacheConfig, err error)",
      "type" : "Tuple",
      "underlying" : 54
    }, {
      "local-name" : "FuncCacheConfig",
      "name" : "gorgonia.org/cu.FuncCacheConfig",
      "package" : 2,
      "type" : "Named",
      "underlying" : 3
    }, {
      "name" : "(gorgonia.org/cu.Context) func() (device gorgonia.org/cu.Device, err error)",
      "params" : 7,
      "recv" : 9,
      "results" : 57,
      "type" : "Signature",
      "underlying" : 56,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "device",
        "type" : 58
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(device gorgonia.org/cu.Device, err error)",
      "type" : "Tuple",
      "underlying" : 57
    }, {
      "local-name" : "Device",
      "name" : "gorgonia.org/cu.Device",
      "package" : 2,
      "type" : "Named",
      "underlying" : 4
    }, {
      "name" : "(gorgonia.org/cu.Context) func() (flags gorgonia.org/cu.ContextFlags, err error)",
      "params" : 7,
      "recv" : 10,
      "results" : 60,
      "type" : "Signature",
      "underlying" : 59,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "flags",
        "type" : 61
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(flags gorgonia.org/cu.ContextFlags, err error)",
      "type" : "Tuple",
      "underlying" : 60
    }, {
      "local-name" : "ContextFlags",
      "name" : "gorgonia.org/cu.ContextFlags",
      "package" : 2,
      "type" : "Named",
      "underlying" : 3
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hArray gorgonia.org/cu.Array) (pArrayDescriptor gorgonia.org/cu.ArrayDesc, err error)",
      "params" : 63,
      "recv" : 11,
      "results" : 64,
      "type" : "Signature",
      "underlying" : 62,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hArray",
        "type" : 34
      } ],
      "name" : "(hArray gorgonia.org/cu.Array)",
      "type" : "Tuple",
      "underlying" : 63
    }, {
      "fields" : [ {
        "name" : "pArrayDescriptor",
        "type" : 65
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(pArrayDescriptor gorgonia.org/cu.ArrayDesc, err error)",
      "type" : "Tuple",
      "underlying" : 64
    }, {
      "local-name" : "ArrayDesc",
      "name" : "gorgonia.org/cu.ArrayDesc",
      "package" : 2,
      "type" : "Named",
      "underlying" : 66
    }, {
      "fields" : [ {
        "name" : "Width",
        "type" : 42
      }, {
        "name" : "Height",
        "type" : 42
      }, {
        "name" : "Format",
        "type" : 67
      }, {
        "name" : "NumChannels",
        "type" : 42
      } ],
      "name" : "struct{Width uint; Height uint; Format gorgonia.org/cu.Format; NumChannels uint}",
      "type" : "Struct",
      "underlying" : 66
    }, {
      "local-name" : "Format",
      "name" : "gorgonia.org/cu.Format",
      "package" : 2,
      "type" : "Named",
      "underlying" : 3
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hArray gorgonia.org/cu.Array) (pArrayDescriptor gorgonia.org/cu.Array3Desc, err error)",
      "params" : 63,
      "recv" : 12,
      "results" : 69,
      "type" : "Signature",
      "underlying" : 68,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pArrayDescriptor",
        "type" : 70
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(pArrayDescriptor gorgonia.org/cu.Array3Desc, err error)",
      "type" : "Tuple",
      "underlying" : 69
    }, {
      "local-name" : "Array3Desc",
      "name" : "gorgonia.org/cu.Array3Desc",
      "package" : 2,
      "type" : "Named",
      "underlying" : 71
    }, {
      "fields" : [ {
        "name" : "Width",
        "type" : 42
      }, {
        "name" : "Height",
        "type" : 42
      }, {
        "name" : "Depth",
        "type" : 42
      }, {
        "name" : "Format",
        "type" : 67
      }, {
        "name" : "NumChannels",
        "type" : 42
      }, {
        "name" : "Flags",
        "type" : 42
      } ],
      "name" : "struct{Width uint; Height uint; Depth uint; Format gorgonia.org/cu.Format; NumChannels uint; Flags uint}",
      "type" : "Struct",
      "underlying" : 71
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hArray gorgonia.org/cu.Array)",
      "params" : 63,
      "recv" : 13,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 72,
      "variadic" : false
    }, {
      "name" : "(gorgonia.org/cu.Context) func(event *gorgonia.org/cu.Event)",
      "params" : 74,
      "recv" : 14,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 73,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "event",
        "type" : 75
      } ],
      "name" : "(event *gorgonia.org/cu.Event)",
      "type" : "Tuple",
      "underlying" : 74
    }, {
      "elem" : 76,
      "name" : "*gorgonia.org/cu.Event",
      "type" : "Pointer",
      "underlying" : 75
    }, {
      "local-name" : "Event",
      "name" : "gorgonia.org/cu.Event",
      "package" : 2,
      "type" : "Named",
      "underlying" : 77
    }, {
      "fields" : [ {
        "name" : "ev",
        "type" : 11
      } ],
      "name" : "struct{ev invalid type}",
      "type" : "Struct",
      "underlying" : 77
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hStream *gorgonia.org/cu.Stream)",
      "params" : 79,
      "recv" : 15,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 78,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hStream",
        "type" : 80
      } ],
      "name" : "(hStream *gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 79
    }, {
      "elem" : 39,
      "name" : "*gorgonia.org/cu.Stream",
      "type" : "Pointer",
      "underlying" : 80
    }, {
      "name" : "(gorgonia.org/cu.Context) func(peerContext gorgonia.org/cu.CUContext)",
      "params" : 82,
      "recv" : 16,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 81,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "peerContext",
        "type" : 49
      } ],
      "name" : "(peerContext gorgonia.org/cu.CUContext)",
      "type" : "Tuple",
      "underlying" : 82
    }, {
      "name" : "(gorgonia.org/cu.Context) func(fn func() error) error",
      "params" : 84,
      "recv" : 17,
      "results" : 52,
      "type" : "Signature",
      "underlying" : 83,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "fn",
        "type" : 85
      } ],
      "name" : "(fn func() error)",
      "type" : "Tuple",
      "underlying" : 84
    }, {
      "name" : "func() error",
      "params" : 7,
      "recv" : -1,
      "results" : 52,
      "type" : "Signature",
      "underlying" : 85,
      "variadic" : false
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hStart gorgonia.org/cu.Event, hEnd gorgonia.org/cu.Event) (pMilliseconds float64, err error)",
      "params" : 87,
      "recv" : 18,
      "results" : 88,
      "type" : "Signature",
      "underlying" : 86,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hStart",
        "type" : 76
      }, {
        "name" : "hEnd",
        "type" : 76
      } ],
      "name" : "(hStart gorgonia.org/cu.Event, hEnd gorgonia.org/cu.Event)",
      "type" : "Tuple",
      "underlying" : 87
    }, {
      "fields" : [ {
        "name" : "pMilliseconds",
        "type" : 89
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(pMilliseconds float64, err error)",
      "type" : "Tuple",
      "underlying" : 88
    }, {
      "name" : "float64",
      "type" : "Basic",
      "underlying" : 89
    }, {
      "name" : "(gorgonia.org/cu.Context) func(peerContext gorgonia.org/cu.CUContext, Flags uint)",
      "params" : 91,
      "recv" : 19,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 90,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "peerContext",
        "type" : 49
      }, {
        "name" : "Flags",
        "type" : 42
      } ],
      "name" : "(peerContext gorgonia.org/cu.CUContext, Flags uint)",
      "type" : "Tuple",
      "underlying" : 91
    }, {
      "name" : "(gorgonia.org/cu.Context) func() chan error",
      "params" : 7,
      "recv" : 20,
      "results" : 93,
      "type" : "Signature",
      "underlying" : 92,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 94
      } ],
      "name" : "(chan error)",
      "type" : "Tuple",
      "underlying" : 93
    }, {
      "dir" : "both",
      "elem" : 14,
      "name" : "chan error",
      "type" : "Chan",
      "underlying" : 94
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef) (pfm gorgonia.org/cu.FilterMode, err error)",
      "params" : 22,
      "recv" : 21,
      "results" : 96,
      "type" : "Signature",
      "underlying" : 95,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pfm",
        "type" : 97
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(pfm gorgonia.org/cu.FilterMode, err error)",
      "type" : "Tuple",
      "underlying" : 96
    }, {
      "local-name" : "FilterMode",
      "name" : "gorgonia.org/cu.FilterMode",
      "package" : 2,
      "type" : "Named",
      "underlying" : 3
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef) (pFormat gorgonia.org/cu.Format, pNumChannels int, err error)",
      "params" : 22,
      "recv" : 22,
      "results" : 99,
      "type" : "Signature",
      "underlying" : 98,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pFormat",
        "type" : 67
      }, {
        "name" : "pNumChannels",
        "type" : 4
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(pFormat gorgonia.org/cu.Format, pNumChannels int, err error)",
      "type" : "Tuple",
      "underlying" : 99
    }, {
      "name" : "(gorgonia.org/cu.Context) func(fn gorgonia.org/cu.Function, attrib gorgonia.org/cu.FunctionAttribute) (pi int, err error)",
      "params" : 101,
      "recv" : 23,
      "results" : 105,
      "type" : "Signature",
      "underlying" : 100,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "fn",
        "type" : 102
      }, {
        "name" : "attrib",
        "type" : 104
      } ],
      "name" : "(fn gorgonia.org/cu.Function, attrib gorgonia.org/cu.FunctionAttribute)",
      "type" : "Tuple",
      "underlying" : 101
    }, {
      "local-name" : "Function",
      "name" : "gorgonia.org/cu.Function",
      "package" : 2,
      "type" : "Named",
      "underlying" : 103
    }, {
      "fields" : [ {
        "name" : "fn",
        "type" : 11
      } ],
      "name" : "struct{fn invalid type}",
      "type" : "Struct",
      "underlying" : 103
    }, {
      "local-name" : "FunctionAttribute",
      "name" : "gorgonia.org/cu.FunctionAttribute",
      "package" : 2,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "pi",
        "type" : 4
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(pi int, err error)",
      "type" : "Tuple",
      "underlying" : 105
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hSurfRef gorgonia.org/cu.SurfRef) (phArray gorgonia.org/cu.Array, err error)",
      "params" : 107,
      "recv" : 24,
      "results" : 33,
      "type" : "Signature",
      "underlying" : 106,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hSurfRef",
        "type" : 108
      } ],
      "name" : "(hSurfRef gorgonia.org/cu.SurfRef)",
      "type" : "Tuple",
      "underlying" : 107
    }, {
      "local-name" : "SurfRef",
      "name" : "gorgonia.org/cu.SurfRef",
      "package" : 2,
      "type" : "Named",
      "underlying" : 24
    }, {
      "name" : "(gorgonia.org/cu.Context) func(fn gorgonia.org/cu.Function, gridDimX int, gridDimY int, gridDimZ int, blockDimX int, blockDimY int, blockDimZ int, sharedMemBytes int, stream gorgonia.org/cu.Stream, kernelParams []unsafe.Pointer)",
      "params" : 110,
      "recv" : 25,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 109,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "fn",
        "type" : 102
      }, {
        "name" : "gridDimX",
        "type" : 4
      }, {
        "name" : "gridDimY",
        "type" : 4
      }, {
        "name" : "gridDimZ",
        "type" : 4
      }, {
        "name" : "blockDimX",
        "type" : 4
      }, {
        "name" : "blockDimY",
        "type" : 4
      }, {
        "name" : "blockDimZ",
        "type" : 4
      }, {
        "name" : "sharedMemBytes",
        "type" : 4
      }, {
        "name" : "stream",
        "type" : 39
      }, {
        "name" : "kernelParams",
        "type" : 111
      } ],
      "name" : "(fn gorgonia.org/cu.Function, gridDimX int, gridDimY int, gridDimZ int, blockDimX int, blockDimY int, blockDimZ int, sharedMemBytes int, stream gorgonia.org/cu.Stream, kernelParams []unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 110
    }, {
      "elem" : 112,
      "name" : "[]unsafe.Pointer",
      "type" : "Slice",
      "underlying" : 111
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 3,
      "type" : "Basic",
      "underlying" : 112
    }, {
      "name" : "(gorgonia.org/cu.Context) func(limit gorgonia.org/cu.Limit) (pvalue int64, err error)",
      "params" : 114,
      "recv" : 26,
      "results" : 116,
      "type" : "Signature",
      "underlying" : 113,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "limit",
        "type" : 115
      } ],
      "name" : "(limit gorgonia.org/cu.Limit)",
      "type" : "Tuple",
      "underlying" : 114
    }, {
      "local-name" : "Limit",
      "name" : "gorgonia.org/cu.Limit",
      "package" : 2,
      "type" : "Named",
      "underlying" : 3
    }, {
      "fields" : [ {
        "name" : "pvalue",
        "type" : 41
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(pvalue int64, err error)",
      "type" : "Tuple",
      "underlying" : 116
    }, {
      "name" : "(gorgonia.org/cu.Context) func(name string) (m gorgonia.org/cu.Module, err error)",
      "params" : 118,
      "recv" : 27,
      "results" : 119,
      "type" : "Signature",
      "underlying" : 117,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 18
      } ],
      "name" : "(name string)",
      "type" : "Tuple",
      "underlying" : 118
    }, {
      "fields" : [ {
        "name" : "m",
        "type" : 120
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(m gorgonia.org/cu.Module, err error)",
      "type" : "Tuple",
      "underlying" : 119
    }, {
      "local-name" : "Module",
      "name" : "gorgonia.org/cu.Module",
      "package" : 2,
      "type" : "Named",
      "underlying" : 121
    }, {
      "fields" : [ {
        "name" : "mod",
        "type" : 11
      } ],
      "name" : "struct{mod invalid type}",
      "type" : "Struct",
      "underlying" : 121
    }, {
      "name" : "(gorgonia.org/cu.Context) func(flags gorgonia.org/cu.EventFlags) (event gorgonia.org/cu.Event, err error)",
      "params" : 123,
      "recv" : 28,
      "results" : 125,
      "type" : "Signature",
      "underlying" : 122,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "flags",
        "type" : 124
      } ],
      "name" : "(flags gorgonia.org/cu.EventFlags)",
      "type" : "Tuple",
      "underlying" : 123
    }, {
      "local-name" : "EventFlags",
      "name" : "gorgonia.org/cu.EventFlags",
      "package" : 2,
      "type" : "Named",
      "underlying" : 3
    }, {
      "fields" : [ {
        "name" : "event",
        "type" : 76
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(event gorgonia.org/cu.Event, err error)",
      "type" : "Tuple",
      "underlying" : 125
    }, {
      "name" : "(gorgonia.org/cu.Context) func(flags gorgonia.org/cu.StreamFlags) (stream gorgonia.org/cu.Stream, err error)",
      "params" : 127,
      "recv" : 29,
      "results" : 129,
      "type" : "Signature",
      "underlying" : 126,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "flags",
        "type" : 128
      } ],
      "name" : "(flags gorgonia.org/cu.StreamFlags)",
      "type" : "Tuple",
      "underlying" : 127
    }, {
      "local-name" : "StreamFlags",
      "name" : "gorgonia.org/cu.StreamFlags",
      "package" : 2,
      "type" : "Named",
      "underlying" : 3
    }, {
      "fields" : [ {
        "name" : "stream",
        "type" : 39
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(stream gorgonia.org/cu.Stream, err error)",
      "type" : "Tuple",
      "underlying" : 129
    }, {
      "name" : "(gorgonia.org/cu.Context) func(priority int, flags gorgonia.org/cu.StreamFlags) (stream gorgonia.org/cu.Stream, err error)",
      "params" : 131,
      "recv" : 30,
      "results" : 129,
      "type" : "Signature",
      "underlying" : 130,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "priority",
        "type" : 4
      }, {
        "name" : "flags",
        "type" : 128
      } ],
      "name" : "(priority int, flags gorgonia.org/cu.StreamFlags)",
      "type" : "Tuple",
      "underlying" : 131
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef) (pmaxAniso int, err error)",
      "params" : 22,
      "recv" : 31,
      "results" : 133,
      "type" : "Signature",
      "underlying" : 132,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pmaxAniso",
        "type" : 4
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(pmaxAniso int, err error)",
      "type" : "Tuple",
      "underlying" : 133
    }, {
      "name" : "(gorgonia.org/cu.Context) func(bytesize int64) (dptr gorgonia.org/cu.DevicePtr, err error)",
      "params" : 135,
      "recv" : 32,
      "results" : 136,
      "type" : "Signature",
      "underlying" : 134,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "bytesize",
        "type" : 41
      } ],
      "name" : "(bytesize int64)",
      "type" : "Tuple",
      "underlying" : 135
    }, {
      "fields" : [ {
        "name" : "dptr",
        "type" : 26
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(dptr gorgonia.org/cu.DevicePtr, err error)",
      "type" : "Tuple",
      "underlying" : 136
    }, {
      "name" : "(gorgonia.org/cu.Context) func(bytesize int64, flags gorgonia.org/cu.MemAttachFlags) (dptr gorgonia.org/cu.DevicePtr, err error)",
      "params" : 138,
      "recv" : 33,
      "results" : 136,
      "type" : "Signature",
      "underlying" : 137,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "bytesize",
        "type" : 41
      }, {
        "name" : "flags",
        "type" : 139
      } ],
      "name" : "(bytesize int64, flags gorgonia.org/cu.MemAttachFlags)",
      "type" : "Tuple",
      "underlying" : 138
    }, {
      "local-name" : "MemAttachFlags",
      "name" : "gorgonia.org/cu.MemAttachFlags",
      "package" : 2,
      "type" : "Named",
      "underlying" : 3
    }, {
      "name" : "(gorgonia.org/cu.Context) func(WidthInBytes int64, Height int64, ElementSizeBytes uint) (dptr gorgonia.org/cu.DevicePtr, pPitch int64, err error)",
      "params" : 141,
      "recv" : 34,
      "results" : 142,
      "type" : "Signature",
      "underlying" : 140,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "WidthInBytes",
        "type" : 41
      }, {
        "name" : "Height",
        "type" : 41
      }, {
        "name" : "ElementSizeBytes",
        "type" : 42
      } ],
      "name" : "(WidthInBytes int64, Height int64, ElementSizeBytes uint)",
      "type" : "Tuple",
      "underlying" : 141
    }, {
      "fields" : [ {
        "name" : "dptr",
        "type" : 26
      }, {
        "name" : "pPitch",
        "type" : 41
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(dptr gorgonia.org/cu.DevicePtr, pPitch int64, err error)",
      "type" : "Tuple",
      "underlying" : 142
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dptr gorgonia.org/cu.DevicePtr)",
      "params" : 144,
      "recv" : 35,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 143,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dptr",
        "type" : 26
      } ],
      "name" : "(dptr gorgonia.org/cu.DevicePtr)",
      "type" : "Tuple",
      "underlying" : 144
    }, {
      "name" : "(gorgonia.org/cu.Context) func(p unsafe.Pointer)",
      "params" : 146,
      "recv" : 36,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 145,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "p",
        "type" : 112
      } ],
      "name" : "(p unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 146
    }, {
      "name" : "(gorgonia.org/cu.Context) func() (free int64, total int64, err error)",
      "params" : 7,
      "recv" : 37,
      "results" : 148,
      "type" : "Signature",
      "underlying" : 147,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "free",
        "type" : 41
      }, {
        "name" : "total",
        "type" : 41
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(free int64, total int64, err error)",
      "type" : "Tuple",
      "underlying" : 148
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dst gorgonia.org/cu.DevicePtr, src gorgonia.org/cu.DevicePtr, ByteCount int64)",
      "params" : 150,
      "recv" : 38,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 149,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dst",
        "type" : 26
      }, {
        "name" : "src",
        "type" : 26
      }, {
        "name" : "ByteCount",
        "type" : 41
      } ],
      "name" : "(dst gorgonia.org/cu.DevicePtr, src gorgonia.org/cu.DevicePtr, ByteCount int64)",
      "type" : "Tuple",
      "underlying" : 150
    }, {
      "name" : "(gorgonia.org/cu.Context) func(pCopy gorgonia.org/cu.Memcpy2dParam)",
      "params" : 152,
      "recv" : 39,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 151,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pCopy",
        "type" : 153
      } ],
      "name" : "(pCopy gorgonia.org/cu.Memcpy2dParam)",
      "type" : "Tuple",
      "underlying" : 152
    }, {
      "local-name" : "Memcpy2dParam",
      "name" : "gorgonia.org/cu.Memcpy2dParam",
      "package" : 2,
      "type" : "Named",
      "underlying" : 154
    }, {
      "fields" : [ {
        "name" : "Height",
        "type" : 41
      }, {
        "name" : "WidthInBytes",
        "type" : 41
      }, {
        "name" : "DstArray",
        "type" : 34
      }, {
        "name" : "DstDevice",
        "type" : 26
      }, {
        "name" : "DstHost",
        "type" : 112
      }, {
        "name" : "DstMemoryType",
        "type" : 155
      }, {
        "name" : "DstPitch",
        "type" : 41
      }, {
        "name" : "DstXInBytes",
        "type" : 41
      }, {
        "name" : "DstY",
        "type" : 41
      }, {
        "name" : "SrcArray",
        "type" : 34
      }, {
        "name" : "SrcDevice",
        "type" : 26
      }, {
        "name" : "SrcHost",
        "type" : 112
      }, {
        "name" : "SrcMemoryType",
        "type" : 155
      }, {
        "name" : "SrcPitch",
        "type" : 41
      }, {
        "name" : "SrcXInBytes",
        "type" : 41
      }, {
        "name" : "SrcY",
        "type" : 41
      } ],
      "name" : "struct{Height int64; WidthInBytes int64; DstArray gorgonia.org/cu.Array; DstDevice gorgonia.org/cu.DevicePtr; DstHost unsafe.Pointer; DstMemoryType gorgonia.org/cu.MemoryType; DstPitch int64; DstXInBytes int64; DstY int64; SrcArray gorgonia.org/cu.Array; SrcDevice gorgonia.org/cu.DevicePtr; SrcHost unsafe.Pointer; SrcMemoryType gorgonia.org/cu.MemoryType; SrcPitch int64; SrcXInBytes int64; SrcY int64}",
      "type" : "Struct",
      "underlying" : 154
    }, {
      "local-name" : "MemoryType",
      "name" : "gorgonia.org/cu.MemoryType",
      "package" : 2,
      "type" : "Named",
      "underlying" : 3
    }, {
      "name" : "(gorgonia.org/cu.Context) func(pCopy gorgonia.org/cu.Memcpy2dParam, hStream gorgonia.org/cu.Stream)",
      "params" : 157,
      "recv" : 40,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 156,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pCopy",
        "type" : 153
      }, {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(pCopy gorgonia.org/cu.Memcpy2dParam, hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 157
    }, {
      "name" : "(gorgonia.org/cu.Context) func(pCopy gorgonia.org/cu.Memcpy3dParam)",
      "params" : 159,
      "recv" : 41,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 158,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pCopy",
        "type" : 160
      } ],
      "name" : "(pCopy gorgonia.org/cu.Memcpy3dParam)",
      "type" : "Tuple",
      "underlying" : 159
    }, {
      "local-name" : "Memcpy3dParam",
      "name" : "gorgonia.org/cu.Memcpy3dParam",
      "package" : 2,
      "type" : "Named",
      "underlying" : 161
    }, {
      "fields" : [ {
        "name" : "Depth",
        "type" : 41
      }, {
        "name" : "Height",
        "type" : 41
      }, {
        "name" : "WidthInBytes",
        "type" : 41
      }, {
        "name" : "DstArray",
        "type" : 34
      }, {
        "name" : "DstDevice",
        "type" : 26
      }, {
        "name" : "DstHeight",
        "type" : 41
      }, {
        "name" : "DstHost",
        "type" : 112
      }, {
        "name" : "DstLOD",
        "type" : 41
      }, {
        "name" : "DstMemoryType",
        "type" : 155
      }, {
        "name" : "DstPitch",
        "type" : 41
      }, {
        "name" : "DstXInBytes",
        "type" : 41
      }, {
        "name" : "DstY",
        "type" : 41
      }, {
        "name" : "DstZ",
        "type" : 41
      }, {
        "name" : "SrcArray",
        "type" : 34
      }, {
        "name" : "SrcDevice",
        "type" : 26
      }, {
        "name" : "SrcHeight",
        "type" : 41
      }, {
        "name" : "SrcHost",
        "type" : 112
      }, {
        "name" : "SrcLOD",
        "type" : 41
      }, {
        "name" : "SrcMemoryType",
        "type" : 155
      }, {
        "name" : "SrcPitch",
        "type" : 41
      }, {
        "name" : "SrcXInBytes",
        "type" : 41
      }, {
        "name" : "SrcY",
        "type" : 41
      }, {
        "name" : "SrcZ",
        "type" : 41
      } ],
      "name" : "struct{Depth int64; Height int64; WidthInBytes int64; DstArray gorgonia.org/cu.Array; DstDevice gorgonia.org/cu.DevicePtr; DstHeight int64; DstHost unsafe.Pointer; DstLOD int64; DstMemoryType gorgonia.org/cu.MemoryType; DstPitch int64; DstXInBytes int64; DstY int64; DstZ int64; SrcArray gorgonia.org/cu.Array; SrcDevice gorgonia.org/cu.DevicePtr; SrcHeight int64; SrcHost unsafe.Pointer; SrcLOD int64; SrcMemoryType gorgonia.org/cu.MemoryType; SrcPitch int64; SrcXInBytes int64; SrcY int64; SrcZ int64}",
      "type" : "Struct",
      "underlying" : 161
    }, {
      "name" : "(gorgonia.org/cu.Context) func(pCopy gorgonia.org/cu.Memcpy3dParam, hStream gorgonia.org/cu.Stream)",
      "params" : 163,
      "recv" : 42,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 162,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pCopy",
        "type" : 160
      }, {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(pCopy gorgonia.org/cu.Memcpy3dParam, hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 163
    }, {
      "name" : "(gorgonia.org/cu.Context) func(pCopy gorgonia.org/cu.Memcpy3dPeerParam)",
      "params" : 165,
      "recv" : 43,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 164,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pCopy",
        "type" : 166
      } ],
      "name" : "(pCopy gorgonia.org/cu.Memcpy3dPeerParam)",
      "type" : "Tuple",
      "underlying" : 165
    }, {
      "local-name" : "Memcpy3dPeerParam",
      "name" : "gorgonia.org/cu.Memcpy3dPeerParam",
      "package" : 2,
      "type" : "Named",
      "underlying" : 167
    }, {
      "fields" : [ {
        "name" : "Depth",
        "type" : 41
      }, {
        "name" : "Height",
        "type" : 41
      }, {
        "name" : "WidthInBytes",
        "type" : 41
      }, {
        "name" : "DstArray",
        "type" : 34
      }, {
        "name" : "DstContext",
        "type" : 49
      }, {
        "name" : "DstDevice",
        "type" : 26
      }, {
        "name" : "DstHeight",
        "type" : 41
      }, {
        "name" : "DstHost",
        "type" : 112
      }, {
        "name" : "DstLOD",
        "type" : 41
      }, {
        "name" : "DstMemoryType",
        "type" : 155
      }, {
        "name" : "DstPitch",
        "type" : 41
      }, {
        "name" : "DstXInBytes",
        "type" : 41
      }, {
        "name" : "DstY",
        "type" : 41
      }, {
        "name" : "DstZ",
        "type" : 41
      }, {
        "name" : "SrcArray",
        "type" : 34
      }, {
        "name" : "SrcContext",
        "type" : 49
      }, {
        "name" : "SrcDevice",
        "type" : 26
      }, {
        "name" : "SrcHeight",
        "type" : 41
      }, {
        "name" : "SrcHost",
        "type" : 112
      }, {
        "name" : "SrcLOD",
        "type" : 41
      }, {
        "name" : "SrcMemoryType",
        "type" : 155
      }, {
        "name" : "SrcPitch",
        "type" : 41
      }, {
        "name" : "SrcXInBytes",
        "type" : 41
      }, {
        "name" : "SrcY",
        "type" : 41
      }, {
        "name" : "SrcZ",
        "type" : 41
      } ],
      "name" : "struct{Depth int64; Height int64; WidthInBytes int64; DstArray gorgonia.org/cu.Array; DstContext gorgonia.org/cu.CUContext; DstDevice gorgonia.org/cu.DevicePtr; DstHeight int64; DstHost unsafe.Pointer; DstLOD int64; DstMemoryType gorgonia.org/cu.MemoryType; DstPitch int64; DstXInBytes int64; DstY int64; DstZ int64; SrcArray gorgonia.org/cu.Array; SrcContext gorgonia.org/cu.CUContext; SrcDevice gorgonia.org/cu.DevicePtr; SrcHeight int64; SrcHost unsafe.Pointer; SrcLOD int64; SrcMemoryType gorgonia.org/cu.MemoryType; SrcPitch int64; SrcXInBytes int64; SrcY int64; SrcZ int64}",
      "type" : "Struct",
      "underlying" : 167
    }, {
      "name" : "(gorgonia.org/cu.Context) func(pCopy gorgonia.org/cu.Memcpy3dPeerParam, hStream gorgonia.org/cu.Stream)",
      "params" : 169,
      "recv" : 44,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 168,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pCopy",
        "type" : 166
      }, {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(pCopy gorgonia.org/cu.Memcpy3dPeerParam, hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 169
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dst gorgonia.org/cu.DevicePtr, src gorgonia.org/cu.DevicePtr, ByteCount int64, hStream gorgonia.org/cu.Stream)",
      "params" : 171,
      "recv" : 45,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 170,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dst",
        "type" : 26
      }, {
        "name" : "src",
        "type" : 26
      }, {
        "name" : "ByteCount",
        "type" : 41
      }, {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(dst gorgonia.org/cu.DevicePtr, src gorgonia.org/cu.DevicePtr, ByteCount int64, hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 171
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstArray gorgonia.org/cu.Array, dstOffset int64, srcArray gorgonia.org/cu.Array, srcOffset int64, ByteCount int64)",
      "params" : 173,
      "recv" : 46,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 172,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstArray",
        "type" : 34
      }, {
        "name" : "dstOffset",
        "type" : 41
      }, {
        "name" : "srcArray",
        "type" : 34
      }, {
        "name" : "srcOffset",
        "type" : 41
      }, {
        "name" : "ByteCount",
        "type" : 41
      } ],
      "name" : "(dstArray gorgonia.org/cu.Array, dstOffset int64, srcArray gorgonia.org/cu.Array, srcOffset int64, ByteCount int64)",
      "type" : "Tuple",
      "underlying" : 173
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, srcArray gorgonia.org/cu.Array, srcOffset int64, ByteCount int64)",
      "params" : 175,
      "recv" : 47,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 174,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "srcArray",
        "type" : 34
      }, {
        "name" : "srcOffset",
        "type" : 41
      }, {
        "name" : "ByteCount",
        "type" : 41
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, srcArray gorgonia.org/cu.Array, srcOffset int64, ByteCount int64)",
      "type" : "Tuple",
      "underlying" : 175
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstHost unsafe.Pointer, srcArray gorgonia.org/cu.Array, srcOffset int64, ByteCount int64)",
      "params" : 177,
      "recv" : 48,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 176,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstHost",
        "type" : 112
      }, {
        "name" : "srcArray",
        "type" : 34
      }, {
        "name" : "srcOffset",
        "type" : 41
      }, {
        "name" : "ByteCount",
        "type" : 41
      } ],
      "name" : "(dstHost unsafe.Pointer, srcArray gorgonia.org/cu.Array, srcOffset int64, ByteCount int64)",
      "type" : "Tuple",
      "underlying" : 177
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstHost unsafe.Pointer, srcArray gorgonia.org/cu.Array, srcOffset int64, ByteCount int64, hStream gorgonia.org/cu.Stream)",
      "params" : 179,
      "recv" : 49,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 178,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstHost",
        "type" : 112
      }, {
        "name" : "srcArray",
        "type" : 34
      }, {
        "name" : "srcOffset",
        "type" : 41
      }, {
        "name" : "ByteCount",
        "type" : 41
      }, {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(dstHost unsafe.Pointer, srcArray gorgonia.org/cu.Array, srcOffset int64, ByteCount int64, hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 179
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstArray gorgonia.org/cu.Array, dstOffset int64, srcDevice gorgonia.org/cu.DevicePtr, ByteCount int64)",
      "params" : 181,
      "recv" : 50,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 180,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstArray",
        "type" : 34
      }, {
        "name" : "dstOffset",
        "type" : 41
      }, {
        "name" : "srcDevice",
        "type" : 26
      }, {
        "name" : "ByteCount",
        "type" : 41
      } ],
      "name" : "(dstArray gorgonia.org/cu.Array, dstOffset int64, srcDevice gorgonia.org/cu.DevicePtr, ByteCount int64)",
      "type" : "Tuple",
      "underlying" : 181
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, srcDevice gorgonia.org/cu.DevicePtr, ByteCount int64)",
      "params" : 183,
      "recv" : 51,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 182,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "srcDevice",
        "type" : 26
      }, {
        "name" : "ByteCount",
        "type" : 41
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, srcDevice gorgonia.org/cu.DevicePtr, ByteCount int64)",
      "type" : "Tuple",
      "underlying" : 183
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, srcDevice gorgonia.org/cu.DevicePtr, ByteCount int64, hStream gorgonia.org/cu.Stream)",
      "params" : 185,
      "recv" : 52,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 184,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "srcDevice",
        "type" : 26
      }, {
        "name" : "ByteCount",
        "type" : 41
      }, {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, srcDevice gorgonia.org/cu.DevicePtr, ByteCount int64, hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 185
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstHost unsafe.Pointer, srcDevice gorgonia.org/cu.DevicePtr, ByteCount int64)",
      "params" : 187,
      "recv" : 53,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 186,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstHost",
        "type" : 112
      }, {
        "name" : "srcDevice",
        "type" : 26
      }, {
        "name" : "ByteCount",
        "type" : 41
      } ],
      "name" : "(dstHost unsafe.Pointer, srcDevice gorgonia.org/cu.DevicePtr, ByteCount int64)",
      "type" : "Tuple",
      "underlying" : 187
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstHost unsafe.Pointer, srcDevice gorgonia.org/cu.DevicePtr, ByteCount int64, hStream gorgonia.org/cu.Stream)",
      "params" : 189,
      "recv" : 54,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 188,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstHost",
        "type" : 112
      }, {
        "name" : "srcDevice",
        "type" : 26
      }, {
        "name" : "ByteCount",
        "type" : 41
      }, {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(dstHost unsafe.Pointer, srcDevice gorgonia.org/cu.DevicePtr, ByteCount int64, hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 189
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstArray gorgonia.org/cu.Array, dstOffset int64, srcHost unsafe.Pointer, ByteCount int64)",
      "params" : 191,
      "recv" : 55,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 190,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstArray",
        "type" : 34
      }, {
        "name" : "dstOffset",
        "type" : 41
      }, {
        "name" : "srcHost",
        "type" : 112
      }, {
        "name" : "ByteCount",
        "type" : 41
      } ],
      "name" : "(dstArray gorgonia.org/cu.Array, dstOffset int64, srcHost unsafe.Pointer, ByteCount int64)",
      "type" : "Tuple",
      "underlying" : 191
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstArray gorgonia.org/cu.Array, dstOffset int64, srcHost unsafe.Pointer, ByteCount int64, hStream gorgonia.org/cu.Stream)",
      "params" : 193,
      "recv" : 56,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 192,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstArray",
        "type" : 34
      }, {
        "name" : "dstOffset",
        "type" : 41
      }, {
        "name" : "srcHost",
        "type" : 112
      }, {
        "name" : "ByteCount",
        "type" : 41
      }, {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(dstArray gorgonia.org/cu.Array, dstOffset int64, srcHost unsafe.Pointer, ByteCount int64, hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 193
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, srcHost unsafe.Pointer, ByteCount int64)",
      "params" : 195,
      "recv" : 57,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 194,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "srcHost",
        "type" : 112
      }, {
        "name" : "ByteCount",
        "type" : 41
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, srcHost unsafe.Pointer, ByteCount int64)",
      "type" : "Tuple",
      "underlying" : 195
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, srcHost unsafe.Pointer, ByteCount int64, hStream gorgonia.org/cu.Stream)",
      "params" : 197,
      "recv" : 58,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 196,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "srcHost",
        "type" : 112
      }, {
        "name" : "ByteCount",
        "type" : 41
      }, {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, srcHost unsafe.Pointer, ByteCount int64, hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 197
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, dstContext gorgonia.org/cu.CUContext, srcDevice gorgonia.org/cu.DevicePtr, srcContext gorgonia.org/cu.CUContext, ByteCount int64)",
      "params" : 199,
      "recv" : 59,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 198,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "dstContext",
        "type" : 49
      }, {
        "name" : "srcDevice",
        "type" : 26
      }, {
        "name" : "srcContext",
        "type" : 49
      }, {
        "name" : "ByteCount",
        "type" : 41
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, dstContext gorgonia.org/cu.CUContext, srcDevice gorgonia.org/cu.DevicePtr, srcContext gorgonia.org/cu.CUContext, ByteCount int64)",
      "type" : "Tuple",
      "underlying" : 199
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, dstContext gorgonia.org/cu.CUContext, srcDevice gorgonia.org/cu.DevicePtr, srcContext gorgonia.org/cu.CUContext, ByteCount int64, hStream gorgonia.org/cu.Stream)",
      "params" : 201,
      "recv" : 60,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 200,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "dstContext",
        "type" : 49
      }, {
        "name" : "srcDevice",
        "type" : 26
      }, {
        "name" : "srcContext",
        "type" : 49
      }, {
        "name" : "ByteCount",
        "type" : 41
      }, {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, dstContext gorgonia.org/cu.CUContext, srcDevice gorgonia.org/cu.DevicePtr, srcContext gorgonia.org/cu.CUContext, ByteCount int64, hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 201
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, us uint16, N int64)",
      "params" : 203,
      "recv" : 61,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 202,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "us",
        "type" : 204
      }, {
        "name" : "N",
        "type" : 41
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, us uint16, N int64)",
      "type" : "Tuple",
      "underlying" : 203
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 204
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, us uint16, N int64, hStream gorgonia.org/cu.Stream)",
      "params" : 206,
      "recv" : 62,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 205,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "us",
        "type" : 204
      }, {
        "name" : "N",
        "type" : 41
      }, {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, us uint16, N int64, hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 206
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, us uint16, Width int64, Height int64)",
      "params" : 208,
      "recv" : 63,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 207,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "dstPitch",
        "type" : 41
      }, {
        "name" : "us",
        "type" : 204
      }, {
        "name" : "Width",
        "type" : 41
      }, {
        "name" : "Height",
        "type" : 41
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, us uint16, Width int64, Height int64)",
      "type" : "Tuple",
      "underlying" : 208
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, us uint16, Width int64, Height int64, hStream gorgonia.org/cu.Stream)",
      "params" : 210,
      "recv" : 64,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 209,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "dstPitch",
        "type" : 41
      }, {
        "name" : "us",
        "type" : 204
      }, {
        "name" : "Width",
        "type" : 41
      }, {
        "name" : "Height",
        "type" : 41
      }, {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, us uint16, Width int64, Height int64, hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 210
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, ui uint, Width int64, Height int64)",
      "params" : 212,
      "recv" : 65,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 211,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "dstPitch",
        "type" : 41
      }, {
        "name" : "ui",
        "type" : 42
      }, {
        "name" : "Width",
        "type" : 41
      }, {
        "name" : "Height",
        "type" : 41
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, ui uint, Width int64, Height int64)",
      "type" : "Tuple",
      "underlying" : 212
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, ui uint, Width int64, Height int64, hStream gorgonia.org/cu.Stream)",
      "params" : 214,
      "recv" : 66,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 213,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "dstPitch",
        "type" : 41
      }, {
        "name" : "ui",
        "type" : 42
      }, {
        "name" : "Width",
        "type" : 41
      }, {
        "name" : "Height",
        "type" : 41
      }, {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, ui uint, Width int64, Height int64, hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 214
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, uc byte, Width int64, Height int64)",
      "params" : 216,
      "recv" : 67,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 215,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "dstPitch",
        "type" : 41
      }, {
        "name" : "uc",
        "type" : 3
      }, {
        "name" : "Width",
        "type" : 41
      }, {
        "name" : "Height",
        "type" : 41
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, uc byte, Width int64, Height int64)",
      "type" : "Tuple",
      "underlying" : 216
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, uc byte, Width int64, Height int64, hStream gorgonia.org/cu.Stream)",
      "params" : 218,
      "recv" : 68,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 217,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "dstPitch",
        "type" : 41
      }, {
        "name" : "uc",
        "type" : 3
      }, {
        "name" : "Width",
        "type" : 41
      }, {
        "name" : "Height",
        "type" : 41
      }, {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, dstPitch int64, uc byte, Width int64, Height int64, hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 218
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, ui uint, N int64)",
      "params" : 220,
      "recv" : 69,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 219,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "ui",
        "type" : 42
      }, {
        "name" : "N",
        "type" : 41
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, ui uint, N int64)",
      "type" : "Tuple",
      "underlying" : 220
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, ui uint, N int64, hStream gorgonia.org/cu.Stream)",
      "params" : 222,
      "recv" : 70,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 221,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "ui",
        "type" : 42
      }, {
        "name" : "N",
        "type" : 41
      }, {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, ui uint, N int64, hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 222
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, uc byte, N int64)",
      "params" : 224,
      "recv" : 71,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 223,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "uc",
        "type" : 3
      }, {
        "name" : "N",
        "type" : 41
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, uc byte, N int64)",
      "type" : "Tuple",
      "underlying" : 224
    }, {
      "name" : "(gorgonia.org/cu.Context) func(dstDevice gorgonia.org/cu.DevicePtr, uc byte, N int64, hStream gorgonia.org/cu.Stream)",
      "params" : 226,
      "recv" : 72,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 225,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dstDevice",
        "type" : 26
      }, {
        "name" : "uc",
        "type" : 3
      }, {
        "name" : "N",
        "type" : 41
      }, {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(dstDevice gorgonia.org/cu.DevicePtr, uc byte, N int64, hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 226
    }, {
      "name" : "(gorgonia.org/cu.Context) func(m gorgonia.org/cu.Module, name string) (function gorgonia.org/cu.Function, err error)",
      "params" : 228,
      "recv" : 73,
      "results" : 229,
      "type" : "Signature",
      "underlying" : 227,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "m",
        "type" : 120
      }, {
        "name" : "name",
        "type" : 18
      } ],
      "name" : "(m gorgonia.org/cu.Module, name string)",
      "type" : "Tuple",
      "underlying" : 228
    }, {
      "fields" : [ {
        "name" : "function",
        "type" : 102
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(function gorgonia.org/cu.Function, err error)",
      "type" : "Tuple",
      "underlying" : 229
    }, {
      "name" : "(gorgonia.org/cu.Context) func(m gorgonia.org/cu.Module, name string) (dptr gorgonia.org/cu.DevicePtr, size int64, err error)",
      "params" : 228,
      "recv" : 74,
      "results" : 231,
      "type" : "Signature",
      "underlying" : 230,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dptr",
        "type" : 26
      }, {
        "name" : "size",
        "type" : 41
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(dptr gorgonia.org/cu.DevicePtr, size int64, err error)",
      "type" : "Tuple",
      "underlying" : 231
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hStream gorgonia.org/cu.Stream) (priority int, err error)",
      "params" : 233,
      "recv" : 75,
      "results" : 234,
      "type" : "Signature",
      "underlying" : 232,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 233
    }, {
      "fields" : [ {
        "name" : "priority",
        "type" : 4
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(priority int, err error)",
      "type" : "Tuple",
      "underlying" : 234
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hEvent gorgonia.org/cu.Event)",
      "params" : 236,
      "recv" : 76,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 235,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hEvent",
        "type" : 76
      } ],
      "name" : "(hEvent gorgonia.org/cu.Event)",
      "type" : "Tuple",
      "underlying" : 236
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hStream gorgonia.org/cu.Stream)",
      "params" : 233,
      "recv" : 77,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 237,
      "variadic" : false
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hEvent gorgonia.org/cu.Event, hStream gorgonia.org/cu.Stream)",
      "params" : 239,
      "recv" : 78,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 238,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hEvent",
        "type" : 76
      }, {
        "name" : "hStream",
        "type" : 39
      } ],
      "name" : "(hEvent gorgonia.org/cu.Event, hStream gorgonia.org/cu.Stream)",
      "type" : "Tuple",
      "underlying" : 239
    }, {
      "name" : "(gorgonia.org/cu.Context) func(chan error) error",
      "params" : 93,
      "recv" : 79,
      "results" : 52,
      "type" : "Signature",
      "underlying" : 240,
      "variadic" : false
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef, dptr gorgonia.org/cu.DevicePtr, bytes int64) (ByteOffset int64, err error)",
      "params" : 242,
      "recv" : 80,
      "results" : 243,
      "type" : "Signature",
      "underlying" : 241,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hTexRef",
        "type" : 23
      }, {
        "name" : "dptr",
        "type" : 26
      }, {
        "name" : "bytes",
        "type" : 41
      } ],
      "name" : "(hTexRef gorgonia.org/cu.TexRef, dptr gorgonia.org/cu.DevicePtr, bytes int64)",
      "type" : "Tuple",
      "underlying" : 242
    }, {
      "fields" : [ {
        "name" : "ByteOffset",
        "type" : 41
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(ByteOffset int64, err error)",
      "type" : "Tuple",
      "underlying" : 243
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef, desc gorgonia.org/cu.ArrayDesc, dptr gorgonia.org/cu.DevicePtr, Pitch int64)",
      "params" : 245,
      "recv" : 81,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 244,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hTexRef",
        "type" : 23
      }, {
        "name" : "desc",
        "type" : 65
      }, {
        "name" : "dptr",
        "type" : 26
      }, {
        "name" : "Pitch",
        "type" : 41
      } ],
      "name" : "(hTexRef gorgonia.org/cu.TexRef, desc gorgonia.org/cu.ArrayDesc, dptr gorgonia.org/cu.DevicePtr, Pitch int64)",
      "type" : "Tuple",
      "underlying" : 245
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef, dim int, am gorgonia.org/cu.AddressMode)",
      "params" : 247,
      "recv" : 82,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 246,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hTexRef",
        "type" : 23
      }, {
        "name" : "dim",
        "type" : 4
      }, {
        "name" : "am",
        "type" : 31
      } ],
      "name" : "(hTexRef gorgonia.org/cu.TexRef, dim int, am gorgonia.org/cu.AddressMode)",
      "type" : "Tuple",
      "underlying" : 247
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef, pBorderColor [3]float32)",
      "params" : 249,
      "recv" : 83,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 248,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hTexRef",
        "type" : 23
      }, {
        "name" : "pBorderColor",
        "type" : 45
      } ],
      "name" : "(hTexRef gorgonia.org/cu.TexRef, pBorderColor [3]float32)",
      "type" : "Tuple",
      "underlying" : 249
    }, {
      "name" : "(gorgonia.org/cu.Context) func(fn gorgonia.org/cu.Function, config gorgonia.org/cu.FuncCacheConfig)",
      "params" : 251,
      "recv" : 84,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 250,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "fn",
        "type" : 102
      }, {
        "name" : "config",
        "type" : 55
      } ],
      "name" : "(fn gorgonia.org/cu.Function, config gorgonia.org/cu.FuncCacheConfig)",
      "type" : "Tuple",
      "underlying" : 251
    }, {
      "name" : "(gorgonia.org/cu.Context) func(config gorgonia.org/cu.FuncCacheConfig)",
      "params" : 253,
      "recv" : 85,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 252,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "config",
        "type" : 55
      } ],
      "name" : "(config gorgonia.org/cu.FuncCacheConfig)",
      "type" : "Tuple",
      "underlying" : 253
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef, fm gorgonia.org/cu.FilterMode)",
      "params" : 255,
      "recv" : 86,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 254,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hTexRef",
        "type" : 23
      }, {
        "name" : "fm",
        "type" : 97
      } ],
      "name" : "(hTexRef gorgonia.org/cu.TexRef, fm gorgonia.org/cu.FilterMode)",
      "type" : "Tuple",
      "underlying" : 255
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef, fmt gorgonia.org/cu.Format, NumPackedComponents int)",
      "params" : 257,
      "recv" : 87,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 256,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hTexRef",
        "type" : 23
      }, {
        "name" : "fmt",
        "type" : 67
      }, {
        "name" : "NumPackedComponents",
        "type" : 4
      } ],
      "name" : "(hTexRef gorgonia.org/cu.TexRef, fmt gorgonia.org/cu.Format, NumPackedComponents int)",
      "type" : "Tuple",
      "underlying" : 257
    }, {
      "name" : "(gorgonia.org/cu.Context) func(fn gorgonia.org/cu.Function, config gorgonia.org/cu.SharedConfig)",
      "params" : 259,
      "recv" : 88,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 258,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "fn",
        "type" : 102
      }, {
        "name" : "config",
        "type" : 260
      } ],
      "name" : "(fn gorgonia.org/cu.Function, config gorgonia.org/cu.SharedConfig)",
      "type" : "Tuple",
      "underlying" : 259
    }, {
      "local-name" : "SharedConfig",
      "name" : "gorgonia.org/cu.SharedConfig",
      "package" : 2,
      "type" : "Named",
      "underlying" : 3
    }, {
      "name" : "(gorgonia.org/cu.Context) func(limit gorgonia.org/cu.Limit, value int64)",
      "params" : 262,
      "recv" : 89,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 261,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "limit",
        "type" : 115
      }, {
        "name" : "value",
        "type" : 41
      } ],
      "name" : "(limit gorgonia.org/cu.Limit, value int64)",
      "type" : "Tuple",
      "underlying" : 262
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef, maxAniso uint)",
      "params" : 264,
      "recv" : 90,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 263,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hTexRef",
        "type" : 23
      }, {
        "name" : "maxAniso",
        "type" : 42
      } ],
      "name" : "(hTexRef gorgonia.org/cu.TexRef, maxAniso uint)",
      "type" : "Tuple",
      "underlying" : 264
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef, bias float64)",
      "params" : 266,
      "recv" : 91,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 265,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hTexRef",
        "type" : 23
      }, {
        "name" : "bias",
        "type" : 89
      } ],
      "name" : "(hTexRef gorgonia.org/cu.TexRef, bias float64)",
      "type" : "Tuple",
      "underlying" : 266
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef, minMipmapLevelClamp float64, maxMipmapLevelClamp float64)",
      "params" : 268,
      "recv" : 92,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 267,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hTexRef",
        "type" : 23
      }, {
        "name" : "minMipmapLevelClamp",
        "type" : 89
      }, {
        "name" : "maxMipmapLevelClamp",
        "type" : 89
      } ],
      "name" : "(hTexRef gorgonia.org/cu.TexRef, minMipmapLevelClamp float64, maxMipmapLevelClamp float64)",
      "type" : "Tuple",
      "underlying" : 268
    }, {
      "name" : "(gorgonia.org/cu.Context) func(config gorgonia.org/cu.SharedConfig)",
      "params" : 270,
      "recv" : 93,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 269,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "config",
        "type" : 260
      } ],
      "name" : "(config gorgonia.org/cu.SharedConfig)",
      "type" : "Tuple",
      "underlying" : 270
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef, Flags gorgonia.org/cu.TexRefFlags)",
      "params" : 272,
      "recv" : 94,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 271,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hTexRef",
        "type" : 23
      }, {
        "name" : "Flags",
        "type" : 273
      } ],
      "name" : "(hTexRef gorgonia.org/cu.TexRef, Flags gorgonia.org/cu.TexRefFlags)",
      "type" : "Tuple",
      "underlying" : 272
    }, {
      "local-name" : "TexRefFlags",
      "name" : "gorgonia.org/cu.TexRefFlags",
      "package" : 2,
      "type" : "Named",
      "underlying" : 3
    }, {
      "name" : "(gorgonia.org/cu.Context) func() (pConfig gorgonia.org/cu.SharedConfig, err error)",
      "params" : 7,
      "recv" : 95,
      "results" : 275,
      "type" : "Signature",
      "underlying" : 274,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pConfig",
        "type" : 260
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(pConfig gorgonia.org/cu.SharedConfig, err error)",
      "type" : "Tuple",
      "underlying" : 275
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hStream gorgonia.org/cu.Stream) (flags uint, err error)",
      "params" : 233,
      "recv" : 96,
      "results" : 277,
      "type" : "Signature",
      "underlying" : 276,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "flags",
        "type" : 42
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(flags uint, err error)",
      "type" : "Tuple",
      "underlying" : 277
    }, {
      "name" : "(gorgonia.org/cu.Context) func() (leastPriority int, greatestPriority int, err error)",
      "params" : 7,
      "recv" : 97,
      "results" : 279,
      "type" : "Signature",
      "underlying" : 278,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "leastPriority",
        "type" : 4
      }, {
        "name" : "greatestPriority",
        "type" : 4
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(leastPriority int, greatestPriority int, err error)",
      "type" : "Tuple",
      "underlying" : 279
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hSurfRef gorgonia.org/cu.SurfRef, hArray gorgonia.org/cu.Array, Flags uint)",
      "params" : 281,
      "recv" : 98,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 280,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hSurfRef",
        "type" : 108
      }, {
        "name" : "hArray",
        "type" : 34
      }, {
        "name" : "Flags",
        "type" : 42
      } ],
      "name" : "(hSurfRef gorgonia.org/cu.SurfRef, hArray gorgonia.org/cu.Array, Flags uint)",
      "type" : "Tuple",
      "underlying" : 281
    }, {
      "name" : "(gorgonia.org/cu.Context) func()",
      "params" : 7,
      "recv" : 99,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 282,
      "variadic" : false
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef) (pFlags uint, err error)",
      "params" : 22,
      "recv" : 100,
      "results" : 284,
      "type" : "Signature",
      "underlying" : 283,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pFlags",
        "type" : 42
      }, {
        "name" : "err",
        "type" : 14
      } ],
      "name" : "(pFlags uint, err error)",
      "type" : "Tuple",
      "underlying" : 284
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hTexRef gorgonia.org/cu.TexRef, hArray gorgonia.org/cu.Array, Flags uint)",
      "params" : 286,
      "recv" : 101,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 285,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hTexRef",
        "type" : 23
      }, {
        "name" : "hArray",
        "type" : 34
      }, {
        "name" : "Flags",
        "type" : 42
      } ],
      "name" : "(hTexRef gorgonia.org/cu.TexRef, hArray gorgonia.org/cu.Array, Flags uint)",
      "type" : "Tuple",
      "underlying" : 286
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hmod gorgonia.org/cu.Module)",
      "params" : 288,
      "recv" : 102,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 287,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hmod",
        "type" : 120
      } ],
      "name" : "(hmod gorgonia.org/cu.Module)",
      "type" : "Tuple",
      "underlying" : 288
    }, {
      "name" : "(gorgonia.org/cu.Context) func(hStream gorgonia.org/cu.Stream, hEvent gorgonia.org/cu.Event, Flags uint)",
      "params" : 290,
      "recv" : 103,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 289,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "hStream",
        "type" : 39
      }, {
        "name" : "hEvent",
        "type" : 76
      }, {
        "name" : "Flags",
        "type" : 42
      } ],
      "name" : "(hStream gorgonia.org/cu.Stream, hEvent gorgonia.org/cu.Event, Flags uint)",
      "type" : "Tuple",
      "underlying" : 290
    }, {
      "name" : "(gorgonia.org/cu.Context) func(stream gorgonia.org/cu.Stream, addr gorgonia.org/cu.DevicePtr, value uint32, flags uint)",
      "params" : 292,
      "recv" : 104,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 291,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "stream",
        "type" : 39
      }, {
        "name" : "addr",
        "type" : 26
      }, {
        "name" : "value",
        "type" : 293
      }, {
        "name" : "flags",
        "type" : 42
      } ],
      "name" : "(stream gorgonia.org/cu.Stream, addr gorgonia.org/cu.DevicePtr, value uint32, flags uint)",
      "type" : "Tuple",
      "underlying" : 292
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 293
    }, {
      "name" : "(gorgonia.org/cu.Context) func() <-chan func() error",
      "params" : 7,
      "recv" : 105,
      "results" : 295,
      "type" : "Signature",
      "underlying" : 294,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 296
      } ],
      "name" : "(<-chan func() error)",
      "type" : "Tuple",
      "underlying" : 295
    }, {
      "dir" : "recv",
      "elem" : 85,
      "name" : "<-chan func() error",
      "type" : "Chan",
      "underlying" : 296
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 297
    }, {
      "local-name" : "Mutex",
      "name" : "sync.Mutex",
      "package" : 4,
      "type" : "Named",
      "underlying" : 299
    }, {
      "fields" : [ {
        "name" : "state",
        "type" : 300
      }, {
        "name" : "sema",
        "type" : 293
      } ],
      "name" : "struct{state int32; sema uint32}",
      "type" : "Struct",
      "underlying" : 299
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 300
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 301
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 302
    }, {
      "name" : "func(interface{})",
      "params" : 304,
      "recv" : -1,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 303,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 305
      } ],
      "name" : "(interface{})",
      "type" : "Tuple",
      "underlying" : 304
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 305
    }, {
      "name" : "func([]complex64) int",
      "params" : 307,
      "recv" : -1,
      "results" : 308,
      "type" : "Signature",
      "underlying" : 306,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 6
      } ],
      "name" : "([]complex64)",
      "type" : "Tuple",
      "underlying" : 307
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 4
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 308
    }, {
      "name" : "func(x invalid type) error",
      "params" : 310,
      "recv" : -1,
      "results" : 52,
      "type" : "Signature",
      "underlying" : 309,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "x",
        "type" : 11
      } ],
      "name" : "(x invalid type)",
      "type" : "Tuple",
      "underlying" : 310
    }, {
      "name" : "func(u gonum.org/v1/gonum/blas.Uplo) invalid type",
      "params" : 312,
      "recv" : -1,
      "results" : 313,
      "type" : "Signature",
      "underlying" : 311,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "u",
        "type" : 2
      } ],
      "name" : "(u gonum.org/v1/gonum/blas.Uplo)",
      "type" : "Tuple",
      "underlying" : 312
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 11
      } ],
      "name" : "(invalid type)",
      "type" : "Tuple",
      "underlying" : 313
    }, {
      "elem" : 5,
      "name" : "*complex64",
      "type" : "Pointer",
      "underlying" : 314
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "impl",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "ul",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "n",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "alpha",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "x",
      "package" : 0,
      "type" : 6,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "incX",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "a",
      "package" : 0,
      "type" : 6,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "lda",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "e",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "h",
      "package" : 0,
      "type" : 11,
      "exported" : false,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}