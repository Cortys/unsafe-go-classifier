{
  "usage" : {
    "file" : "generated_API.go",
    "label1" : "cast-struct",
    "label2" : "ffi",
    "line" : "882",
    "module" : "gorgonia.org/cu",
    "pkg" : "gorgonia.org/cu/dnn",
    "project" : "gorgonia/gorgonia",
    "snippet" : "dyPtr := (*C.cudnnTensorDescriptor_t)(unsafe.Pointer(&dyInternals[0]))",
    "version" : "v0.9.2"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 4, 30, 17, 27, 14, 7, 6, 9, 20, 24, 28, 8, 16, 18, 26, 10, 21, 13, 23, 22, 25, 12, 5, 29, 15, 11, 19 ],
      "exit" : false,
      "out-vars" : [ 19, 8, 26, 10, 23, 25, 15, 29, 11, 21, 4, 20, 13, 28, 6, 27, 24, 7, 16, 5, 22, 9, 18, 30, 17, 12, 14 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 20, 13, 8, 17, 25, 24, 9, 26, 29, 11, 19, 6, 18, 10, 15, 23, 21, 12, 27, 4, 5, 28, 22, 7, 16, 14, 30 ],
      "exit" : false,
      "out-vars" : [ 29, 30, 22, 12, 4, 32, 20, 24, 16, 10, 11, 19, 21, 18, 13, 28, 14, 5, 23, 9, 17, 25, 27, 7, 26, 8, 6, 15 ],
      "decl-vars" : [ 32 ],
      "line-start" : 872,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "internals"
          }
        } ],
        "right" : [ {
          "argument" : {
            "element" : {
              "go-type" : 5,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 2,
                "value" : "C"
              },
              "type" : "identifier",
              "value" : {
                "ident-kind" : "NoKind",
                "kind" : "ident",
                "value" : "cudnnTensorDescriptor_t"
              }
            },
            "go-type" : 48,
            "kind" : "type",
            "type" : "slice"
          },
          "go-type" : 48,
          "kind" : "expression",
          "rest" : [ {
            "arguments" : [ {
              "go-type" : 33,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "yDesc",
                "variable" : 7
              }
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 49,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Builtin",
                "kind" : "ident",
                "value" : "len"
              }
            },
            "go-type" : 6,
            "kind" : "expression",
            "type" : "call"
          } ],
          "type" : "make"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 872,
      "code" : "internals := make([]C.cudnnTensorDescriptor_t, len(yDesc))",
      "entry" : false,
      "use-vars" : [ 7 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4, 5 ],
      "in-vars" : [ 14, 29, 28, 30, 8, 22, 7, 25, 19, 17, 27, 15, 21, 16, 26, 18, 20, 23, 10, 6, 4, 13, 11, 32, 9, 12, 5, 24 ],
      "exit" : false,
      "out-vars" : [ 32, 21, 4, 6, 28, 25, 12, 27, 14, 13, 29, 11, 33, 17, 26, 10, 20, 5, 24, 19, 9, 23, 8, 22, 7, 16, 18, 15, 30 ],
      "decl-vars" : [ 33 ],
      "line-start" : 873,
      "ast" : {
        "is-assign" : false,
        "key" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "i"
          }
        },
        "kind" : "statement",
        "target" : {
          "go-type" : 33,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "yDesc",
            "variable" : 7
          }
        },
        "type" : "range",
        "value" : null
      },
      "assign-vars" : [ ],
      "line-end" : 875,
      "code" : "for i := range yDesc {\n\tinternals[i] = yDesc[i].internal\n}",
      "entry" : false,
      "use-vars" : [ 7 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 14, 13, 6, 4, 20, 29, 9, 16, 24, 11, 21, 25, 18, 5, 19, 32, 12, 30, 8, 22, 17, 26, 10, 15, 23, 28, 7, 33, 27 ],
      "exit" : false,
      "out-vars" : [ 11, 19, 10, 20, 24, 5, 21, 25, 12, 18, 14, 23, 32, 15, 7, 26, 29, 13, 16, 27, 4, 8, 9, 6, 28, 30, 22, 17 ],
      "decl-vars" : [ ],
      "line-start" : 874,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "index" : {
            "go-type" : -1,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "i"
            }
          },
          "kind" : "expression",
          "target" : {
            "go-type" : -1,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "internals"
            }
          },
          "type" : "index"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "internal",
            "variable" : 34
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 34,
            "index" : {
              "go-type" : 6,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "i",
                "variable" : 33
              }
            },
            "kind" : "expression",
            "target" : {
              "go-type" : 33,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "yDesc",
                "variable" : 7
              }
            },
            "type" : "index"
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 874,
      "code" : "internals[i] = yDesc[i].internal",
      "entry" : false,
      "use-vars" : [ 7, 33 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6 ],
      "in-vars" : [ 12, 4, 23, 19, 28, 21, 13, 22, 25, 14, 16, 27, 6, 18, 5, 15, 17, 10, 20, 11, 8, 26, 24, 32, 9, 29, 30 ],
      "exit" : false,
      "out-vars" : [ 24, 12, 22, 9, 10, 15, 11, 26, 18, 14, 20, 29, 23, 8, 30, 19, 21, 28, 27, 5, 4, 35, 6, 25, 13, 16, 17 ],
      "decl-vars" : [ 35 ],
      "line-start" : 876,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "ptr"
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : -1,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 2,
                "value" : "C"
              },
              "type" : "identifier",
              "value" : {
                "ident-kind" : "NoKind",
                "kind" : "ident",
                "value" : "cudnnTensorDescriptor_t"
              }
            },
            "go-type" : -1,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : -1,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 22,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 1,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 22,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 22,
            "kind" : "expression",
            "target" : {
              "go-type" : 52,
              "kind" : "expression",
              "operator" : "&",
              "target" : {
                "go-type" : 5,
                "index" : {
                  "go-type" : 6,
                  "kind" : "constant",
                  "value" : {
                    "type" : "INT",
                    "value" : "0"
                  }
                },
                "kind" : "expression",
                "target" : {
                  "go-type" : 48,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "internals",
                    "variable" : 32
                  }
                },
                "type" : "index"
              },
              "type" : "unary"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 876,
      "code" : "ptr := (*C.cudnnTensorDescriptor_t)(unsafe.Pointer(&internals[0]))",
      "entry" : false,
      "use-vars" : [ 32 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 7 ],
      "in-vars" : [ 11, 19, 4, 15, 24, 17, 20, 25, 10, 6, 14, 22, 23, 30, 21, 16, 12, 28, 18, 5, 29, 9, 13, 8, 35, 26, 27 ],
      "exit" : false,
      "out-vars" : [ 16, 25, 12, 4, 20, 30, 13, 8, 17, 10, 18, 23, 9, 26, 19, 21, 6, 14, 35, 36, 27, 5, 24, 11, 28, 22, 15, 29 ],
      "decl-vars" : [ 36 ],
      "line-start" : 878,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "dyInternals"
          }
        } ],
        "right" : [ {
          "argument" : {
            "element" : {
              "go-type" : 5,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 2,
                "value" : "C"
              },
              "type" : "identifier",
              "value" : {
                "ident-kind" : "NoKind",
                "kind" : "ident",
                "value" : "cudnnTensorDescriptor_t"
              }
            },
            "go-type" : 48,
            "kind" : "type",
            "type" : "slice"
          },
          "go-type" : 48,
          "kind" : "expression",
          "rest" : [ {
            "arguments" : [ {
              "go-type" : 33,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "dyDesc",
                "variable" : 9
              }
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 49,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Builtin",
                "kind" : "ident",
                "value" : "len"
              }
            },
            "go-type" : 6,
            "kind" : "expression",
            "type" : "call"
          } ],
          "type" : "make"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 878,
      "code" : "dyInternals := make([]C.cudnnTensorDescriptor_t, len(dyDesc))",
      "entry" : false,
      "use-vars" : [ 9 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 8, 9 ],
      "in-vars" : [ 10, 12, 11, 22, 25, 19, 26, 8, 15, 17, 18, 14, 23, 16, 27, 24, 35, 36, 9, 4, 5, 29, 30, 21, 20, 13, 28, 6 ],
      "exit" : false,
      "out-vars" : [ 12, 37, 26, 6, 29, 24, 22, 9, 18, 4, 19, 17, 27, 14, 11, 8, 5, 20, 21, 15, 30, 36, 16, 28, 35, 25, 10, 13, 23 ],
      "decl-vars" : [ 37 ],
      "line-start" : 879,
      "ast" : {
        "is-assign" : false,
        "key" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "i"
          }
        },
        "kind" : "statement",
        "target" : {
          "go-type" : 33,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "dyDesc",
            "variable" : 9
          }
        },
        "type" : "range",
        "value" : null
      },
      "assign-vars" : [ ],
      "line-end" : 881,
      "code" : "for i := range dyDesc {\n\tdyInternals[i] = dyDesc[i].internal\n}",
      "entry" : false,
      "use-vars" : [ 9 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 7 ],
      "in-vars" : [ 23, 8, 21, 25, 18, 36, 16, 28, 37, 30, 19, 22, 20, 29, 15, 24, 26, 14, 12, 13, 17, 6, 10, 27, 4, 5, 11, 35, 9 ],
      "exit" : false,
      "out-vars" : [ 9, 5, 8, 12, 4, 29, 15, 11, 21, 25, 26, 27, 13, 6, 14, 16, 23, 30, 35, 17, 18, 19, 22, 36, 10, 20, 24, 28 ],
      "decl-vars" : [ ],
      "line-start" : 880,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "index" : {
            "go-type" : -1,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "i"
            }
          },
          "kind" : "expression",
          "target" : {
            "go-type" : -1,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "dyInternals"
            }
          },
          "type" : "index"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "internal",
            "variable" : 34
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 34,
            "index" : {
              "go-type" : 6,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "i",
                "variable" : 37
              }
            },
            "kind" : "expression",
            "target" : {
              "go-type" : 33,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "dyDesc",
                "variable" : 9
              }
            },
            "type" : "index"
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 880,
      "code" : "dyInternals[i] = dyDesc[i].internal",
      "entry" : false,
      "use-vars" : [ 9, 37 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 10 ],
      "in-vars" : [ 36, 24, 25, 15, 13, 17, 6, 12, 18, 27, 5, 21, 9, 28, 11, 19, 10, 4, 14, 26, 20, 22, 23, 30, 8, 16, 35, 29 ],
      "exit" : false,
      "out-vars" : [ 19, 8, 16, 14, 20, 15, 35, 26, 6, 18, 21, 9, 4, 22, 17, 10, 27, 11, 12, 29, 24, 30, 23, 28, 5, 13, 38, 25 ],
      "decl-vars" : [ 38 ],
      "line-start" : 882,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "dyPtr"
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : -1,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 2,
                "value" : "C"
              },
              "type" : "identifier",
              "value" : {
                "ident-kind" : "NoKind",
                "kind" : "ident",
                "value" : "cudnnTensorDescriptor_t"
              }
            },
            "go-type" : -1,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : -1,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 22,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 1,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 22,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 22,
            "kind" : "expression",
            "target" : {
              "go-type" : 52,
              "kind" : "expression",
              "operator" : "&",
              "target" : {
                "go-type" : 5,
                "index" : {
                  "go-type" : 6,
                  "kind" : "constant",
                  "value" : {
                    "type" : "INT",
                    "value" : "0"
                  }
                },
                "kind" : "expression",
                "target" : {
                  "go-type" : 48,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "dyInternals",
                    "variable" : 36
                  }
                },
                "type" : "index"
              },
              "type" : "unary"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 882,
      "code" : "dyPtr := (*C.cudnnTensorDescriptor_t)(unsafe.Pointer(&dyInternals[0]))",
      "entry" : false,
      "use-vars" : [ 36 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 11 ],
      "in-vars" : [ 35, 4, 20, 13, 11, 8, 5, 23, 30, 21, 25, 18, 14, 9, 15, 6, 27, 16, 17, 12, 24, 38, 22, 26, 19, 10, 29, 28 ],
      "exit" : false,
      "out-vars" : [ 26, 29, 19, 39, 21, 12, 11, 17, 25, 10, 38, 4, 28, 9, 5, 22, 24, 16, 6, 18, 27, 20, 35, 14, 30, 8, 15, 13, 23 ],
      "decl-vars" : [ 39 ],
      "line-start" : 884,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "dxInternals"
          }
        } ],
        "right" : [ {
          "argument" : {
            "element" : {
              "go-type" : 5,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 2,
                "value" : "C"
              },
              "type" : "identifier",
              "value" : {
                "ident-kind" : "NoKind",
                "kind" : "ident",
                "value" : "cudnnTensorDescriptor_t"
              }
            },
            "go-type" : 48,
            "kind" : "type",
            "type" : "slice"
          },
          "go-type" : 48,
          "kind" : "expression",
          "rest" : [ {
            "arguments" : [ {
              "go-type" : 33,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "dxDesc",
                "variable" : 21
              }
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 49,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Builtin",
                "kind" : "ident",
                "value" : "len"
              }
            },
            "go-type" : 6,
            "kind" : "expression",
            "type" : "call"
          } ],
          "type" : "make"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 884,
      "code" : "dxInternals := make([]C.cudnnTensorDescriptor_t, len(dxDesc))",
      "entry" : false,
      "use-vars" : [ 21 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 12, 13 ],
      "in-vars" : [ 20, 24, 11, 28, 19, 39, 14, 35, 10, 5, 30, 16, 38, 26, 15, 29, 13, 21, 8, 23, 25, 17, 6, 12, 18, 27, 4, 22, 9 ],
      "exit" : false,
      "out-vars" : [ 20, 30, 35, 5, 24, 8, 22, 25, 15, 29, 13, 9, 17, 28, 26, 4, 19, 16, 18, 11, 23, 39, 14, 12, 27, 38, 21, 10, 40, 6 ],
      "decl-vars" : [ 40 ],
      "line-start" : 885,
      "ast" : {
        "is-assign" : false,
        "key" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "i"
          }
        },
        "kind" : "statement",
        "target" : {
          "go-type" : 33,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "dyDesc",
            "variable" : 9
          }
        },
        "type" : "range",
        "value" : null
      },
      "assign-vars" : [ ],
      "line-end" : 887,
      "code" : "for i := range dyDesc {\n\tdxInternals[i] = dxDesc[i].internal\n}",
      "entry" : false,
      "use-vars" : [ 9 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 11 ],
      "in-vars" : [ 8, 22, 35, 13, 20, 28, 17, 18, 15, 24, 39, 12, 5, 30, 27, 29, 38, 9, 40, 23, 6, 11, 19, 10, 4, 25, 26, 14, 21, 16 ],
      "exit" : false,
      "out-vars" : [ 16, 6, 18, 29, 15, 24, 11, 35, 26, 5, 38, 8, 9, 4, 25, 30, 22, 17, 12, 28, 21, 10, 19, 39, 27, 14, 20, 13, 23 ],
      "decl-vars" : [ ],
      "line-start" : 886,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "index" : {
            "go-type" : -1,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "i"
            }
          },
          "kind" : "expression",
          "target" : {
            "go-type" : -1,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "dxInternals"
            }
          },
          "type" : "index"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "internal",
            "variable" : 34
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 34,
            "index" : {
              "go-type" : 6,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "i",
                "variable" : 40
              }
            },
            "kind" : "expression",
            "target" : {
              "go-type" : 33,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "dxDesc",
                "variable" : 21
              }
            },
            "type" : "index"
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 886,
      "code" : "dxInternals[i] = dxDesc[i].internal",
      "entry" : false,
      "use-vars" : [ 40, 21 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 14 ],
      "in-vars" : [ 29, 13, 11, 26, 10, 35, 12, 27, 20, 38, 25, 6, 5, 24, 23, 28, 19, 22, 16, 18, 30, 8, 39, 17, 14, 15, 4 ],
      "exit" : false,
      "out-vars" : [ 18, 14, 5, 11, 17, 6, 23, 38, 8, 22, 27, 24, 41, 16, 4, 35, 12, 25, 10, 20, 15, 29, 28, 30, 26, 13, 19 ],
      "decl-vars" : [ 41 ],
      "line-start" : 888,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "dxPtr"
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : -1,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 2,
                "value" : "C"
              },
              "type" : "identifier",
              "value" : {
                "ident-kind" : "NoKind",
                "kind" : "ident",
                "value" : "cudnnTensorDescriptor_t"
              }
            },
            "go-type" : -1,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : -1,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 22,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 1,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 22,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 22,
            "kind" : "expression",
            "target" : {
              "go-type" : 52,
              "kind" : "expression",
              "operator" : "&",
              "target" : {
                "go-type" : 5,
                "index" : {
                  "go-type" : 6,
                  "kind" : "constant",
                  "value" : {
                    "type" : "INT",
                    "value" : "0"
                  }
                },
                "kind" : "expression",
                "target" : {
                  "go-type" : 48,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "dxInternals",
                    "variable" : 39
                  }
                },
                "type" : "index"
              },
              "type" : "unary"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 888,
      "code" : "dxPtr := (*C.cudnnTensorDescriptor_t)(unsafe.Pointer(&dxInternals[0]))",
      "entry" : false,
      "use-vars" : [ 39 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 18, 14, 30, 17, 10, 12, 29, 22, 4, 5, 20, 25, 11, 8, 16, 26, 27, 23, 28, 35, 41, 13, 38, 19, 6, 24, 15 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 891,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "arguments" : [ {
            "arguments" : [ {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "internal",
                "variable" : 42
              },
              "go-type" : 5,
              "kind" : "expression",
              "target" : {
                "go-type" : 10,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "co",
                  "variable" : 4
                }
              },
              "type" : "selector"
            }, {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "internal",
                "variable" : 43
              },
              "go-type" : 5,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "rnnDesc",
                  "variable" : 5
                }
              },
              "type" : "selector"
            }, {
              "arguments" : [ {
                "go-type" : 6,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "seqLength",
                  "variable" : 6
                }
              } ],
              "ellipsis" : false,
              "function" : {
                "go-type" : -1,
                "kind" : "expression",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 2,
                  "value" : "C"
                },
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "int"
                }
              },
              "go-type" : -1,
              "kind" : "expression",
              "type" : "call"
            }, {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ptr",
                "variable" : 35
              }
            }, {
              "arguments" : [ ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "Pointer"
                },
                "go-type" : 20,
                "kind" : "expression",
                "target" : {
                  "go-type" : 14,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "y",
                    "variable" : 8
                  }
                },
                "type" : "selector"
              },
              "go-type" : 22,
              "kind" : "expression",
              "type" : "call"
            }, {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "dyPtr",
                "variable" : 38
              }
            }, {
              "arguments" : [ ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "Pointer"
                },
                "go-type" : 20,
                "kind" : "expression",
                "target" : {
                  "go-type" : 14,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "dy",
                    "variable" : 10
                  }
                },
                "type" : "selector"
              },
              "go-type" : 22,
              "kind" : "expression",
              "type" : "call"
            }, {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "internal",
                "variable" : 34
              },
              "go-type" : 5,
              "kind" : "expression",
              "target" : {
                "go-type" : 34,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "dhyDesc",
                  "variable" : 11
                }
              },
              "type" : "selector"
            }, {
              "arguments" : [ ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "Pointer"
                },
                "go-type" : 20,
                "kind" : "expression",
                "target" : {
                  "go-type" : 14,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "dhy",
                    "variable" : 12
                  }
                },
                "type" : "selector"
              },
              "go-type" : 22,
              "kind" : "expression",
              "type" : "call"
            }, {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "internal",
                "variable" : 34
              },
              "go-type" : 5,
              "kind" : "expression",
              "target" : {
                "go-type" : 34,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "dcyDesc",
                  "variable" : 13
                }
              },
              "type" : "selector"
            }, {
              "arguments" : [ ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "Pointer"
                },
                "go-type" : 20,
                "kind" : "expression",
                "target" : {
                  "go-type" : 14,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "dcy",
                    "variable" : 14
                  }
                },
                "type" : "selector"
              },
              "go-type" : 22,
              "kind" : "expression",
              "type" : "call"
            }, {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "internal",
                "variable" : 44
              },
              "go-type" : 5,
              "kind" : "expression",
              "target" : {
                "go-type" : 39,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "wDesc",
                  "variable" : 15
                }
              },
              "type" : "selector"
            }, {
              "arguments" : [ ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "Pointer"
                },
                "go-type" : 20,
                "kind" : "expression",
                "target" : {
                  "go-type" : 14,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "w",
                    "variable" : 16
                  }
                },
                "type" : "selector"
              },
              "go-type" : 22,
              "kind" : "expression",
              "type" : "call"
            }, {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "internal",
                "variable" : 34
              },
              "go-type" : 5,
              "kind" : "expression",
              "target" : {
                "go-type" : 34,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "hxDesc",
                  "variable" : 17
                }
              },
              "type" : "selector"
            }, {
              "arguments" : [ ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "Pointer"
                },
                "go-type" : 20,
                "kind" : "expression",
                "target" : {
                  "go-type" : 14,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "hx",
                    "variable" : 18
                  }
                },
                "type" : "selector"
              },
              "go-type" : 22,
              "kind" : "expression",
              "type" : "call"
            }, {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "internal",
                "variable" : 34
              },
              "go-type" : 5,
              "kind" : "expression",
              "target" : {
                "go-type" : 34,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "cxDesc",
                  "variable" : 19
                }
              },
              "type" : "selector"
            }, {
              "arguments" : [ ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "Pointer"
                },
                "go-type" : 20,
                "kind" : "expression",
                "target" : {
                  "go-type" : 14,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "cx",
                    "variable" : 20
                  }
                },
                "type" : "selector"
              },
              "go-type" : 22,
              "kind" : "expression",
              "type" : "call"
            }, {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "dxPtr",
                "variable" : 41
              }
            }, {
              "arguments" : [ ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "Pointer"
                },
                "go-type" : 20,
                "kind" : "expression",
                "target" : {
                  "go-type" : 14,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "dx",
                    "variable" : 22
                  }
                },
                "type" : "selector"
              },
              "go-type" : 22,
              "kind" : "expression",
              "type" : "call"
            }, {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "internal",
                "variable" : 34
              },
              "go-type" : 5,
              "kind" : "expression",
              "target" : {
                "go-type" : 34,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "dhxDesc",
                  "variable" : 23
                }
              },
              "type" : "selector"
            }, {
              "arguments" : [ ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "Pointer"
                },
                "go-type" : 20,
                "kind" : "expression",
                "target" : {
                  "go-type" : 14,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "dhx",
                    "variable" : 24
                  }
                },
                "type" : "selector"
              },
              "go-type" : 22,
              "kind" : "expression",
              "type" : "call"
            }, {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "internal",
                "variable" : 34
              },
              "go-type" : 5,
              "kind" : "expression",
              "target" : {
                "go-type" : 34,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "dcxDesc",
                  "variable" : 25
                }
              },
              "type" : "selector"
            }, {
              "arguments" : [ ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "Pointer"
                },
                "go-type" : 20,
                "kind" : "expression",
                "target" : {
                  "go-type" : 14,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "dcx",
                    "variable" : 26
                  }
                },
                "type" : "selector"
              },
              "go-type" : 22,
              "kind" : "expression",
              "type" : "call"
            }, {
              "arguments" : [ ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "Pointer"
                },
                "go-type" : 20,
                "kind" : "expression",
                "target" : {
                  "go-type" : 14,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "workspace",
                    "variable" : 27
                  }
                },
                "type" : "selector"
              },
              "go-type" : 22,
              "kind" : "expression",
              "type" : "call"
            }, {
              "arguments" : [ {
                "go-type" : 25,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "workSpaceSizeInBytes",
                  "variable" : 28
                }
              } ],
              "ellipsis" : false,
              "function" : {
                "go-type" : -1,
                "kind" : "expression",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 2,
                  "value" : "C"
                },
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "size_t"
                }
              },
              "go-type" : -1,
              "kind" : "expression",
              "type" : "call"
            }, {
              "arguments" : [ ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "Pointer"
                },
                "go-type" : 20,
                "kind" : "expression",
                "target" : {
                  "go-type" : 14,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "reserveSpace",
                    "variable" : 29
                  }
                },
                "type" : "selector"
              },
              "go-type" : 22,
              "kind" : "expression",
              "type" : "call"
            }, {
              "arguments" : [ {
                "go-type" : 25,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "reserveSpaceSizeInBytes",
                  "variable" : 30
                }
              } ],
              "ellipsis" : false,
              "function" : {
                "go-type" : -1,
                "kind" : "expression",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 2,
                  "value" : "C"
                },
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "size_t"
                }
              },
              "go-type" : -1,
              "kind" : "expression",
              "type" : "call"
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : -1,
              "kind" : "expression",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 2,
                "value" : "C"
              },
              "type" : "identifier",
              "value" : {
                "ident-kind" : "NoKind",
                "kind" : "ident",
                "value" : "cudnnRNNBackwardData"
              }
            },
            "go-type" : -1,
            "kind" : "expression",
            "type" : "call"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 53,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "result"
            }
          },
          "go-type" : 43,
          "kind" : "expression",
          "type" : "call"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 891,
      "code" : "return result(C.cudnnRNNBackwardData(co.internal, rnnDesc.internal, C.int(seqLength), ptr, y.Pointer(), dyPtr, dy.Pointer(), dhyDesc.internal, dhy.Pointer(), dcyDesc.internal, dcy.Pointer(), wDesc.internal, w.Pointer(), hxDesc.internal, hx.Pointer(), cxDesc.internal, cx.Pointer(), dxPtr, dx.Pointer(), dhxDesc.internal, dhx.Pointer(), dcxDesc.internal, dcx.Pointer(), workspace.Pointer(), C.size_t(workSpaceSizeInBytes), reserveSpace.Pointer(), C.size_t(reserveSpaceSizeInBytes)))",
      "entry" : false,
      "use-vars" : [ 26, 29, 38, 10, 16, 23, 18, 35, 11, 5, 28, 4, 24, 41, 19, 20, 14, 8, 6, 30, 13, 25, 15, 27, 17, 12, 22 ]
    } ],
    "code" : "// RNNBackwardData executes the recurrent neural network described by rnnDesc with output gradients dy, dhy, dhc, weights w and input gradients dx, dhx, dcx. workspace is required for intermediate storage. The data in reserveSpace must have previously been generated by cudnnRNNForwardTraining. The same reserveSpace data must be used for future calls to cudnnRNNBackwardWeights if they execute on the same input data.\n//\treserveSpace is both an input and output\nfunc (co *Context) RNNBackwardData(rnnDesc *RNN, seqLength int, yDesc []*TensorDescriptor, y Memory, dyDesc []*TensorDescriptor, dy Memory, dhyDesc *TensorDescriptor, dhy Memory, dcyDesc *TensorDescriptor, dcy Memory, wDesc *Filter, w Memory, hxDesc *TensorDescriptor, hx Memory, cxDesc *TensorDescriptor, cx Memory, dxDesc []*TensorDescriptor, dx Memory, dhxDesc *TensorDescriptor, dhx Memory, dcxDesc *TensorDescriptor, dcx Memory, workspace Memory, workSpaceSizeInBytes uintptr, reserveSpace Memory, reserveSpaceSizeInBytes uintptr) error {\n\n\tinternals := make([]C.cudnnTensorDescriptor_t, len(yDesc))\n\tfor i := range yDesc {\n\t\tinternals[i] = yDesc[i].internal\n\t}\n\tptr := (*C.cudnnTensorDescriptor_t)(unsafe.Pointer(&internals[0]))\n\n\tdyInternals := make([]C.cudnnTensorDescriptor_t, len(dyDesc))\n\tfor i := range dyDesc {\n\t\tdyInternals[i] = dyDesc[i].internal\n\t}\n\tdyPtr := (*C.cudnnTensorDescriptor_t)(unsafe.Pointer(&dyInternals[0]))\n\n\tdxInternals := make([]C.cudnnTensorDescriptor_t, len(dxDesc))\n\tfor i := range dyDesc {\n\t\tdxInternals[i] = dxDesc[i].internal\n\t}\n\tdxPtr := (*C.cudnnTensorDescriptor_t)(unsafe.Pointer(&dxInternals[0]))\n\n\treturn result(C.cudnnRNNBackwardData(co.internal, rnnDesc.internal, C.int(seqLength), ptr, y.Pointer(), dyPtr, dy.Pointer(), dhyDesc.internal, dhy.Pointer(), dcyDesc.internal, dcy.Pointer(), wDesc.internal, w.Pointer(), hxDesc.internal, hx.Pointer(), cxDesc.internal, cx.Pointer(), dxPtr, dx.Pointer(), dhxDesc.internal, dhx.Pointer(), dcxDesc.internal, dcx.Pointer(), workspace.Pointer(), C.size_t(workSpaceSizeInBytes), reserveSpace.Pointer(), C.size_t(reserveSpaceSizeInBytes)))\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "RNNBackwardData",
      "package" : 0,
      "type" : 0,
      "exported" : true
    }, {
      "name" : "result",
      "package" : 0,
      "type" : 53,
      "exported" : false
    }, {
      "name" : "Pointer",
      "package" : 0,
      "type" : 20,
      "exported" : true
    } ],
    "line-end" : 892,
    "line-start" : 870,
    "names" : [ "RNNBackwardData" ],
    "package" : 0,
    "packages" : [ {
      "name" : "cudnn",
      "path" : "gorgonia.org/cu/dnn"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "C",
      "path" : "C"
    } ],
    "params" : [ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 ],
    "receivers" : [ 4 ],
    "results" : [ 31 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(rnnDesc *gorgonia.org/cu/dnn.RNN, seqLength int, yDesc []*gorgonia.org/cu/dnn.TensorDescriptor, y gorgonia.org/cu/dnn.Memory, dyDesc []*gorgonia.org/cu/dnn.TensorDescriptor, dy gorgonia.org/cu/dnn.Memory, dhyDesc *gorgonia.org/cu/dnn.TensorDescriptor, dhy gorgonia.org/cu/dnn.Memory, dcyDesc *gorgonia.org/cu/dnn.TensorDescriptor, dcy gorgonia.org/cu/dnn.Memory, wDesc *gorgonia.org/cu/dnn.Filter, w gorgonia.org/cu/dnn.Memory, hxDesc *gorgonia.org/cu/dnn.TensorDescriptor, hx gorgonia.org/cu/dnn.Memory, cxDesc *gorgonia.org/cu/dnn.TensorDescriptor, cx gorgonia.org/cu/dnn.Memory, dxDesc []*gorgonia.org/cu/dnn.TensorDescriptor, dx gorgonia.org/cu/dnn.Memory, dhxDesc *gorgonia.org/cu/dnn.TensorDescriptor, dhx gorgonia.org/cu/dnn.Memory, dcxDesc *gorgonia.org/cu/dnn.TensorDescriptor, dcx gorgonia.org/cu/dnn.Memory, workspace gorgonia.org/cu/dnn.Memory, workSpaceSizeInBytes uintptr, reserveSpace gorgonia.org/cu/dnn.Memory, reserveSpaceSizeInBytes uintptr) error",
      "params" : 1,
      "recv" : 4,
      "results" : 42,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "rnnDesc",
        "type" : 2
      }, {
        "name" : "seqLength",
        "type" : 6
      }, {
        "name" : "yDesc",
        "type" : 33
      }, {
        "name" : "y",
        "type" : 14
      }, {
        "name" : "dyDesc",
        "type" : 33
      }, {
        "name" : "dy",
        "type" : 14
      }, {
        "name" : "dhyDesc",
        "type" : 34
      }, {
        "name" : "dhy",
        "type" : 14
      }, {
        "name" : "dcyDesc",
        "type" : 34
      }, {
        "name" : "dcy",
        "type" : 14
      }, {
        "name" : "wDesc",
        "type" : 39
      }, {
        "name" : "w",
        "type" : 14
      }, {
        "name" : "hxDesc",
        "type" : 34
      }, {
        "name" : "hx",
        "type" : 14
      }, {
        "name" : "cxDesc",
        "type" : 34
      }, {
        "name" : "cx",
        "type" : 14
      }, {
        "name" : "dxDesc",
        "type" : 33
      }, {
        "name" : "dx",
        "type" : 14
      }, {
        "name" : "dhxDesc",
        "type" : 34
      }, {
        "name" : "dhx",
        "type" : 14
      }, {
        "name" : "dcxDesc",
        "type" : 34
      }, {
        "name" : "dcx",
        "type" : 14
      }, {
        "name" : "workspace",
        "type" : 14
      }, {
        "name" : "workSpaceSizeInBytes",
        "type" : 25
      }, {
        "name" : "reserveSpace",
        "type" : 14
      }, {
        "name" : "reserveSpaceSizeInBytes",
        "type" : 25
      } ],
      "name" : "(rnnDesc *gorgonia.org/cu/dnn.RNN, seqLength int, yDesc []*gorgonia.org/cu/dnn.TensorDescriptor, y gorgonia.org/cu/dnn.Memory, dyDesc []*gorgonia.org/cu/dnn.TensorDescriptor, dy gorgonia.org/cu/dnn.Memory, dhyDesc *gorgonia.org/cu/dnn.TensorDescriptor, dhy gorgonia.org/cu/dnn.Memory, dcyDesc *gorgonia.org/cu/dnn.TensorDescriptor, dcy gorgonia.org/cu/dnn.Memory, wDesc *gorgonia.org/cu/dnn.Filter, w gorgonia.org/cu/dnn.Memory, hxDesc *gorgonia.org/cu/dnn.TensorDescriptor, hx gorgonia.org/cu/dnn.Memory, cxDesc *gorgonia.org/cu/dnn.TensorDescriptor, cx gorgonia.org/cu/dnn.Memory, dxDesc []*gorgonia.org/cu/dnn.TensorDescriptor, dx gorgonia.org/cu/dnn.Memory, dhxDesc *gorgonia.org/cu/dnn.TensorDescriptor, dhx gorgonia.org/cu/dnn.Memory, dcxDesc *gorgonia.org/cu/dnn.TensorDescriptor, dcx gorgonia.org/cu/dnn.Memory, workspace gorgonia.org/cu/dnn.Memory, workSpaceSizeInBytes uintptr, reserveSpace gorgonia.org/cu/dnn.Memory, reserveSpaceSizeInBytes uintptr)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*gorgonia.org/cu/dnn.RNN",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "RNN",
      "name" : "gorgonia.org/cu/dnn.RNN",
      "package" : 0,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "internal",
        "type" : 5
      }, {
        "name" : "hiddenSize",
        "type" : 6
      }, {
        "name" : "layers",
        "type" : 6
      }, {
        "name" : "dropoutDescriptor",
        "type" : 7
      }, {
        "name" : "inputMode",
        "type" : 27
      }, {
        "name" : "directionMode",
        "type" : 28
      }, {
        "name" : "mode",
        "type" : 29
      }, {
        "name" : "algo",
        "type" : 30
      }, {
        "name" : "dataType",
        "type" : 31
      }, {
        "name" : "matrixMathType",
        "type" : 32
      }, {
        "name" : "seqLength",
        "type" : 6
      }, {
        "name" : "workspaceSize",
        "type" : 25
      } ],
      "name" : "struct{internal invalid type; hiddenSize int; layers int; dropoutDescriptor *gorgonia.org/cu/dnn.Dropout; inputMode gorgonia.org/cu/dnn.RNNInputMode; directionMode gorgonia.org/cu/dnn.DirectionMode; mode gorgonia.org/cu/dnn.RNNMode; algo gorgonia.org/cu/dnn.RNNAlgo; dataType gorgonia.org/cu/dnn.DataType; matrixMathType gorgonia.org/cu/dnn.MathType; seqLength int; workspaceSize uintptr}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "name" : "invalid type",
      "type" : "Basic",
      "underlying" : 5
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 6
    }, {
      "elem" : 8,
      "name" : "*gorgonia.org/cu/dnn.Dropout",
      "type" : "Pointer",
      "underlying" : 7
    }, {
      "local-name" : "Dropout",
      "name" : "gorgonia.org/cu/dnn.Dropout",
      "package" : 0,
      "type" : "Named",
      "underlying" : 9
    }, {
      "fields" : [ {
        "name" : "internal",
        "type" : 5
      }, {
        "name" : "handle",
        "type" : 10
      }, {
        "name" : "dropout",
        "type" : 13
      }, {
        "name" : "states",
        "type" : 14
      }, {
        "name" : "stateSizeInBytes",
        "type" : 25
      }, {
        "name" : "seed",
        "type" : 26
      }, {
        "name" : "reqStateSize",
        "type" : 25
      } ],
      "name" : "struct{internal invalid type; handle *gorgonia.org/cu/dnn.Context; dropout float32; states gorgonia.org/cu/dnn.Memory; stateSizeInBytes uintptr; seed uint64; reqStateSize uintptr}",
      "type" : "Struct",
      "underlying" : 9
    }, {
      "elem" : 11,
      "name" : "*gorgonia.org/cu/dnn.Context",
      "type" : "Pointer",
      "underlying" : 10
    }, {
      "local-name" : "Context",
      "name" : "gorgonia.org/cu/dnn.Context",
      "package" : 0,
      "type" : "Named",
      "underlying" : 12
    }, {
      "fields" : [ {
        "name" : "internal",
        "type" : 5
      } ],
      "name" : "struct{internal invalid type}",
      "type" : "Struct",
      "underlying" : 12
    }, {
      "name" : "float32",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "local-name" : "Memory",
      "name" : "gorgonia.org/cu/dnn.Memory",
      "package" : 0,
      "type" : "Named",
      "underlying" : 15
    }, {
      "methods" : [ {
        "name" : "IsNativelyAccessible",
        "type" : 16
      }, {
        "name" : "Pointer",
        "type" : 20
      }, {
        "name" : "Uintptr",
        "type" : 23
      } ],
      "name" : "interface{IsNativelyAccessible() bool; Pointer() unsafe.Pointer; Uintptr() uintptr}",
      "type" : "Interface",
      "underlying" : 15
    }, {
      "name" : "func() bool",
      "params" : 17,
      "recv" : 0,
      "results" : 18,
      "type" : "Signature",
      "underlying" : 16,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 17
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 19
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 18
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 19
    }, {
      "name" : "func() unsafe.Pointer",
      "params" : 17,
      "recv" : 1,
      "results" : 21,
      "type" : "Signature",
      "underlying" : 20,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 22
      } ],
      "name" : "(unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 21
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 22
    }, {
      "name" : "func() uintptr",
      "params" : 17,
      "recv" : 2,
      "results" : 24,
      "type" : "Signature",
      "underlying" : 23,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 25
      } ],
      "name" : "(uintptr)",
      "type" : "Tuple",
      "underlying" : 24
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 25
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 26
    }, {
      "local-name" : "RNNInputMode",
      "name" : "gorgonia.org/cu/dnn.RNNInputMode",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "local-name" : "DirectionMode",
      "name" : "gorgonia.org/cu/dnn.DirectionMode",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "local-name" : "RNNMode",
      "name" : "gorgonia.org/cu/dnn.RNNMode",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "local-name" : "RNNAlgo",
      "name" : "gorgonia.org/cu/dnn.RNNAlgo",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "local-name" : "DataType",
      "name" : "gorgonia.org/cu/dnn.DataType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "local-name" : "MathType",
      "name" : "gorgonia.org/cu/dnn.MathType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "elem" : 34,
      "name" : "[]*gorgonia.org/cu/dnn.TensorDescriptor",
      "type" : "Slice",
      "underlying" : 33
    }, {
      "elem" : 35,
      "name" : "*gorgonia.org/cu/dnn.TensorDescriptor",
      "type" : "Pointer",
      "underlying" : 34
    }, {
      "local-name" : "TensorDescriptor",
      "name" : "gorgonia.org/cu/dnn.TensorDescriptor",
      "package" : 0,
      "type" : "Named",
      "underlying" : 36
    }, {
      "fields" : [ {
        "name" : "internal",
        "type" : 5
      }, {
        "name" : "format",
        "type" : 37
      }, {
        "name" : "dataType",
        "type" : 31
      }, {
        "name" : "shape",
        "type" : 38
      }, {
        "name" : "strides",
        "type" : 38
      } ],
      "name" : "struct{internal invalid type; format gorgonia.org/cu/dnn.TensorFormat; dataType gorgonia.org/cu/dnn.DataType; shape []int; strides []int}",
      "type" : "Struct",
      "underlying" : 36
    }, {
      "local-name" : "TensorFormat",
      "name" : "gorgonia.org/cu/dnn.TensorFormat",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "elem" : 6,
      "name" : "[]int",
      "type" : "Slice",
      "underlying" : 38
    }, {
      "elem" : 40,
      "name" : "*gorgonia.org/cu/dnn.Filter",
      "type" : "Pointer",
      "underlying" : 39
    }, {
      "local-name" : "Filter",
      "name" : "gorgonia.org/cu/dnn.Filter",
      "package" : 0,
      "type" : "Named",
      "underlying" : 41
    }, {
      "fields" : [ {
        "name" : "internal",
        "type" : 5
      }, {
        "name" : "dataType",
        "type" : 31
      }, {
        "name" : "format",
        "type" : 37
      }, {
        "name" : "shape",
        "type" : 38
      } ],
      "name" : "struct{internal invalid type; dataType gorgonia.org/cu/dnn.DataType; format gorgonia.org/cu/dnn.TensorFormat; shape []int}",
      "type" : "Struct",
      "underlying" : 41
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 43
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 42
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 44
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 45
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 44
    }, {
      "name" : "func() string",
      "params" : 17,
      "recv" : 3,
      "results" : 46,
      "type" : "Signature",
      "underlying" : 45,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 47
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 46
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 47
    }, {
      "elem" : 5,
      "name" : "[]invalid type",
      "type" : "Slice",
      "underlying" : 48
    }, {
      "name" : "func([]*gorgonia.org/cu/dnn.TensorDescriptor) int",
      "params" : 50,
      "recv" : -1,
      "results" : 51,
      "type" : "Signature",
      "underlying" : 49,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 33
      } ],
      "name" : "([]*gorgonia.org/cu/dnn.TensorDescriptor)",
      "type" : "Tuple",
      "underlying" : 50
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 6
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 51
    }, {
      "elem" : 5,
      "name" : "*invalid type",
      "type" : "Pointer",
      "underlying" : 52
    }, {
      "name" : "func(x invalid type) error",
      "params" : 54,
      "recv" : -1,
      "results" : 42,
      "type" : "Signature",
      "underlying" : 53,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "x",
        "type" : 5
      } ],
      "name" : "(x invalid type)",
      "type" : "Tuple",
      "underlying" : 54
    } ],
    "variables" : [ {
      "name" : "",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : -1,
      "type" : 43,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "co",
      "package" : 0,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "rnnDesc",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "seqLength",
      "package" : 0,
      "type" : 6,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "yDesc",
      "package" : 0,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "y",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dyDesc",
      "package" : 0,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dy",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dhyDesc",
      "package" : 0,
      "type" : 34,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dhy",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dcyDesc",
      "package" : 0,
      "type" : 34,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dcy",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "wDesc",
      "package" : 0,
      "type" : 39,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "w",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "hxDesc",
      "package" : 0,
      "type" : 34,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "hx",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "cxDesc",
      "package" : 0,
      "type" : 34,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "cx",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dxDesc",
      "package" : 0,
      "type" : 33,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dx",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dhxDesc",
      "package" : 0,
      "type" : 34,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dhx",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dcxDesc",
      "package" : 0,
      "type" : 34,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dcx",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "workspace",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "workSpaceSizeInBytes",
      "package" : 0,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "reserveSpace",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "reserveSpaceSizeInBytes",
      "package" : 0,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 43,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "internals",
      "package" : 0,
      "type" : 48,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "i",
      "package" : 0,
      "type" : 6,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "internal",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ptr",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dyInternals",
      "package" : 0,
      "type" : 48,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "i",
      "package" : 0,
      "type" : 6,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dyPtr",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dxInternals",
      "package" : 0,
      "type" : 48,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "i",
      "package" : 0,
      "type" : 6,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dxPtr",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "internal",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "internal",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "internal",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}