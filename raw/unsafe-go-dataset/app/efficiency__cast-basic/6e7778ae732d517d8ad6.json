{
  "usage" : {
    "file" : "zz_generated.conversion.go",
    "label1" : "cast-basic",
    "label2" : "efficiency",
    "line" : "5107",
    "module" : "k8s.io/kubernetes",
    "pkg" : "k8s.io/kubernetes/pkg/apis/core/v1",
    "project" : "rancher/rancher",
    "snippet" : "out.StorageClassName = (*string)(unsafe.Pointer(in.StorageClassName))",
    "version" : "v1.18.0"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 3 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 5101,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "AccessModes",
            "variable" : 9
          },
          "go-type" : 52,
          "kind" : "expression",
          "target" : {
            "go-type" : 49,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 52,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 53,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 6,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 53,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "PersistentVolumeAccessMode"
                  }
                },
                "go-type" : 52,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 91,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 91,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 92,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 9,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 92,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 92,
              "kind" : "expression",
              "target" : {
                "go-type" : 93,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "AccessModes",
                    "variable" : 10
                  },
                  "go-type" : 5,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5101,
      "code" : "out.AccessModes = *(*[]v1.PersistentVolumeAccessMode)(unsafe.Pointer(&in.AccessModes))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 5 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 7 ],
      "decl-vars" : [ ],
      "line-start" : 5102,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Selector",
            "variable" : 11
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 49,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 9,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 2,
                "value" : "metav1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 9,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "LabelSelector"
              }
            },
            "go-type" : 8,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 92,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 9,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 92,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 92,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Selector",
                "variable" : 12
              },
              "go-type" : 8,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5102,
      "code" : "out.Selector = (*metav1.LabelSelector)(unsafe.Pointer(in.Selector))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6, 7 ],
      "in-vars" : [ 5, 15, 6 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 15 ],
      "decl-vars" : [ ],
      "line-start" : 5103,
      "ast" : {
        "condition" : {
          "go-type" : 98,
          "kind" : "expression",
          "left" : {
            "go-type" : 72,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 15
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 99,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 5105,
      "code" : "if err := Convert_core_ResourceRequirements_To_v1_ResourceRequirements(&in.Resources, &out.Resources, s); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 15 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4 ],
      "in-vars" : [ 6, 5, 7 ],
      "exit" : false,
      "out-vars" : [ 6, 5, 15 ],
      "decl-vars" : [ 15 ],
      "line-start" : 5103,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 96,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Resources",
                "variable" : 13
              },
              "go-type" : 17,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 97,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Resources",
                "variable" : 14
              },
              "go-type" : 54,
              "kind" : "expression",
              "target" : {
                "go-type" : 49,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "out",
                  "variable" : 6
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 64,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "s",
              "variable" : 7
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 94,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Convert_core_ResourceRequirements_To_v1_ResourceRequirements"
            }
          },
          "go-type" : 72,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 5103,
      "code" : "err := Convert_core_ResourceRequirements_To_v1_ResourceRequirements(&in.Resources, &out.Resources, s)",
      "entry" : false,
      "use-vars" : [ 5, 6, 7 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 15 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 5104,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 72,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 15
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 5104,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 15 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 8 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5106,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "VolumeName",
            "variable" : 16
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 49,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "VolumeName",
            "variable" : 17
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5106,
      "code" : "out.VolumeName = in.VolumeName",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 9 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 5107,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "StorageClassName",
            "variable" : 18
          },
          "go-type" : 43,
          "kind" : "expression",
          "target" : {
            "go-type" : 49,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 7,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 7,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "string"
              }
            },
            "go-type" : 43,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 43,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 92,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 9,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 92,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 92,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "StorageClassName",
                "variable" : 19
              },
              "go-type" : 43,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5107,
      "code" : "out.StorageClassName = (*string)(unsafe.Pointer(in.StorageClassName))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 10 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5108,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "VolumeMode",
            "variable" : 20
          },
          "go-type" : 59,
          "kind" : "expression",
          "target" : {
            "go-type" : 49,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 60,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 60,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "PersistentVolumeMode"
              }
            },
            "go-type" : 59,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 59,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 92,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 9,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 92,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 92,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "VolumeMode",
                "variable" : 21
              },
              "go-type" : 44,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5108,
      "code" : "out.VolumeMode = (*v1.PersistentVolumeMode)(unsafe.Pointer(in.VolumeMode))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 11 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 5109,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "DataSource",
            "variable" : 22
          },
          "go-type" : 61,
          "kind" : "expression",
          "target" : {
            "go-type" : 49,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 62,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 6,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 62,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "TypedLocalObjectReference"
              }
            },
            "go-type" : 61,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 61,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 92,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 9,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 92,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 92,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "DataSource",
                "variable" : 23
              },
              "go-type" : 46,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5109,
      "code" : "out.DataSource = (*v1.TypedLocalObjectReference)(unsafe.Pointer(in.DataSource))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 5110,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 99,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 5110,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func autoConvert_core_PersistentVolumeClaimSpec_To_v1_PersistentVolumeClaimSpec(in *core.PersistentVolumeClaimSpec, out *v1.PersistentVolumeClaimSpec, s conversion.Scope) error {\n\tout.AccessModes = *(*[]v1.PersistentVolumeAccessMode)(unsafe.Pointer(&in.AccessModes))\n\tout.Selector = (*metav1.LabelSelector)(unsafe.Pointer(in.Selector))\n\tif err := Convert_core_ResourceRequirements_To_v1_ResourceRequirements(&in.Resources, &out.Resources, s); err != nil {\n\t\treturn err\n\t}\n\tout.VolumeName = in.VolumeName\n\tout.StorageClassName = (*string)(unsafe.Pointer(in.StorageClassName))\n\tout.VolumeMode = (*v1.PersistentVolumeMode)(unsafe.Pointer(in.VolumeMode))\n\tout.DataSource = (*v1.TypedLocalObjectReference)(unsafe.Pointer(in.DataSource))\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "autoConvert_core_PersistentVolumeClaimSpec_To_v1_PersistentVolumeClaimSpec",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "Convert_core_ResourceRequirements_To_v1_ResourceRequirements",
      "package" : 0,
      "type" : 94,
      "exported" : true
    } ],
    "line-end" : 5111,
    "line-start" : 5100,
    "names" : [ "autoConvert_core_PersistentVolumeClaimSpec_To_v1_PersistentVolumeClaimSpec" ],
    "package" : 0,
    "packages" : [ {
      "name" : "v1",
      "path" : "k8s.io/kubernetes/pkg/apis/core/v1"
    }, {
      "name" : "core",
      "path" : "k8s.io/kubernetes/pkg/apis/core"
    }, {
      "name" : "v1",
      "path" : "k8s.io/apimachinery/pkg/apis/meta/v1"
    }, {
      "name" : "resource",
      "path" : "k8s.io/apimachinery/pkg/api/resource"
    }, {
      "name" : "inf",
      "path" : "gopkg.in/inf.v0"
    }, {
      "name" : "big",
      "path" : "math/big"
    }, {
      "name" : "v1",
      "path" : "k8s.io/api/core/v1"
    }, {
      "name" : "conversion",
      "path" : "k8s.io/apimachinery/pkg/conversion"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 5, 6, 7 ],
    "receivers" : [ ],
    "results" : [ 8 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.PersistentVolumeClaimSpec, out *k8s.io/api/core/v1.PersistentVolumeClaimSpec, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 1,
      "recv" : -1,
      "results" : 71,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 2
      }, {
        "name" : "out",
        "type" : 49
      }, {
        "name" : "s",
        "type" : 64
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.PersistentVolumeClaimSpec, out *k8s.io/api/core/v1.PersistentVolumeClaimSpec, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PersistentVolumeClaimSpec",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "PersistentVolumeClaimSpec",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PersistentVolumeClaimSpec",
      "package" : 1,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "AccessModes",
        "type" : 5
      }, {
        "name" : "Selector",
        "type" : 8
      }, {
        "name" : "Resources",
        "type" : 17
      }, {
        "name" : "VolumeName",
        "type" : 7
      }, {
        "name" : "StorageClassName",
        "type" : 43
      }, {
        "name" : "VolumeMode",
        "type" : 44
      }, {
        "name" : "DataSource",
        "type" : 46
      } ],
      "name" : "struct{AccessModes []k8s.io/kubernetes/pkg/apis/core.PersistentVolumeAccessMode; Selector *k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector; Resources k8s.io/kubernetes/pkg/apis/core.ResourceRequirements; VolumeName string; StorageClassName *string; VolumeMode *k8s.io/kubernetes/pkg/apis/core.PersistentVolumeMode; DataSource *k8s.io/kubernetes/pkg/apis/core.TypedLocalObjectReference}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "elem" : 6,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.PersistentVolumeAccessMode",
      "type" : "Slice",
      "underlying" : 5
    }, {
      "local-name" : "PersistentVolumeAccessMode",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PersistentVolumeAccessMode",
      "package" : 1,
      "type" : "Named",
      "underlying" : 7
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 7
    }, {
      "elem" : 9,
      "name" : "*k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector",
      "type" : "Pointer",
      "underlying" : 8
    }, {
      "local-name" : "LabelSelector",
      "name" : "k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector",
      "package" : 2,
      "type" : "Named",
      "underlying" : 10
    }, {
      "fields" : [ {
        "name" : "MatchLabels",
        "type" : 11
      }, {
        "name" : "MatchExpressions",
        "type" : 12
      } ],
      "name" : "struct{MatchLabels map[string]string \"json:\\\"matchLabels,omitempty\\\" protobuf:\\\"bytes,1,rep,name=matchLabels\\\"\"; MatchExpressions []k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelectorRequirement \"json:\\\"matchExpressions,omitempty\\\" protobuf:\\\"bytes,2,rep,name=matchExpressions\\\"\"}",
      "type" : "Struct",
      "underlying" : 10
    }, {
      "elem" : 7,
      "key" : 7,
      "name" : "map[string]string",
      "type" : "Map",
      "underlying" : 11
    }, {
      "elem" : 13,
      "name" : "[]k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelectorRequirement",
      "type" : "Slice",
      "underlying" : 12
    }, {
      "local-name" : "LabelSelectorRequirement",
      "name" : "k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelectorRequirement",
      "package" : 2,
      "type" : "Named",
      "underlying" : 14
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 7
      }, {
        "name" : "Operator",
        "type" : 15
      }, {
        "name" : "Values",
        "type" : 16
      } ],
      "name" : "struct{Key string \"json:\\\"key\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"key\\\" protobuf:\\\"bytes,1,opt,name=key\\\"\"; Operator k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelectorOperator \"json:\\\"operator\\\" protobuf:\\\"bytes,2,opt,name=operator,casttype=LabelSelectorOperator\\\"\"; Values []string \"json:\\\"values,omitempty\\\" protobuf:\\\"bytes,3,rep,name=values\\\"\"}",
      "type" : "Struct",
      "underlying" : 14
    }, {
      "local-name" : "LabelSelectorOperator",
      "name" : "k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelectorOperator",
      "package" : 2,
      "type" : "Named",
      "underlying" : 7
    }, {
      "elem" : 7,
      "name" : "[]string",
      "type" : "Slice",
      "underlying" : 16
    }, {
      "local-name" : "ResourceRequirements",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ResourceRequirements",
      "package" : 1,
      "type" : "Named",
      "underlying" : 18
    }, {
      "fields" : [ {
        "name" : "Limits",
        "type" : 19
      }, {
        "name" : "Requests",
        "type" : 19
      } ],
      "name" : "struct{Limits k8s.io/kubernetes/pkg/apis/core.ResourceList; Requests k8s.io/kubernetes/pkg/apis/core.ResourceList}",
      "type" : "Struct",
      "underlying" : 18
    }, {
      "local-name" : "ResourceList",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ResourceList",
      "package" : 1,
      "type" : "Named",
      "underlying" : 20
    }, {
      "elem" : 21,
      "key" : 42,
      "name" : "map[k8s.io/kubernetes/pkg/apis/core.ResourceName]k8s.io/apimachinery/pkg/api/resource.Quantity",
      "type" : "Map",
      "underlying" : 20
    }, {
      "local-name" : "Quantity",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Quantity",
      "package" : 3,
      "type" : "Named",
      "underlying" : 22
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 23
      }, {
        "name" : "d",
        "type" : 28
      }, {
        "name" : "s",
        "type" : 7
      }, {
        "name" : "Format",
        "type" : 41
      } ],
      "name" : "struct{i k8s.io/apimachinery/pkg/api/resource.int64Amount; d k8s.io/apimachinery/pkg/api/resource.infDecAmount; s string; k8s.io/apimachinery/pkg/api/resource.Format}",
      "type" : "Struct",
      "underlying" : 22
    }, {
      "local-name" : "int64Amount",
      "name" : "k8s.io/apimachinery/pkg/api/resource.int64Amount",
      "package" : 3,
      "type" : "Named",
      "underlying" : 24
    }, {
      "fields" : [ {
        "name" : "value",
        "type" : 25
      }, {
        "name" : "scale",
        "type" : 26
      } ],
      "name" : "struct{value int64; scale k8s.io/apimachinery/pkg/api/resource.Scale}",
      "type" : "Struct",
      "underlying" : 24
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 25
    }, {
      "local-name" : "Scale",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Scale",
      "package" : 3,
      "type" : "Named",
      "underlying" : 27
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 27
    }, {
      "local-name" : "infDecAmount",
      "name" : "k8s.io/apimachinery/pkg/api/resource.infDecAmount",
      "package" : 3,
      "type" : "Named",
      "underlying" : 29
    }, {
      "fields" : [ {
        "name" : "Dec",
        "type" : 30
      } ],
      "name" : "struct{*gopkg.in/inf.v0.Dec}",
      "type" : "Struct",
      "underlying" : 29
    }, {
      "elem" : 31,
      "name" : "*gopkg.in/inf.v0.Dec",
      "type" : "Pointer",
      "underlying" : 30
    }, {
      "local-name" : "Dec",
      "name" : "gopkg.in/inf.v0.Dec",
      "package" : 4,
      "type" : "Named",
      "underlying" : 32
    }, {
      "fields" : [ {
        "name" : "unscaled",
        "type" : 33
      }, {
        "name" : "scale",
        "type" : 40
      } ],
      "name" : "struct{unscaled math/big.Int; scale gopkg.in/inf.v0.Scale}",
      "type" : "Struct",
      "underlying" : 32
    }, {
      "local-name" : "Int",
      "name" : "math/big.Int",
      "package" : 5,
      "type" : "Named",
      "underlying" : 34
    }, {
      "fields" : [ {
        "name" : "neg",
        "type" : 35
      }, {
        "name" : "abs",
        "type" : 36
      } ],
      "name" : "struct{neg bool; abs math/big.nat}",
      "type" : "Struct",
      "underlying" : 34
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 35
    }, {
      "local-name" : "nat",
      "name" : "math/big.nat",
      "package" : 5,
      "type" : "Named",
      "underlying" : 37
    }, {
      "elem" : 38,
      "name" : "[]math/big.Word",
      "type" : "Slice",
      "underlying" : 37
    }, {
      "local-name" : "Word",
      "name" : "math/big.Word",
      "package" : 5,
      "type" : "Named",
      "underlying" : 39
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 39
    }, {
      "local-name" : "Scale",
      "name" : "gopkg.in/inf.v0.Scale",
      "package" : 4,
      "type" : "Named",
      "underlying" : 27
    }, {
      "local-name" : "Format",
      "name" : "k8s.io/apimachinery/pkg/api/resource.Format",
      "package" : 3,
      "type" : "Named",
      "underlying" : 7
    }, {
      "local-name" : "ResourceName",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ResourceName",
      "package" : 1,
      "type" : "Named",
      "underlying" : 7
    }, {
      "elem" : 7,
      "name" : "*string",
      "type" : "Pointer",
      "underlying" : 43
    }, {
      "elem" : 45,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PersistentVolumeMode",
      "type" : "Pointer",
      "underlying" : 44
    }, {
      "local-name" : "PersistentVolumeMode",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PersistentVolumeMode",
      "package" : 1,
      "type" : "Named",
      "underlying" : 7
    }, {
      "elem" : 47,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.TypedLocalObjectReference",
      "type" : "Pointer",
      "underlying" : 46
    }, {
      "local-name" : "TypedLocalObjectReference",
      "name" : "k8s.io/kubernetes/pkg/apis/core.TypedLocalObjectReference",
      "package" : 1,
      "type" : "Named",
      "underlying" : 48
    }, {
      "fields" : [ {
        "name" : "APIGroup",
        "type" : 43
      }, {
        "name" : "Kind",
        "type" : 7
      }, {
        "name" : "Name",
        "type" : 7
      } ],
      "name" : "struct{APIGroup *string; Kind string; Name string}",
      "type" : "Struct",
      "underlying" : 48
    }, {
      "elem" : 50,
      "name" : "*k8s.io/api/core/v1.PersistentVolumeClaimSpec",
      "type" : "Pointer",
      "underlying" : 49
    }, {
      "local-name" : "PersistentVolumeClaimSpec",
      "name" : "k8s.io/api/core/v1.PersistentVolumeClaimSpec",
      "package" : 6,
      "type" : "Named",
      "underlying" : 51
    }, {
      "fields" : [ {
        "name" : "AccessModes",
        "type" : 52
      }, {
        "name" : "Selector",
        "type" : 8
      }, {
        "name" : "Resources",
        "type" : 54
      }, {
        "name" : "VolumeName",
        "type" : 7
      }, {
        "name" : "StorageClassName",
        "type" : 43
      }, {
        "name" : "VolumeMode",
        "type" : 59
      }, {
        "name" : "DataSource",
        "type" : 61
      } ],
      "name" : "struct{AccessModes []k8s.io/api/core/v1.PersistentVolumeAccessMode \"json:\\\"accessModes,omitempty\\\" protobuf:\\\"bytes,1,rep,name=accessModes,casttype=PersistentVolumeAccessMode\\\"\"; Selector *k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector \"json:\\\"selector,omitempty\\\" protobuf:\\\"bytes,4,opt,name=selector\\\"\"; Resources k8s.io/api/core/v1.ResourceRequirements \"json:\\\"resources,omitempty\\\" protobuf:\\\"bytes,2,opt,name=resources\\\"\"; VolumeName string \"json:\\\"volumeName,omitempty\\\" protobuf:\\\"bytes,3,opt,name=volumeName\\\"\"; StorageClassName *string \"json:\\\"storageClassName,omitempty\\\" protobuf:\\\"bytes,5,opt,name=storageClassName\\\"\"; VolumeMode *k8s.io/api/core/v1.PersistentVolumeMode \"json:\\\"volumeMode,omitempty\\\" protobuf:\\\"bytes,6,opt,name=volumeMode,casttype=PersistentVolumeMode\\\"\"; DataSource *k8s.io/api/core/v1.TypedLocalObjectReference \"json:\\\"dataSource,omitempty\\\" protobuf:\\\"bytes,7,opt,name=dataSource\\\"\"}",
      "type" : "Struct",
      "underlying" : 51
    }, {
      "elem" : 53,
      "name" : "[]k8s.io/api/core/v1.PersistentVolumeAccessMode",
      "type" : "Slice",
      "underlying" : 52
    }, {
      "local-name" : "PersistentVolumeAccessMode",
      "name" : "k8s.io/api/core/v1.PersistentVolumeAccessMode",
      "package" : 6,
      "type" : "Named",
      "underlying" : 7
    }, {
      "local-name" : "ResourceRequirements",
      "name" : "k8s.io/api/core/v1.ResourceRequirements",
      "package" : 6,
      "type" : "Named",
      "underlying" : 55
    }, {
      "fields" : [ {
        "name" : "Limits",
        "type" : 56
      }, {
        "name" : "Requests",
        "type" : 56
      } ],
      "name" : "struct{Limits k8s.io/api/core/v1.ResourceList \"json:\\\"limits,omitempty\\\" protobuf:\\\"bytes,1,rep,name=limits,casttype=ResourceList,castkey=ResourceName\\\"\"; Requests k8s.io/api/core/v1.ResourceList \"json:\\\"requests,omitempty\\\" protobuf:\\\"bytes,2,rep,name=requests,casttype=ResourceList,castkey=ResourceName\\\"\"}",
      "type" : "Struct",
      "underlying" : 55
    }, {
      "local-name" : "ResourceList",
      "name" : "k8s.io/api/core/v1.ResourceList",
      "package" : 6,
      "type" : "Named",
      "underlying" : 57
    }, {
      "elem" : 21,
      "key" : 58,
      "name" : "map[k8s.io/api/core/v1.ResourceName]k8s.io/apimachinery/pkg/api/resource.Quantity",
      "type" : "Map",
      "underlying" : 57
    }, {
      "local-name" : "ResourceName",
      "name" : "k8s.io/api/core/v1.ResourceName",
      "package" : 6,
      "type" : "Named",
      "underlying" : 7
    }, {
      "elem" : 60,
      "name" : "*k8s.io/api/core/v1.PersistentVolumeMode",
      "type" : "Pointer",
      "underlying" : 59
    }, {
      "local-name" : "PersistentVolumeMode",
      "name" : "k8s.io/api/core/v1.PersistentVolumeMode",
      "package" : 6,
      "type" : "Named",
      "underlying" : 7
    }, {
      "elem" : 62,
      "name" : "*k8s.io/api/core/v1.TypedLocalObjectReference",
      "type" : "Pointer",
      "underlying" : 61
    }, {
      "local-name" : "TypedLocalObjectReference",
      "name" : "k8s.io/api/core/v1.TypedLocalObjectReference",
      "package" : 6,
      "type" : "Named",
      "underlying" : 63
    }, {
      "fields" : [ {
        "name" : "APIGroup",
        "type" : 43
      }, {
        "name" : "Kind",
        "type" : 7
      }, {
        "name" : "Name",
        "type" : 7
      } ],
      "name" : "struct{APIGroup *string \"json:\\\"apiGroup\\\" protobuf:\\\"bytes,1,opt,name=apiGroup\\\"\"; Kind string \"json:\\\"kind\\\" protobuf:\\\"bytes,2,opt,name=kind\\\"\"; Name string \"json:\\\"name\\\" protobuf:\\\"bytes,3,opt,name=name\\\"\"}",
      "type" : "Struct",
      "underlying" : 63
    }, {
      "local-name" : "Scope",
      "name" : "k8s.io/apimachinery/pkg/conversion.Scope",
      "package" : 7,
      "type" : "Named",
      "underlying" : 65
    }, {
      "methods" : [ {
        "name" : "Convert",
        "type" : 66
      }, {
        "name" : "DestTag",
        "type" : 77
      }, {
        "name" : "Flags",
        "type" : 80
      }, {
        "name" : "Meta",
        "type" : 82
      }, {
        "name" : "SrcTag",
        "type" : 77
      } ],
      "name" : "interface{Convert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DestTag() reflect.StructTag; Flags() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags; Meta() *k8s.io/apimachinery/pkg/conversion.Meta; SrcTag() reflect.StructTag}",
      "type" : "Interface",
      "underlying" : 65
    }, {
      "name" : "func(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error",
      "params" : 67,
      "recv" : 1,
      "results" : 71,
      "type" : "Signature",
      "underlying" : 66,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 68
      }, {
        "name" : "dest",
        "type" : 68
      }, {
        "name" : "flags",
        "type" : 69
      } ],
      "name" : "(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 67
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 68
    }, {
      "local-name" : "FieldMatchingFlags",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "package" : 7,
      "type" : "Named",
      "underlying" : 70
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 70
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 72
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 71
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 73
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 74
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 73
    }, {
      "name" : "func() string",
      "params" : 75,
      "recv" : 0,
      "results" : 76,
      "type" : "Signature",
      "underlying" : 74,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 75
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 7
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 76
    }, {
      "name" : "func() reflect.StructTag",
      "params" : 75,
      "recv" : 2,
      "results" : 78,
      "type" : "Signature",
      "underlying" : 77,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 79
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 78
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 8,
      "type" : "Named",
      "underlying" : 7
    }, {
      "name" : "func() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "params" : 75,
      "recv" : 3,
      "results" : 81,
      "type" : "Signature",
      "underlying" : 80,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 69
      } ],
      "name" : "(k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 81
    }, {
      "name" : "func() *k8s.io/apimachinery/pkg/conversion.Meta",
      "params" : 75,
      "recv" : 4,
      "results" : 83,
      "type" : "Signature",
      "underlying" : 82,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 84
      } ],
      "name" : "(*k8s.io/apimachinery/pkg/conversion.Meta)",
      "type" : "Tuple",
      "underlying" : 83
    }, {
      "elem" : 85,
      "name" : "*k8s.io/apimachinery/pkg/conversion.Meta",
      "type" : "Pointer",
      "underlying" : 84
    }, {
      "local-name" : "Meta",
      "name" : "k8s.io/apimachinery/pkg/conversion.Meta",
      "package" : 7,
      "type" : "Named",
      "underlying" : 86
    }, {
      "fields" : [ {
        "name" : "KeyNameMapping",
        "type" : 87
      }, {
        "name" : "Context",
        "type" : 68
      } ],
      "name" : "struct{KeyNameMapping k8s.io/apimachinery/pkg/conversion.FieldMappingFunc; Context interface{}}",
      "type" : "Struct",
      "underlying" : 86
    }, {
      "local-name" : "FieldMappingFunc",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMappingFunc",
      "package" : 7,
      "type" : "Named",
      "underlying" : 88
    }, {
      "name" : "func(key string, sourceTag reflect.StructTag, destTag reflect.StructTag) (source string, dest string)",
      "params" : 89,
      "recv" : -1,
      "results" : 90,
      "type" : "Signature",
      "underlying" : 88,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 7
      }, {
        "name" : "sourceTag",
        "type" : 79
      }, {
        "name" : "destTag",
        "type" : 79
      } ],
      "name" : "(key string, sourceTag reflect.StructTag, destTag reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 89
    }, {
      "fields" : [ {
        "name" : "source",
        "type" : 7
      }, {
        "name" : "dest",
        "type" : 7
      } ],
      "name" : "(source string, dest string)",
      "type" : "Tuple",
      "underlying" : 90
    }, {
      "elem" : 52,
      "name" : "*[]k8s.io/api/core/v1.PersistentVolumeAccessMode",
      "type" : "Pointer",
      "underlying" : 91
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 9,
      "type" : "Basic",
      "underlying" : 92
    }, {
      "elem" : 5,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.PersistentVolumeAccessMode",
      "type" : "Pointer",
      "underlying" : 93
    }, {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.ResourceRequirements, out *k8s.io/api/core/v1.ResourceRequirements, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 95,
      "recv" : -1,
      "results" : 71,
      "type" : "Signature",
      "underlying" : 94,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 96
      }, {
        "name" : "out",
        "type" : 97
      }, {
        "name" : "s",
        "type" : 64
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.ResourceRequirements, out *k8s.io/api/core/v1.ResourceRequirements, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 95
    }, {
      "elem" : 17,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ResourceRequirements",
      "type" : "Pointer",
      "underlying" : 96
    }, {
      "elem" : 54,
      "name" : "*k8s.io/api/core/v1.ResourceRequirements",
      "type" : "Pointer",
      "underlying" : 97
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 98
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 99
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 72,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 7,
      "type" : 64,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 7,
      "type" : 64,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 7,
      "type" : 64,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 7,
      "type" : 64,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 49,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 64,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 72,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "AccessModes",
      "package" : 6,
      "type" : 52,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AccessModes",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Selector",
      "package" : 6,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Selector",
      "package" : 1,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Resources",
      "package" : 1,
      "type" : 17,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Resources",
      "package" : 6,
      "type" : 54,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 72,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "VolumeName",
      "package" : 6,
      "type" : 7,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "VolumeName",
      "package" : 1,
      "type" : 7,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "StorageClassName",
      "package" : 6,
      "type" : 43,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "StorageClassName",
      "package" : 1,
      "type" : 43,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "VolumeMode",
      "package" : 6,
      "type" : 59,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "VolumeMode",
      "package" : 1,
      "type" : 44,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "DataSource",
      "package" : 6,
      "type" : 61,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "DataSource",
      "package" : 1,
      "type" : 46,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}