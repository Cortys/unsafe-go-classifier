{
  "usage" : {
    "file" : "zz_generated.conversion.go",
    "label1" : "cast-basic",
    "label2" : "efficiency",
    "line" : "5757",
    "module" : "k8s.io/kubernetes",
    "pkg" : "k8s.io/kubernetes/pkg/apis/core/v1",
    "project" : "rook/rook",
    "snippet" : "out.SinceSeconds = (*int64)(unsafe.Pointer(in.SinceSeconds))",
    "version" : "v1.17.2"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 3 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5754,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Container",
            "variable" : 9
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 29,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Container",
            "variable" : 10
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5754,
      "code" : "out.Container = in.Container",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 4 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5755,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Follow",
            "variable" : 11
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 29,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Follow",
            "variable" : 12
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5755,
      "code" : "out.Follow = in.Follow",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 5 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5756,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Previous",
            "variable" : 13
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 29,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Previous",
            "variable" : 14
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5756,
      "code" : "out.Previous = in.Previous",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 6 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5757,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "SinceSeconds",
            "variable" : 15
          },
          "go-type" : 9,
          "kind" : "expression",
          "target" : {
            "go-type" : 29,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 10,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 10,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "int64"
              }
            },
            "go-type" : 9,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 9,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 58,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 7,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 58,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 58,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "SinceSeconds",
                "variable" : 16
              },
              "go-type" : 9,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5757,
      "code" : "out.SinceSeconds = (*int64)(unsafe.Pointer(in.SinceSeconds))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 7 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5758,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "SinceTime",
            "variable" : 17
          },
          "go-type" : 11,
          "kind" : "expression",
          "target" : {
            "go-type" : 29,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 12,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 2,
                "value" : "metav1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 12,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Time"
              }
            },
            "go-type" : 11,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 11,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 58,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 7,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 58,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 58,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "SinceTime",
                "variable" : 18
              },
              "go-type" : 11,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5758,
      "code" : "out.SinceTime = (*metav1.Time)(unsafe.Pointer(in.SinceTime))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 8 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5759,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Timestamps",
            "variable" : 19
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 29,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Timestamps",
            "variable" : 20
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5759,
      "code" : "out.Timestamps = in.Timestamps",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 9 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5760,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "TailLines",
            "variable" : 21
          },
          "go-type" : 9,
          "kind" : "expression",
          "target" : {
            "go-type" : 29,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 10,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 10,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "int64"
              }
            },
            "go-type" : 9,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 9,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 58,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 7,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 58,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 58,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "TailLines",
                "variable" : 22
              },
              "go-type" : 9,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5760,
      "code" : "out.TailLines = (*int64)(unsafe.Pointer(in.TailLines))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 10 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5761,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "LimitBytes",
            "variable" : 23
          },
          "go-type" : 9,
          "kind" : "expression",
          "target" : {
            "go-type" : 29,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 10,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 10,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "int64"
              }
            },
            "go-type" : 9,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 9,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 58,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 7,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 58,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 58,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "LimitBytes",
                "variable" : 24
              },
              "go-type" : 9,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5761,
      "code" : "out.LimitBytes = (*int64)(unsafe.Pointer(in.LimitBytes))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 11 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 5762,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "InsecureSkipTLSVerifyBackend",
            "variable" : 25
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 29,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "InsecureSkipTLSVerifyBackend",
            "variable" : 26
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5762,
      "code" : "out.InsecureSkipTLSVerifyBackend = in.InsecureSkipTLSVerifyBackend",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 5763,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 59,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 5763,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func autoConvert_core_PodLogOptions_To_v1_PodLogOptions(in *core.PodLogOptions, out *v1.PodLogOptions, s conversion.Scope) error {\n\tout.Container = in.Container\n\tout.Follow = in.Follow\n\tout.Previous = in.Previous\n\tout.SinceSeconds = (*int64)(unsafe.Pointer(in.SinceSeconds))\n\tout.SinceTime = (*metav1.Time)(unsafe.Pointer(in.SinceTime))\n\tout.Timestamps = in.Timestamps\n\tout.TailLines = (*int64)(unsafe.Pointer(in.TailLines))\n\tout.LimitBytes = (*int64)(unsafe.Pointer(in.LimitBytes))\n\tout.InsecureSkipTLSVerifyBackend = in.InsecureSkipTLSVerifyBackend\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "autoConvert_core_PodLogOptions_To_v1_PodLogOptions",
      "package" : 0,
      "type" : 0,
      "exported" : false
    } ],
    "line-end" : 5764,
    "line-start" : 5753,
    "names" : [ "autoConvert_core_PodLogOptions_To_v1_PodLogOptions" ],
    "package" : 0,
    "packages" : [ {
      "name" : "v1",
      "path" : "k8s.io/kubernetes/pkg/apis/core/v1"
    }, {
      "name" : "core",
      "path" : "k8s.io/kubernetes/pkg/apis/core"
    }, {
      "name" : "v1",
      "path" : "k8s.io/apimachinery/pkg/apis/meta/v1"
    }, {
      "name" : "time",
      "path" : "time"
    }, {
      "name" : "v1",
      "path" : "k8s.io/api/core/v1"
    }, {
      "name" : "conversion",
      "path" : "k8s.io/apimachinery/pkg/conversion"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 5, 6, 7 ],
    "receivers" : [ ],
    "results" : [ 8 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.PodLogOptions, out *k8s.io/api/core/v1.PodLogOptions, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 1,
      "recv" : -1,
      "results" : 38,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 2
      }, {
        "name" : "out",
        "type" : 29
      }, {
        "name" : "s",
        "type" : 32
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.PodLogOptions, out *k8s.io/api/core/v1.PodLogOptions, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PodLogOptions",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "PodLogOptions",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PodLogOptions",
      "package" : 1,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "TypeMeta",
        "type" : 5
      }, {
        "name" : "Container",
        "type" : 7
      }, {
        "name" : "Follow",
        "type" : 8
      }, {
        "name" : "Previous",
        "type" : 8
      }, {
        "name" : "SinceSeconds",
        "type" : 9
      }, {
        "name" : "SinceTime",
        "type" : 11
      }, {
        "name" : "Timestamps",
        "type" : 8
      }, {
        "name" : "TailLines",
        "type" : 9
      }, {
        "name" : "LimitBytes",
        "type" : 9
      }, {
        "name" : "InsecureSkipTLSVerifyBackend",
        "type" : 8
      } ],
      "name" : "struct{k8s.io/apimachinery/pkg/apis/meta/v1.TypeMeta; Container string; Follow bool; Previous bool; SinceSeconds *int64; SinceTime *k8s.io/apimachinery/pkg/apis/meta/v1.Time; Timestamps bool; TailLines *int64; LimitBytes *int64; InsecureSkipTLSVerifyBackend bool}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "local-name" : "TypeMeta",
      "name" : "k8s.io/apimachinery/pkg/apis/meta/v1.TypeMeta",
      "package" : 2,
      "type" : "Named",
      "underlying" : 6
    }, {
      "fields" : [ {
        "name" : "Kind",
        "type" : 7
      }, {
        "name" : "APIVersion",
        "type" : 7
      } ],
      "name" : "struct{Kind string \"json:\\\"kind,omitempty\\\" protobuf:\\\"bytes,1,opt,name=kind\\\"\"; APIVersion string \"json:\\\"apiVersion,omitempty\\\" protobuf:\\\"bytes,2,opt,name=apiVersion\\\"\"}",
      "type" : "Struct",
      "underlying" : 6
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 7
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 8
    }, {
      "elem" : 10,
      "name" : "*int64",
      "type" : "Pointer",
      "underlying" : 9
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 10
    }, {
      "elem" : 12,
      "name" : "*k8s.io/apimachinery/pkg/apis/meta/v1.Time",
      "type" : "Pointer",
      "underlying" : 11
    }, {
      "local-name" : "Time",
      "name" : "k8s.io/apimachinery/pkg/apis/meta/v1.Time",
      "package" : 2,
      "type" : "Named",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "Time",
        "type" : 14
      } ],
      "name" : "struct{time.Time \"protobuf:\\\"-\\\"\"}",
      "type" : "Struct",
      "underlying" : 13
    }, {
      "local-name" : "Time",
      "name" : "time.Time",
      "package" : 3,
      "type" : "Named",
      "underlying" : 15
    }, {
      "fields" : [ {
        "name" : "wall",
        "type" : 16
      }, {
        "name" : "ext",
        "type" : 10
      }, {
        "name" : "loc",
        "type" : 17
      } ],
      "name" : "struct{wall uint64; ext int64; loc *time.Location}",
      "type" : "Struct",
      "underlying" : 15
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 16
    }, {
      "elem" : 18,
      "name" : "*time.Location",
      "type" : "Pointer",
      "underlying" : 17
    }, {
      "local-name" : "Location",
      "name" : "time.Location",
      "package" : 3,
      "type" : "Named",
      "underlying" : 19
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 7
      }, {
        "name" : "zone",
        "type" : 20
      }, {
        "name" : "tx",
        "type" : 24
      }, {
        "name" : "cacheStart",
        "type" : 10
      }, {
        "name" : "cacheEnd",
        "type" : 10
      }, {
        "name" : "cacheZone",
        "type" : 28
      } ],
      "name" : "struct{name string; zone []time.zone; tx []time.zoneTrans; cacheStart int64; cacheEnd int64; cacheZone *time.zone}",
      "type" : "Struct",
      "underlying" : 19
    }, {
      "elem" : 21,
      "name" : "[]time.zone",
      "type" : "Slice",
      "underlying" : 20
    }, {
      "local-name" : "zone",
      "name" : "time.zone",
      "package" : 3,
      "type" : "Named",
      "underlying" : 22
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 7
      }, {
        "name" : "offset",
        "type" : 23
      }, {
        "name" : "isDST",
        "type" : 8
      } ],
      "name" : "struct{name string; offset int; isDST bool}",
      "type" : "Struct",
      "underlying" : 22
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 23
    }, {
      "elem" : 25,
      "name" : "[]time.zoneTrans",
      "type" : "Slice",
      "underlying" : 24
    }, {
      "local-name" : "zoneTrans",
      "name" : "time.zoneTrans",
      "package" : 3,
      "type" : "Named",
      "underlying" : 26
    }, {
      "fields" : [ {
        "name" : "when",
        "type" : 10
      }, {
        "name" : "index",
        "type" : 27
      }, {
        "name" : "isstd",
        "type" : 8
      }, {
        "name" : "isutc",
        "type" : 8
      } ],
      "name" : "struct{when int64; index uint8; isstd bool; isutc bool}",
      "type" : "Struct",
      "underlying" : 26
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 27
    }, {
      "elem" : 21,
      "name" : "*time.zone",
      "type" : "Pointer",
      "underlying" : 28
    }, {
      "elem" : 30,
      "name" : "*k8s.io/api/core/v1.PodLogOptions",
      "type" : "Pointer",
      "underlying" : 29
    }, {
      "local-name" : "PodLogOptions",
      "name" : "k8s.io/api/core/v1.PodLogOptions",
      "package" : 4,
      "type" : "Named",
      "underlying" : 31
    }, {
      "fields" : [ {
        "name" : "TypeMeta",
        "type" : 5
      }, {
        "name" : "Container",
        "type" : 7
      }, {
        "name" : "Follow",
        "type" : 8
      }, {
        "name" : "Previous",
        "type" : 8
      }, {
        "name" : "SinceSeconds",
        "type" : 9
      }, {
        "name" : "SinceTime",
        "type" : 11
      }, {
        "name" : "Timestamps",
        "type" : 8
      }, {
        "name" : "TailLines",
        "type" : 9
      }, {
        "name" : "LimitBytes",
        "type" : 9
      }, {
        "name" : "InsecureSkipTLSVerifyBackend",
        "type" : 8
      } ],
      "name" : "struct{k8s.io/apimachinery/pkg/apis/meta/v1.TypeMeta \"json:\\\",inline\\\"\"; Container string \"json:\\\"container,omitempty\\\" protobuf:\\\"bytes,1,opt,name=container\\\"\"; Follow bool \"json:\\\"follow,omitempty\\\" protobuf:\\\"varint,2,opt,name=follow\\\"\"; Previous bool \"json:\\\"previous,omitempty\\\" protobuf:\\\"varint,3,opt,name=previous\\\"\"; SinceSeconds *int64 \"json:\\\"sinceSeconds,omitempty\\\" protobuf:\\\"varint,4,opt,name=sinceSeconds\\\"\"; SinceTime *k8s.io/apimachinery/pkg/apis/meta/v1.Time \"json:\\\"sinceTime,omitempty\\\" protobuf:\\\"bytes,5,opt,name=sinceTime\\\"\"; Timestamps bool \"json:\\\"timestamps,omitempty\\\" protobuf:\\\"varint,6,opt,name=timestamps\\\"\"; TailLines *int64 \"json:\\\"tailLines,omitempty\\\" protobuf:\\\"varint,7,opt,name=tailLines\\\"\"; LimitBytes *int64 \"json:\\\"limitBytes,omitempty\\\" protobuf:\\\"varint,8,opt,name=limitBytes\\\"\"; InsecureSkipTLSVerifyBackend bool \"json:\\\"insecureSkipTLSVerifyBackend,omitempty\\\" protobuf:\\\"varint,9,opt,name=insecureSkipTLSVerifyBackend\\\"\"}",
      "type" : "Struct",
      "underlying" : 31
    }, {
      "local-name" : "Scope",
      "name" : "k8s.io/apimachinery/pkg/conversion.Scope",
      "package" : 5,
      "type" : "Named",
      "underlying" : 33
    }, {
      "methods" : [ {
        "name" : "Convert",
        "type" : 34
      }, {
        "name" : "DefaultConvert",
        "type" : 34
      }, {
        "name" : "DestTag",
        "type" : 44
      }, {
        "name" : "Flags",
        "type" : 47
      }, {
        "name" : "Meta",
        "type" : 49
      }, {
        "name" : "SrcTag",
        "type" : 44
      } ],
      "name" : "interface{Convert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DefaultConvert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DestTag() reflect.StructTag; Flags() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags; Meta() *k8s.io/apimachinery/pkg/conversion.Meta; SrcTag() reflect.StructTag}",
      "type" : "Interface",
      "underlying" : 33
    }, {
      "name" : "func(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error",
      "params" : 35,
      "recv" : 1,
      "results" : 38,
      "type" : "Signature",
      "underlying" : 34,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 36
      }, {
        "name" : "dest",
        "type" : 36
      }, {
        "name" : "flags",
        "type" : 37
      } ],
      "name" : "(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 35
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 36
    }, {
      "local-name" : "FieldMatchingFlags",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "package" : 5,
      "type" : "Named",
      "underlying" : 23
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 39
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 38
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 40
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 41
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 40
    }, {
      "name" : "func() string",
      "params" : 42,
      "recv" : 0,
      "results" : 43,
      "type" : "Signature",
      "underlying" : 41,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 42
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 7
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 43
    }, {
      "name" : "func() reflect.StructTag",
      "params" : 42,
      "recv" : 2,
      "results" : 45,
      "type" : "Signature",
      "underlying" : 44,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 46
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 45
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 6,
      "type" : "Named",
      "underlying" : 7
    }, {
      "name" : "func() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "params" : 42,
      "recv" : 3,
      "results" : 48,
      "type" : "Signature",
      "underlying" : 47,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 37
      } ],
      "name" : "(k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 48
    }, {
      "name" : "func() *k8s.io/apimachinery/pkg/conversion.Meta",
      "params" : 42,
      "recv" : 4,
      "results" : 50,
      "type" : "Signature",
      "underlying" : 49,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 51
      } ],
      "name" : "(*k8s.io/apimachinery/pkg/conversion.Meta)",
      "type" : "Tuple",
      "underlying" : 50
    }, {
      "elem" : 52,
      "name" : "*k8s.io/apimachinery/pkg/conversion.Meta",
      "type" : "Pointer",
      "underlying" : 51
    }, {
      "local-name" : "Meta",
      "name" : "k8s.io/apimachinery/pkg/conversion.Meta",
      "package" : 5,
      "type" : "Named",
      "underlying" : 53
    }, {
      "fields" : [ {
        "name" : "KeyNameMapping",
        "type" : 54
      }, {
        "name" : "Context",
        "type" : 36
      } ],
      "name" : "struct{KeyNameMapping k8s.io/apimachinery/pkg/conversion.FieldMappingFunc; Context interface{}}",
      "type" : "Struct",
      "underlying" : 53
    }, {
      "local-name" : "FieldMappingFunc",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMappingFunc",
      "package" : 5,
      "type" : "Named",
      "underlying" : 55
    }, {
      "name" : "func(key string, sourceTag reflect.StructTag, destTag reflect.StructTag) (source string, dest string)",
      "params" : 56,
      "recv" : -1,
      "results" : 57,
      "type" : "Signature",
      "underlying" : 55,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 7
      }, {
        "name" : "sourceTag",
        "type" : 46
      }, {
        "name" : "destTag",
        "type" : 46
      } ],
      "name" : "(key string, sourceTag reflect.StructTag, destTag reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 56
    }, {
      "fields" : [ {
        "name" : "source",
        "type" : 7
      }, {
        "name" : "dest",
        "type" : 7
      } ],
      "name" : "(source string, dest string)",
      "type" : "Tuple",
      "underlying" : 57
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 7,
      "type" : "Basic",
      "underlying" : 58
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 59
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 39,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 32,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 32,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 32,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 32,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 32,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 39,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Container",
      "package" : 4,
      "type" : 7,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Container",
      "package" : 1,
      "type" : 7,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Follow",
      "package" : 4,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Follow",
      "package" : 1,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Previous",
      "package" : 4,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Previous",
      "package" : 1,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "SinceSeconds",
      "package" : 4,
      "type" : 9,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "SinceSeconds",
      "package" : 1,
      "type" : 9,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "SinceTime",
      "package" : 4,
      "type" : 11,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "SinceTime",
      "package" : 1,
      "type" : 11,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Timestamps",
      "package" : 4,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Timestamps",
      "package" : 1,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "TailLines",
      "package" : 4,
      "type" : 9,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "TailLines",
      "package" : 1,
      "type" : 9,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "LimitBytes",
      "package" : 4,
      "type" : 9,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "LimitBytes",
      "package" : 1,
      "type" : 9,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "InsecureSkipTLSVerifyBackend",
      "package" : 4,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "InsecureSkipTLSVerifyBackend",
      "package" : 1,
      "type" : 8,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}