{
  "usage" : {
    "file" : "zz_generated.conversion.go",
    "label1" : "cast-basic",
    "label2" : "efficiency",
    "line" : "5960",
    "module" : "k8s.io/kubernetes",
    "pkg" : "k8s.io/kubernetes/pkg/apis/core/v1",
    "project" : "rancher/rancher",
    "snippet" : "out.RunAsUser = (*int64)(unsafe.Pointer(in.RunAsUser))",
    "version" : "v1.18.0"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 3 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5958,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "SELinuxOptions",
            "variable" : 9
          },
          "go-type" : 26,
          "kind" : "expression",
          "target" : {
            "go-type" : 23,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 27,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 2,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 27,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "SELinuxOptions"
              }
            },
            "go-type" : 26,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 26,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 64,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 64,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 64,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "SELinuxOptions",
                "variable" : 10
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5958,
      "code" : "out.SELinuxOptions = (*v1.SELinuxOptions)(unsafe.Pointer(in.SELinuxOptions))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 4 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5959,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "WindowsOptions",
            "variable" : 11
          },
          "go-type" : 29,
          "kind" : "expression",
          "target" : {
            "go-type" : 23,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 30,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 2,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 30,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "WindowsSecurityContextOptions"
              }
            },
            "go-type" : 29,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 29,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 64,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 64,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 64,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "WindowsOptions",
                "variable" : 12
              },
              "go-type" : 11,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5959,
      "code" : "out.WindowsOptions = (*v1.WindowsSecurityContextOptions)(unsafe.Pointer(in.WindowsOptions))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 5 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 5960,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "RunAsUser",
            "variable" : 13
          },
          "go-type" : 15,
          "kind" : "expression",
          "target" : {
            "go-type" : 23,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 16,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 16,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "int64"
              }
            },
            "go-type" : 15,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 15,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 64,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 64,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 64,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "RunAsUser",
                "variable" : 14
              },
              "go-type" : 15,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5960,
      "code" : "out.RunAsUser = (*int64)(unsafe.Pointer(in.RunAsUser))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 6 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5961,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "RunAsGroup",
            "variable" : 15
          },
          "go-type" : 15,
          "kind" : "expression",
          "target" : {
            "go-type" : 23,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 16,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 16,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "int64"
              }
            },
            "go-type" : 15,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 15,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 64,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 64,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 64,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "RunAsGroup",
                "variable" : 16
              },
              "go-type" : 15,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5961,
      "code" : "out.RunAsGroup = (*int64)(unsafe.Pointer(in.RunAsGroup))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 7 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5962,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "RunAsNonRoot",
            "variable" : 17
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "go-type" : 23,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 5,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 5,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "bool"
              }
            },
            "go-type" : 6,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 64,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 64,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 64,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "RunAsNonRoot",
                "variable" : 18
              },
              "go-type" : 6,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5962,
      "code" : "out.RunAsNonRoot = (*bool)(unsafe.Pointer(in.RunAsNonRoot))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 8 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5963,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "SupplementalGroups",
            "variable" : 19
          },
          "go-type" : 17,
          "kind" : "expression",
          "target" : {
            "go-type" : 23,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 17,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 16,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 16,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "int64"
                  }
                },
                "go-type" : 17,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 65,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 65,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 64,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 5,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 64,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 64,
              "kind" : "expression",
              "target" : {
                "go-type" : 65,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "SupplementalGroups",
                    "variable" : 20
                  },
                  "go-type" : 17,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5963,
      "code" : "out.SupplementalGroups = *(*[]int64)(unsafe.Pointer(&in.SupplementalGroups))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 9 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5964,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "FSGroup",
            "variable" : 21
          },
          "go-type" : 15,
          "kind" : "expression",
          "target" : {
            "go-type" : 23,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 16,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 16,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "int64"
              }
            },
            "go-type" : 15,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 15,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 64,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 64,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 64,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "FSGroup",
                "variable" : 22
              },
              "go-type" : 15,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5964,
      "code" : "out.FSGroup = (*int64)(unsafe.Pointer(in.FSGroup))",
      "entry" : false,
      "use-vars" : [ 6, 5 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 10 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ 6, 5 ],
      "decl-vars" : [ ],
      "line-start" : 5965,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "FSGroupChangePolicy",
            "variable" : 23
          },
          "go-type" : 35,
          "kind" : "expression",
          "target" : {
            "go-type" : 23,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 36,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 2,
                "value" : "v1"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 36,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "PodFSGroupChangePolicy"
              }
            },
            "go-type" : 35,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 35,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 64,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 64,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 64,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "FSGroupChangePolicy",
                "variable" : 24
              },
              "go-type" : 18,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5965,
      "code" : "out.FSGroupChangePolicy = (*v1.PodFSGroupChangePolicy)(unsafe.Pointer(in.FSGroupChangePolicy))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 11 ],
      "in-vars" : [ 6, 5 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 5966,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Sysctls",
            "variable" : 25
          },
          "go-type" : 32,
          "kind" : "expression",
          "target" : {
            "go-type" : 23,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 32,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 33,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 2,
                    "value" : "v1"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 33,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Sysctl"
                  }
                },
                "go-type" : 32,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 66,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 66,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 64,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 5,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 64,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 64,
              "kind" : "expression",
              "target" : {
                "go-type" : 67,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "Sysctls",
                    "variable" : 26
                  },
                  "go-type" : 20,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "in",
                      "variable" : 5
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 5966,
      "code" : "out.Sysctls = *(*[]v1.Sysctl)(unsafe.Pointer(&in.Sysctls))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 5967,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 68,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 5967,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func autoConvert_core_PodSecurityContext_To_v1_PodSecurityContext(in *core.PodSecurityContext, out *v1.PodSecurityContext, s conversion.Scope) error {\n\n\tout.SELinuxOptions = (*v1.SELinuxOptions)(unsafe.Pointer(in.SELinuxOptions))\n\tout.WindowsOptions = (*v1.WindowsSecurityContextOptions)(unsafe.Pointer(in.WindowsOptions))\n\tout.RunAsUser = (*int64)(unsafe.Pointer(in.RunAsUser))\n\tout.RunAsGroup = (*int64)(unsafe.Pointer(in.RunAsGroup))\n\tout.RunAsNonRoot = (*bool)(unsafe.Pointer(in.RunAsNonRoot))\n\tout.SupplementalGroups = *(*[]int64)(unsafe.Pointer(&in.SupplementalGroups))\n\tout.FSGroup = (*int64)(unsafe.Pointer(in.FSGroup))\n\tout.FSGroupChangePolicy = (*v1.PodFSGroupChangePolicy)(unsafe.Pointer(in.FSGroupChangePolicy))\n\tout.Sysctls = *(*[]v1.Sysctl)(unsafe.Pointer(&in.Sysctls))\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "autoConvert_core_PodSecurityContext_To_v1_PodSecurityContext",
      "package" : 0,
      "type" : 0,
      "exported" : false
    } ],
    "line-end" : 5968,
    "line-start" : 5953,
    "names" : [ "autoConvert_core_PodSecurityContext_To_v1_PodSecurityContext" ],
    "package" : 0,
    "packages" : [ {
      "name" : "v1",
      "path" : "k8s.io/kubernetes/pkg/apis/core/v1"
    }, {
      "name" : "core",
      "path" : "k8s.io/kubernetes/pkg/apis/core"
    }, {
      "name" : "v1",
      "path" : "k8s.io/api/core/v1"
    }, {
      "name" : "conversion",
      "path" : "k8s.io/apimachinery/pkg/conversion"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 5, 6, 7 ],
    "receivers" : [ ],
    "results" : [ 8 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.PodSecurityContext, out *k8s.io/api/core/v1.PodSecurityContext, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 1,
      "recv" : -1,
      "results" : 44,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 2
      }, {
        "name" : "out",
        "type" : 23
      }, {
        "name" : "s",
        "type" : 37
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.PodSecurityContext, out *k8s.io/api/core/v1.PodSecurityContext, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PodSecurityContext",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "PodSecurityContext",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PodSecurityContext",
      "package" : 1,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "HostNetwork",
        "type" : 5
      }, {
        "name" : "HostPID",
        "type" : 5
      }, {
        "name" : "HostIPC",
        "type" : 5
      }, {
        "name" : "ShareProcessNamespace",
        "type" : 6
      }, {
        "name" : "SELinuxOptions",
        "type" : 7
      }, {
        "name" : "WindowsOptions",
        "type" : 11
      }, {
        "name" : "RunAsUser",
        "type" : 15
      }, {
        "name" : "RunAsGroup",
        "type" : 15
      }, {
        "name" : "RunAsNonRoot",
        "type" : 6
      }, {
        "name" : "SupplementalGroups",
        "type" : 17
      }, {
        "name" : "FSGroup",
        "type" : 15
      }, {
        "name" : "FSGroupChangePolicy",
        "type" : 18
      }, {
        "name" : "Sysctls",
        "type" : 20
      } ],
      "name" : "struct{HostNetwork bool; HostPID bool; HostIPC bool; ShareProcessNamespace *bool; SELinuxOptions *k8s.io/kubernetes/pkg/apis/core.SELinuxOptions; WindowsOptions *k8s.io/kubernetes/pkg/apis/core.WindowsSecurityContextOptions; RunAsUser *int64; RunAsGroup *int64; RunAsNonRoot *bool; SupplementalGroups []int64; FSGroup *int64; FSGroupChangePolicy *k8s.io/kubernetes/pkg/apis/core.PodFSGroupChangePolicy; Sysctls []k8s.io/kubernetes/pkg/apis/core.Sysctl}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 5
    }, {
      "elem" : 5,
      "name" : "*bool",
      "type" : "Pointer",
      "underlying" : 6
    }, {
      "elem" : 8,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.SELinuxOptions",
      "type" : "Pointer",
      "underlying" : 7
    }, {
      "local-name" : "SELinuxOptions",
      "name" : "k8s.io/kubernetes/pkg/apis/core.SELinuxOptions",
      "package" : 1,
      "type" : "Named",
      "underlying" : 9
    }, {
      "fields" : [ {
        "name" : "User",
        "type" : 10
      }, {
        "name" : "Role",
        "type" : 10
      }, {
        "name" : "Type",
        "type" : 10
      }, {
        "name" : "Level",
        "type" : 10
      } ],
      "name" : "struct{User string; Role string; Type string; Level string}",
      "type" : "Struct",
      "underlying" : 9
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 10
    }, {
      "elem" : 12,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.WindowsSecurityContextOptions",
      "type" : "Pointer",
      "underlying" : 11
    }, {
      "local-name" : "WindowsSecurityContextOptions",
      "name" : "k8s.io/kubernetes/pkg/apis/core.WindowsSecurityContextOptions",
      "package" : 1,
      "type" : "Named",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "GMSACredentialSpecName",
        "type" : 14
      }, {
        "name" : "GMSACredentialSpec",
        "type" : 14
      }, {
        "name" : "RunAsUserName",
        "type" : 14
      } ],
      "name" : "struct{GMSACredentialSpecName *string; GMSACredentialSpec *string; RunAsUserName *string}",
      "type" : "Struct",
      "underlying" : 13
    }, {
      "elem" : 10,
      "name" : "*string",
      "type" : "Pointer",
      "underlying" : 14
    }, {
      "elem" : 16,
      "name" : "*int64",
      "type" : "Pointer",
      "underlying" : 15
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 16
    }, {
      "elem" : 16,
      "name" : "[]int64",
      "type" : "Slice",
      "underlying" : 17
    }, {
      "elem" : 19,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.PodFSGroupChangePolicy",
      "type" : "Pointer",
      "underlying" : 18
    }, {
      "local-name" : "PodFSGroupChangePolicy",
      "name" : "k8s.io/kubernetes/pkg/apis/core.PodFSGroupChangePolicy",
      "package" : 1,
      "type" : "Named",
      "underlying" : 10
    }, {
      "elem" : 21,
      "name" : "[]k8s.io/kubernetes/pkg/apis/core.Sysctl",
      "type" : "Slice",
      "underlying" : 20
    }, {
      "local-name" : "Sysctl",
      "name" : "k8s.io/kubernetes/pkg/apis/core.Sysctl",
      "package" : 1,
      "type" : "Named",
      "underlying" : 22
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 10
      }, {
        "name" : "Value",
        "type" : 10
      } ],
      "name" : "struct{Name string; Value string}",
      "type" : "Struct",
      "underlying" : 22
    }, {
      "elem" : 24,
      "name" : "*k8s.io/api/core/v1.PodSecurityContext",
      "type" : "Pointer",
      "underlying" : 23
    }, {
      "local-name" : "PodSecurityContext",
      "name" : "k8s.io/api/core/v1.PodSecurityContext",
      "package" : 2,
      "type" : "Named",
      "underlying" : 25
    }, {
      "fields" : [ {
        "name" : "SELinuxOptions",
        "type" : 26
      }, {
        "name" : "WindowsOptions",
        "type" : 29
      }, {
        "name" : "RunAsUser",
        "type" : 15
      }, {
        "name" : "RunAsGroup",
        "type" : 15
      }, {
        "name" : "RunAsNonRoot",
        "type" : 6
      }, {
        "name" : "SupplementalGroups",
        "type" : 17
      }, {
        "name" : "FSGroup",
        "type" : 15
      }, {
        "name" : "Sysctls",
        "type" : 32
      }, {
        "name" : "FSGroupChangePolicy",
        "type" : 35
      } ],
      "name" : "struct{SELinuxOptions *k8s.io/api/core/v1.SELinuxOptions \"json:\\\"seLinuxOptions,omitempty\\\" protobuf:\\\"bytes,1,opt,name=seLinuxOptions\\\"\"; WindowsOptions *k8s.io/api/core/v1.WindowsSecurityContextOptions \"json:\\\"windowsOptions,omitempty\\\" protobuf:\\\"bytes,8,opt,name=windowsOptions\\\"\"; RunAsUser *int64 \"json:\\\"runAsUser,omitempty\\\" protobuf:\\\"varint,2,opt,name=runAsUser\\\"\"; RunAsGroup *int64 \"json:\\\"runAsGroup,omitempty\\\" protobuf:\\\"varint,6,opt,name=runAsGroup\\\"\"; RunAsNonRoot *bool \"json:\\\"runAsNonRoot,omitempty\\\" protobuf:\\\"varint,3,opt,name=runAsNonRoot\\\"\"; SupplementalGroups []int64 \"json:\\\"supplementalGroups,omitempty\\\" protobuf:\\\"varint,4,rep,name=supplementalGroups\\\"\"; FSGroup *int64 \"json:\\\"fsGroup,omitempty\\\" protobuf:\\\"varint,5,opt,name=fsGroup\\\"\"; Sysctls []k8s.io/api/core/v1.Sysctl \"json:\\\"sysctls,omitempty\\\" protobuf:\\\"bytes,7,rep,name=sysctls\\\"\"; FSGroupChangePolicy *k8s.io/api/core/v1.PodFSGroupChangePolicy \"json:\\\"fsGroupChangePolicy,omitempty\\\" protobuf:\\\"bytes,9,opt,name=fsGroupChangePolicy\\\"\"}",
      "type" : "Struct",
      "underlying" : 25
    }, {
      "elem" : 27,
      "name" : "*k8s.io/api/core/v1.SELinuxOptions",
      "type" : "Pointer",
      "underlying" : 26
    }, {
      "local-name" : "SELinuxOptions",
      "name" : "k8s.io/api/core/v1.SELinuxOptions",
      "package" : 2,
      "type" : "Named",
      "underlying" : 28
    }, {
      "fields" : [ {
        "name" : "User",
        "type" : 10
      }, {
        "name" : "Role",
        "type" : 10
      }, {
        "name" : "Type",
        "type" : 10
      }, {
        "name" : "Level",
        "type" : 10
      } ],
      "name" : "struct{User string \"json:\\\"user,omitempty\\\" protobuf:\\\"bytes,1,opt,name=user\\\"\"; Role string \"json:\\\"role,omitempty\\\" protobuf:\\\"bytes,2,opt,name=role\\\"\"; Type string \"json:\\\"type,omitempty\\\" protobuf:\\\"bytes,3,opt,name=type\\\"\"; Level string \"json:\\\"level,omitempty\\\" protobuf:\\\"bytes,4,opt,name=level\\\"\"}",
      "type" : "Struct",
      "underlying" : 28
    }, {
      "elem" : 30,
      "name" : "*k8s.io/api/core/v1.WindowsSecurityContextOptions",
      "type" : "Pointer",
      "underlying" : 29
    }, {
      "local-name" : "WindowsSecurityContextOptions",
      "name" : "k8s.io/api/core/v1.WindowsSecurityContextOptions",
      "package" : 2,
      "type" : "Named",
      "underlying" : 31
    }, {
      "fields" : [ {
        "name" : "GMSACredentialSpecName",
        "type" : 14
      }, {
        "name" : "GMSACredentialSpec",
        "type" : 14
      }, {
        "name" : "RunAsUserName",
        "type" : 14
      } ],
      "name" : "struct{GMSACredentialSpecName *string \"json:\\\"gmsaCredentialSpecName,omitempty\\\" protobuf:\\\"bytes,1,opt,name=gmsaCredentialSpecName\\\"\"; GMSACredentialSpec *string \"json:\\\"gmsaCredentialSpec,omitempty\\\" protobuf:\\\"bytes,2,opt,name=gmsaCredentialSpec\\\"\"; RunAsUserName *string \"json:\\\"runAsUserName,omitempty\\\" protobuf:\\\"bytes,3,opt,name=runAsUserName\\\"\"}",
      "type" : "Struct",
      "underlying" : 31
    }, {
      "elem" : 33,
      "name" : "[]k8s.io/api/core/v1.Sysctl",
      "type" : "Slice",
      "underlying" : 32
    }, {
      "local-name" : "Sysctl",
      "name" : "k8s.io/api/core/v1.Sysctl",
      "package" : 2,
      "type" : "Named",
      "underlying" : 34
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 10
      }, {
        "name" : "Value",
        "type" : 10
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; Value string \"json:\\\"value\\\" protobuf:\\\"bytes,2,opt,name=value\\\"\"}",
      "type" : "Struct",
      "underlying" : 34
    }, {
      "elem" : 36,
      "name" : "*k8s.io/api/core/v1.PodFSGroupChangePolicy",
      "type" : "Pointer",
      "underlying" : 35
    }, {
      "local-name" : "PodFSGroupChangePolicy",
      "name" : "k8s.io/api/core/v1.PodFSGroupChangePolicy",
      "package" : 2,
      "type" : "Named",
      "underlying" : 10
    }, {
      "local-name" : "Scope",
      "name" : "k8s.io/apimachinery/pkg/conversion.Scope",
      "package" : 3,
      "type" : "Named",
      "underlying" : 38
    }, {
      "methods" : [ {
        "name" : "Convert",
        "type" : 39
      }, {
        "name" : "DestTag",
        "type" : 50
      }, {
        "name" : "Flags",
        "type" : 53
      }, {
        "name" : "Meta",
        "type" : 55
      }, {
        "name" : "SrcTag",
        "type" : 50
      } ],
      "name" : "interface{Convert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DestTag() reflect.StructTag; Flags() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags; Meta() *k8s.io/apimachinery/pkg/conversion.Meta; SrcTag() reflect.StructTag}",
      "type" : "Interface",
      "underlying" : 38
    }, {
      "name" : "func(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error",
      "params" : 40,
      "recv" : 1,
      "results" : 44,
      "type" : "Signature",
      "underlying" : 39,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 41
      }, {
        "name" : "dest",
        "type" : 41
      }, {
        "name" : "flags",
        "type" : 42
      } ],
      "name" : "(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 40
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 41
    }, {
      "local-name" : "FieldMatchingFlags",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "package" : 3,
      "type" : "Named",
      "underlying" : 43
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 43
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 45
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 44
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 46
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 47
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 46
    }, {
      "name" : "func() string",
      "params" : 48,
      "recv" : 0,
      "results" : 49,
      "type" : "Signature",
      "underlying" : 47,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 48
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 10
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 49
    }, {
      "name" : "func() reflect.StructTag",
      "params" : 48,
      "recv" : 2,
      "results" : 51,
      "type" : "Signature",
      "underlying" : 50,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 52
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 51
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 4,
      "type" : "Named",
      "underlying" : 10
    }, {
      "name" : "func() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "params" : 48,
      "recv" : 3,
      "results" : 54,
      "type" : "Signature",
      "underlying" : 53,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 42
      } ],
      "name" : "(k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 54
    }, {
      "name" : "func() *k8s.io/apimachinery/pkg/conversion.Meta",
      "params" : 48,
      "recv" : 4,
      "results" : 56,
      "type" : "Signature",
      "underlying" : 55,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 57
      } ],
      "name" : "(*k8s.io/apimachinery/pkg/conversion.Meta)",
      "type" : "Tuple",
      "underlying" : 56
    }, {
      "elem" : 58,
      "name" : "*k8s.io/apimachinery/pkg/conversion.Meta",
      "type" : "Pointer",
      "underlying" : 57
    }, {
      "local-name" : "Meta",
      "name" : "k8s.io/apimachinery/pkg/conversion.Meta",
      "package" : 3,
      "type" : "Named",
      "underlying" : 59
    }, {
      "fields" : [ {
        "name" : "KeyNameMapping",
        "type" : 60
      }, {
        "name" : "Context",
        "type" : 41
      } ],
      "name" : "struct{KeyNameMapping k8s.io/apimachinery/pkg/conversion.FieldMappingFunc; Context interface{}}",
      "type" : "Struct",
      "underlying" : 59
    }, {
      "local-name" : "FieldMappingFunc",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMappingFunc",
      "package" : 3,
      "type" : "Named",
      "underlying" : 61
    }, {
      "name" : "func(key string, sourceTag reflect.StructTag, destTag reflect.StructTag) (source string, dest string)",
      "params" : 62,
      "recv" : -1,
      "results" : 63,
      "type" : "Signature",
      "underlying" : 61,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 10
      }, {
        "name" : "sourceTag",
        "type" : 52
      }, {
        "name" : "destTag",
        "type" : 52
      } ],
      "name" : "(key string, sourceTag reflect.StructTag, destTag reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 62
    }, {
      "fields" : [ {
        "name" : "source",
        "type" : 10
      }, {
        "name" : "dest",
        "type" : 10
      } ],
      "name" : "(source string, dest string)",
      "type" : "Tuple",
      "underlying" : 63
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 5,
      "type" : "Basic",
      "underlying" : 64
    }, {
      "elem" : 17,
      "name" : "*[]int64",
      "type" : "Pointer",
      "underlying" : 65
    }, {
      "elem" : 32,
      "name" : "*[]k8s.io/api/core/v1.Sysctl",
      "type" : "Pointer",
      "underlying" : 66
    }, {
      "elem" : 20,
      "name" : "*[]k8s.io/kubernetes/pkg/apis/core.Sysctl",
      "type" : "Pointer",
      "underlying" : 67
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 68
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 45,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 3,
      "type" : 37,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 3,
      "type" : 37,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 3,
      "type" : 37,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 3,
      "type" : 37,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 23,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 37,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 45,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "SELinuxOptions",
      "package" : 2,
      "type" : 26,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "SELinuxOptions",
      "package" : 1,
      "type" : 7,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "WindowsOptions",
      "package" : 2,
      "type" : 29,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "WindowsOptions",
      "package" : 1,
      "type" : 11,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "RunAsUser",
      "package" : 2,
      "type" : 15,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "RunAsUser",
      "package" : 1,
      "type" : 15,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "RunAsGroup",
      "package" : 2,
      "type" : 15,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "RunAsGroup",
      "package" : 1,
      "type" : 15,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "RunAsNonRoot",
      "package" : 2,
      "type" : 6,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "RunAsNonRoot",
      "package" : 1,
      "type" : 6,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "SupplementalGroups",
      "package" : 2,
      "type" : 17,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "SupplementalGroups",
      "package" : 1,
      "type" : 17,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "FSGroup",
      "package" : 2,
      "type" : 15,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "FSGroup",
      "package" : 1,
      "type" : 15,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "FSGroupChangePolicy",
      "package" : 2,
      "type" : 35,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "FSGroupChangePolicy",
      "package" : 1,
      "type" : 18,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Sysctls",
      "package" : 2,
      "type" : 32,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Sysctls",
      "package" : 1,
      "type" : 20,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}