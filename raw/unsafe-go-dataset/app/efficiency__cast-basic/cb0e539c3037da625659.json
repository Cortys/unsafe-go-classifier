{
  "usage" : {
    "file" : "zz_generated.conversion.go",
    "label1" : "cast-basic",
    "label2" : "efficiency",
    "line" : "3080",
    "module" : "k8s.io/kubernetes",
    "pkg" : "k8s.io/kubernetes/pkg/apis/core/v1",
    "project" : "rancher/rancher",
    "snippet" : "out.Started = (*bool)(unsafe.Pointer(in.Started))",
    "version" : "v1.18.0"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 5, 6, 7 ],
      "exit" : false,
      "out-vars" : [ 7, 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 4 ],
      "in-vars" : [ 6, 7, 5 ],
      "exit" : false,
      "out-vars" : [ 5, 6, 7 ],
      "decl-vars" : [ ],
      "line-start" : 3068,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Name",
            "variable" : 9
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 38,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Name",
            "variable" : 10
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3068,
      "code" : "out.Name = in.Name",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5, 7 ],
      "in-vars" : [ 13, 5, 6, 7 ],
      "exit" : false,
      "out-vars" : [ 7, 13, 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 3069,
      "ast" : {
        "condition" : {
          "go-type" : 82,
          "kind" : "expression",
          "left" : {
            "go-type" : 59,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 13
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 83,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 3071,
      "code" : "if err := Convert_core_ContainerState_To_v1_ContainerState(&in.State, &out.State, s); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 13 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 5, 6, 7 ],
      "exit" : false,
      "out-vars" : [ 7, 13, 5, 6 ],
      "decl-vars" : [ 13 ],
      "line-start" : 3069,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 80,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "State",
                "variable" : 11
              },
              "go-type" : 6,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 81,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "State",
                "variable" : 12
              },
              "go-type" : 41,
              "kind" : "expression",
              "target" : {
                "go-type" : 38,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "out",
                  "variable" : 6
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 52,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "s",
              "variable" : 7
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 78,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Convert_core_ContainerState_To_v1_ContainerState"
            }
          },
          "go-type" : 59,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 3069,
      "code" : "err := Convert_core_ContainerState_To_v1_ContainerState(&in.State, &out.State, s)",
      "entry" : false,
      "use-vars" : [ 5, 6, 7 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 13 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 3070,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 59,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 13
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 3070,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 13 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 8, 9 ],
      "in-vars" : [ 5, 6, 16 ],
      "exit" : false,
      "out-vars" : [ 5, 6, 16 ],
      "decl-vars" : [ ],
      "line-start" : 3072,
      "ast" : {
        "condition" : {
          "go-type" : 82,
          "kind" : "expression",
          "left" : {
            "go-type" : 59,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 16
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 83,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 3074,
      "code" : "if err := Convert_core_ContainerState_To_v1_ContainerState(&in.LastTerminationState, &out.LastTerminationState, s); err != nil {\n\treturn err\n}",
      "entry" : false,
      "use-vars" : [ 16 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6 ],
      "in-vars" : [ 7, 5, 6 ],
      "exit" : false,
      "out-vars" : [ 16, 5, 6 ],
      "decl-vars" : [ 16 ],
      "line-start" : 3072,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 80,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "LastTerminationState",
                "variable" : 14
              },
              "go-type" : 6,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 81,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "LastTerminationState",
                "variable" : 15
              },
              "go-type" : 41,
              "kind" : "expression",
              "target" : {
                "go-type" : 38,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "out",
                  "variable" : 6
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          }, {
            "go-type" : 52,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "s",
              "variable" : 7
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 78,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Convert_core_ContainerState_To_v1_ContainerState"
            }
          },
          "go-type" : 59,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 3072,
      "code" : "err := Convert_core_ContainerState_To_v1_ContainerState(&in.LastTerminationState, &out.LastTerminationState, s)",
      "entry" : false,
      "use-vars" : [ 6, 7, 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 16 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 3073,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 59,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 16
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 3073,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 16 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 10 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 3075,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Ready",
            "variable" : 17
          },
          "go-type" : 27,
          "kind" : "expression",
          "target" : {
            "go-type" : 38,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Ready",
            "variable" : 18
          },
          "go-type" : 27,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3075,
      "code" : "out.Ready = in.Ready",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 11 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 3076,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "RestartCount",
            "variable" : 19
          },
          "go-type" : 36,
          "kind" : "expression",
          "target" : {
            "go-type" : 38,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "RestartCount",
            "variable" : 20
          },
          "go-type" : 36,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3076,
      "code" : "out.RestartCount = in.RestartCount",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 12 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 3077,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Image",
            "variable" : 21
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 38,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Image",
            "variable" : 22
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3077,
      "code" : "out.Image = in.Image",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 13 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 3078,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ImageID",
            "variable" : 23
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 38,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ImageID",
            "variable" : 24
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3078,
      "code" : "out.ImageID = in.ImageID",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 14 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ 5, 6 ],
      "decl-vars" : [ ],
      "line-start" : 3079,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ContainerID",
            "variable" : 25
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 38,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ContainerID",
            "variable" : 26
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "in",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3079,
      "code" : "out.ContainerID = in.ContainerID",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ 6 ],
      "successors" : [ 15 ],
      "in-vars" : [ 5, 6 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 3080,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Started",
            "variable" : 27
          },
          "go-type" : 37,
          "kind" : "expression",
          "target" : {
            "go-type" : 38,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "out",
              "variable" : 6
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 27,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 27,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "bool"
              }
            },
            "go-type" : 37,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 37,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 84,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 7,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 84,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 84,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Started",
                "variable" : 28
              },
              "go-type" : 37,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "in",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 3080,
      "code" : "out.Started = (*bool)(unsafe.Pointer(in.Started))",
      "entry" : false,
      "use-vars" : [ 5, 6 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 3081,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 83,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 3081,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func autoConvert_core_ContainerStatus_To_v1_ContainerStatus(in *core.ContainerStatus, out *v1.ContainerStatus, s conversion.Scope) error {\n\tout.Name = in.Name\n\tif err := Convert_core_ContainerState_To_v1_ContainerState(&in.State, &out.State, s); err != nil {\n\t\treturn err\n\t}\n\tif err := Convert_core_ContainerState_To_v1_ContainerState(&in.LastTerminationState, &out.LastTerminationState, s); err != nil {\n\t\treturn err\n\t}\n\tout.Ready = in.Ready\n\tout.RestartCount = in.RestartCount\n\tout.Image = in.Image\n\tout.ImageID = in.ImageID\n\tout.ContainerID = in.ContainerID\n\tout.Started = (*bool)(unsafe.Pointer(in.Started))\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "autoConvert_core_ContainerStatus_To_v1_ContainerStatus",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "Convert_core_ContainerState_To_v1_ContainerState",
      "package" : 0,
      "type" : 78,
      "exported" : true
    } ],
    "line-end" : 3082,
    "line-start" : 3067,
    "names" : [ "autoConvert_core_ContainerStatus_To_v1_ContainerStatus" ],
    "package" : 0,
    "packages" : [ {
      "name" : "v1",
      "path" : "k8s.io/kubernetes/pkg/apis/core/v1"
    }, {
      "name" : "core",
      "path" : "k8s.io/kubernetes/pkg/apis/core"
    }, {
      "name" : "v1",
      "path" : "k8s.io/apimachinery/pkg/apis/meta/v1"
    }, {
      "name" : "time",
      "path" : "time"
    }, {
      "name" : "v1",
      "path" : "k8s.io/api/core/v1"
    }, {
      "name" : "conversion",
      "path" : "k8s.io/apimachinery/pkg/conversion"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 5, 6, 7 ],
    "receivers" : [ ],
    "results" : [ 8 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.ContainerStatus, out *k8s.io/api/core/v1.ContainerStatus, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 1,
      "recv" : -1,
      "results" : 58,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 2
      }, {
        "name" : "out",
        "type" : 38
      }, {
        "name" : "s",
        "type" : 52
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.ContainerStatus, out *k8s.io/api/core/v1.ContainerStatus, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ContainerStatus",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "ContainerStatus",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ContainerStatus",
      "package" : 1,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "State",
        "type" : 6
      }, {
        "name" : "LastTerminationState",
        "type" : 6
      }, {
        "name" : "Ready",
        "type" : 27
      }, {
        "name" : "RestartCount",
        "type" : 36
      }, {
        "name" : "Image",
        "type" : 5
      }, {
        "name" : "ImageID",
        "type" : 5
      }, {
        "name" : "ContainerID",
        "type" : 5
      }, {
        "name" : "Started",
        "type" : 37
      } ],
      "name" : "struct{Name string; State k8s.io/kubernetes/pkg/apis/core.ContainerState; LastTerminationState k8s.io/kubernetes/pkg/apis/core.ContainerState; Ready bool; RestartCount int32; Image string; ImageID string; ContainerID string; Started *bool}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 5
    }, {
      "local-name" : "ContainerState",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ContainerState",
      "package" : 1,
      "type" : "Named",
      "underlying" : 7
    }, {
      "fields" : [ {
        "name" : "Waiting",
        "type" : 8
      }, {
        "name" : "Running",
        "type" : 11
      }, {
        "name" : "Terminated",
        "type" : 33
      } ],
      "name" : "struct{Waiting *k8s.io/kubernetes/pkg/apis/core.ContainerStateWaiting; Running *k8s.io/kubernetes/pkg/apis/core.ContainerStateRunning; Terminated *k8s.io/kubernetes/pkg/apis/core.ContainerStateTerminated}",
      "type" : "Struct",
      "underlying" : 7
    }, {
      "elem" : 9,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ContainerStateWaiting",
      "type" : "Pointer",
      "underlying" : 8
    }, {
      "local-name" : "ContainerStateWaiting",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ContainerStateWaiting",
      "package" : 1,
      "type" : "Named",
      "underlying" : 10
    }, {
      "fields" : [ {
        "name" : "Reason",
        "type" : 5
      }, {
        "name" : "Message",
        "type" : 5
      } ],
      "name" : "struct{Reason string; Message string}",
      "type" : "Struct",
      "underlying" : 10
    }, {
      "elem" : 12,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ContainerStateRunning",
      "type" : "Pointer",
      "underlying" : 11
    }, {
      "local-name" : "ContainerStateRunning",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ContainerStateRunning",
      "package" : 1,
      "type" : "Named",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "StartedAt",
        "type" : 14
      } ],
      "name" : "struct{StartedAt k8s.io/apimachinery/pkg/apis/meta/v1.Time}",
      "type" : "Struct",
      "underlying" : 13
    }, {
      "local-name" : "Time",
      "name" : "k8s.io/apimachinery/pkg/apis/meta/v1.Time",
      "package" : 2,
      "type" : "Named",
      "underlying" : 15
    }, {
      "fields" : [ {
        "name" : "Time",
        "type" : 16
      } ],
      "name" : "struct{time.Time \"protobuf:\\\"-\\\"\"}",
      "type" : "Struct",
      "underlying" : 15
    }, {
      "local-name" : "Time",
      "name" : "time.Time",
      "package" : 3,
      "type" : "Named",
      "underlying" : 17
    }, {
      "fields" : [ {
        "name" : "wall",
        "type" : 18
      }, {
        "name" : "ext",
        "type" : 19
      }, {
        "name" : "loc",
        "type" : 20
      } ],
      "name" : "struct{wall uint64; ext int64; loc *time.Location}",
      "type" : "Struct",
      "underlying" : 17
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 18
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 19
    }, {
      "elem" : 21,
      "name" : "*time.Location",
      "type" : "Pointer",
      "underlying" : 20
    }, {
      "local-name" : "Location",
      "name" : "time.Location",
      "package" : 3,
      "type" : "Named",
      "underlying" : 22
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 5
      }, {
        "name" : "zone",
        "type" : 23
      }, {
        "name" : "tx",
        "type" : 28
      }, {
        "name" : "cacheStart",
        "type" : 19
      }, {
        "name" : "cacheEnd",
        "type" : 19
      }, {
        "name" : "cacheZone",
        "type" : 32
      } ],
      "name" : "struct{name string; zone []time.zone; tx []time.zoneTrans; cacheStart int64; cacheEnd int64; cacheZone *time.zone}",
      "type" : "Struct",
      "underlying" : 22
    }, {
      "elem" : 24,
      "name" : "[]time.zone",
      "type" : "Slice",
      "underlying" : 23
    }, {
      "local-name" : "zone",
      "name" : "time.zone",
      "package" : 3,
      "type" : "Named",
      "underlying" : 25
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 5
      }, {
        "name" : "offset",
        "type" : 26
      }, {
        "name" : "isDST",
        "type" : 27
      } ],
      "name" : "struct{name string; offset int; isDST bool}",
      "type" : "Struct",
      "underlying" : 25
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 26
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 27
    }, {
      "elem" : 29,
      "name" : "[]time.zoneTrans",
      "type" : "Slice",
      "underlying" : 28
    }, {
      "local-name" : "zoneTrans",
      "name" : "time.zoneTrans",
      "package" : 3,
      "type" : "Named",
      "underlying" : 30
    }, {
      "fields" : [ {
        "name" : "when",
        "type" : 19
      }, {
        "name" : "index",
        "type" : 31
      }, {
        "name" : "isstd",
        "type" : 27
      }, {
        "name" : "isutc",
        "type" : 27
      } ],
      "name" : "struct{when int64; index uint8; isstd bool; isutc bool}",
      "type" : "Struct",
      "underlying" : 30
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 31
    }, {
      "elem" : 24,
      "name" : "*time.zone",
      "type" : "Pointer",
      "underlying" : 32
    }, {
      "elem" : 34,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ContainerStateTerminated",
      "type" : "Pointer",
      "underlying" : 33
    }, {
      "local-name" : "ContainerStateTerminated",
      "name" : "k8s.io/kubernetes/pkg/apis/core.ContainerStateTerminated",
      "package" : 1,
      "type" : "Named",
      "underlying" : 35
    }, {
      "fields" : [ {
        "name" : "ExitCode",
        "type" : 36
      }, {
        "name" : "Signal",
        "type" : 36
      }, {
        "name" : "Reason",
        "type" : 5
      }, {
        "name" : "Message",
        "type" : 5
      }, {
        "name" : "StartedAt",
        "type" : 14
      }, {
        "name" : "FinishedAt",
        "type" : 14
      }, {
        "name" : "ContainerID",
        "type" : 5
      } ],
      "name" : "struct{ExitCode int32; Signal int32; Reason string; Message string; StartedAt k8s.io/apimachinery/pkg/apis/meta/v1.Time; FinishedAt k8s.io/apimachinery/pkg/apis/meta/v1.Time; ContainerID string}",
      "type" : "Struct",
      "underlying" : 35
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 36
    }, {
      "elem" : 27,
      "name" : "*bool",
      "type" : "Pointer",
      "underlying" : 37
    }, {
      "elem" : 39,
      "name" : "*k8s.io/api/core/v1.ContainerStatus",
      "type" : "Pointer",
      "underlying" : 38
    }, {
      "local-name" : "ContainerStatus",
      "name" : "k8s.io/api/core/v1.ContainerStatus",
      "package" : 4,
      "type" : "Named",
      "underlying" : 40
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 5
      }, {
        "name" : "State",
        "type" : 41
      }, {
        "name" : "LastTerminationState",
        "type" : 41
      }, {
        "name" : "Ready",
        "type" : 27
      }, {
        "name" : "RestartCount",
        "type" : 36
      }, {
        "name" : "Image",
        "type" : 5
      }, {
        "name" : "ImageID",
        "type" : 5
      }, {
        "name" : "ContainerID",
        "type" : 5
      }, {
        "name" : "Started",
        "type" : 37
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\" protobuf:\\\"bytes,1,opt,name=name\\\"\"; State k8s.io/api/core/v1.ContainerState \"json:\\\"state,omitempty\\\" protobuf:\\\"bytes,2,opt,name=state\\\"\"; LastTerminationState k8s.io/api/core/v1.ContainerState \"json:\\\"lastState,omitempty\\\" protobuf:\\\"bytes,3,opt,name=lastState\\\"\"; Ready bool \"json:\\\"ready\\\" protobuf:\\\"varint,4,opt,name=ready\\\"\"; RestartCount int32 \"json:\\\"restartCount\\\" protobuf:\\\"varint,5,opt,name=restartCount\\\"\"; Image string \"json:\\\"image\\\" protobuf:\\\"bytes,6,opt,name=image\\\"\"; ImageID string \"json:\\\"imageID\\\" protobuf:\\\"bytes,7,opt,name=imageID\\\"\"; ContainerID string \"json:\\\"containerID,omitempty\\\" protobuf:\\\"bytes,8,opt,name=containerID\\\"\"; Started *bool \"json:\\\"started,omitempty\\\" protobuf:\\\"varint,9,opt,name=started\\\"\"}",
      "type" : "Struct",
      "underlying" : 40
    }, {
      "local-name" : "ContainerState",
      "name" : "k8s.io/api/core/v1.ContainerState",
      "package" : 4,
      "type" : "Named",
      "underlying" : 42
    }, {
      "fields" : [ {
        "name" : "Waiting",
        "type" : 43
      }, {
        "name" : "Running",
        "type" : 46
      }, {
        "name" : "Terminated",
        "type" : 49
      } ],
      "name" : "struct{Waiting *k8s.io/api/core/v1.ContainerStateWaiting \"json:\\\"waiting,omitempty\\\" protobuf:\\\"bytes,1,opt,name=waiting\\\"\"; Running *k8s.io/api/core/v1.ContainerStateRunning \"json:\\\"running,omitempty\\\" protobuf:\\\"bytes,2,opt,name=running\\\"\"; Terminated *k8s.io/api/core/v1.ContainerStateTerminated \"json:\\\"terminated,omitempty\\\" protobuf:\\\"bytes,3,opt,name=terminated\\\"\"}",
      "type" : "Struct",
      "underlying" : 42
    }, {
      "elem" : 44,
      "name" : "*k8s.io/api/core/v1.ContainerStateWaiting",
      "type" : "Pointer",
      "underlying" : 43
    }, {
      "local-name" : "ContainerStateWaiting",
      "name" : "k8s.io/api/core/v1.ContainerStateWaiting",
      "package" : 4,
      "type" : "Named",
      "underlying" : 45
    }, {
      "fields" : [ {
        "name" : "Reason",
        "type" : 5
      }, {
        "name" : "Message",
        "type" : 5
      } ],
      "name" : "struct{Reason string \"json:\\\"reason,omitempty\\\" protobuf:\\\"bytes,1,opt,name=reason\\\"\"; Message string \"json:\\\"message,omitempty\\\" protobuf:\\\"bytes,2,opt,name=message\\\"\"}",
      "type" : "Struct",
      "underlying" : 45
    }, {
      "elem" : 47,
      "name" : "*k8s.io/api/core/v1.ContainerStateRunning",
      "type" : "Pointer",
      "underlying" : 46
    }, {
      "local-name" : "ContainerStateRunning",
      "name" : "k8s.io/api/core/v1.ContainerStateRunning",
      "package" : 4,
      "type" : "Named",
      "underlying" : 48
    }, {
      "fields" : [ {
        "name" : "StartedAt",
        "type" : 14
      } ],
      "name" : "struct{StartedAt k8s.io/apimachinery/pkg/apis/meta/v1.Time \"json:\\\"startedAt,omitempty\\\" protobuf:\\\"bytes,1,opt,name=startedAt\\\"\"}",
      "type" : "Struct",
      "underlying" : 48
    }, {
      "elem" : 50,
      "name" : "*k8s.io/api/core/v1.ContainerStateTerminated",
      "type" : "Pointer",
      "underlying" : 49
    }, {
      "local-name" : "ContainerStateTerminated",
      "name" : "k8s.io/api/core/v1.ContainerStateTerminated",
      "package" : 4,
      "type" : "Named",
      "underlying" : 51
    }, {
      "fields" : [ {
        "name" : "ExitCode",
        "type" : 36
      }, {
        "name" : "Signal",
        "type" : 36
      }, {
        "name" : "Reason",
        "type" : 5
      }, {
        "name" : "Message",
        "type" : 5
      }, {
        "name" : "StartedAt",
        "type" : 14
      }, {
        "name" : "FinishedAt",
        "type" : 14
      }, {
        "name" : "ContainerID",
        "type" : 5
      } ],
      "name" : "struct{ExitCode int32 \"json:\\\"exitCode\\\" protobuf:\\\"varint,1,opt,name=exitCode\\\"\"; Signal int32 \"json:\\\"signal,omitempty\\\" protobuf:\\\"varint,2,opt,name=signal\\\"\"; Reason string \"json:\\\"reason,omitempty\\\" protobuf:\\\"bytes,3,opt,name=reason\\\"\"; Message string \"json:\\\"message,omitempty\\\" protobuf:\\\"bytes,4,opt,name=message\\\"\"; StartedAt k8s.io/apimachinery/pkg/apis/meta/v1.Time \"json:\\\"startedAt,omitempty\\\" protobuf:\\\"bytes,5,opt,name=startedAt\\\"\"; FinishedAt k8s.io/apimachinery/pkg/apis/meta/v1.Time \"json:\\\"finishedAt,omitempty\\\" protobuf:\\\"bytes,6,opt,name=finishedAt\\\"\"; ContainerID string \"json:\\\"containerID,omitempty\\\" protobuf:\\\"bytes,7,opt,name=containerID\\\"\"}",
      "type" : "Struct",
      "underlying" : 51
    }, {
      "local-name" : "Scope",
      "name" : "k8s.io/apimachinery/pkg/conversion.Scope",
      "package" : 5,
      "type" : "Named",
      "underlying" : 53
    }, {
      "methods" : [ {
        "name" : "Convert",
        "type" : 54
      }, {
        "name" : "DestTag",
        "type" : 64
      }, {
        "name" : "Flags",
        "type" : 67
      }, {
        "name" : "Meta",
        "type" : 69
      }, {
        "name" : "SrcTag",
        "type" : 64
      } ],
      "name" : "interface{Convert(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error; DestTag() reflect.StructTag; Flags() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags; Meta() *k8s.io/apimachinery/pkg/conversion.Meta; SrcTag() reflect.StructTag}",
      "type" : "Interface",
      "underlying" : 53
    }, {
      "name" : "func(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags) error",
      "params" : 55,
      "recv" : 1,
      "results" : 58,
      "type" : "Signature",
      "underlying" : 54,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 56
      }, {
        "name" : "dest",
        "type" : 56
      }, {
        "name" : "flags",
        "type" : 57
      } ],
      "name" : "(src interface{}, dest interface{}, flags k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 55
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 56
    }, {
      "local-name" : "FieldMatchingFlags",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "package" : 5,
      "type" : "Named",
      "underlying" : 26
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 59
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 58
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 60
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 61
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 60
    }, {
      "name" : "func() string",
      "params" : 62,
      "recv" : 0,
      "results" : 63,
      "type" : "Signature",
      "underlying" : 61,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 62
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 5
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 63
    }, {
      "name" : "func() reflect.StructTag",
      "params" : 62,
      "recv" : 2,
      "results" : 65,
      "type" : "Signature",
      "underlying" : 64,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 66
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 65
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 6,
      "type" : "Named",
      "underlying" : 5
    }, {
      "name" : "func() k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags",
      "params" : 62,
      "recv" : 3,
      "results" : 68,
      "type" : "Signature",
      "underlying" : 67,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 57
      } ],
      "name" : "(k8s.io/apimachinery/pkg/conversion.FieldMatchingFlags)",
      "type" : "Tuple",
      "underlying" : 68
    }, {
      "name" : "func() *k8s.io/apimachinery/pkg/conversion.Meta",
      "params" : 62,
      "recv" : 4,
      "results" : 70,
      "type" : "Signature",
      "underlying" : 69,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 71
      } ],
      "name" : "(*k8s.io/apimachinery/pkg/conversion.Meta)",
      "type" : "Tuple",
      "underlying" : 70
    }, {
      "elem" : 72,
      "name" : "*k8s.io/apimachinery/pkg/conversion.Meta",
      "type" : "Pointer",
      "underlying" : 71
    }, {
      "local-name" : "Meta",
      "name" : "k8s.io/apimachinery/pkg/conversion.Meta",
      "package" : 5,
      "type" : "Named",
      "underlying" : 73
    }, {
      "fields" : [ {
        "name" : "KeyNameMapping",
        "type" : 74
      }, {
        "name" : "Context",
        "type" : 56
      } ],
      "name" : "struct{KeyNameMapping k8s.io/apimachinery/pkg/conversion.FieldMappingFunc; Context interface{}}",
      "type" : "Struct",
      "underlying" : 73
    }, {
      "local-name" : "FieldMappingFunc",
      "name" : "k8s.io/apimachinery/pkg/conversion.FieldMappingFunc",
      "package" : 5,
      "type" : "Named",
      "underlying" : 75
    }, {
      "name" : "func(key string, sourceTag reflect.StructTag, destTag reflect.StructTag) (source string, dest string)",
      "params" : 76,
      "recv" : -1,
      "results" : 77,
      "type" : "Signature",
      "underlying" : 75,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 5
      }, {
        "name" : "sourceTag",
        "type" : 66
      }, {
        "name" : "destTag",
        "type" : 66
      } ],
      "name" : "(key string, sourceTag reflect.StructTag, destTag reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 76
    }, {
      "fields" : [ {
        "name" : "source",
        "type" : 5
      }, {
        "name" : "dest",
        "type" : 5
      } ],
      "name" : "(source string, dest string)",
      "type" : "Tuple",
      "underlying" : 77
    }, {
      "name" : "func(in *k8s.io/kubernetes/pkg/apis/core.ContainerState, out *k8s.io/api/core/v1.ContainerState, s k8s.io/apimachinery/pkg/conversion.Scope) error",
      "params" : 79,
      "recv" : -1,
      "results" : 58,
      "type" : "Signature",
      "underlying" : 78,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "in",
        "type" : 80
      }, {
        "name" : "out",
        "type" : 81
      }, {
        "name" : "s",
        "type" : 52
      } ],
      "name" : "(in *k8s.io/kubernetes/pkg/apis/core.ContainerState, out *k8s.io/api/core/v1.ContainerState, s k8s.io/apimachinery/pkg/conversion.Scope)",
      "type" : "Tuple",
      "underlying" : 79
    }, {
      "elem" : 6,
      "name" : "*k8s.io/kubernetes/pkg/apis/core.ContainerState",
      "type" : "Pointer",
      "underlying" : 80
    }, {
      "elem" : 41,
      "name" : "*k8s.io/api/core/v1.ContainerState",
      "type" : "Pointer",
      "underlying" : 81
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 82
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 83
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 7,
      "type" : "Basic",
      "underlying" : 84
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 59,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 52,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 52,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 52,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 5,
      "type" : 52,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "in",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "out",
      "package" : 0,
      "type" : 38,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 52,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 59,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Name",
      "package" : 4,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Name",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "State",
      "package" : 1,
      "type" : 6,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "State",
      "package" : 4,
      "type" : 41,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 59,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "LastTerminationState",
      "package" : 1,
      "type" : 6,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "LastTerminationState",
      "package" : 4,
      "type" : 41,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 59,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Ready",
      "package" : 4,
      "type" : 27,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Ready",
      "package" : 1,
      "type" : 27,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "RestartCount",
      "package" : 4,
      "type" : 36,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "RestartCount",
      "package" : 1,
      "type" : 36,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Image",
      "package" : 4,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Image",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ImageID",
      "package" : 4,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ImageID",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ContainerID",
      "package" : 4,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ContainerID",
      "package" : 1,
      "type" : 5,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Started",
      "package" : 4,
      "type" : 37,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Started",
      "package" : 1,
      "type" : 37,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}