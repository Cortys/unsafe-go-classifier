{
  "usage" : {
    "file" : "msghdr_linux.go",
    "label1" : "cast-bytes",
    "label2" : "serialization",
    "line" : "25",
    "module" : "golang.org/x/net",
    "pkg" : "golang.org/x/net/internal/socket",
    "project" : "elastic/beats",
    "snippet" : "return (*[sizeofSockaddrInet6]byte)(unsafe.Pointer(h.Name))[:h.Namelen]",
    "version" : "v0.0.0-20200202094626-16171245cfb2"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3, 4 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 24,
      "ast" : {
        "condition" : {
          "go-type" : 5,
          "kind" : "expression",
          "left" : {
            "go-type" : 5,
            "kind" : "expression",
            "left" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Name",
                "variable" : 2
              },
              "go-type" : 3,
              "kind" : "expression",
              "target" : {
                "go-type" : 0,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "h",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "operator" : "!=",
            "right" : {
              "go-type" : 6,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Nil",
                "kind" : "ident",
                "value" : "nil"
              }
            },
            "type" : "binary"
          },
          "operator" : "&&",
          "right" : {
            "go-type" : 5,
            "kind" : "expression",
            "left" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Namelen",
                "variable" : 3
              },
              "go-type" : 4,
              "kind" : "expression",
              "target" : {
                "go-type" : 0,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "h",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "operator" : ">",
            "right" : {
              "go-type" : 4,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "0"
              }
            },
            "type" : "binary"
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 26,
      "code" : "if h.Name != nil && h.Namelen > 0 {\n\treturn (*[sizeofSockaddrInet6]byte)(unsafe.Pointer(h.Name))[:h.Namelen]\n}",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 25,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "type" : "slice",
          "three" : false,
          "high" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Namelen",
              "variable" : 3
            },
            "go-type" : 4,
            "kind" : "expression",
            "target" : {
              "go-type" : 0,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "h",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "max" : null,
          "kind" : "expression",
          "low" : null,
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 4,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 4,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "byte"
                  }
                },
                "go-type" : 8,
                "kind" : "type",
                "length" : {
                  "go-type" : 9,
                  "kind" : "constant",
                  "value" : {
                    "type" : "INT",
                    "value" : "28"
                  }
                },
                "type" : "array"
              },
              "go-type" : 7,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 7,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 10,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 1,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 10,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 10,
              "kind" : "expression",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "Name",
                  "variable" : 2
                },
                "go-type" : 3,
                "kind" : "expression",
                "target" : {
                  "go-type" : 0,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "h",
                    "variable" : 0
                  }
                },
                "type" : "selector"
              },
              "type" : "cast"
            },
            "type" : "cast"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 25,
      "code" : "return (*[sizeofSockaddrInet6]byte)(unsafe.Pointer(h.Name))[:h.Namelen]",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 27,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 6,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 27,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func (h *msghdr) name() []byte {\n\tif h.Name != nil && h.Namelen > 0 {\n\t\treturn (*[sizeofSockaddrInet6]byte)(unsafe.Pointer(h.Name))[:h.Namelen]\n\t}\n\treturn nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "name",
      "package" : 0,
      "type" : 0,
      "exported" : false
    } ],
    "line-end" : 28,
    "line-start" : 23,
    "names" : [ "name" ],
    "package" : 0,
    "packages" : [ {
      "name" : "socket",
      "path" : "golang.org/x/net/internal/socket"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ ],
    "receivers" : [ 0 ],
    "results" : [ 1 ],
    "type" : "function",
    "types" : [ {
      "name" : "func() []byte",
      "params" : 1,
      "recv" : 0,
      "results" : 2,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 3
      } ],
      "name" : "([]byte)",
      "type" : "Tuple",
      "underlying" : 2
    }, {
      "elem" : 4,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 3
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 4
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 5
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 6
    }, {
      "elem" : 8,
      "name" : "*[28]byte",
      "type" : "Pointer",
      "underlying" : 7
    }, {
      "elem" : 4,
      "name" : "[28]byte",
      "type" : "Array",
      "underlying" : 8
    }, {
      "name" : "untyped int",
      "type" : "Basic",
      "underlying" : 9
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 10
    } ],
    "variables" : [ {
      "name" : "h",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 3,
      "exported" : false
    }, {
      "name" : "Name",
      "package" : 0,
      "type" : 3,
      "exported" : true
    }, {
      "name" : "Namelen",
      "package" : 0,
      "type" : 4,
      "exported" : true
    } ]
  },
  "go-version" : "1.14.3"
}