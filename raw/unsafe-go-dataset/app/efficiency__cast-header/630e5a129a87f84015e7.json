{
  "usage" : {
    "file" : "page.go",
    "label1" : "cast-header",
    "label2" : "efficiency",
    "line" : "135",
    "module" : "go.etcd.io/bbolt",
    "pkg" : "go.etcd.io/bbolt",
    "project" : "mattermost/mattermost-server",
    "snippet" : "return *(*[]byte)(unsafe.Pointer(&reflect.SliceHeader{",
    "version" : "v1.3.4"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 135,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 4,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 4,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "byte"
                  }
                },
                "go-type" : 3,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 5,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 5,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 6,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 1,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 6,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 6,
              "kind" : "expression",
              "target" : {
                "go-type" : 7,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "declared" : {
                    "go-type" : 8,
                    "kind" : "type",
                    "qualifier" : {
                      "ident-kind" : "PkgName",
                      "kind" : "ident",
                      "package" : 2,
                      "value" : "reflect"
                    },
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 8,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "SliceHeader"
                    }
                  },
                  "go-type" : 8,
                  "kind" : "literal",
                  "type" : "composite",
                  "values" : [ {
                    "go-type" : -1,
                    "key" : {
                      "go-type" : -1,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "Data",
                        "variable" : 2
                      }
                    },
                    "kind" : "expression",
                    "type" : "key-value",
                    "value" : {
                      "go-type" : 10,
                      "kind" : "expression",
                      "left" : {
                        "coerced-to" : {
                          "go-type" : 10,
                          "kind" : "type",
                          "type" : "identifier",
                          "value" : {
                            "go-type" : 10,
                            "ident-kind" : "TypeName",
                            "kind" : "ident",
                            "value" : "uintptr"
                          }
                        },
                        "go-type" : 10,
                        "kind" : "expression",
                        "target" : {
                          "coerced-to" : {
                            "go-type" : 6,
                            "kind" : "type",
                            "qualifier" : {
                              "ident-kind" : "PkgName",
                              "kind" : "ident",
                              "package" : 1,
                              "value" : "unsafe"
                            },
                            "type" : "identifier",
                            "value" : {
                              "go-type" : 6,
                              "ident-kind" : "TypeName",
                              "kind" : "ident",
                              "value" : "Pointer"
                            }
                          },
                          "go-type" : 6,
                          "kind" : "expression",
                          "target" : {
                            "go-type" : 0,
                            "kind" : "expression",
                            "type" : "identifier",
                            "value" : {
                              "ident-kind" : "Var",
                              "kind" : "ident",
                              "value" : "n",
                              "variable" : 0
                            }
                          },
                          "type" : "cast"
                        },
                        "type" : "cast"
                      },
                      "operator" : "+",
                      "right" : {
                        "coerced-to" : {
                          "go-type" : 10,
                          "kind" : "type",
                          "type" : "identifier",
                          "value" : {
                            "go-type" : 10,
                            "ident-kind" : "TypeName",
                            "kind" : "ident",
                            "value" : "uintptr"
                          }
                        },
                        "go-type" : 10,
                        "kind" : "expression",
                        "target" : {
                          "field" : {
                            "ident-kind" : "Var",
                            "kind" : "ident",
                            "value" : "pos",
                            "variable" : 3
                          },
                          "go-type" : 3,
                          "kind" : "expression",
                          "target" : {
                            "go-type" : 0,
                            "kind" : "expression",
                            "type" : "identifier",
                            "value" : {
                              "ident-kind" : "Var",
                              "kind" : "ident",
                              "value" : "n",
                              "variable" : 0
                            }
                          },
                          "type" : "selector"
                        },
                        "type" : "cast"
                      },
                      "type" : "binary"
                    }
                  }, {
                    "go-type" : -1,
                    "key" : {
                      "go-type" : -1,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "Len",
                        "variable" : 4
                      }
                    },
                    "kind" : "expression",
                    "type" : "key-value",
                    "value" : {
                      "coerced-to" : {
                        "go-type" : 11,
                        "kind" : "type",
                        "type" : "identifier",
                        "value" : {
                          "go-type" : 11,
                          "ident-kind" : "TypeName",
                          "kind" : "ident",
                          "value" : "int"
                        }
                      },
                      "go-type" : 11,
                      "kind" : "expression",
                      "target" : {
                        "field" : {
                          "ident-kind" : "Var",
                          "kind" : "ident",
                          "value" : "ksize",
                          "variable" : 5
                        },
                        "go-type" : 3,
                        "kind" : "expression",
                        "target" : {
                          "go-type" : 0,
                          "kind" : "expression",
                          "type" : "identifier",
                          "value" : {
                            "ident-kind" : "Var",
                            "kind" : "ident",
                            "value" : "n",
                            "variable" : 0
                          }
                        },
                        "type" : "selector"
                      },
                      "type" : "cast"
                    }
                  }, {
                    "go-type" : -1,
                    "key" : {
                      "go-type" : -1,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "Cap",
                        "variable" : 6
                      }
                    },
                    "kind" : "expression",
                    "type" : "key-value",
                    "value" : {
                      "coerced-to" : {
                        "go-type" : 11,
                        "kind" : "type",
                        "type" : "identifier",
                        "value" : {
                          "go-type" : 11,
                          "ident-kind" : "TypeName",
                          "kind" : "ident",
                          "value" : "int"
                        }
                      },
                      "go-type" : 11,
                      "kind" : "expression",
                      "target" : {
                        "field" : {
                          "ident-kind" : "Var",
                          "kind" : "ident",
                          "value" : "ksize",
                          "variable" : 5
                        },
                        "go-type" : 3,
                        "kind" : "expression",
                        "target" : {
                          "go-type" : 0,
                          "kind" : "expression",
                          "type" : "identifier",
                          "value" : {
                            "ident-kind" : "Var",
                            "kind" : "ident",
                            "value" : "n",
                            "variable" : 0
                          }
                        },
                        "type" : "selector"
                      },
                      "type" : "cast"
                    }
                  } ]
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 139,
      "code" : "return *(*[]byte)(unsafe.Pointer(&reflect.SliceHeader{\n\tData: uintptr(unsafe.Pointer(n)) + uintptr(n.pos),\n\tLen:  int(n.ksize),\n\tCap:  int(n.ksize),\n}))",
      "entry" : false,
      "use-vars" : [ 0 ]
    } ],
    "code" : "// key returns a byte slice of the node key.\nfunc (n *leafPageElement) key() []byte {\n\treturn *(*[]byte)(unsafe.Pointer(&reflect.SliceHeader{\n\t\tData: uintptr(unsafe.Pointer(n)) + uintptr(n.pos),\n\t\tLen:  int(n.ksize),\n\t\tCap:  int(n.ksize),\n\t}))\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "key",
      "package" : 0,
      "type" : 0,
      "exported" : false
    } ],
    "line-end" : 140,
    "line-start" : 134,
    "names" : [ "key" ],
    "package" : 0,
    "packages" : [ {
      "name" : "bbolt",
      "path" : "go.etcd.io/bbolt"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    } ],
    "params" : [ ],
    "receivers" : [ 0 ],
    "results" : [ 1 ],
    "type" : "function",
    "types" : [ {
      "name" : "func() []byte",
      "params" : 1,
      "recv" : 0,
      "results" : 2,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 3
      } ],
      "name" : "([]byte)",
      "type" : "Tuple",
      "underlying" : 2
    }, {
      "elem" : 4,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 3
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 4
    }, {
      "elem" : 3,
      "name" : "*[]byte",
      "type" : "Pointer",
      "underlying" : 5
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 6
    }, {
      "elem" : 8,
      "name" : "*reflect.SliceHeader",
      "type" : "Pointer",
      "underlying" : 7
    }, {
      "local-name" : "SliceHeader",
      "name" : "reflect.SliceHeader",
      "package" : 2,
      "type" : "Named",
      "underlying" : 9
    }, {
      "fields" : [ {
        "name" : "Data",
        "type" : 10
      }, {
        "name" : "Len",
        "type" : 11
      }, {
        "name" : "Cap",
        "type" : 11
      } ],
      "name" : "struct{Data uintptr; Len int; Cap int}",
      "type" : "Struct",
      "underlying" : 9
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 10
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 11
    } ],
    "variables" : [ {
      "name" : "n",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 3,
      "exported" : false
    }, {
      "name" : "Data",
      "package" : 2,
      "type" : 10,
      "exported" : true
    }, {
      "name" : "pos",
      "package" : 0,
      "type" : 3,
      "exported" : false
    }, {
      "name" : "Len",
      "package" : 2,
      "type" : 11,
      "exported" : true
    }, {
      "name" : "ksize",
      "package" : 0,
      "type" : 3,
      "exported" : false
    }, {
      "name" : "Cap",
      "package" : 2,
      "type" : 11,
      "exported" : true
    } ]
  },
  "go-version" : "1.14.3"
}