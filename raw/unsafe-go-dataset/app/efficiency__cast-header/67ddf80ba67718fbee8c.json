{
  "usage" : {
    "file" : "unsafe.go",
    "label1" : "cast-header",
    "label2" : "efficiency",
    "line" : "31",
    "module" : "github.com/elastic/go-structform",
    "pkg" : "github.com/elastic/go-structform/internal/unsafe",
    "project" : "elastic/beats",
    "snippet" : "sh := (*reflect.StringHeader)(unsafe.Pointer(&s))",
    "version" : "v0.0.6"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 2 ],
      "decl-vars" : [ 2 ],
      "line-start" : 31,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "sh"
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 7,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 1,
                "value" : "reflect"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 7,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "StringHeader"
              }
            },
            "go-type" : 6,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 11,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 2,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 11,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 11,
            "kind" : "expression",
            "target" : {
              "go-type" : 12,
              "kind" : "expression",
              "operator" : "&",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "s",
                  "variable" : 0
                }
              },
              "type" : "unary"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 31,
      "code" : "sh := (*reflect.StringHeader)(unsafe.Pointer(&s))",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4 ],
      "in-vars" : [ 2 ],
      "exit" : false,
      "out-vars" : [ 8 ],
      "decl-vars" : [ 8 ],
      "line-start" : 32,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "bh"
          }
        } ],
        "right" : [ {
          "declared" : {
            "go-type" : 13,
            "kind" : "type",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 1,
              "value" : "reflect"
            },
            "type" : "identifier",
            "value" : {
              "go-type" : 13,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "SliceHeader"
            }
          },
          "go-type" : 13,
          "kind" : "literal",
          "type" : "composite",
          "values" : [ {
            "go-type" : -1,
            "key" : {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Data",
                "variable" : 3
              }
            },
            "kind" : "expression",
            "type" : "key-value",
            "value" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Data",
                "variable" : 4
              },
              "go-type" : 9,
              "kind" : "expression",
              "target" : {
                "go-type" : 6,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "sh",
                  "variable" : 2
                }
              },
              "type" : "selector"
            }
          }, {
            "go-type" : -1,
            "key" : {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Len",
                "variable" : 5
              }
            },
            "kind" : "expression",
            "type" : "key-value",
            "value" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Len",
                "variable" : 6
              },
              "go-type" : 10,
              "kind" : "expression",
              "target" : {
                "go-type" : 6,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "sh",
                  "variable" : 2
                }
              },
              "type" : "selector"
            }
          }, {
            "go-type" : -1,
            "key" : {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Cap",
                "variable" : 7
              }
            },
            "kind" : "expression",
            "type" : "key-value",
            "value" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Len",
                "variable" : 6
              },
              "go-type" : 10,
              "kind" : "expression",
              "target" : {
                "go-type" : 6,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "sh",
                  "variable" : 2
                }
              },
              "type" : "selector"
            }
          } ]
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 32,
      "code" : "bh := reflect.SliceHeader{Data: sh.Data, Len: sh.Len, Cap: sh.Len}",
      "entry" : false,
      "use-vars" : [ 2 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5 ],
      "in-vars" : [ 8 ],
      "exit" : false,
      "out-vars" : [ 9 ],
      "decl-vars" : [ 9 ],
      "line-start" : 33,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "b"
          }
        } ],
        "right" : [ {
          "go-type" : 4,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 5,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 5,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "byte"
                  }
                },
                "go-type" : 4,
                "kind" : "type",
                "type" : "slice"
              },
              "go-type" : 15,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 15,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 11,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 2,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 11,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 11,
              "kind" : "expression",
              "target" : {
                "go-type" : 16,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "go-type" : 13,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "bh",
                    "variable" : 8
                  }
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 33,
      "code" : "b := *(*[]byte)(unsafe.Pointer(&bh))",
      "entry" : false,
      "use-vars" : [ 8 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 9 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 34,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 4,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "b",
            "variable" : 9
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 34,
      "code" : "return b",
      "entry" : false,
      "use-vars" : [ 9 ]
    } ],
    "code" : "func Str2Bytes(s string) []byte {\n\tsh := (*reflect.StringHeader)(unsafe.Pointer(&s))\n\tbh := reflect.SliceHeader{Data: sh.Data, Len: sh.Len, Cap: sh.Len}\n\tb := *(*[]byte)(unsafe.Pointer(&bh))\n\treturn b\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "Str2Bytes",
      "package" : 0,
      "type" : 0,
      "exported" : true
    } ],
    "line-end" : 35,
    "line-start" : 30,
    "names" : [ "Str2Bytes" ],
    "package" : 0,
    "packages" : [ {
      "name" : "unsafe",
      "path" : "github.com/elastic/go-structform/internal/unsafe"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 0 ],
    "receivers" : [ ],
    "results" : [ 1 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(s string) []byte",
      "params" : 1,
      "recv" : -1,
      "results" : 3,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "s",
        "type" : 2
      } ],
      "name" : "(s string)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 2
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 4
      } ],
      "name" : "([]byte)",
      "type" : "Tuple",
      "underlying" : 3
    }, {
      "elem" : 5,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 4
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 5
    }, {
      "elem" : 7,
      "name" : "*reflect.StringHeader",
      "type" : "Pointer",
      "underlying" : 6
    }, {
      "local-name" : "StringHeader",
      "name" : "reflect.StringHeader",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "fields" : [ {
        "name" : "Data",
        "type" : 9
      }, {
        "name" : "Len",
        "type" : 10
      } ],
      "name" : "struct{Data uintptr; Len int}",
      "type" : "Struct",
      "underlying" : 8
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 9
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 10
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 2,
      "type" : "Basic",
      "underlying" : 11
    }, {
      "elem" : 2,
      "name" : "*string",
      "type" : "Pointer",
      "underlying" : 12
    }, {
      "local-name" : "SliceHeader",
      "name" : "reflect.SliceHeader",
      "package" : 1,
      "type" : "Named",
      "underlying" : 14
    }, {
      "fields" : [ {
        "name" : "Data",
        "type" : 9
      }, {
        "name" : "Len",
        "type" : 10
      }, {
        "name" : "Cap",
        "type" : 10
      } ],
      "name" : "struct{Data uintptr; Len int; Cap int}",
      "type" : "Struct",
      "underlying" : 14
    }, {
      "elem" : 4,
      "name" : "*[]byte",
      "type" : "Pointer",
      "underlying" : 15
    }, {
      "elem" : 13,
      "name" : "*reflect.SliceHeader",
      "type" : "Pointer",
      "underlying" : 16
    } ],
    "variables" : [ {
      "name" : "s",
      "package" : 0,
      "type" : 2,
      "exported" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 4,
      "exported" : false
    }, {
      "name" : "sh",
      "package" : 0,
      "type" : 6,
      "exported" : false
    }, {
      "name" : "Data",
      "package" : 1,
      "type" : 9,
      "exported" : true
    }, {
      "name" : "Data",
      "package" : 1,
      "type" : 9,
      "exported" : true
    }, {
      "name" : "Len",
      "package" : 1,
      "type" : 10,
      "exported" : true
    }, {
      "name" : "Len",
      "package" : 1,
      "type" : 10,
      "exported" : true
    }, {
      "name" : "Cap",
      "package" : 1,
      "type" : 10,
      "exported" : true
    }, {
      "name" : "bh",
      "package" : 0,
      "type" : 13,
      "exported" : false
    }, {
      "name" : "b",
      "package" : 0,
      "type" : 4,
      "exported" : false
    } ]
  },
  "go-version" : "1.14.3"
}