{
  "usage" : {
    "file" : "unsafe_slice.go",
    "label1" : "cast-header",
    "label2" : "efficiency",
    "line" : "140",
    "module" : "github.com/modern-go/reflect2",
    "pkg" : "github.com/modern-go/reflect2",
    "project" : "kubernetes/kubernetes",
    "snippet" : "func (type2 *UnsafeSliceType) UnsafeCap(ptr unsafe.Pointer) int {",
    "version" : "v1.0.1"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 18 ],
      "exit" : false,
      "out-vars" : [ 18 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 18 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 141,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Cap",
            "variable" : 20
          },
          "go-type" : 4,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "go-type" : 100,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 100,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "sliceHeader"
                }
              },
              "go-type" : 99,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 99,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ptr",
                "variable" : 18
              }
            },
            "type" : "cast"
          },
          "type" : "selector"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 141,
      "code" : "return (*sliceHeader)(ptr).Cap",
      "entry" : false,
      "use-vars" : [ 18 ]
    } ],
    "code" : "func (type2 *UnsafeSliceType) UnsafeCap(ptr unsafe.Pointer) int {\n\treturn (*sliceHeader)(ptr).Cap\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "UnsafeCap",
      "package" : 0,
      "type" : 0,
      "exported" : true
    } ],
    "line-end" : 142,
    "line-start" : 140,
    "names" : [ "UnsafeCap" ],
    "package" : 0,
    "packages" : [ {
      "name" : "reflect2",
      "path" : "github.com/modern-go/reflect2"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "concurrent",
      "path" : "github.com/modern-go/concurrent"
    }, {
      "name" : "sync",
      "path" : "sync"
    }, {
      "name" : "atomic",
      "path" : "sync/atomic"
    } ],
    "params" : [ 18 ],
    "receivers" : [ 17 ],
    "results" : [ 19 ],
    "type" : "function",
    "types" : [ {
      "name" : "(*github.com/modern-go/reflect2.UnsafeSliceType) func(ptr unsafe.Pointer) int",
      "params" : 1,
      "recv" : 17,
      "results" : 3,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ptr",
        "type" : 2
      } ],
      "name" : "(ptr unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 2
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 4
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 3
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 4
    }, {
      "elem" : 6,
      "name" : "*github.com/modern-go/reflect2.UnsafeSliceType",
      "type" : "Pointer",
      "underlying" : 5
    }, {
      "local-name" : "UnsafeSliceType",
      "name" : "github.com/modern-go/reflect2.UnsafeSliceType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "fields" : [ {
        "name" : "unsafeType",
        "type" : 8
      }, {
        "name" : "elemRType",
        "type" : 2
      }, {
        "name" : "pElemRType",
        "type" : 2
      }, {
        "name" : "elemSize",
        "type" : 33
      } ],
      "name" : "struct{github.com/modern-go/reflect2.unsafeType; elemRType unsafe.Pointer; pElemRType unsafe.Pointer; elemSize uintptr}",
      "type" : "Struct",
      "underlying" : 7
    }, {
      "local-name" : "unsafeType",
      "name" : "github.com/modern-go/reflect2.unsafeType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 9
    }, {
      "fields" : [ {
        "name" : "safeType",
        "type" : 10
      }, {
        "name" : "rtype",
        "type" : 2
      }, {
        "name" : "ptrRType",
        "type" : 2
      } ],
      "name" : "struct{github.com/modern-go/reflect2.safeType; rtype unsafe.Pointer; ptrRType unsafe.Pointer}",
      "type" : "Struct",
      "underlying" : 9
    }, {
      "local-name" : "safeType",
      "name" : "github.com/modern-go/reflect2.safeType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 11
    }, {
      "fields" : [ {
        "name" : "Type",
        "type" : 12
      }, {
        "name" : "cfg",
        "type" : 82
      } ],
      "name" : "struct{reflect.Type; cfg *github.com/modern-go/reflect2.frozenConfig}",
      "type" : "Struct",
      "underlying" : 11
    }, {
      "local-name" : "Type",
      "name" : "reflect.Type",
      "package" : 2,
      "type" : "Named",
      "underlying" : 13
    }, {
      "methods" : [ {
        "name" : "Align",
        "type" : 14
      }, {
        "name" : "AssignableTo",
        "type" : 16
      }, {
        "name" : "Bits",
        "type" : 14
      }, {
        "name" : "ChanDir",
        "type" : 20
      }, {
        "name" : "Comparable",
        "type" : 23
      }, {
        "name" : "ConvertibleTo",
        "type" : 16
      }, {
        "name" : "Elem",
        "type" : 24
      }, {
        "name" : "Field",
        "type" : 26
      }, {
        "name" : "FieldAlign",
        "type" : 14
      }, {
        "name" : "FieldByIndex",
        "type" : 35
      }, {
        "name" : "FieldByName",
        "type" : 37
      }, {
        "name" : "FieldByNameFunc",
        "type" : 40
      }, {
        "name" : "Implements",
        "type" : 16
      }, {
        "name" : "In",
        "type" : 44
      }, {
        "name" : "IsVariadic",
        "type" : 23
      }, {
        "name" : "Key",
        "type" : 24
      }, {
        "name" : "Kind",
        "type" : 45
      }, {
        "name" : "Len",
        "type" : 14
      }, {
        "name" : "Method",
        "type" : 49
      }, {
        "name" : "MethodByName",
        "type" : 69
      }, {
        "name" : "Name",
        "type" : 71
      }, {
        "name" : "NumField",
        "type" : 14
      }, {
        "name" : "NumIn",
        "type" : 14
      }, {
        "name" : "NumMethod",
        "type" : 14
      }, {
        "name" : "NumOut",
        "type" : 14
      }, {
        "name" : "Out",
        "type" : 44
      }, {
        "name" : "PkgPath",
        "type" : 71
      }, {
        "name" : "Size",
        "type" : 72
      }, {
        "name" : "String",
        "type" : 71
      }, {
        "name" : "common",
        "type" : 74
      }, {
        "name" : "uncommon",
        "type" : 76
      } ],
      "name" : "interface{Align() int; AssignableTo(u reflect.Type) bool; Bits() int; ChanDir() reflect.ChanDir; Comparable() bool; ConvertibleTo(u reflect.Type) bool; Elem() reflect.Type; Field(i int) reflect.StructField; FieldAlign() int; FieldByIndex(index []int) reflect.StructField; FieldByName(name string) (reflect.StructField, bool); FieldByNameFunc(match func(string) bool) (reflect.StructField, bool); Implements(u reflect.Type) bool; In(i int) reflect.Type; IsVariadic() bool; Key() reflect.Type; Kind() reflect.Kind; Len() int; Method(int) reflect.Method; MethodByName(string) (reflect.Method, bool); Name() string; NumField() int; NumIn() int; NumMethod() int; NumOut() int; Out(i int) reflect.Type; PkgPath() string; Size() uintptr; String() string; common() *reflect.rtype; uncommon() *reflect.uncommonType}",
      "type" : "Interface",
      "underlying" : 13
    }, {
      "name" : "(reflect.Type) func() int",
      "params" : 15,
      "recv" : 0,
      "results" : 3,
      "type" : "Signature",
      "underlying" : 14,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 15
    }, {
      "name" : "(reflect.Type) func(u reflect.Type) bool",
      "params" : 17,
      "recv" : 1,
      "results" : 18,
      "type" : "Signature",
      "underlying" : 16,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "u",
        "type" : 12
      } ],
      "name" : "(u reflect.Type)",
      "type" : "Tuple",
      "underlying" : 17
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 19
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 18
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 19
    }, {
      "name" : "(reflect.Type) func() reflect.ChanDir",
      "params" : 15,
      "recv" : 2,
      "results" : 21,
      "type" : "Signature",
      "underlying" : 20,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 22
      } ],
      "name" : "(reflect.ChanDir)",
      "type" : "Tuple",
      "underlying" : 21
    }, {
      "local-name" : "ChanDir",
      "name" : "reflect.ChanDir",
      "package" : 2,
      "type" : "Named",
      "underlying" : 4
    }, {
      "name" : "(reflect.Type) func() bool",
      "params" : 15,
      "recv" : 3,
      "results" : 18,
      "type" : "Signature",
      "underlying" : 23,
      "variadic" : false
    }, {
      "name" : "(reflect.Type) func() reflect.Type",
      "params" : 15,
      "recv" : 4,
      "results" : 25,
      "type" : "Signature",
      "underlying" : 24,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 12
      } ],
      "name" : "(reflect.Type)",
      "type" : "Tuple",
      "underlying" : 25
    }, {
      "name" : "(reflect.Type) func(i int) reflect.StructField",
      "params" : 27,
      "recv" : 5,
      "results" : 28,
      "type" : "Signature",
      "underlying" : 26,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "i",
        "type" : 4
      } ],
      "name" : "(i int)",
      "type" : "Tuple",
      "underlying" : 27
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 29
      } ],
      "name" : "(reflect.StructField)",
      "type" : "Tuple",
      "underlying" : 28
    }, {
      "local-name" : "StructField",
      "name" : "reflect.StructField",
      "package" : 2,
      "type" : "Named",
      "underlying" : 30
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 31
      }, {
        "name" : "PkgPath",
        "type" : 31
      }, {
        "name" : "Type",
        "type" : 12
      }, {
        "name" : "Tag",
        "type" : 32
      }, {
        "name" : "Offset",
        "type" : 33
      }, {
        "name" : "Index",
        "type" : 34
      }, {
        "name" : "Anonymous",
        "type" : 19
      } ],
      "name" : "struct{Name string; PkgPath string; Type reflect.Type; Tag reflect.StructTag; Offset uintptr; Index []int; Anonymous bool}",
      "type" : "Struct",
      "underlying" : 30
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 31
    }, {
      "local-name" : "StructTag",
      "name" : "reflect.StructTag",
      "package" : 2,
      "type" : "Named",
      "underlying" : 31
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 33
    }, {
      "elem" : 4,
      "name" : "[]int",
      "type" : "Slice",
      "underlying" : 34
    }, {
      "name" : "(reflect.Type) func(index []int) reflect.StructField",
      "params" : 36,
      "recv" : 6,
      "results" : 28,
      "type" : "Signature",
      "underlying" : 35,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "index",
        "type" : 34
      } ],
      "name" : "(index []int)",
      "type" : "Tuple",
      "underlying" : 36
    }, {
      "name" : "(reflect.Type) func(name string) (reflect.StructField, bool)",
      "params" : 38,
      "recv" : 7,
      "results" : 39,
      "type" : "Signature",
      "underlying" : 37,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 31
      } ],
      "name" : "(name string)",
      "type" : "Tuple",
      "underlying" : 38
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 29
      }, {
        "name" : "",
        "type" : 19
      } ],
      "name" : "(reflect.StructField, bool)",
      "type" : "Tuple",
      "underlying" : 39
    }, {
      "name" : "(reflect.Type) func(match func(string) bool) (reflect.StructField, bool)",
      "params" : 41,
      "recv" : 8,
      "results" : 39,
      "type" : "Signature",
      "underlying" : 40,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "match",
        "type" : 42
      } ],
      "name" : "(match func(string) bool)",
      "type" : "Tuple",
      "underlying" : 41
    }, {
      "name" : "func(string) bool",
      "params" : 43,
      "recv" : -1,
      "results" : 18,
      "type" : "Signature",
      "underlying" : 42,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 31
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 43
    }, {
      "name" : "(reflect.Type) func(i int) reflect.Type",
      "params" : 27,
      "recv" : 9,
      "results" : 25,
      "type" : "Signature",
      "underlying" : 44,
      "variadic" : false
    }, {
      "name" : "(reflect.Type) func() reflect.Kind",
      "params" : 15,
      "recv" : 10,
      "results" : 46,
      "type" : "Signature",
      "underlying" : 45,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 47
      } ],
      "name" : "(reflect.Kind)",
      "type" : "Tuple",
      "underlying" : 46
    }, {
      "local-name" : "Kind",
      "name" : "reflect.Kind",
      "package" : 2,
      "type" : "Named",
      "underlying" : 48
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 48
    }, {
      "name" : "(reflect.Type) func(int) reflect.Method",
      "params" : 3,
      "recv" : 11,
      "results" : 50,
      "type" : "Signature",
      "underlying" : 49,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 51
      } ],
      "name" : "(reflect.Method)",
      "type" : "Tuple",
      "underlying" : 50
    }, {
      "local-name" : "Method",
      "name" : "reflect.Method",
      "package" : 2,
      "type" : "Named",
      "underlying" : 52
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 31
      }, {
        "name" : "PkgPath",
        "type" : 31
      }, {
        "name" : "Type",
        "type" : 12
      }, {
        "name" : "Func",
        "type" : 53
      }, {
        "name" : "Index",
        "type" : 4
      } ],
      "name" : "struct{Name string; PkgPath string; Type reflect.Type; Func reflect.Value; Index int}",
      "type" : "Struct",
      "underlying" : 52
    }, {
      "local-name" : "Value",
      "name" : "reflect.Value",
      "package" : 2,
      "type" : "Named",
      "underlying" : 54
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 55
      }, {
        "name" : "ptr",
        "type" : 2
      }, {
        "name" : "flag",
        "type" : 68
      } ],
      "name" : "struct{typ *reflect.rtype; ptr unsafe.Pointer; reflect.flag}",
      "type" : "Struct",
      "underlying" : 54
    }, {
      "elem" : 56,
      "name" : "*reflect.rtype",
      "type" : "Pointer",
      "underlying" : 55
    }, {
      "local-name" : "rtype",
      "name" : "reflect.rtype",
      "package" : 2,
      "type" : "Named",
      "underlying" : 57
    }, {
      "fields" : [ {
        "name" : "size",
        "type" : 33
      }, {
        "name" : "ptrdata",
        "type" : 33
      }, {
        "name" : "hash",
        "type" : 58
      }, {
        "name" : "tflag",
        "type" : 59
      }, {
        "name" : "align",
        "type" : 60
      }, {
        "name" : "fieldAlign",
        "type" : 60
      }, {
        "name" : "kind",
        "type" : 60
      }, {
        "name" : "equal",
        "type" : 61
      }, {
        "name" : "gcdata",
        "type" : 63
      }, {
        "name" : "str",
        "type" : 65
      }, {
        "name" : "ptrToThis",
        "type" : 67
      } ],
      "name" : "struct{size uintptr; ptrdata uintptr; hash uint32; tflag reflect.tflag; align uint8; fieldAlign uint8; kind uint8; equal func(unsafe.Pointer, unsafe.Pointer) bool; gcdata *byte; str reflect.nameOff; ptrToThis reflect.typeOff}",
      "type" : "Struct",
      "underlying" : 57
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 58
    }, {
      "local-name" : "tflag",
      "name" : "reflect.tflag",
      "package" : 2,
      "type" : "Named",
      "underlying" : 60
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 60
    }, {
      "name" : "func(unsafe.Pointer, unsafe.Pointer) bool",
      "params" : 62,
      "recv" : -1,
      "results" : 18,
      "type" : "Signature",
      "underlying" : 61,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 2
      }, {
        "name" : "",
        "type" : 2
      } ],
      "name" : "(unsafe.Pointer, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 62
    }, {
      "elem" : 64,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 63
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 64
    }, {
      "local-name" : "nameOff",
      "name" : "reflect.nameOff",
      "package" : 2,
      "type" : "Named",
      "underlying" : 66
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 66
    }, {
      "local-name" : "typeOff",
      "name" : "reflect.typeOff",
      "package" : 2,
      "type" : "Named",
      "underlying" : 66
    }, {
      "local-name" : "flag",
      "name" : "reflect.flag",
      "package" : 2,
      "type" : "Named",
      "underlying" : 33
    }, {
      "name" : "(reflect.Type) func(string) (reflect.Method, bool)",
      "params" : 43,
      "recv" : 12,
      "results" : 70,
      "type" : "Signature",
      "underlying" : 69,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 51
      }, {
        "name" : "",
        "type" : 19
      } ],
      "name" : "(reflect.Method, bool)",
      "type" : "Tuple",
      "underlying" : 70
    }, {
      "name" : "(reflect.Type) func() string",
      "params" : 15,
      "recv" : 13,
      "results" : 43,
      "type" : "Signature",
      "underlying" : 71,
      "variadic" : false
    }, {
      "name" : "(reflect.Type) func() uintptr",
      "params" : 15,
      "recv" : 14,
      "results" : 73,
      "type" : "Signature",
      "underlying" : 72,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 33
      } ],
      "name" : "(uintptr)",
      "type" : "Tuple",
      "underlying" : 73
    }, {
      "name" : "(reflect.Type) func() *reflect.rtype",
      "params" : 15,
      "recv" : 15,
      "results" : 75,
      "type" : "Signature",
      "underlying" : 74,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 55
      } ],
      "name" : "(*reflect.rtype)",
      "type" : "Tuple",
      "underlying" : 75
    }, {
      "name" : "(reflect.Type) func() *reflect.uncommonType",
      "params" : 15,
      "recv" : 16,
      "results" : 77,
      "type" : "Signature",
      "underlying" : 76,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 78
      } ],
      "name" : "(*reflect.uncommonType)",
      "type" : "Tuple",
      "underlying" : 77
    }, {
      "elem" : 79,
      "name" : "*reflect.uncommonType",
      "type" : "Pointer",
      "underlying" : 78
    }, {
      "local-name" : "uncommonType",
      "name" : "reflect.uncommonType",
      "package" : 2,
      "type" : "Named",
      "underlying" : 80
    }, {
      "fields" : [ {
        "name" : "pkgPath",
        "type" : 65
      }, {
        "name" : "mcount",
        "type" : 81
      }, {
        "name" : "xcount",
        "type" : 81
      }, {
        "name" : "moff",
        "type" : 58
      }, {
        "name" : "_",
        "type" : 58
      } ],
      "name" : "struct{pkgPath reflect.nameOff; mcount uint16; xcount uint16; moff uint32; _ uint32}",
      "type" : "Struct",
      "underlying" : 80
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 81
    }, {
      "elem" : 83,
      "name" : "*github.com/modern-go/reflect2.frozenConfig",
      "type" : "Pointer",
      "underlying" : 82
    }, {
      "local-name" : "frozenConfig",
      "name" : "github.com/modern-go/reflect2.frozenConfig",
      "package" : 0,
      "type" : "Named",
      "underlying" : 84
    }, {
      "fields" : [ {
        "name" : "useSafeImplementation",
        "type" : 19
      }, {
        "name" : "cache",
        "type" : 85
      } ],
      "name" : "struct{useSafeImplementation bool; cache *github.com/modern-go/concurrent.Map}",
      "type" : "Struct",
      "underlying" : 84
    }, {
      "elem" : 86,
      "name" : "*github.com/modern-go/concurrent.Map",
      "type" : "Pointer",
      "underlying" : 85
    }, {
      "local-name" : "Map",
      "name" : "github.com/modern-go/concurrent.Map",
      "package" : 3,
      "type" : "Named",
      "underlying" : 87
    }, {
      "fields" : [ {
        "name" : "Map",
        "type" : 88
      } ],
      "name" : "struct{sync.Map}",
      "type" : "Struct",
      "underlying" : 87
    }, {
      "local-name" : "Map",
      "name" : "sync.Map",
      "package" : 4,
      "type" : "Named",
      "underlying" : 89
    }, {
      "fields" : [ {
        "name" : "mu",
        "type" : 90
      }, {
        "name" : "read",
        "type" : 92
      }, {
        "name" : "dirty",
        "type" : 95
      }, {
        "name" : "misses",
        "type" : 4
      } ],
      "name" : "struct{mu sync.Mutex; read sync/atomic.Value; dirty map[interface{}]*sync.entry; misses int}",
      "type" : "Struct",
      "underlying" : 89
    }, {
      "local-name" : "Mutex",
      "name" : "sync.Mutex",
      "package" : 4,
      "type" : "Named",
      "underlying" : 91
    }, {
      "fields" : [ {
        "name" : "state",
        "type" : 66
      }, {
        "name" : "sema",
        "type" : 58
      } ],
      "name" : "struct{state int32; sema uint32}",
      "type" : "Struct",
      "underlying" : 91
    }, {
      "local-name" : "Value",
      "name" : "sync/atomic.Value",
      "package" : 5,
      "type" : "Named",
      "underlying" : 93
    }, {
      "fields" : [ {
        "name" : "v",
        "type" : 94
      } ],
      "name" : "struct{v interface{}}",
      "type" : "Struct",
      "underlying" : 93
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 94
    }, {
      "elem" : 96,
      "key" : 94,
      "name" : "map[interface{}]*sync.entry",
      "type" : "Map",
      "underlying" : 95
    }, {
      "elem" : 97,
      "name" : "*sync.entry",
      "type" : "Pointer",
      "underlying" : 96
    }, {
      "local-name" : "entry",
      "name" : "sync.entry",
      "package" : 4,
      "type" : "Named",
      "underlying" : 98
    }, {
      "fields" : [ {
        "name" : "p",
        "type" : 2
      } ],
      "name" : "struct{p unsafe.Pointer}",
      "type" : "Struct",
      "underlying" : 98
    }, {
      "elem" : 100,
      "name" : "*github.com/modern-go/reflect2.sliceHeader",
      "type" : "Pointer",
      "underlying" : 99
    }, {
      "local-name" : "sliceHeader",
      "name" : "github.com/modern-go/reflect2.sliceHeader",
      "package" : 0,
      "type" : "Named",
      "underlying" : 101
    }, {
      "fields" : [ {
        "name" : "Data",
        "type" : 2
      }, {
        "name" : "Len",
        "type" : 4
      }, {
        "name" : "Cap",
        "type" : 4
      } ],
      "name" : "struct{Data unsafe.Pointer; Len int; Cap int}",
      "type" : "Struct",
      "underlying" : 101
    } ],
    "variables" : [ {
      "name" : "",
      "package" : 2,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "type2",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "ptr",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Cap",
      "package" : 0,
      "type" : 4,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}