{
  "usage" : {
    "file" : "value_unsafe.go",
    "label1" : "cast-header",
    "label2" : "efficiency",
    "line" : "92",
    "module" : "google.golang.org/protobuf",
    "pkg" : "google.golang.org/protobuf/reflect/protoreflect",
    "project" : "kubernetes/kubernetes",
    "snippet" : "*(*sliceHeader)(unsafe.Pointer(&x)) = sliceHeader{Data: v.ptr, Len: int(v.num), Cap: int(v.num)}",
    "version" : "v1.23.0"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 1, 0 ],
      "exit" : false,
      "out-vars" : [ 0, 1 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 0, 1 ],
      "exit" : false,
      "out-vars" : [ 1 ],
      "decl-vars" : [ ],
      "line-start" : 92,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 12,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "go-type" : 12,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 12,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "sliceHeader"
                }
              },
              "go-type" : 15,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 15,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 10,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 2,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 10,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 10,
              "kind" : "expression",
              "target" : {
                "go-type" : 16,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "go-type" : 3,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "x",
                    "variable" : 1
                  }
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "right" : [ {
          "declared" : {
            "go-type" : 12,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 12,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "sliceHeader"
            }
          },
          "go-type" : 12,
          "kind" : "literal",
          "type" : "composite",
          "values" : [ {
            "go-type" : -1,
            "key" : {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Data",
                "variable" : 2
              }
            },
            "kind" : "expression",
            "type" : "key-value",
            "value" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "ptr",
                "variable" : 3
              },
              "go-type" : 10,
              "kind" : "expression",
              "target" : {
                "go-type" : 5,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "v",
                  "variable" : 0
                }
              },
              "type" : "selector"
            }
          }, {
            "go-type" : -1,
            "key" : {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Len",
                "variable" : 4
              }
            },
            "kind" : "expression",
            "type" : "key-value",
            "value" : {
              "coerced-to" : {
                "go-type" : 14,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 14,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "int"
                }
              },
              "go-type" : 14,
              "kind" : "expression",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "num",
                  "variable" : 5
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "go-type" : 5,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "v",
                    "variable" : 0
                  }
                },
                "type" : "selector"
              },
              "type" : "cast"
            }
          }, {
            "go-type" : -1,
            "key" : {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Cap",
                "variable" : 6
              }
            },
            "kind" : "expression",
            "type" : "key-value",
            "value" : {
              "coerced-to" : {
                "go-type" : 14,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 14,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "int"
                }
              },
              "go-type" : 14,
              "kind" : "expression",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "num",
                  "variable" : 5
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "go-type" : 5,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "v",
                    "variable" : 0
                  }
                },
                "type" : "selector"
              },
              "type" : "cast"
            }
          } ]
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 92,
      "code" : "*(*sliceHeader)(unsafe.Pointer(&x)) = sliceHeader{Data: v.ptr, Len: int(v.num), Cap: int(v.num)}",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 1 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 93,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "x",
            "variable" : 1
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 93,
      "code" : "return x",
      "entry" : false,
      "use-vars" : [ 1 ]
    } ],
    "code" : "func (v Value) getBytes() (x []byte) {\n\t*(*sliceHeader)(unsafe.Pointer(&x)) = sliceHeader{Data: v.ptr, Len: int(v.num), Cap: int(v.num)}\n\treturn x\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "getBytes",
      "package" : 0,
      "type" : 0,
      "exported" : false
    } ],
    "line-end" : 94,
    "line-start" : 91,
    "names" : [ "getBytes" ],
    "package" : 0,
    "packages" : [ {
      "name" : "protoreflect",
      "path" : "google.golang.org/protobuf/reflect/protoreflect"
    }, {
      "name" : "pragma",
      "path" : "google.golang.org/protobuf/internal/pragma"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ ],
    "receivers" : [ 0 ],
    "results" : [ 1 ],
    "type" : "function",
    "types" : [ {
      "name" : "(google.golang.org/protobuf/reflect/protoreflect.Value) func() (x []byte)",
      "params" : 1,
      "recv" : 0,
      "results" : 2,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "x",
        "type" : 3
      } ],
      "name" : "(x []byte)",
      "type" : "Tuple",
      "underlying" : 2
    }, {
      "elem" : 4,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 3
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 4
    }, {
      "local-name" : "Value",
      "name" : "google.golang.org/protobuf/reflect/protoreflect.Value",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "fields" : [ {
        "name" : "DoNotCompare",
        "type" : 7
      }, {
        "name" : "typ",
        "type" : 10
      }, {
        "name" : "ptr",
        "type" : 10
      }, {
        "name" : "num",
        "type" : 11
      } ],
      "name" : "struct{google.golang.org/protobuf/internal/pragma.DoNotCompare; typ unsafe.Pointer; ptr unsafe.Pointer; num uint64}",
      "type" : "Struct",
      "underlying" : 6
    }, {
      "local-name" : "DoNotCompare",
      "name" : "google.golang.org/protobuf/internal/pragma.DoNotCompare",
      "package" : 1,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 9,
      "name" : "[0]func()",
      "type" : "Array",
      "underlying" : 8
    }, {
      "name" : "func()",
      "params" : 1,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 9,
      "variadic" : false
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 2,
      "type" : "Basic",
      "underlying" : 10
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 11
    }, {
      "local-name" : "sliceHeader",
      "name" : "google.golang.org/protobuf/reflect/protoreflect.sliceHeader",
      "package" : 0,
      "type" : "Named",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "Data",
        "type" : 10
      }, {
        "name" : "Len",
        "type" : 14
      }, {
        "name" : "Cap",
        "type" : 14
      } ],
      "name" : "struct{Data unsafe.Pointer; Len int; Cap int}",
      "type" : "Struct",
      "underlying" : 13
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 14
    }, {
      "elem" : 12,
      "name" : "*google.golang.org/protobuf/reflect/protoreflect.sliceHeader",
      "type" : "Pointer",
      "underlying" : 15
    }, {
      "elem" : 3,
      "name" : "*[]byte",
      "type" : "Pointer",
      "underlying" : 16
    } ],
    "variables" : [ {
      "name" : "v",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "x",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Data",
      "package" : 0,
      "type" : 10,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ptr",
      "package" : 0,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Len",
      "package" : 0,
      "type" : 14,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "num",
      "package" : 0,
      "type" : 11,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Cap",
      "package" : 0,
      "type" : 14,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}