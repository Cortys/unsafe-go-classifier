{
  "usage" : {
    "file" : "sctp.go",
    "label1" : "delegate",
    "label2" : "ffi",
    "line" : "367",
    "module" : "github.com/ishidawataru/sctp",
    "pkg" : "github.com/ishidawataru/sctp",
    "project" : "cilium/cilium",
    "snippet" : "_, _, err := setsockopt(c.fd(), SCTP_INITMSG, uintptr(unsafe.Pointer(&param)), uintptr(optlen))",
    "version" : "v0.0.0-20180213033435-07191f837fed"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 3, 1, 4, 5, 2 ],
      "exit" : false,
      "out-vars" : [ 4, 5, 2, 3, 1 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 4, 5, 2, 3, 1 ],
      "exit" : false,
      "out-vars" : [ 11, 1 ],
      "decl-vars" : [ 11 ],
      "line-start" : 360,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "param"
          }
        } ],
        "right" : [ {
          "declared" : {
            "go-type" : 19,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 19,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "InitMsg"
            }
          },
          "go-type" : 19,
          "kind" : "literal",
          "type" : "composite",
          "values" : [ {
            "go-type" : -1,
            "key" : {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "NumOstreams",
                "variable" : 7
              }
            },
            "kind" : "expression",
            "type" : "key-value",
            "value" : {
              "coerced-to" : {
                "go-type" : 21,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 21,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uint16"
                }
              },
              "go-type" : 21,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "numOstreams",
                  "variable" : 2
                }
              },
              "type" : "cast"
            }
          }, {
            "go-type" : -1,
            "key" : {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "MaxInstreams",
                "variable" : 8
              }
            },
            "kind" : "expression",
            "type" : "key-value",
            "value" : {
              "coerced-to" : {
                "go-type" : 21,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 21,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uint16"
                }
              },
              "go-type" : 21,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "maxInstreams",
                  "variable" : 3
                }
              },
              "type" : "cast"
            }
          }, {
            "go-type" : -1,
            "key" : {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "MaxAttempts",
                "variable" : 9
              }
            },
            "kind" : "expression",
            "type" : "key-value",
            "value" : {
              "coerced-to" : {
                "go-type" : 21,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 21,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uint16"
                }
              },
              "go-type" : 21,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "maxAttempts",
                  "variable" : 4
                }
              },
              "type" : "cast"
            }
          }, {
            "go-type" : -1,
            "key" : {
              "go-type" : -1,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "MaxInitTimeout",
                "variable" : 10
              }
            },
            "kind" : "expression",
            "type" : "key-value",
            "value" : {
              "coerced-to" : {
                "go-type" : 21,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 21,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uint16"
                }
              },
              "go-type" : 21,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "maxInitTimeout",
                  "variable" : 5
                }
              },
              "type" : "cast"
            }
          } ]
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 365,
      "code" : "param := InitMsg{\n\tNumOstreams:    uint16(numOstreams),\n\tMaxInstreams:   uint16(maxInstreams),\n\tMaxAttempts:    uint16(maxAttempts),\n\tMaxInitTimeout: uint16(maxInitTimeout),\n}",
      "entry" : false,
      "use-vars" : [ 2, 4, 3, 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4 ],
      "in-vars" : [ 11, 1 ],
      "exit" : false,
      "out-vars" : [ 12, 1, 11 ],
      "decl-vars" : [ 12 ],
      "line-start" : 366,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "optlen"
          }
        } ],
        "right" : [ {
          "go-type" : 22,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "8"
          }
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 366,
      "code" : "optlen := unsafe.Sizeof(param)",
      "entry" : false,
      "use-vars" : [ 11 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5 ],
      "in-vars" : [ 1, 11, 12 ],
      "exit" : false,
      "out-vars" : [ 14 ],
      "decl-vars" : [ 14, 15, 16 ],
      "line-start" : 367,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "_"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "_"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "arguments" : [ ],
            "ellipsis" : false,
            "function" : {
              "field" : {
                "function" : 2,
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "fd"
              },
              "go-type" : 26,
              "kind" : "expression",
              "target" : {
                "go-type" : 10,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "c",
                  "variable" : 1
                }
              },
              "type" : "selector"
            },
            "go-type" : 2,
            "kind" : "expression",
            "type" : "call"
          }, {
            "go-type" : 22,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "2"
            }
          }, {
            "coerced-to" : {
              "go-type" : 22,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 22,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uintptr"
              }
            },
            "go-type" : 22,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 29,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 1,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 29,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 29,
              "kind" : "expression",
              "target" : {
                "go-type" : 30,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "go-type" : 19,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "param",
                    "variable" : 11
                  }
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          }, {
            "coerced-to" : {
              "go-type" : 22,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 22,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uintptr"
              }
            },
            "go-type" : 22,
            "kind" : "expression",
            "target" : {
              "go-type" : 22,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "optlen",
                "variable" : 12
              }
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 24,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "setsockopt"
            }
          },
          "go-type" : 23,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 367,
      "code" : "_, _, err := setsockopt(c.fd(), SCTP_INITMSG, uintptr(unsafe.Pointer(&param)), uintptr(optlen))",
      "entry" : false,
      "use-vars" : [ 12, 1, 11 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 14 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 368,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 4,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 14
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 368,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 14 ]
    } ],
    "code" : "func (c *SCTPConn) SetInitMsg(numOstreams, maxInstreams, maxAttempts, maxInitTimeout int) error {\n\tparam := InitMsg{\n\t\tNumOstreams:    uint16(numOstreams),\n\t\tMaxInstreams:   uint16(maxInstreams),\n\t\tMaxAttempts:    uint16(maxAttempts),\n\t\tMaxInitTimeout: uint16(maxInitTimeout),\n\t}\n\toptlen := unsafe.Sizeof(param)\n\t_, _, err := setsockopt(c.fd(), SCTP_INITMSG, uintptr(unsafe.Pointer(&param)), uintptr(optlen))\n\treturn err\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "SetInitMsg",
      "package" : 0,
      "type" : 0,
      "exported" : true
    }, {
      "name" : "setsockopt",
      "package" : 0,
      "type" : 24,
      "exported" : false
    }, {
      "name" : "fd",
      "package" : 0,
      "type" : 28,
      "exported" : false
    } ],
    "line-end" : 369,
    "line-start" : 359,
    "names" : [ "SetInitMsg" ],
    "package" : 0,
    "packages" : [ {
      "name" : "sctp",
      "path" : "github.com/ishidawataru/sctp"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 2, 3, 4, 5 ],
    "receivers" : [ 1 ],
    "results" : [ 6 ],
    "type" : "function",
    "types" : [ {
      "name" : "(*github.com/ishidawataru/sctp.SCTPConn) func(numOstreams int, maxInstreams int, maxAttempts int, maxInitTimeout int) error",
      "params" : 1,
      "recv" : 1,
      "results" : 3,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "numOstreams",
        "type" : 2
      }, {
        "name" : "maxInstreams",
        "type" : 2
      }, {
        "name" : "maxAttempts",
        "type" : 2
      }, {
        "name" : "maxInitTimeout",
        "type" : 2
      } ],
      "name" : "(numOstreams int, maxInstreams int, maxAttempts int, maxInitTimeout int)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 2
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 4
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 3
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 6
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 5
    }, {
      "name" : "(error) func() string",
      "params" : 7,
      "recv" : 0,
      "results" : 8,
      "type" : "Signature",
      "underlying" : 6,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 7
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 9
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 8
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 9
    }, {
      "elem" : 11,
      "name" : "*github.com/ishidawataru/sctp.SCTPConn",
      "type" : "Pointer",
      "underlying" : 10
    }, {
      "local-name" : "SCTPConn",
      "name" : "github.com/ishidawataru/sctp.SCTPConn",
      "package" : 0,
      "type" : "Named",
      "underlying" : 12
    }, {
      "fields" : [ {
        "name" : "_fd",
        "type" : 13
      }, {
        "name" : "notificationHandler",
        "type" : 14
      } ],
      "name" : "struct{_fd int32; notificationHandler github.com/ishidawataru/sctp.NotificationHandler}",
      "type" : "Struct",
      "underlying" : 12
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "local-name" : "NotificationHandler",
      "name" : "github.com/ishidawataru/sctp.NotificationHandler",
      "package" : 0,
      "type" : "Named",
      "underlying" : 15
    }, {
      "name" : "func([]byte) error",
      "params" : 16,
      "recv" : -1,
      "results" : 3,
      "type" : "Signature",
      "underlying" : 15,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 17
      } ],
      "name" : "([]byte)",
      "type" : "Tuple",
      "underlying" : 16
    }, {
      "elem" : 18,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 17
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 18
    }, {
      "local-name" : "InitMsg",
      "name" : "github.com/ishidawataru/sctp.InitMsg",
      "package" : 0,
      "type" : "Named",
      "underlying" : 20
    }, {
      "fields" : [ {
        "name" : "NumOstreams",
        "type" : 21
      }, {
        "name" : "MaxInstreams",
        "type" : 21
      }, {
        "name" : "MaxAttempts",
        "type" : 21
      }, {
        "name" : "MaxInitTimeout",
        "type" : 21
      } ],
      "name" : "struct{NumOstreams uint16; MaxInstreams uint16; MaxAttempts uint16; MaxInitTimeout uint16}",
      "type" : "Struct",
      "underlying" : 20
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 21
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 22
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 22
      }, {
        "name" : "",
        "type" : 22
      }, {
        "name" : "",
        "type" : 4
      } ],
      "name" : "(uintptr, uintptr, error)",
      "type" : "Tuple",
      "underlying" : 23
    }, {
      "name" : "func(fd int, optname uintptr, optval uintptr, optlen uintptr) (uintptr, uintptr, error)",
      "params" : 25,
      "recv" : -1,
      "results" : 23,
      "type" : "Signature",
      "underlying" : 24,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "fd",
        "type" : 2
      }, {
        "name" : "optname",
        "type" : 22
      }, {
        "name" : "optval",
        "type" : 22
      }, {
        "name" : "optlen",
        "type" : 22
      } ],
      "name" : "(fd int, optname uintptr, optval uintptr, optlen uintptr)",
      "type" : "Tuple",
      "underlying" : 25
    }, {
      "name" : "func() int",
      "params" : 7,
      "recv" : -1,
      "results" : 27,
      "type" : "Signature",
      "underlying" : 26,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 2
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 27
    }, {
      "name" : "(*github.com/ishidawataru/sctp.SCTPConn) func() int",
      "params" : 7,
      "recv" : 13,
      "results" : 27,
      "type" : "Signature",
      "underlying" : 28,
      "variadic" : false
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 29
    }, {
      "elem" : 19,
      "name" : "*github.com/ishidawataru/sctp.InitMsg",
      "type" : "Pointer",
      "underlying" : 30
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "c",
      "package" : 0,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "numOstreams",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "maxInstreams",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "maxAttempts",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "maxInitTimeout",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "NumOstreams",
      "package" : 0,
      "type" : 21,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "MaxInstreams",
      "package" : 0,
      "type" : 21,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "MaxAttempts",
      "package" : 0,
      "type" : 21,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "MaxInitTimeout",
      "package" : 0,
      "type" : 21,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "param",
      "package" : 0,
      "type" : 19,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "optlen",
      "package" : 0,
      "type" : 22,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "c",
      "package" : 0,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "_",
      "package" : 0,
      "type" : 22,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "_",
      "package" : 0,
      "type" : 22,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}