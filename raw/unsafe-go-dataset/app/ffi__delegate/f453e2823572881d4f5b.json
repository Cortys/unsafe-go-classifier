{
  "usage" : {
    "file" : "syscalls.go",
    "label1" : "delegate",
    "label2" : "ffi",
    "line" : "221",
    "module" : "github.com/cilium/ebpf",
    "pkg" : "github.com/cilium/ebpf",
    "project" : "kubernetes/kubernetes",
    "snippet" : "fd, err := bpfCall(_MapCreate, unsafe.Pointer(attr), unsafe.Sizeof(*attr))",
    "version" : "v0.0.0-20191113100448-d9fb101ca1fb"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 1 ],
      "exit" : false,
      "out-vars" : [ 1 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 1 ],
      "exit" : false,
      "out-vars" : [ 4, 5 ],
      "decl-vars" : [ 4, 5 ],
      "line-start" : 221,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "fd"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 25,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          }, {
            "coerced-to" : {
              "go-type" : 26,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 1,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 26,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 26,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "attr",
                "variable" : 1
              }
            },
            "type" : "cast"
          }, {
            "go-type" : 22,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "44"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 23,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "bpfCall"
            }
          },
          "go-type" : 21,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 221,
      "code" : "fd, err := bpfCall(_MapCreate, unsafe.Pointer(attr), unsafe.Sizeof(*attr))",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4, 5 ],
      "in-vars" : [ 5, 4 ],
      "exit" : false,
      "out-vars" : [ 5, 4 ],
      "decl-vars" : [ ],
      "line-start" : 222,
      "ast" : {
        "condition" : {
          "go-type" : 27,
          "kind" : "expression",
          "left" : {
            "go-type" : 15,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "err",
              "variable" : 4
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 28,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 224,
      "code" : "if err != nil {\n\treturn nil, err\n}",
      "entry" : false,
      "use-vars" : [ 4 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 4 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 223,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 28,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        }, {
          "go-type" : 15,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 4
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 223,
      "code" : "return nil, err",
      "entry" : false,
      "use-vars" : [ 4 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 5 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 226,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 6,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 6,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint32"
              }
            },
            "go-type" : 6,
            "kind" : "expression",
            "target" : {
              "go-type" : 22,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "fd",
                "variable" : 5
              }
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 29,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "newBPFFD"
            }
          },
          "go-type" : 11,
          "kind" : "expression",
          "type" : "call"
        }, {
          "go-type" : 28,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 226,
      "code" : "return newBPFFD(uint32(fd)), nil",
      "entry" : false,
      "use-vars" : [ 5 ]
    } ],
    "code" : "func bpfMapCreate(attr *bpfMapCreateAttr) (*bpfFD, error) {\n\tfd, err := bpfCall(_MapCreate, unsafe.Pointer(attr), unsafe.Sizeof(*attr))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn newBPFFD(uint32(fd)), nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "bpfMapCreate",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "bpfCall",
      "package" : 0,
      "type" : 23,
      "exported" : false
    }, {
      "name" : "newBPFFD",
      "package" : 0,
      "type" : 29,
      "exported" : false
    } ],
    "line-end" : 227,
    "line-start" : 220,
    "names" : [ "bpfMapCreate" ],
    "package" : 0,
    "packages" : [ {
      "name" : "ebpf",
      "path" : "github.com/cilium/ebpf"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 1 ],
    "receivers" : [ ],
    "results" : [ 2, 3 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(attr *github.com/cilium/ebpf.bpfMapCreateAttr) (*github.com/cilium/ebpf.bpfFD, error)",
      "params" : 1,
      "recv" : -1,
      "results" : 10,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "attr",
        "type" : 2
      } ],
      "name" : "(attr *github.com/cilium/ebpf.bpfMapCreateAttr)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*github.com/cilium/ebpf.bpfMapCreateAttr",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "bpfMapCreateAttr",
      "name" : "github.com/cilium/ebpf.bpfMapCreateAttr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "mapType",
        "type" : 5
      }, {
        "name" : "keySize",
        "type" : 6
      }, {
        "name" : "valueSize",
        "type" : 6
      }, {
        "name" : "maxEntries",
        "type" : 6
      }, {
        "name" : "flags",
        "type" : 6
      }, {
        "name" : "innerMapFd",
        "type" : 6
      }, {
        "name" : "numaNode",
        "type" : 6
      }, {
        "name" : "mapName",
        "type" : 7
      } ],
      "name" : "struct{mapType github.com/cilium/ebpf.MapType; keySize uint32; valueSize uint32; maxEntries uint32; flags uint32; innerMapFd uint32; numaNode uint32; mapName github.com/cilium/ebpf.bpfObjName}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "local-name" : "MapType",
      "name" : "github.com/cilium/ebpf.MapType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 6
    }, {
      "local-name" : "bpfObjName",
      "name" : "github.com/cilium/ebpf.bpfObjName",
      "package" : 0,
      "type" : "Named",
      "underlying" : 8
    }, {
      "elem" : 9,
      "name" : "[16]byte",
      "type" : "Array",
      "underlying" : 8
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 9
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 11
      }, {
        "name" : "",
        "type" : 15
      } ],
      "name" : "(*github.com/cilium/ebpf.bpfFD, error)",
      "type" : "Tuple",
      "underlying" : 10
    }, {
      "elem" : 12,
      "name" : "*github.com/cilium/ebpf.bpfFD",
      "type" : "Pointer",
      "underlying" : 11
    }, {
      "local-name" : "bpfFD",
      "name" : "github.com/cilium/ebpf.bpfFD",
      "package" : 0,
      "type" : "Named",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "raw",
        "type" : 14
      } ],
      "name" : "struct{raw int64}",
      "type" : "Struct",
      "underlying" : 13
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 14
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 16
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 17
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 16
    }, {
      "name" : "func() string",
      "params" : 18,
      "recv" : 0,
      "results" : 19,
      "type" : "Signature",
      "underlying" : 17,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 18
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 20
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 19
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 20
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 22
      }, {
        "name" : "",
        "type" : 15
      } ],
      "name" : "(uintptr, error)",
      "type" : "Tuple",
      "underlying" : 21
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 22
    }, {
      "name" : "func(cmd int, attr unsafe.Pointer, size uintptr) (uintptr, error)",
      "params" : 24,
      "recv" : -1,
      "results" : 21,
      "type" : "Signature",
      "underlying" : 23,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "cmd",
        "type" : 25
      }, {
        "name" : "attr",
        "type" : 26
      }, {
        "name" : "size",
        "type" : 22
      } ],
      "name" : "(cmd int, attr unsafe.Pointer, size uintptr)",
      "type" : "Tuple",
      "underlying" : 24
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 25
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 26
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 27
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 28
    }, {
      "name" : "func(value uint32) *github.com/cilium/ebpf.bpfFD",
      "params" : 30,
      "recv" : -1,
      "results" : 31,
      "type" : "Signature",
      "underlying" : 29,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "value",
        "type" : 6
      } ],
      "name" : "(value uint32)",
      "type" : "Tuple",
      "underlying" : 30
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 11
      } ],
      "name" : "(*github.com/cilium/ebpf.bpfFD)",
      "type" : "Tuple",
      "underlying" : 31
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 15,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "attr",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 11,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res1]",
      "package" : 0,
      "type" : 15,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 15,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "fd",
      "package" : 0,
      "type" : 22,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}