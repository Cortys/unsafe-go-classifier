{
  "usage" : {
    "file" : "syscalls.go",
    "label1" : "delegate",
    "label2" : "ffi",
    "line" : "216",
    "module" : "github.com/cilium/ebpf",
    "pkg" : "github.com/cilium/ebpf",
    "project" : "kubernetes/kubernetes",
    "snippet" : "_, err := bpfCall(cmd, unsafe.Pointer(attr), unsafe.Sizeof(*attr))",
    "version" : "v0.0.0-20191113100448-d9fb101ca1fb"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 2, 1 ],
      "exit" : false,
      "out-vars" : [ 2, 1 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 2, 1 ],
      "exit" : false,
      "out-vars" : [ 4 ],
      "decl-vars" : [ 4, 5 ],
      "line-start" : 216,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "_"
          }
        }, {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "cmd",
              "variable" : 1
            }
          }, {
            "coerced-to" : {
              "go-type" : 18,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 1,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 18,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 18,
            "kind" : "expression",
            "target" : {
              "go-type" : 3,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "attr",
                "variable" : 2
              }
            },
            "type" : "cast"
          }, {
            "go-type" : 15,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "16"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 16,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "bpfCall"
            }
          },
          "go-type" : 14,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 216,
      "code" : "_, err := bpfCall(cmd, unsafe.Pointer(attr), unsafe.Sizeof(*attr))",
      "entry" : false,
      "use-vars" : [ 1, 2 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 4 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 217,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 8,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 4
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 217,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 4 ]
    } ],
    "code" : "func bpfProgAlter(cmd int, attr *bpfProgAlterAttr) error {\n\t_, err := bpfCall(cmd, unsafe.Pointer(attr), unsafe.Sizeof(*attr))\n\treturn err\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "bpfProgAlter",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "bpfCall",
      "package" : 0,
      "type" : 16,
      "exported" : false
    } ],
    "line-end" : 218,
    "line-start" : 215,
    "names" : [ "bpfProgAlter" ],
    "package" : 0,
    "packages" : [ {
      "name" : "ebpf",
      "path" : "github.com/cilium/ebpf"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 1, 2 ],
    "receivers" : [ ],
    "results" : [ 3 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(cmd int, attr *github.com/cilium/ebpf.bpfProgAlterAttr) error",
      "params" : 1,
      "recv" : -1,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "cmd",
        "type" : 2
      }, {
        "name" : "attr",
        "type" : 3
      } ],
      "name" : "(cmd int, attr *github.com/cilium/ebpf.bpfProgAlterAttr)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 2
    }, {
      "elem" : 4,
      "name" : "*github.com/cilium/ebpf.bpfProgAlterAttr",
      "type" : "Pointer",
      "underlying" : 3
    }, {
      "local-name" : "bpfProgAlterAttr",
      "name" : "github.com/cilium/ebpf.bpfProgAlterAttr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 5
    }, {
      "fields" : [ {
        "name" : "targetFd",
        "type" : 6
      }, {
        "name" : "attachBpfFd",
        "type" : 6
      }, {
        "name" : "attachType",
        "type" : 6
      }, {
        "name" : "attachFlags",
        "type" : 6
      } ],
      "name" : "struct{targetFd uint32; attachBpfFd uint32; attachType uint32; attachFlags uint32}",
      "type" : "Struct",
      "underlying" : 5
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 6
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 8
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 7
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 9
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 10
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 9
    }, {
      "name" : "func() string",
      "params" : 11,
      "recv" : 0,
      "results" : 12,
      "type" : "Signature",
      "underlying" : 10,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 11
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 13
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 12
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 15
      }, {
        "name" : "",
        "type" : 8
      } ],
      "name" : "(uintptr, error)",
      "type" : "Tuple",
      "underlying" : 14
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 15
    }, {
      "name" : "func(cmd int, attr unsafe.Pointer, size uintptr) (uintptr, error)",
      "params" : 17,
      "recv" : -1,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 16,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "cmd",
        "type" : 2
      }, {
        "name" : "attr",
        "type" : 18
      }, {
        "name" : "size",
        "type" : 15
      } ],
      "name" : "(cmd int, attr unsafe.Pointer, size uintptr)",
      "type" : "Tuple",
      "underlying" : 17
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 18
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "cmd",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "attr",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "_",
      "package" : 0,
      "type" : 15,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}