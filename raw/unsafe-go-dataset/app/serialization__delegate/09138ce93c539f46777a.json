{
  "usage" : {
    "file" : "any.go",
    "label1" : "delegate",
    "label2" : "serialization",
    "line" : "300",
    "module" : "github.com/json-iterator/go",
    "pkg" : "github.com/json-iterator/go",
    "project" : "rook/rook",
    "snippet" : "func (codec *anyCodec) IsEmpty(ptr unsafe.Pointer) bool {",
    "version" : "v1.1.8"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 0, 1 ],
      "exit" : false,
      "out-vars" : [ 0, 1 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 1, 0 ],
      "exit" : false,
      "out-vars" : [ 4 ],
      "decl-vars" : [ 4 ],
      "line-start" : 301,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "obj"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "ptr",
              "variable" : 1
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "UnsafeIndirect"
            },
            "go-type" : 21,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "valType",
                "variable" : 3
              },
              "go-type" : 3,
              "kind" : "expression",
              "target" : {
                "go-type" : 0,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "codec",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "type" : "selector"
          },
          "go-type" : 11,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 301,
      "code" : "obj := codec.valType.UnsafeIndirect(ptr)",
      "entry" : false,
      "use-vars" : [ 0, 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4 ],
      "in-vars" : [ 4 ],
      "exit" : false,
      "out-vars" : [ 33 ],
      "decl-vars" : [ 33 ],
      "line-start" : 302,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "any"
          }
        } ],
        "right" : [ {
          "asserted" : {
            "go-type" : 5,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 5,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "Any"
            }
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 11,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "obj",
              "variable" : 4
            }
          },
          "type" : "type-assert"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 302,
      "code" : "any := obj.(Any)",
      "entry" : false,
      "use-vars" : [ 4 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 33 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 303,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 4,
          "kind" : "expression",
          "left" : {
            "arguments" : [ ],
            "ellipsis" : false,
            "function" : {
              "field" : {
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "Size"
              },
              "go-type" : 34,
              "kind" : "expression",
              "target" : {
                "go-type" : 5,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "any",
                  "variable" : 33
                }
              },
              "type" : "selector"
            },
            "go-type" : 36,
            "kind" : "expression",
            "type" : "call"
          },
          "operator" : "==",
          "right" : {
            "go-type" : 36,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 303,
      "code" : "return any.Size() == 0",
      "entry" : false,
      "use-vars" : [ 33 ]
    } ],
    "code" : "func (codec *anyCodec) IsEmpty(ptr unsafe.Pointer) bool {\n\tobj := codec.valType.UnsafeIndirect(ptr)\n\tany := obj.(Any)\n\treturn any.Size() == 0\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "IsEmpty",
      "package" : 0,
      "type" : 0,
      "exported" : true
    }, {
      "name" : "UnsafeIndirect",
      "package" : 2,
      "type" : 21,
      "exported" : true
    }, {
      "name" : "Size",
      "package" : 0,
      "type" : 34,
      "exported" : true
    } ],
    "line-end" : 304,
    "line-start" : 300,
    "names" : [ "IsEmpty" ],
    "package" : 0,
    "packages" : [ {
      "name" : "jsoniter",
      "path" : "github.com/json-iterator/go"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "reflect2",
      "path" : "github.com/modern-go/reflect2"
    }, {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "concurrent",
      "path" : "github.com/modern-go/concurrent"
    }, {
      "name" : "sync",
      "path" : "sync"
    }, {
      "name" : "atomic",
      "path" : "sync/atomic"
    }, {
      "name" : "io",
      "path" : "io"
    } ],
    "params" : [ 1 ],
    "receivers" : [ 0 ],
    "results" : [ 2 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(ptr unsafe.Pointer) bool",
      "params" : 1,
      "recv" : 0,
      "results" : 3,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ptr",
        "type" : 2
      } ],
      "name" : "(ptr unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 2
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 4
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 3
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 4
    }, {
      "local-name" : "Any",
      "name" : "github.com/json-iterator/go.Any",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "methods" : [ {
        "name" : "Get",
        "type" : 7
      }, {
        "name" : "GetInterface",
        "type" : 20
      }, {
        "name" : "Keys",
        "type" : 11
      }, {
        "name" : "LastError",
        "type" : 14
      }, {
        "name" : "MustBeValid",
        "type" : 18
      }, {
        "name" : "Size",
        "type" : 34
      }, {
        "name" : "ToBool",
        "type" : 14
      }, {
        "name" : "ToFloat32",
        "type" : 19
      }, {
        "name" : "ToFloat64",
        "type" : 22
      }, {
        "name" : "ToInt",
        "type" : 34
      }, {
        "name" : "ToInt32",
        "type" : 25
      }, {
        "name" : "ToInt64",
        "type" : 27
      }, {
        "name" : "ToString",
        "type" : 27
      }, {
        "name" : "ToUint",
        "type" : 30
      }, {
        "name" : "ToUint32",
        "type" : 32
      }, {
        "name" : "ToUint64",
        "type" : 34
      }, {
        "name" : "ToVal",
        "type" : 37
      }, {
        "name" : "ValueType",
        "type" : 39
      }, {
        "name" : "WriteTo",
        "type" : 42
      } ],
      "name" : "interface{Get(path ...interface{}) github.com/json-iterator/go.Any; GetInterface() interface{}; Keys() []string; LastError() error; MustBeValid() github.com/json-iterator/go.Any; Size() int; ToBool() bool; ToFloat32() float32; ToFloat64() float64; ToInt() int; ToInt32() int32; ToInt64() int64; ToString() string; ToUint() uint; ToUint32() uint32; ToUint64() uint64; ToVal(val interface{}); ValueType() github.com/json-iterator/go.ValueType; WriteTo(stream *github.com/json-iterator/go.Stream)}",
      "type" : "Interface",
      "underlying" : 6
    }, {
      "name" : "func(path ...interface{}) github.com/json-iterator/go.Any",
      "params" : 8,
      "recv" : 5,
      "results" : 10,
      "type" : "Signature",
      "underlying" : 7,
      "variadic" : true
    }, {
      "fields" : [ {
        "name" : "path",
        "type" : 9
      } ],
      "name" : "(path []interface{})",
      "type" : "Tuple",
      "underlying" : 8
    }, {
      "elem" : 11,
      "name" : "[]interface{}",
      "type" : "Slice",
      "underlying" : 9
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 5
      } ],
      "name" : "(github.com/json-iterator/go.Any)",
      "type" : "Tuple",
      "underlying" : 10
    }, {
      "name" : "func() []string",
      "params" : 15,
      "recv" : 6,
      "results" : 12,
      "type" : "Signature",
      "underlying" : 11,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 13
      } ],
      "name" : "([]string)",
      "type" : "Tuple",
      "underlying" : 12
    }, {
      "elem" : 29,
      "name" : "[]string",
      "type" : "Slice",
      "underlying" : 13
    }, {
      "name" : "func() error",
      "params" : 15,
      "recv" : 7,
      "results" : 15,
      "type" : "Signature",
      "underlying" : 14,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 16
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 15
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 17
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 27
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 17
    }, {
      "name" : "func() github.com/json-iterator/go.Any",
      "params" : 15,
      "recv" : 8,
      "results" : 10,
      "type" : "Signature",
      "underlying" : 18,
      "variadic" : false
    }, {
      "name" : "func() float32",
      "params" : 15,
      "recv" : 9,
      "results" : 20,
      "type" : "Signature",
      "underlying" : 19,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 21
      } ],
      "name" : "(float32)",
      "type" : "Tuple",
      "underlying" : 20
    }, {
      "name" : "float32",
      "type" : "Basic",
      "underlying" : 21
    }, {
      "name" : "func() float64",
      "params" : 15,
      "recv" : 10,
      "results" : 23,
      "type" : "Signature",
      "underlying" : 22,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 24
      } ],
      "name" : "(float64)",
      "type" : "Tuple",
      "underlying" : 23
    }, {
      "name" : "float64",
      "type" : "Basic",
      "underlying" : 24
    }, {
      "name" : "func() int32",
      "params" : 15,
      "recv" : 11,
      "results" : 26,
      "type" : "Signature",
      "underlying" : 25,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 75
      } ],
      "name" : "(int32)",
      "type" : "Tuple",
      "underlying" : 26
    }, {
      "name" : "func() int64",
      "params" : 15,
      "recv" : 12,
      "results" : 28,
      "type" : "Signature",
      "underlying" : 27,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 29
      } ],
      "name" : "(int64)",
      "type" : "Tuple",
      "underlying" : 28
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 29
    }, {
      "name" : "func() uint",
      "params" : 15,
      "recv" : 13,
      "results" : 31,
      "type" : "Signature",
      "underlying" : 30,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 19
      } ],
      "name" : "(uint)",
      "type" : "Tuple",
      "underlying" : 31
    }, {
      "name" : "func() uint32",
      "params" : 15,
      "recv" : 14,
      "results" : 33,
      "type" : "Signature",
      "underlying" : 32,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 67
      } ],
      "name" : "(uint32)",
      "type" : "Tuple",
      "underlying" : 33
    }, {
      "name" : "func() uint64",
      "params" : 15,
      "recv" : 15,
      "results" : 35,
      "type" : "Signature",
      "underlying" : 34,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 36
      } ],
      "name" : "(uint64)",
      "type" : "Tuple",
      "underlying" : 35
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 36
    }, {
      "name" : "func(val interface{})",
      "params" : 38,
      "recv" : 16,
      "results" : 15,
      "type" : "Signature",
      "underlying" : 37,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "val",
        "type" : 11
      } ],
      "name" : "(val interface{})",
      "type" : "Tuple",
      "underlying" : 38
    }, {
      "name" : "func() github.com/json-iterator/go.ValueType",
      "params" : 15,
      "recv" : 17,
      "results" : 40,
      "type" : "Signature",
      "underlying" : 39,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 41
      } ],
      "name" : "(github.com/json-iterator/go.ValueType)",
      "type" : "Tuple",
      "underlying" : 40
    }, {
      "local-name" : "ValueType",
      "name" : "github.com/json-iterator/go.ValueType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 36
    }, {
      "name" : "func(stream *github.com/json-iterator/go.Stream)",
      "params" : 43,
      "recv" : 32,
      "results" : 15,
      "type" : "Signature",
      "underlying" : 42,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "stream",
        "type" : 44
      } ],
      "name" : "(stream *github.com/json-iterator/go.Stream)",
      "type" : "Tuple",
      "underlying" : 43
    }, {
      "elem" : 45,
      "name" : "*github.com/json-iterator/go.Stream",
      "type" : "Pointer",
      "underlying" : 44
    }, {
      "local-name" : "Stream",
      "name" : "github.com/json-iterator/go.Stream",
      "package" : 0,
      "type" : "Named",
      "underlying" : 46
    }, {
      "fields" : [ {
        "name" : "cfg",
        "type" : 47
      }, {
        "name" : "out",
        "type" : 122
      }, {
        "name" : "buf",
        "type" : 81
      }, {
        "name" : "Error",
        "type" : 16
      }, {
        "name" : "indention",
        "type" : 36
      }, {
        "name" : "Attachment",
        "type" : 11
      } ],
      "name" : "struct{cfg *github.com/json-iterator/go.frozenConfig; out io.Writer; buf []byte; Error error; indention int; Attachment interface{}}",
      "type" : "Struct",
      "underlying" : 46
    }, {
      "elem" : 48,
      "name" : "*github.com/json-iterator/go.frozenConfig",
      "type" : "Pointer",
      "underlying" : 47
    }, {
      "local-name" : "frozenConfig",
      "name" : "github.com/json-iterator/go.frozenConfig",
      "package" : 0,
      "type" : "Named",
      "underlying" : 49
    }, {
      "fields" : [ {
        "name" : "configBeforeFrozen",
        "type" : 50
      }, {
        "name" : "sortMapKeys",
        "type" : 4
      }, {
        "name" : "indentionStep",
        "type" : 36
      }, {
        "name" : "objectFieldMustBeSimpleString",
        "type" : 4
      }, {
        "name" : "onlyTaggedField",
        "type" : 4
      }, {
        "name" : "disallowUnknownFields",
        "type" : 4
      }, {
        "name" : "decoderCache",
        "type" : 52
      }, {
        "name" : "encoderCache",
        "type" : 52
      }, {
        "name" : "encoderExtension",
        "type" : 65
      }, {
        "name" : "decoderExtension",
        "type" : 65
      }, {
        "name" : "extraExtensions",
        "type" : 116
      }, {
        "name" : "streamPool",
        "type" : 117
      }, {
        "name" : "iteratorPool",
        "type" : 117
      }, {
        "name" : "caseSensitive",
        "type" : 4
      } ],
      "name" : "struct{configBeforeFrozen github.com/json-iterator/go.Config; sortMapKeys bool; indentionStep int; objectFieldMustBeSimpleString bool; onlyTaggedField bool; disallowUnknownFields bool; decoderCache *github.com/modern-go/concurrent.Map; encoderCache *github.com/modern-go/concurrent.Map; encoderExtension github.com/json-iterator/go.Extension; decoderExtension github.com/json-iterator/go.Extension; extraExtensions []github.com/json-iterator/go.Extension; streamPool *sync.Pool; iteratorPool *sync.Pool; caseSensitive bool}",
      "type" : "Struct",
      "underlying" : 49
    }, {
      "local-name" : "Config",
      "name" : "github.com/json-iterator/go.Config",
      "package" : 0,
      "type" : "Named",
      "underlying" : 51
    }, {
      "fields" : [ {
        "name" : "IndentionStep",
        "type" : 36
      }, {
        "name" : "MarshalFloatWith6Digits",
        "type" : 4
      }, {
        "name" : "EscapeHTML",
        "type" : 4
      }, {
        "name" : "SortMapKeys",
        "type" : 4
      }, {
        "name" : "UseNumber",
        "type" : 4
      }, {
        "name" : "DisallowUnknownFields",
        "type" : 4
      }, {
        "name" : "TagKey",
        "type" : 29
      }, {
        "name" : "OnlyTaggedField",
        "type" : 4
      }, {
        "name" : "ValidateJsonRawMessage",
        "type" : 4
      }, {
        "name" : "ObjectFieldMustBeSimpleString",
        "type" : 4
      }, {
        "name" : "CaseSensitive",
        "type" : 4
      } ],
      "name" : "struct{IndentionStep int; MarshalFloatWith6Digits bool; EscapeHTML bool; SortMapKeys bool; UseNumber bool; DisallowUnknownFields bool; TagKey string; OnlyTaggedField bool; ValidateJsonRawMessage bool; ObjectFieldMustBeSimpleString bool; CaseSensitive bool}",
      "type" : "Struct",
      "underlying" : 51
    }, {
      "elem" : 53,
      "name" : "*github.com/modern-go/concurrent.Map",
      "type" : "Pointer",
      "underlying" : 52
    }, {
      "local-name" : "Map",
      "name" : "github.com/modern-go/concurrent.Map",
      "package" : 4,
      "type" : "Named",
      "underlying" : 54
    }, {
      "fields" : [ {
        "name" : "Map",
        "type" : 55
      } ],
      "name" : "struct{sync.Map}",
      "type" : "Struct",
      "underlying" : 54
    }, {
      "local-name" : "Map",
      "name" : "sync.Map",
      "package" : 5,
      "type" : "Named",
      "underlying" : 56
    }, {
      "fields" : [ {
        "name" : "mu",
        "type" : 57
      }, {
        "name" : "read",
        "type" : 59
      }, {
        "name" : "dirty",
        "type" : 61
      }, {
        "name" : "misses",
        "type" : 36
      } ],
      "name" : "struct{mu sync.Mutex; read sync/atomic.Value; dirty map[interface{}]*sync.entry; misses int}",
      "type" : "Struct",
      "underlying" : 56
    }, {
      "local-name" : "Mutex",
      "name" : "sync.Mutex",
      "package" : 5,
      "type" : "Named",
      "underlying" : 58
    }, {
      "fields" : [ {
        "name" : "state",
        "type" : 75
      }, {
        "name" : "sema",
        "type" : 67
      } ],
      "name" : "struct{state int32; sema uint32}",
      "type" : "Struct",
      "underlying" : 58
    }, {
      "local-name" : "Value",
      "name" : "sync/atomic.Value",
      "package" : 6,
      "type" : "Named",
      "underlying" : 60
    }, {
      "fields" : [ {
        "name" : "v",
        "type" : 11
      } ],
      "name" : "struct{v interface{}}",
      "type" : "Struct",
      "underlying" : 60
    }, {
      "elem" : 62,
      "key" : 11,
      "name" : "map[interface{}]*sync.entry",
      "type" : "Map",
      "underlying" : 61
    }, {
      "elem" : 63,
      "name" : "*sync.entry",
      "type" : "Pointer",
      "underlying" : 62
    }, {
      "local-name" : "entry",
      "name" : "sync.entry",
      "package" : 5,
      "type" : "Named",
      "underlying" : 64
    }, {
      "fields" : [ {
        "name" : "p",
        "type" : 2
      } ],
      "name" : "struct{p unsafe.Pointer}",
      "type" : "Struct",
      "underlying" : 64
    }, {
      "local-name" : "Extension",
      "name" : "github.com/json-iterator/go.Extension",
      "package" : 0,
      "type" : "Named",
      "underlying" : 66
    }, {
      "methods" : [ {
        "name" : "CreateDecoder",
        "type" : 67
      }, {
        "name" : "CreateEncoder",
        "type" : 83
      }, {
        "name" : "CreateMapKeyDecoder",
        "type" : 67
      }, {
        "name" : "CreateMapKeyEncoder",
        "type" : 83
      }, {
        "name" : "DecorateDecoder",
        "type" : 89
      }, {
        "name" : "DecorateEncoder",
        "type" : 91
      }, {
        "name" : "UpdateStructDescriptor",
        "type" : 93
      } ],
      "name" : "interface{CreateDecoder(typ github.com/modern-go/reflect2.Type) github.com/json-iterator/go.ValDecoder; CreateEncoder(typ github.com/modern-go/reflect2.Type) github.com/json-iterator/go.ValEncoder; CreateMapKeyDecoder(typ github.com/modern-go/reflect2.Type) github.com/json-iterator/go.ValDecoder; CreateMapKeyEncoder(typ github.com/modern-go/reflect2.Type) github.com/json-iterator/go.ValEncoder; DecorateDecoder(typ github.com/modern-go/reflect2.Type, decoder github.com/json-iterator/go.ValDecoder) github.com/json-iterator/go.ValDecoder; DecorateEncoder(typ github.com/modern-go/reflect2.Type, encoder github.com/json-iterator/go.ValEncoder) github.com/json-iterator/go.ValEncoder; UpdateStructDescriptor(structDescriptor *github.com/json-iterator/go.StructDescriptor)}",
      "type" : "Interface",
      "underlying" : 66
    }, {
      "name" : "func(typ github.com/modern-go/reflect2.Type) github.com/json-iterator/go.ValDecoder",
      "params" : 68,
      "recv" : 20,
      "results" : 69,
      "type" : "Signature",
      "underlying" : 67,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 3
      } ],
      "name" : "(typ github.com/modern-go/reflect2.Type)",
      "type" : "Tuple",
      "underlying" : 68
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 70
      } ],
      "name" : "(github.com/json-iterator/go.ValDecoder)",
      "type" : "Tuple",
      "underlying" : 69
    }, {
      "local-name" : "ValDecoder",
      "name" : "github.com/json-iterator/go.ValDecoder",
      "package" : 0,
      "type" : "Named",
      "underlying" : 71
    }, {
      "methods" : [ {
        "name" : "Decode",
        "type" : 72
      } ],
      "name" : "interface{Decode(ptr unsafe.Pointer, iter *github.com/json-iterator/go.Iterator)}",
      "type" : "Interface",
      "underlying" : 71
    }, {
      "name" : "func(ptr unsafe.Pointer, iter *github.com/json-iterator/go.Iterator)",
      "params" : 73,
      "recv" : 19,
      "results" : 15,
      "type" : "Signature",
      "underlying" : 72,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ptr",
        "type" : 2
      }, {
        "name" : "iter",
        "type" : 74
      } ],
      "name" : "(ptr unsafe.Pointer, iter *github.com/json-iterator/go.Iterator)",
      "type" : "Tuple",
      "underlying" : 73
    }, {
      "elem" : 75,
      "name" : "*github.com/json-iterator/go.Iterator",
      "type" : "Pointer",
      "underlying" : 74
    }, {
      "local-name" : "Iterator",
      "name" : "github.com/json-iterator/go.Iterator",
      "package" : 0,
      "type" : "Named",
      "underlying" : 76
    }, {
      "fields" : [ {
        "name" : "cfg",
        "type" : 47
      }, {
        "name" : "reader",
        "type" : 77
      }, {
        "name" : "buf",
        "type" : 81
      }, {
        "name" : "head",
        "type" : 36
      }, {
        "name" : "tail",
        "type" : 36
      }, {
        "name" : "depth",
        "type" : 36
      }, {
        "name" : "captureStartedAt",
        "type" : 36
      }, {
        "name" : "captured",
        "type" : 81
      }, {
        "name" : "Error",
        "type" : 16
      }, {
        "name" : "Attachment",
        "type" : 11
      } ],
      "name" : "struct{cfg *github.com/json-iterator/go.frozenConfig; reader io.Reader; buf []byte; head int; tail int; depth int; captureStartedAt int; captured []byte; Error error; Attachment interface{}}",
      "type" : "Struct",
      "underlying" : 76
    }, {
      "local-name" : "Reader",
      "name" : "io.Reader",
      "package" : 7,
      "type" : "Named",
      "underlying" : 78
    }, {
      "methods" : [ {
        "name" : "Read",
        "type" : 79
      } ],
      "name" : "interface{Read(p []byte) (n int, err error)}",
      "type" : "Interface",
      "underlying" : 78
    }, {
      "name" : "func(p []byte) (n int, err error)",
      "params" : 80,
      "recv" : 18,
      "results" : 82,
      "type" : "Signature",
      "underlying" : 79,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "p",
        "type" : 81
      } ],
      "name" : "(p []byte)",
      "type" : "Tuple",
      "underlying" : 80
    }, {
      "elem" : 73,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 81
    }, {
      "fields" : [ {
        "name" : "n",
        "type" : 36
      }, {
        "name" : "err",
        "type" : 16
      } ],
      "name" : "(n int, err error)",
      "type" : "Tuple",
      "underlying" : 82
    }, {
      "name" : "func(typ github.com/modern-go/reflect2.Type) github.com/json-iterator/go.ValEncoder",
      "params" : 68,
      "recv" : 22,
      "results" : 84,
      "type" : "Signature",
      "underlying" : 83,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 85
      } ],
      "name" : "(github.com/json-iterator/go.ValEncoder)",
      "type" : "Tuple",
      "underlying" : 84
    }, {
      "local-name" : "ValEncoder",
      "name" : "github.com/json-iterator/go.ValEncoder",
      "package" : 0,
      "type" : "Named",
      "underlying" : 86
    }, {
      "methods" : [ {
        "name" : "Encode",
        "type" : 87
      }, {
        "name" : "IsEmpty",
        "type" : 0
      } ],
      "name" : "interface{Encode(ptr unsafe.Pointer, stream *github.com/json-iterator/go.Stream); IsEmpty(ptr unsafe.Pointer) bool}",
      "type" : "Interface",
      "underlying" : 86
    }, {
      "name" : "func(ptr unsafe.Pointer, stream *github.com/json-iterator/go.Stream)",
      "params" : 88,
      "recv" : 21,
      "results" : 15,
      "type" : "Signature",
      "underlying" : 87,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ptr",
        "type" : 2
      }, {
        "name" : "stream",
        "type" : 44
      } ],
      "name" : "(ptr unsafe.Pointer, stream *github.com/json-iterator/go.Stream)",
      "type" : "Tuple",
      "underlying" : 88
    }, {
      "name" : "func(typ github.com/modern-go/reflect2.Type, decoder github.com/json-iterator/go.ValDecoder) github.com/json-iterator/go.ValDecoder",
      "params" : 90,
      "recv" : 23,
      "results" : 69,
      "type" : "Signature",
      "underlying" : 89,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 3
      }, {
        "name" : "decoder",
        "type" : 70
      } ],
      "name" : "(typ github.com/modern-go/reflect2.Type, decoder github.com/json-iterator/go.ValDecoder)",
      "type" : "Tuple",
      "underlying" : 90
    }, {
      "name" : "func(typ github.com/modern-go/reflect2.Type, encoder github.com/json-iterator/go.ValEncoder) github.com/json-iterator/go.ValEncoder",
      "params" : 92,
      "recv" : 24,
      "results" : 84,
      "type" : "Signature",
      "underlying" : 91,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 3
      }, {
        "name" : "encoder",
        "type" : 85
      } ],
      "name" : "(typ github.com/modern-go/reflect2.Type, encoder github.com/json-iterator/go.ValEncoder)",
      "type" : "Tuple",
      "underlying" : 92
    }, {
      "name" : "func(structDescriptor *github.com/json-iterator/go.StructDescriptor)",
      "params" : 94,
      "recv" : 31,
      "results" : 15,
      "type" : "Signature",
      "underlying" : 93,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "structDescriptor",
        "type" : 95
      } ],
      "name" : "(structDescriptor *github.com/json-iterator/go.StructDescriptor)",
      "type" : "Tuple",
      "underlying" : 94
    }, {
      "elem" : 96,
      "name" : "*github.com/json-iterator/go.StructDescriptor",
      "type" : "Pointer",
      "underlying" : 95
    }, {
      "local-name" : "StructDescriptor",
      "name" : "github.com/json-iterator/go.StructDescriptor",
      "package" : 0,
      "type" : "Named",
      "underlying" : 97
    }, {
      "fields" : [ {
        "name" : "Type",
        "type" : 3
      }, {
        "name" : "Fields",
        "type" : 98
      } ],
      "name" : "struct{Type github.com/modern-go/reflect2.Type; Fields []*github.com/json-iterator/go.Binding}",
      "type" : "Struct",
      "underlying" : 97
    }, {
      "elem" : 99,
      "name" : "[]*github.com/json-iterator/go.Binding",
      "type" : "Slice",
      "underlying" : 98
    }, {
      "elem" : 100,
      "name" : "*github.com/json-iterator/go.Binding",
      "type" : "Pointer",
      "underlying" : 99
    }, {
      "local-name" : "Binding",
      "name" : "github.com/json-iterator/go.Binding",
      "package" : 0,
      "type" : "Named",
      "underlying" : 101
    }, {
      "fields" : [ {
        "name" : "levels",
        "type" : 48
      }, {
        "name" : "Field",
        "type" : 102
      }, {
        "name" : "FromNames",
        "type" : 13
      }, {
        "name" : "ToNames",
        "type" : 13
      }, {
        "name" : "Encoder",
        "type" : 85
      }, {
        "name" : "Decoder",
        "type" : 70
      } ],
      "name" : "struct{levels []int; Field github.com/modern-go/reflect2.StructField; FromNames []string; ToNames []string; Encoder github.com/json-iterator/go.ValEncoder; Decoder github.com/json-iterator/go.ValDecoder}",
      "type" : "Struct",
      "underlying" : 101
    }, {
      "local-name" : "StructField",
      "name" : "github.com/modern-go/reflect2.StructField",
      "package" : 2,
      "type" : "Named",
      "underlying" : 103
    }, {
      "methods" : [ {
        "name" : "Anonymous",
        "type" : 14
      }, {
        "name" : "Get",
        "type" : 9
      }, {
        "name" : "Index",
        "type" : 104
      }, {
        "name" : "Name",
        "type" : 27
      }, {
        "name" : "Offset",
        "type" : 22
      }, {
        "name" : "PkgPath",
        "type" : 27
      }, {
        "name" : "Set",
        "type" : 106
      }, {
        "name" : "Tag",
        "type" : 108
      }, {
        "name" : "Type",
        "type" : 110
      }, {
        "name" : "UnsafeGet",
        "type" : 112
      }, {
        "name" : "UnsafeSet",
        "type" : 114
      } ],
      "name" : "interface{Anonymous() bool; Get(obj interface{}) interface{}; Index() []int; Name() string; Offset() uintptr; PkgPath() string; Set(obj interface{}, value interface{}); Tag() reflect.StructTag; Type() github.com/modern-go/reflect2.Type; UnsafeGet(obj unsafe.Pointer) unsafe.Pointer; UnsafeSet(obj unsafe.Pointer, value unsafe.Pointer)}",
      "type" : "Interface",
      "underlying" : 103
    }, {
      "name" : "func() []int",
      "params" : 15,
      "recv" : 25,
      "results" : 105,
      "type" : "Signature",
      "underlying" : 104,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 48
      } ],
      "name" : "([]int)",
      "type" : "Tuple",
      "underlying" : 105
    }, {
      "name" : "func(obj interface{}, value interface{})",
      "params" : 107,
      "recv" : 26,
      "results" : 15,
      "type" : "Signature",
      "underlying" : 106,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "obj",
        "type" : 11
      }, {
        "name" : "value",
        "type" : 11
      } ],
      "name" : "(obj interface{}, value interface{})",
      "type" : "Tuple",
      "underlying" : 107
    }, {
      "name" : "func() reflect.StructTag",
      "params" : 15,
      "recv" : 27,
      "results" : 109,
      "type" : "Signature",
      "underlying" : 108,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 47
      } ],
      "name" : "(reflect.StructTag)",
      "type" : "Tuple",
      "underlying" : 109
    }, {
      "name" : "func() github.com/modern-go/reflect2.Type",
      "params" : 15,
      "recv" : 28,
      "results" : 111,
      "type" : "Signature",
      "underlying" : 110,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 3
      } ],
      "name" : "(github.com/modern-go/reflect2.Type)",
      "type" : "Tuple",
      "underlying" : 111
    }, {
      "name" : "func(obj unsafe.Pointer) unsafe.Pointer",
      "params" : 113,
      "recv" : 29,
      "results" : 89,
      "type" : "Signature",
      "underlying" : 112,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "obj",
        "type" : 2
      } ],
      "name" : "(obj unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 113
    }, {
      "name" : "func(obj unsafe.Pointer, value unsafe.Pointer)",
      "params" : 115,
      "recv" : 30,
      "results" : 15,
      "type" : "Signature",
      "underlying" : 114,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "obj",
        "type" : 2
      }, {
        "name" : "value",
        "type" : 2
      } ],
      "name" : "(obj unsafe.Pointer, value unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 115
    }, {
      "elem" : 65,
      "name" : "[]github.com/json-iterator/go.Extension",
      "type" : "Slice",
      "underlying" : 116
    }, {
      "elem" : 118,
      "name" : "*sync.Pool",
      "type" : "Pointer",
      "underlying" : 117
    }, {
      "local-name" : "Pool",
      "name" : "sync.Pool",
      "package" : 5,
      "type" : "Named",
      "underlying" : 119
    }, {
      "fields" : [ {
        "name" : "noCopy",
        "type" : 120
      }, {
        "name" : "local",
        "type" : 2
      }, {
        "name" : "localSize",
        "type" : 24
      }, {
        "name" : "victim",
        "type" : 2
      }, {
        "name" : "victimSize",
        "type" : 24
      }, {
        "name" : "New",
        "type" : 20
      } ],
      "name" : "struct{noCopy sync.noCopy; local unsafe.Pointer; localSize uintptr; victim unsafe.Pointer; victimSize uintptr; New func() interface{}}",
      "type" : "Struct",
      "underlying" : 119
    }, {
      "local-name" : "noCopy",
      "name" : "sync.noCopy",
      "package" : 5,
      "type" : "Named",
      "underlying" : 121
    }, {
      "fields" : [ ],
      "name" : "struct{}",
      "type" : "Struct",
      "underlying" : 121
    }, {
      "local-name" : "Writer",
      "name" : "io.Writer",
      "package" : 7,
      "type" : "Named",
      "underlying" : 123
    }, {
      "methods" : [ {
        "name" : "Write",
        "type" : 79
      } ],
      "name" : "interface{Write(p []byte) (n int, err error)}",
      "type" : "Interface",
      "underlying" : 123
    } ],
    "variables" : [ {
      "name" : "codec",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "ptr",
      "package" : 0,
      "type" : 2,
      "exported" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 4,
      "exported" : false
    }, {
      "name" : "valType",
      "package" : 0,
      "type" : 3,
      "exported" : false
    }, {
      "name" : "obj",
      "package" : 0,
      "type" : 11,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "",
      "package" : 7,
      "type" : 77,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 70,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 65,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 85,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 65,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 65,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 65,
      "exported" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 102,
      "exported" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 102,
      "exported" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 102,
      "exported" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 102,
      "exported" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 102,
      "exported" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 102,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 65,
      "exported" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "any",
      "package" : 0,
      "type" : 5,
      "exported" : false
    } ]
  },
  "go-version" : "1.14.3"
}