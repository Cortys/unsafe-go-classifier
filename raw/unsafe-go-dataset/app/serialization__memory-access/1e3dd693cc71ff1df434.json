{
  "usage" : {
    "file" : "client.go",
    "label1" : "memory-access",
    "label2" : "serialization",
    "line" : "34",
    "module" : "github.com/typetypetype/conntrack",
    "pkg" : "github.com/typetypetype/conntrack",
    "project" : "weaveworks/scope",
    "snippet" : "*(*uint16)(unsafe.Pointer(&b[18:20][0])) = c.Body.Res_id",
    "version" : "v1.0.1-0.20181112022515-9d9dd841d4eb"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0, 4 ],
      "decl-vars" : [ 4 ],
      "line-start" : 26,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "b"
          }
        } ],
        "right" : [ {
          "argument" : {
            "element" : {
              "go-type" : 4,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 4,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "byte"
              }
            },
            "go-type" : 3,
            "kind" : "type",
            "type" : "slice"
          },
          "go-type" : 3,
          "kind" : "expression",
          "rest" : [ {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Len",
              "variable" : 3
            },
            "go-type" : 5,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Header",
                "variable" : 2
              },
              "go-type" : 3,
              "kind" : "expression",
              "target" : {
                "go-type" : 0,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "c",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "type" : "selector"
          } ],
          "type" : "make"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 26,
      "code" : "b := make([]byte, c.Header.Len)",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4 ],
      "in-vars" : [ 0, 4 ],
      "exit" : false,
      "out-vars" : [ 0, 4 ],
      "decl-vars" : [ ],
      "line-start" : 27,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "go-type" : 5,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 5,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uint32"
                }
              },
              "go-type" : 5,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 5,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 6,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 3,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 6,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 6,
              "kind" : "expression",
              "target" : {
                "go-type" : 7,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "go-type" : 4,
                  "index" : {
                    "go-type" : 8,
                    "kind" : "constant",
                    "value" : {
                      "type" : "INT",
                      "value" : "0"
                    }
                  },
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 3,
                    "type" : "slice",
                    "three" : false,
                    "high" : {
                      "go-type" : 8,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "4"
                      }
                    },
                    "max" : null,
                    "kind" : "expression",
                    "low" : {
                      "go-type" : 8,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "0"
                      }
                    },
                    "target" : {
                      "go-type" : 3,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "b",
                        "variable" : 4
                      }
                    }
                  },
                  "type" : "index"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Len",
            "variable" : 3
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Header",
              "variable" : 2
            },
            "go-type" : 3,
            "kind" : "expression",
            "target" : {
              "go-type" : 0,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "c",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 27,
      "code" : "*(*uint32)(unsafe.Pointer(&b[0:4][0])) = c.Header.Len",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5 ],
      "in-vars" : [ 0, 4 ],
      "exit" : false,
      "out-vars" : [ 0, 4 ],
      "decl-vars" : [ ],
      "line-start" : 28,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "go-type" : 6,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 6,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uint16"
                }
              },
              "go-type" : 9,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 9,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 6,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 3,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 6,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 6,
              "kind" : "expression",
              "target" : {
                "go-type" : 7,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "go-type" : 4,
                  "index" : {
                    "go-type" : 8,
                    "kind" : "constant",
                    "value" : {
                      "type" : "INT",
                      "value" : "0"
                    }
                  },
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 3,
                    "type" : "slice",
                    "three" : false,
                    "high" : {
                      "go-type" : 8,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "6"
                      }
                    },
                    "max" : null,
                    "kind" : "expression",
                    "low" : {
                      "go-type" : 8,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "4"
                      }
                    },
                    "target" : {
                      "go-type" : 3,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "b",
                        "variable" : 4
                      }
                    }
                  },
                  "type" : "index"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Type",
            "variable" : 5
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Header",
              "variable" : 2
            },
            "go-type" : 3,
            "kind" : "expression",
            "target" : {
              "go-type" : 0,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "c",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 28,
      "code" : "*(*uint16)(unsafe.Pointer(&b[4:6][0])) = c.Header.Type",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6 ],
      "in-vars" : [ 0, 4 ],
      "exit" : false,
      "out-vars" : [ 0, 4 ],
      "decl-vars" : [ ],
      "line-start" : 29,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "go-type" : 6,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 6,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uint16"
                }
              },
              "go-type" : 9,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 9,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 6,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 3,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 6,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 6,
              "kind" : "expression",
              "target" : {
                "go-type" : 7,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "go-type" : 4,
                  "index" : {
                    "go-type" : 8,
                    "kind" : "constant",
                    "value" : {
                      "type" : "INT",
                      "value" : "0"
                    }
                  },
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 3,
                    "type" : "slice",
                    "three" : false,
                    "high" : {
                      "go-type" : 8,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "8"
                      }
                    },
                    "max" : null,
                    "kind" : "expression",
                    "low" : {
                      "go-type" : 8,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "6"
                      }
                    },
                    "target" : {
                      "go-type" : 3,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "b",
                        "variable" : 4
                      }
                    }
                  },
                  "type" : "index"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Flags",
            "variable" : 6
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Header",
              "variable" : 2
            },
            "go-type" : 3,
            "kind" : "expression",
            "target" : {
              "go-type" : 0,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "c",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 29,
      "code" : "*(*uint16)(unsafe.Pointer(&b[6:8][0])) = c.Header.Flags",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 7 ],
      "in-vars" : [ 0, 4 ],
      "exit" : false,
      "out-vars" : [ 0, 4 ],
      "decl-vars" : [ ],
      "line-start" : 30,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "go-type" : 5,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 5,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uint32"
                }
              },
              "go-type" : 5,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 5,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 6,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 3,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 6,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 6,
              "kind" : "expression",
              "target" : {
                "go-type" : 7,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "go-type" : 4,
                  "index" : {
                    "go-type" : 8,
                    "kind" : "constant",
                    "value" : {
                      "type" : "INT",
                      "value" : "0"
                    }
                  },
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 3,
                    "type" : "slice",
                    "three" : false,
                    "high" : {
                      "go-type" : 8,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "12"
                      }
                    },
                    "max" : null,
                    "kind" : "expression",
                    "low" : {
                      "go-type" : 8,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "8"
                      }
                    },
                    "target" : {
                      "go-type" : 3,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "b",
                        "variable" : 4
                      }
                    }
                  },
                  "type" : "index"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Seq",
            "variable" : 7
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Header",
              "variable" : 2
            },
            "go-type" : 3,
            "kind" : "expression",
            "target" : {
              "go-type" : 0,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "c",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 30,
      "code" : "*(*uint32)(unsafe.Pointer(&b[8:12][0])) = c.Header.Seq",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 8 ],
      "in-vars" : [ 0, 4 ],
      "exit" : false,
      "out-vars" : [ 4, 0 ],
      "decl-vars" : [ ],
      "line-start" : 31,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "go-type" : 5,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 5,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uint32"
                }
              },
              "go-type" : 5,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 5,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 6,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 3,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 6,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 6,
              "kind" : "expression",
              "target" : {
                "go-type" : 7,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "go-type" : 4,
                  "index" : {
                    "go-type" : 8,
                    "kind" : "constant",
                    "value" : {
                      "type" : "INT",
                      "value" : "0"
                    }
                  },
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 3,
                    "type" : "slice",
                    "three" : false,
                    "high" : {
                      "go-type" : 8,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "16"
                      }
                    },
                    "max" : null,
                    "kind" : "expression",
                    "low" : {
                      "go-type" : 8,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "12"
                      }
                    },
                    "target" : {
                      "go-type" : 3,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "b",
                        "variable" : 4
                      }
                    }
                  },
                  "type" : "index"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Pid",
            "variable" : 8
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Header",
              "variable" : 2
            },
            "go-type" : 3,
            "kind" : "expression",
            "target" : {
              "go-type" : 0,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "c",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 31,
      "code" : "*(*uint32)(unsafe.Pointer(&b[12:16][0])) = c.Header.Pid",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ 4 ],
      "successors" : [ 9 ],
      "in-vars" : [ 4, 0 ],
      "exit" : false,
      "out-vars" : [ 4, 0 ],
      "decl-vars" : [ ],
      "line-start" : 32,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 4,
          "index" : {
            "go-type" : 8,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "16"
            }
          },
          "kind" : "expression",
          "target" : {
            "go-type" : 3,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "b",
              "variable" : 4
            }
          },
          "type" : "index"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 4,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 4,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "byte"
            }
          },
          "go-type" : 4,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Nfgen_family",
              "variable" : 10
            },
            "go-type" : 9,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Body",
                "variable" : 9
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "go-type" : 0,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "c",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "type" : "selector"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 32,
      "code" : "b[16] = byte(c.Body.Nfgen_family)",
      "entry" : false,
      "use-vars" : [ 0, 4 ]
    }, {
      "update-vars" : [ 4 ],
      "successors" : [ 10 ],
      "in-vars" : [ 0, 4 ],
      "exit" : false,
      "out-vars" : [ 0, 4 ],
      "decl-vars" : [ ],
      "line-start" : 33,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 4,
          "index" : {
            "go-type" : 8,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "17"
            }
          },
          "kind" : "expression",
          "target" : {
            "go-type" : 3,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "b",
              "variable" : 4
            }
          },
          "type" : "index"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 4,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 4,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "byte"
            }
          },
          "go-type" : 4,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Version",
              "variable" : 11
            },
            "go-type" : 9,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Body",
                "variable" : 9
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "go-type" : 0,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "c",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "type" : "selector"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 33,
      "code" : "b[17] = byte(c.Body.Version)",
      "entry" : false,
      "use-vars" : [ 0, 4 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 11 ],
      "in-vars" : [ 0, 4 ],
      "exit" : false,
      "out-vars" : [ 4 ],
      "decl-vars" : [ ],
      "line-start" : 34,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "go-type" : 6,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 6,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uint16"
                }
              },
              "go-type" : 9,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 9,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 6,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 3,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 6,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 6,
              "kind" : "expression",
              "target" : {
                "go-type" : 7,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "go-type" : 4,
                  "index" : {
                    "go-type" : 8,
                    "kind" : "constant",
                    "value" : {
                      "type" : "INT",
                      "value" : "0"
                    }
                  },
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 3,
                    "type" : "slice",
                    "three" : false,
                    "high" : {
                      "go-type" : 8,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "20"
                      }
                    },
                    "max" : null,
                    "kind" : "expression",
                    "low" : {
                      "go-type" : 8,
                      "kind" : "constant",
                      "value" : {
                        "type" : "INT",
                        "value" : "18"
                      }
                    },
                    "target" : {
                      "go-type" : 3,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "b",
                        "variable" : 4
                      }
                    }
                  },
                  "type" : "index"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Res_id",
            "variable" : 12
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Body",
              "variable" : 9
            },
            "go-type" : 7,
            "kind" : "expression",
            "target" : {
              "go-type" : 0,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "c",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 34,
      "code" : "*(*uint16)(unsafe.Pointer(&b[18:20][0])) = c.Body.Res_id",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 4 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 35,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "b",
            "variable" : 4
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 35,
      "code" : "return b",
      "entry" : false,
      "use-vars" : [ 4 ]
    } ],
    "code" : "func (c *ConntrackListReq) toWireFormat() []byte {\n\n\tb := make([]byte, c.Header.Len)\n\t*(*uint32)(unsafe.Pointer(&b[0:4][0])) = c.Header.Len\n\t*(*uint16)(unsafe.Pointer(&b[4:6][0])) = c.Header.Type\n\t*(*uint16)(unsafe.Pointer(&b[6:8][0])) = c.Header.Flags\n\t*(*uint32)(unsafe.Pointer(&b[8:12][0])) = c.Header.Seq\n\t*(*uint32)(unsafe.Pointer(&b[12:16][0])) = c.Header.Pid\n\tb[16] = byte(c.Body.Nfgen_family)\n\tb[17] = byte(c.Body.Version)\n\t*(*uint16)(unsafe.Pointer(&b[18:20][0])) = c.Body.Res_id\n\treturn b\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "toWireFormat",
      "package" : 0,
      "type" : 0,
      "exported" : false
    } ],
    "line-end" : 36,
    "line-start" : 24,
    "names" : [ "toWireFormat" ],
    "package" : 0,
    "packages" : [ {
      "name" : "conntrack",
      "path" : "github.com/typetypetype/conntrack"
    }, {
      "name" : "syscall",
      "path" : "syscall"
    }, {
      "name" : "unix",
      "path" : "golang.org/x/sys/unix"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ ],
    "receivers" : [ 0 ],
    "results" : [ 1 ],
    "type" : "function",
    "types" : [ {
      "name" : "func() []byte",
      "params" : 1,
      "recv" : 0,
      "results" : 2,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 3
      } ],
      "name" : "([]byte)",
      "type" : "Tuple",
      "underlying" : 2
    }, {
      "elem" : 4,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 3
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 4
    }, {
      "elem" : 5,
      "name" : "*uint32",
      "type" : "Pointer",
      "underlying" : 5
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 3,
      "type" : "Basic",
      "underlying" : 6
    }, {
      "elem" : 4,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 7
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 8
    }, {
      "elem" : 6,
      "name" : "*uint16",
      "type" : "Pointer",
      "underlying" : 9
    } ],
    "variables" : [ {
      "name" : "c",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 3,
      "exported" : false
    }, {
      "name" : "Header",
      "package" : 0,
      "type" : 3,
      "exported" : true
    }, {
      "name" : "Len",
      "package" : 1,
      "type" : 5,
      "exported" : true
    }, {
      "name" : "b",
      "package" : 0,
      "type" : 3,
      "exported" : false
    }, {
      "name" : "Type",
      "package" : 1,
      "type" : 6,
      "exported" : true
    }, {
      "name" : "Flags",
      "package" : 1,
      "type" : 6,
      "exported" : true
    }, {
      "name" : "Seq",
      "package" : 1,
      "type" : 5,
      "exported" : true
    }, {
      "name" : "Pid",
      "package" : 1,
      "type" : 5,
      "exported" : true
    }, {
      "name" : "Body",
      "package" : 0,
      "type" : 7,
      "exported" : true
    }, {
      "name" : "Nfgen_family",
      "package" : 2,
      "type" : 9,
      "exported" : true
    }, {
      "name" : "Version",
      "package" : 2,
      "type" : 9,
      "exported" : true
    }, {
      "name" : "Res_id",
      "package" : 2,
      "type" : 6,
      "exported" : true
    } ]
  },
  "go-version" : "1.14.3"
}