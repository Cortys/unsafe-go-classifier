{
  "usage" : {
    "file" : "config.go",
    "label1" : "delegate",
    "label2" : "atomic",
    "line" : "413",
    "module" : "go.elastic.co/apm",
    "pkg" : "go.elastic.co/apm",
    "project" : "elastic/beats",
    "snippet" : "unsafe.Pointer(oldConfig),",
    "version" : "v1.7.2"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 16, 17 ],
      "exit" : false,
      "out-vars" : [ 16, 17 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1, 3 ],
      "in-vars" : [ 16, 17 ],
      "exit" : false,
      "out-vars" : [ 16, 17 ],
      "decl-vars" : [ ],
      "line-start" : 407,
      "ast" : {
        "condition" : null,
        "kind" : "statement",
        "type" : "for"
      },
      "assign-vars" : [ ],
      "line-end" : 418,
      "code" : "for {\n\toldConfig := t.instrumentationConfig()\n\tnewConfig := *oldConfig\n\tf(&newConfig)\n\tif atomic.CompareAndSwapPointer(\n\t\t(*unsafe.Pointer)(unsafe.Pointer(&t.instrumentationConfigInternal)),\n\t\tunsafe.Pointer(oldConfig),\n\t\tunsafe.Pointer(&newConfig),\n\t) {\n\t\treturn\n\t}\n}",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4 ],
      "in-vars" : [ 16, 17 ],
      "exit" : false,
      "out-vars" : [ 18, 16, 17 ],
      "decl-vars" : [ 18 ],
      "line-start" : 408,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "oldConfig"
          }
        } ],
        "right" : [ {
          "arguments" : [ ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "instrumentationConfig"
            },
            "go-type" : 348,
            "kind" : "expression",
            "target" : {
              "go-type" : 41,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "t",
                "variable" : 16
              }
            },
            "type" : "selector"
          },
          "go-type" : 4,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 408,
      "code" : "oldConfig := t.instrumentationConfig()",
      "entry" : false,
      "use-vars" : [ 16 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5 ],
      "in-vars" : [ 18, 16, 17 ],
      "exit" : false,
      "out-vars" : [ 18, 16, 19, 17 ],
      "decl-vars" : [ 19 ],
      "line-start" : 409,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "newConfig"
          }
        } ],
        "right" : [ {
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "go-type" : 4,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "oldConfig",
              "variable" : 18
            }
          },
          "type" : "star"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 409,
      "code" : "newConfig := *oldConfig",
      "entry" : false,
      "use-vars" : [ 18 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6 ],
      "in-vars" : [ 18, 16, 19, 17 ],
      "exit" : false,
      "out-vars" : [ 19, 17, 18, 16 ],
      "decl-vars" : [ ],
      "line-start" : 410,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 4,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "go-type" : 5,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "newConfig",
                "variable" : 19
              }
            },
            "type" : "unary"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "f",
              "variable" : 17
            }
          },
          "go-type" : 38,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 410,
      "code" : "f(&newConfig)",
      "entry" : false,
      "use-vars" : [ 17, 19 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 2, 7 ],
      "in-vars" : [ 17, 18, 16, 19 ],
      "exit" : false,
      "out-vars" : [ 16, 17 ],
      "decl-vars" : [ ],
      "line-start" : 411,
      "ast" : {
        "condition" : {
          "arguments" : [ {
            "coerced-to" : {
              "contained" : {
                "go-type" : 346,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 13,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 346,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 352,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 352,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 346,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 13,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 346,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 346,
              "kind" : "expression",
              "target" : {
                "go-type" : 354,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "instrumentationConfigInternal",
                    "variable" : 20
                  },
                  "go-type" : 4,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 41,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "t",
                      "variable" : 16
                    }
                  },
                  "type" : "selector"
                },
                "type" : "unary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          }, {
            "coerced-to" : {
              "go-type" : 346,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 13,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 346,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 346,
            "kind" : "expression",
            "target" : {
              "go-type" : 4,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "oldConfig",
                "variable" : 18
              }
            },
            "type" : "cast"
          }, {
            "coerced-to" : {
              "go-type" : 346,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 13,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 346,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 346,
            "kind" : "expression",
            "target" : {
              "go-type" : 4,
              "kind" : "expression",
              "operator" : "&",
              "target" : {
                "go-type" : 5,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "newConfig",
                  "variable" : 19
                }
              },
              "type" : "unary"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 350,
            "kind" : "expression",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 14,
              "value" : "atomic"
            },
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "CompareAndSwapPointer"
            }
          },
          "go-type" : 11,
          "kind" : "expression",
          "type" : "call"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 417,
      "code" : "if atomic.CompareAndSwapPointer(\n\t(*unsafe.Pointer)(unsafe.Pointer(&t.instrumentationConfigInternal)),\n\tunsafe.Pointer(oldConfig),\n\tunsafe.Pointer(&newConfig),\n) {\n\treturn\n}",
      "entry" : false,
      "use-vars" : [ 19, 18, 16 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 416,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ ]
      },
      "assign-vars" : [ ],
      "line-end" : 416,
      "code" : "return",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "func (t *Tracer) updateInstrumentationConfig(f func(cfg *instrumentationConfig)) {\n\tfor {\n\t\toldConfig := t.instrumentationConfig()\n\t\tnewConfig := *oldConfig\n\t\tf(&newConfig)\n\t\tif atomic.CompareAndSwapPointer(\n\t\t\t(*unsafe.Pointer)(unsafe.Pointer(&t.instrumentationConfigInternal)),\n\t\t\tunsafe.Pointer(oldConfig),\n\t\t\tunsafe.Pointer(&newConfig),\n\t\t) {\n\t\t\treturn\n\t\t}\n\t}\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "updateInstrumentationConfig",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "instrumentationConfig",
      "package" : 0,
      "type" : 348,
      "exported" : false
    }, {
      "name" : "CompareAndSwapPointer",
      "package" : 14,
      "type" : 350,
      "exported" : true
    } ],
    "line-end" : 419,
    "line-start" : 406,
    "names" : [ "updateInstrumentationConfig" ],
    "package" : 0,
    "packages" : [ {
      "name" : "apm",
      "path" : "go.elastic.co/apm"
    }, {
      "name" : "time",
      "path" : "time"
    }, {
      "name" : "transport",
      "path" : "go.elastic.co/apm/transport"
    }, {
      "name" : "context",
      "path" : "context"
    }, {
      "name" : "io",
      "path" : "io"
    }, {
      "name" : "model",
      "path" : "go.elastic.co/apm/model"
    }, {
      "name" : "wildcard",
      "path" : "go.elastic.co/apm/internal/wildcard"
    }, {
      "name" : "sync",
      "path" : "sync"
    }, {
      "name" : "stacktrace",
      "path" : "go.elastic.co/apm/stacktrace"
    }, {
      "name" : "apmconfig",
      "path" : "go.elastic.co/apm/apmconfig"
    }, {
      "name" : "url",
      "path" : "net/url"
    }, {
      "name" : "http",
      "path" : "net/http"
    }, {
      "name" : "rand",
      "path" : "math/rand"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "atomic",
      "path" : "sync/atomic"
    } ],
    "params" : [ 17 ],
    "receivers" : [ 16 ],
    "results" : [ ],
    "type" : "function",
    "types" : [ {
      "name" : "func(f func(cfg *go.elastic.co/apm.instrumentationConfig))",
      "params" : 1,
      "recv" : 16,
      "results" : 38,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "f",
        "type" : 2
      } ],
      "name" : "(f func(cfg *go.elastic.co/apm.instrumentationConfig))",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "name" : "func(cfg *go.elastic.co/apm.instrumentationConfig)",
      "params" : 3,
      "recv" : -1,
      "results" : 38,
      "type" : "Signature",
      "underlying" : 2,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "cfg",
        "type" : 4
      } ],
      "name" : "(cfg *go.elastic.co/apm.instrumentationConfig)",
      "type" : "Tuple",
      "underlying" : 3
    }, {
      "elem" : 5,
      "name" : "*go.elastic.co/apm.instrumentationConfig",
      "type" : "Pointer",
      "underlying" : 4
    }, {
      "local-name" : "instrumentationConfig",
      "name" : "go.elastic.co/apm.instrumentationConfig",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "fields" : [ {
        "name" : "instrumentationConfigValues",
        "type" : 7
      }, {
        "name" : "local",
        "type" : 34
      }, {
        "name" : "remote",
        "type" : 39
      } ],
      "name" : "struct{go.elastic.co/apm.instrumentationConfigValues; local map[string]func(*go.elastic.co/apm.instrumentationConfigValues); remote map[string]struct{}}",
      "type" : "Struct",
      "underlying" : 6
    }, {
      "local-name" : "instrumentationConfigValues",
      "name" : "go.elastic.co/apm.instrumentationConfigValues",
      "package" : 0,
      "type" : "Named",
      "underlying" : 8
    }, {
      "fields" : [ {
        "name" : "captureBody",
        "type" : 9
      }, {
        "name" : "captureHeaders",
        "type" : 11
      }, {
        "name" : "maxSpans",
        "type" : 10
      }, {
        "name" : "sampler",
        "type" : 12
      }, {
        "name" : "spanFramesMinDuration",
        "type" : 32
      }, {
        "name" : "stackTraceLimit",
        "type" : 10
      }, {
        "name" : "propagateLegacyHeader",
        "type" : 11
      } ],
      "name" : "struct{captureBody go.elastic.co/apm.CaptureBodyMode; captureHeaders bool; maxSpans int; sampler go.elastic.co/apm.Sampler; spanFramesMinDuration time.Duration; stackTraceLimit int; propagateLegacyHeader bool}",
      "type" : "Struct",
      "underlying" : 8
    }, {
      "local-name" : "CaptureBodyMode",
      "name" : "go.elastic.co/apm.CaptureBodyMode",
      "package" : 0,
      "type" : "Named",
      "underlying" : 10
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 10
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 11
    }, {
      "local-name" : "Sampler",
      "name" : "go.elastic.co/apm.Sampler",
      "package" : 0,
      "type" : "Named",
      "underlying" : 13
    }, {
      "methods" : [ {
        "name" : "Sample",
        "type" : 14
      } ],
      "name" : "interface{Sample(go.elastic.co/apm.TraceContext) bool}",
      "type" : "Interface",
      "underlying" : 13
    }, {
      "name" : "func(go.elastic.co/apm.TraceContext) bool",
      "params" : 15,
      "recv" : 0,
      "results" : 31,
      "type" : "Signature",
      "underlying" : 14,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 16
      } ],
      "name" : "(go.elastic.co/apm.TraceContext)",
      "type" : "Tuple",
      "underlying" : 15
    }, {
      "local-name" : "TraceContext",
      "name" : "go.elastic.co/apm.TraceContext",
      "package" : 0,
      "type" : "Named",
      "underlying" : 17
    }, {
      "fields" : [ {
        "name" : "Trace",
        "type" : 18
      }, {
        "name" : "Span",
        "type" : 21
      }, {
        "name" : "Options",
        "type" : 23
      }, {
        "name" : "State",
        "type" : 25
      } ],
      "name" : "struct{Trace go.elastic.co/apm.TraceID; Span go.elastic.co/apm.SpanID; Options go.elastic.co/apm.TraceOptions; State go.elastic.co/apm.TraceState}",
      "type" : "Struct",
      "underlying" : 17
    }, {
      "local-name" : "TraceID",
      "name" : "go.elastic.co/apm.TraceID",
      "package" : 0,
      "type" : "Named",
      "underlying" : 19
    }, {
      "elem" : 20,
      "name" : "[16]byte",
      "type" : "Array",
      "underlying" : 19
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 20
    }, {
      "local-name" : "SpanID",
      "name" : "go.elastic.co/apm.SpanID",
      "package" : 0,
      "type" : "Named",
      "underlying" : 22
    }, {
      "elem" : 20,
      "name" : "[8]byte",
      "type" : "Array",
      "underlying" : 22
    }, {
      "local-name" : "TraceOptions",
      "name" : "go.elastic.co/apm.TraceOptions",
      "package" : 0,
      "type" : "Named",
      "underlying" : 24
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 24
    }, {
      "local-name" : "TraceState",
      "name" : "go.elastic.co/apm.TraceState",
      "package" : 0,
      "type" : "Named",
      "underlying" : 26
    }, {
      "fields" : [ {
        "name" : "head",
        "type" : 27
      } ],
      "name" : "struct{head *go.elastic.co/apm.TraceStateEntry}",
      "type" : "Struct",
      "underlying" : 26
    }, {
      "elem" : 28,
      "name" : "*go.elastic.co/apm.TraceStateEntry",
      "type" : "Pointer",
      "underlying" : 27
    }, {
      "local-name" : "TraceStateEntry",
      "name" : "go.elastic.co/apm.TraceStateEntry",
      "package" : 0,
      "type" : "Named",
      "underlying" : 29
    }, {
      "fields" : [ {
        "name" : "next",
        "type" : 27
      }, {
        "name" : "Key",
        "type" : 30
      }, {
        "name" : "Value",
        "type" : 30
      } ],
      "name" : "struct{next *go.elastic.co/apm.TraceStateEntry; Key string; Value string}",
      "type" : "Struct",
      "underlying" : 29
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 30
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 11
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 31
    }, {
      "local-name" : "Duration",
      "name" : "time.Duration",
      "package" : 1,
      "type" : "Named",
      "underlying" : 33
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 33
    }, {
      "elem" : 35,
      "key" : 30,
      "name" : "map[string]func(*go.elastic.co/apm.instrumentationConfigValues)",
      "type" : "Map",
      "underlying" : 34
    }, {
      "name" : "func(*go.elastic.co/apm.instrumentationConfigValues)",
      "params" : 36,
      "recv" : -1,
      "results" : 38,
      "type" : "Signature",
      "underlying" : 35,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 37
      } ],
      "name" : "(*go.elastic.co/apm.instrumentationConfigValues)",
      "type" : "Tuple",
      "underlying" : 36
    }, {
      "elem" : 7,
      "name" : "*go.elastic.co/apm.instrumentationConfigValues",
      "type" : "Pointer",
      "underlying" : 37
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 38
    }, {
      "elem" : 40,
      "key" : 30,
      "name" : "map[string]struct{}",
      "type" : "Map",
      "underlying" : 39
    }, {
      "fields" : [ ],
      "name" : "struct{}",
      "type" : "Struct",
      "underlying" : 40
    }, {
      "elem" : 42,
      "name" : "*go.elastic.co/apm.Tracer",
      "type" : "Pointer",
      "underlying" : 41
    }, {
      "local-name" : "Tracer",
      "name" : "go.elastic.co/apm.Tracer",
      "package" : 0,
      "type" : "Named",
      "underlying" : 43
    }, {
      "fields" : [ {
        "name" : "Transport",
        "type" : 44
      }, {
        "name" : "Service",
        "type" : 84
      }, {
        "name" : "process",
        "type" : 85
      }, {
        "name" : "system",
        "type" : 90
      }, {
        "name" : "active",
        "type" : 105
      }, {
        "name" : "bufferSize",
        "type" : 10
      }, {
        "name" : "metricsBufferSize",
        "type" : 10
      }, {
        "name" : "closing",
        "type" : 106
      }, {
        "name" : "closed",
        "type" : 106
      }, {
        "name" : "forceFlush",
        "type" : 107
      }, {
        "name" : "forceSendMetrics",
        "type" : 107
      }, {
        "name" : "configCommands",
        "type" : 109
      }, {
        "name" : "configWatcher",
        "type" : 165
      }, {
        "name" : "events",
        "type" : 178
      }, {
        "name" : "breakdownMetrics",
        "type" : 315
      }, {
        "name" : "profileSender",
        "type" : 334
      }, {
        "name" : "statsMu",
        "type" : 137
      }, {
        "name" : "stats",
        "type" : 339
      }, {
        "name" : "instrumentationConfigInternal",
        "type" : 4
      }, {
        "name" : "errorDataPool",
        "type" : 343
      }, {
        "name" : "spanDataPool",
        "type" : 343
      }, {
        "name" : "transactionDataPool",
        "type" : 343
      } ],
      "name" : "struct{Transport go.elastic.co/apm/transport.Transport; Service struct{Name string; Version string; Environment string}; process *go.elastic.co/apm/model.Process; system *go.elastic.co/apm/model.System; active int32; bufferSize int; metricsBufferSize int; closing chan struct{}; closed chan struct{}; forceFlush chan chan<- struct{}; forceSendMetrics chan chan<- struct{}; configCommands chan go.elastic.co/apm.tracerConfigCommand; configWatcher chan go.elastic.co/apm/apmconfig.Watcher; events chan go.elastic.co/apm.tracerEvent; breakdownMetrics *go.elastic.co/apm.breakdownMetrics; profileSender go.elastic.co/apm.profileSender; statsMu sync.Mutex; stats go.elastic.co/apm.TracerStats; instrumentationConfigInternal *go.elastic.co/apm.instrumentationConfig; errorDataPool sync.Pool; spanDataPool sync.Pool; transactionDataPool sync.Pool}",
      "type" : "Struct",
      "underlying" : 43
    }, {
      "local-name" : "Transport",
      "name" : "go.elastic.co/apm/transport.Transport",
      "package" : 2,
      "type" : "Named",
      "underlying" : 45
    }, {
      "methods" : [ {
        "name" : "SendStream",
        "type" : 46
      } ],
      "name" : "interface{SendStream(context.Context, io.Reader) error}",
      "type" : "Interface",
      "underlying" : 45
    }, {
      "name" : "func(context.Context, io.Reader) error",
      "params" : 47,
      "recv" : 7,
      "results" : 69,
      "type" : "Signature",
      "underlying" : 46,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 48
      }, {
        "name" : "",
        "type" : 78
      } ],
      "name" : "(context.Context, io.Reader)",
      "type" : "Tuple",
      "underlying" : 47
    }, {
      "local-name" : "Context",
      "name" : "context.Context",
      "package" : 3,
      "type" : "Named",
      "underlying" : 49
    }, {
      "methods" : [ {
        "name" : "Deadline",
        "type" : 50
      }, {
        "name" : "Done",
        "type" : 65
      }, {
        "name" : "Err",
        "type" : 68
      }, {
        "name" : "Value",
        "type" : 74
      } ],
      "name" : "interface{Deadline() (deadline time.Time, ok bool); Done() <-chan struct{}; Err() error; Value(key interface{}) interface{}}",
      "type" : "Interface",
      "underlying" : 49
    }, {
      "name" : "func() (deadline time.Time, ok bool)",
      "params" : 38,
      "recv" : 1,
      "results" : 51,
      "type" : "Signature",
      "underlying" : 50,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "deadline",
        "type" : 52
      }, {
        "name" : "ok",
        "type" : 11
      } ],
      "name" : "(deadline time.Time, ok bool)",
      "type" : "Tuple",
      "underlying" : 51
    }, {
      "local-name" : "Time",
      "name" : "time.Time",
      "package" : 1,
      "type" : "Named",
      "underlying" : 53
    }, {
      "fields" : [ {
        "name" : "wall",
        "type" : 54
      }, {
        "name" : "ext",
        "type" : 33
      }, {
        "name" : "loc",
        "type" : 55
      } ],
      "name" : "struct{wall uint64; ext int64; loc *time.Location}",
      "type" : "Struct",
      "underlying" : 53
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 54
    }, {
      "elem" : 56,
      "name" : "*time.Location",
      "type" : "Pointer",
      "underlying" : 55
    }, {
      "local-name" : "Location",
      "name" : "time.Location",
      "package" : 1,
      "type" : "Named",
      "underlying" : 57
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 30
      }, {
        "name" : "zone",
        "type" : 58
      }, {
        "name" : "tx",
        "type" : 61
      }, {
        "name" : "cacheStart",
        "type" : 33
      }, {
        "name" : "cacheEnd",
        "type" : 33
      }, {
        "name" : "cacheZone",
        "type" : 64
      } ],
      "name" : "struct{name string; zone []time.zone; tx []time.zoneTrans; cacheStart int64; cacheEnd int64; cacheZone *time.zone}",
      "type" : "Struct",
      "underlying" : 57
    }, {
      "elem" : 59,
      "name" : "[]time.zone",
      "type" : "Slice",
      "underlying" : 58
    }, {
      "local-name" : "zone",
      "name" : "time.zone",
      "package" : 1,
      "type" : "Named",
      "underlying" : 60
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 30
      }, {
        "name" : "offset",
        "type" : 10
      }, {
        "name" : "isDST",
        "type" : 11
      } ],
      "name" : "struct{name string; offset int; isDST bool}",
      "type" : "Struct",
      "underlying" : 60
    }, {
      "elem" : 62,
      "name" : "[]time.zoneTrans",
      "type" : "Slice",
      "underlying" : 61
    }, {
      "local-name" : "zoneTrans",
      "name" : "time.zoneTrans",
      "package" : 1,
      "type" : "Named",
      "underlying" : 63
    }, {
      "fields" : [ {
        "name" : "when",
        "type" : 33
      }, {
        "name" : "index",
        "type" : 24
      }, {
        "name" : "isstd",
        "type" : 11
      }, {
        "name" : "isutc",
        "type" : 11
      } ],
      "name" : "struct{when int64; index uint8; isstd bool; isutc bool}",
      "type" : "Struct",
      "underlying" : 63
    }, {
      "elem" : 59,
      "name" : "*time.zone",
      "type" : "Pointer",
      "underlying" : 64
    }, {
      "name" : "func() <-chan struct{}",
      "params" : 38,
      "recv" : 2,
      "results" : 66,
      "type" : "Signature",
      "underlying" : 65,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 67
      } ],
      "name" : "(<-chan struct{})",
      "type" : "Tuple",
      "underlying" : 66
    }, {
      "dir" : "recv",
      "elem" : 40,
      "name" : "<-chan struct{}",
      "type" : "Chan",
      "underlying" : 67
    }, {
      "name" : "func() error",
      "params" : 38,
      "recv" : 4,
      "results" : 69,
      "type" : "Signature",
      "underlying" : 68,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 70
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 69
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 71
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 72
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 71
    }, {
      "name" : "func() string",
      "params" : 38,
      "recv" : 3,
      "results" : 73,
      "type" : "Signature",
      "underlying" : 72,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 30
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 73
    }, {
      "name" : "func(key interface{}) interface{}",
      "params" : 75,
      "recv" : 5,
      "results" : 77,
      "type" : "Signature",
      "underlying" : 74,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 76
      } ],
      "name" : "(key interface{})",
      "type" : "Tuple",
      "underlying" : 75
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 76
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 76
      } ],
      "name" : "(interface{})",
      "type" : "Tuple",
      "underlying" : 77
    }, {
      "local-name" : "Reader",
      "name" : "io.Reader",
      "package" : 4,
      "type" : "Named",
      "underlying" : 79
    }, {
      "methods" : [ {
        "name" : "Read",
        "type" : 80
      } ],
      "name" : "interface{Read(p []byte) (n int, err error)}",
      "type" : "Interface",
      "underlying" : 79
    }, {
      "name" : "func(p []byte) (n int, err error)",
      "params" : 81,
      "recv" : 6,
      "results" : 83,
      "type" : "Signature",
      "underlying" : 80,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "p",
        "type" : 82
      } ],
      "name" : "(p []byte)",
      "type" : "Tuple",
      "underlying" : 81
    }, {
      "elem" : 20,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 82
    }, {
      "fields" : [ {
        "name" : "n",
        "type" : 10
      }, {
        "name" : "err",
        "type" : 70
      } ],
      "name" : "(n int, err error)",
      "type" : "Tuple",
      "underlying" : 83
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 30
      }, {
        "name" : "Version",
        "type" : 30
      }, {
        "name" : "Environment",
        "type" : 30
      } ],
      "name" : "struct{Name string; Version string; Environment string}",
      "type" : "Struct",
      "underlying" : 84
    }, {
      "elem" : 86,
      "name" : "*go.elastic.co/apm/model.Process",
      "type" : "Pointer",
      "underlying" : 85
    }, {
      "local-name" : "Process",
      "name" : "go.elastic.co/apm/model.Process",
      "package" : 5,
      "type" : "Named",
      "underlying" : 87
    }, {
      "fields" : [ {
        "name" : "Pid",
        "type" : 10
      }, {
        "name" : "Ppid",
        "type" : 88
      }, {
        "name" : "Title",
        "type" : 30
      }, {
        "name" : "Argv",
        "type" : 89
      } ],
      "name" : "struct{Pid int \"json:\\\"pid\\\"\"; Ppid *int \"json:\\\"ppid,omitempty\\\"\"; Title string \"json:\\\"title,omitempty\\\"\"; Argv []string \"json:\\\"argv,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 87
    }, {
      "elem" : 10,
      "name" : "*int",
      "type" : "Pointer",
      "underlying" : 88
    }, {
      "elem" : 30,
      "name" : "[]string",
      "type" : "Slice",
      "underlying" : 89
    }, {
      "elem" : 91,
      "name" : "*go.elastic.co/apm/model.System",
      "type" : "Pointer",
      "underlying" : 90
    }, {
      "local-name" : "System",
      "name" : "go.elastic.co/apm/model.System",
      "package" : 5,
      "type" : "Named",
      "underlying" : 92
    }, {
      "fields" : [ {
        "name" : "Architecture",
        "type" : 30
      }, {
        "name" : "Hostname",
        "type" : 30
      }, {
        "name" : "Platform",
        "type" : 30
      }, {
        "name" : "Container",
        "type" : 93
      }, {
        "name" : "Kubernetes",
        "type" : 96
      } ],
      "name" : "struct{Architecture string \"json:\\\"architecture,omitempty\\\"\"; Hostname string \"json:\\\"hostname,omitempty\\\"\"; Platform string \"json:\\\"platform,omitempty\\\"\"; Container *go.elastic.co/apm/model.Container \"json:\\\"container,omitempty\\\"\"; Kubernetes *go.elastic.co/apm/model.Kubernetes \"json:\\\"kubernetes,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 92
    }, {
      "elem" : 94,
      "name" : "*go.elastic.co/apm/model.Container",
      "type" : "Pointer",
      "underlying" : 93
    }, {
      "local-name" : "Container",
      "name" : "go.elastic.co/apm/model.Container",
      "package" : 5,
      "type" : "Named",
      "underlying" : 95
    }, {
      "fields" : [ {
        "name" : "ID",
        "type" : 30
      } ],
      "name" : "struct{ID string \"json:\\\"id\\\"\"}",
      "type" : "Struct",
      "underlying" : 95
    }, {
      "elem" : 97,
      "name" : "*go.elastic.co/apm/model.Kubernetes",
      "type" : "Pointer",
      "underlying" : 96
    }, {
      "local-name" : "Kubernetes",
      "name" : "go.elastic.co/apm/model.Kubernetes",
      "package" : 5,
      "type" : "Named",
      "underlying" : 98
    }, {
      "fields" : [ {
        "name" : "Namespace",
        "type" : 30
      }, {
        "name" : "Node",
        "type" : 99
      }, {
        "name" : "Pod",
        "type" : 102
      } ],
      "name" : "struct{Namespace string \"json:\\\"namespace,omitempty\\\"\"; Node *go.elastic.co/apm/model.KubernetesNode \"json:\\\"node,omitempty\\\"\"; Pod *go.elastic.co/apm/model.KubernetesPod \"json:\\\"pod,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 98
    }, {
      "elem" : 100,
      "name" : "*go.elastic.co/apm/model.KubernetesNode",
      "type" : "Pointer",
      "underlying" : 99
    }, {
      "local-name" : "KubernetesNode",
      "name" : "go.elastic.co/apm/model.KubernetesNode",
      "package" : 5,
      "type" : "Named",
      "underlying" : 101
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 30
      } ],
      "name" : "struct{Name string \"json:\\\"name,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 101
    }, {
      "elem" : 103,
      "name" : "*go.elastic.co/apm/model.KubernetesPod",
      "type" : "Pointer",
      "underlying" : 102
    }, {
      "local-name" : "KubernetesPod",
      "name" : "go.elastic.co/apm/model.KubernetesPod",
      "package" : 5,
      "type" : "Named",
      "underlying" : 104
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 30
      }, {
        "name" : "UID",
        "type" : 30
      } ],
      "name" : "struct{Name string \"json:\\\"name,omitempty\\\"\"; UID string \"json:\\\"uid,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 104
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 105
    }, {
      "dir" : "both",
      "elem" : 40,
      "name" : "chan struct{}",
      "type" : "Chan",
      "underlying" : 106
    }, {
      "dir" : "both",
      "elem" : 108,
      "name" : "chan chan<- struct{}",
      "type" : "Chan",
      "underlying" : 107
    }, {
      "dir" : "send",
      "elem" : 40,
      "name" : "chan<- struct{}",
      "type" : "Chan",
      "underlying" : 108
    }, {
      "dir" : "both",
      "elem" : 110,
      "name" : "chan go.elastic.co/apm.tracerConfigCommand",
      "type" : "Chan",
      "underlying" : 109
    }, {
      "local-name" : "tracerConfigCommand",
      "name" : "go.elastic.co/apm.tracerConfigCommand",
      "package" : 0,
      "type" : "Named",
      "underlying" : 111
    }, {
      "name" : "func(*go.elastic.co/apm.tracerConfig)",
      "params" : 112,
      "recv" : -1,
      "results" : 38,
      "type" : "Signature",
      "underlying" : 111,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 113
      } ],
      "name" : "(*go.elastic.co/apm.tracerConfig)",
      "type" : "Tuple",
      "underlying" : 112
    }, {
      "elem" : 114,
      "name" : "*go.elastic.co/apm.tracerConfig",
      "type" : "Pointer",
      "underlying" : 113
    }, {
      "local-name" : "tracerConfig",
      "name" : "go.elastic.co/apm.tracerConfig",
      "package" : 0,
      "type" : "Named",
      "underlying" : 115
    }, {
      "fields" : [ {
        "name" : "requestSize",
        "type" : 10
      }, {
        "name" : "requestDuration",
        "type" : 32
      }, {
        "name" : "metricsInterval",
        "type" : 32
      }, {
        "name" : "logger",
        "type" : 116
      }, {
        "name" : "metricsGatherers",
        "type" : 123
      }, {
        "name" : "contextSetter",
        "type" : 157
      }, {
        "name" : "preContext",
        "type" : 10
      }, {
        "name" : "postContext",
        "type" : 10
      }, {
        "name" : "sanitizedFieldNames",
        "type" : 131
      }, {
        "name" : "disabledMetrics",
        "type" : 131
      }, {
        "name" : "cpuProfileDuration",
        "type" : 32
      }, {
        "name" : "cpuProfileInterval",
        "type" : 32
      }, {
        "name" : "heapProfileInterval",
        "type" : 32
      } ],
      "name" : "struct{requestSize int; requestDuration time.Duration; metricsInterval time.Duration; logger go.elastic.co/apm.WarningLogger; metricsGatherers []go.elastic.co/apm.MetricsGatherer; contextSetter go.elastic.co/apm/stacktrace.ContextSetter; preContext int; postContext int; sanitizedFieldNames go.elastic.co/apm/internal/wildcard.Matchers; disabledMetrics go.elastic.co/apm/internal/wildcard.Matchers; cpuProfileDuration time.Duration; cpuProfileInterval time.Duration; heapProfileInterval time.Duration}",
      "type" : "Struct",
      "underlying" : 115
    }, {
      "local-name" : "WarningLogger",
      "name" : "go.elastic.co/apm.WarningLogger",
      "package" : 0,
      "type" : "Named",
      "underlying" : 117
    }, {
      "methods" : [ {
        "name" : "Debugf",
        "type" : 118
      }, {
        "name" : "Errorf",
        "type" : 118
      }, {
        "name" : "Warningf",
        "type" : 118
      } ],
      "name" : "interface{Warningf(format string, args ...interface{}); go.elastic.co/apm.Logger}",
      "type" : "Interface",
      "underlying" : 117
    }, {
      "name" : "func(format string, args ...interface{})",
      "params" : 119,
      "recv" : 8,
      "results" : 38,
      "type" : "Signature",
      "underlying" : 118,
      "variadic" : true
    }, {
      "fields" : [ {
        "name" : "format",
        "type" : 30
      }, {
        "name" : "args",
        "type" : 120
      } ],
      "name" : "(format string, args []interface{})",
      "type" : "Tuple",
      "underlying" : 119
    }, {
      "elem" : 76,
      "name" : "[]interface{}",
      "type" : "Slice",
      "underlying" : 120
    }, {
      "local-name" : "Logger",
      "name" : "go.elastic.co/apm.Logger",
      "package" : 0,
      "type" : "Named",
      "underlying" : 122
    }, {
      "methods" : [ {
        "name" : "Debugf",
        "type" : 118
      }, {
        "name" : "Errorf",
        "type" : 118
      } ],
      "name" : "interface{Debugf(format string, args ...interface{}); Errorf(format string, args ...interface{})}",
      "type" : "Interface",
      "underlying" : 122
    }, {
      "elem" : 124,
      "name" : "[]go.elastic.co/apm.MetricsGatherer",
      "type" : "Slice",
      "underlying" : 123
    }, {
      "local-name" : "MetricsGatherer",
      "name" : "go.elastic.co/apm.MetricsGatherer",
      "package" : 0,
      "type" : "Named",
      "underlying" : 125
    }, {
      "methods" : [ {
        "name" : "GatherMetrics",
        "type" : 126
      } ],
      "name" : "interface{GatherMetrics(ctx context.Context, m *go.elastic.co/apm.Metrics) error}",
      "type" : "Interface",
      "underlying" : 125
    }, {
      "name" : "func(ctx context.Context, m *go.elastic.co/apm.Metrics) error",
      "params" : 127,
      "recv" : 9,
      "results" : 69,
      "type" : "Signature",
      "underlying" : 126,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ctx",
        "type" : 48
      }, {
        "name" : "m",
        "type" : 128
      } ],
      "name" : "(ctx context.Context, m *go.elastic.co/apm.Metrics)",
      "type" : "Tuple",
      "underlying" : 127
    }, {
      "elem" : 129,
      "name" : "*go.elastic.co/apm.Metrics",
      "type" : "Pointer",
      "underlying" : 128
    }, {
      "local-name" : "Metrics",
      "name" : "go.elastic.co/apm.Metrics",
      "package" : 0,
      "type" : "Named",
      "underlying" : 130
    }, {
      "fields" : [ {
        "name" : "disabled",
        "type" : 131
      }, {
        "name" : "mu",
        "type" : 137
      }, {
        "name" : "metrics",
        "type" : 140
      }, {
        "name" : "transactionGroupMetrics",
        "type" : 140
      } ],
      "name" : "struct{disabled go.elastic.co/apm/internal/wildcard.Matchers; mu sync.Mutex; metrics []*go.elastic.co/apm/model.Metrics; transactionGroupMetrics []*go.elastic.co/apm/model.Metrics}",
      "type" : "Struct",
      "underlying" : 130
    }, {
      "local-name" : "Matchers",
      "name" : "go.elastic.co/apm/internal/wildcard.Matchers",
      "package" : 6,
      "type" : "Named",
      "underlying" : 132
    }, {
      "elem" : 133,
      "name" : "[]*go.elastic.co/apm/internal/wildcard.Matcher",
      "type" : "Slice",
      "underlying" : 132
    }, {
      "elem" : 134,
      "name" : "*go.elastic.co/apm/internal/wildcard.Matcher",
      "type" : "Pointer",
      "underlying" : 133
    }, {
      "local-name" : "Matcher",
      "name" : "go.elastic.co/apm/internal/wildcard.Matcher",
      "package" : 6,
      "type" : "Named",
      "underlying" : 135
    }, {
      "fields" : [ {
        "name" : "parts",
        "type" : 89
      }, {
        "name" : "wildcardBegin",
        "type" : 11
      }, {
        "name" : "wildcardEnd",
        "type" : 11
      }, {
        "name" : "caseSensitive",
        "type" : 136
      } ],
      "name" : "struct{parts []string; wildcardBegin bool; wildcardEnd bool; caseSensitive go.elastic.co/apm/internal/wildcard.CaseSensitivity}",
      "type" : "Struct",
      "underlying" : 135
    }, {
      "local-name" : "CaseSensitivity",
      "name" : "go.elastic.co/apm/internal/wildcard.CaseSensitivity",
      "package" : 6,
      "type" : "Named",
      "underlying" : 11
    }, {
      "local-name" : "Mutex",
      "name" : "sync.Mutex",
      "package" : 7,
      "type" : "Named",
      "underlying" : 138
    }, {
      "fields" : [ {
        "name" : "state",
        "type" : 105
      }, {
        "name" : "sema",
        "type" : 139
      } ],
      "name" : "struct{state int32; sema uint32}",
      "type" : "Struct",
      "underlying" : 138
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 139
    }, {
      "elem" : 141,
      "name" : "[]*go.elastic.co/apm/model.Metrics",
      "type" : "Slice",
      "underlying" : 140
    }, {
      "elem" : 142,
      "name" : "*go.elastic.co/apm/model.Metrics",
      "type" : "Pointer",
      "underlying" : 141
    }, {
      "local-name" : "Metrics",
      "name" : "go.elastic.co/apm/model.Metrics",
      "package" : 5,
      "type" : "Named",
      "underlying" : 143
    }, {
      "fields" : [ {
        "name" : "Timestamp",
        "type" : 144
      }, {
        "name" : "Transaction",
        "type" : 145
      }, {
        "name" : "Span",
        "type" : 147
      }, {
        "name" : "Labels",
        "type" : 149
      }, {
        "name" : "Samples",
        "type" : 153
      } ],
      "name" : "struct{Timestamp go.elastic.co/apm/model.Time \"json:\\\"timestamp\\\"\"; Transaction go.elastic.co/apm/model.MetricsTransaction \"json:\\\"transaction,omitempty\\\"\"; Span go.elastic.co/apm/model.MetricsSpan \"json:\\\"span,omitempty\\\"\"; Labels go.elastic.co/apm/model.StringMap \"json:\\\"tags,omitempty\\\"\"; Samples map[string]go.elastic.co/apm/model.Metric \"json:\\\"samples\\\"\"}",
      "type" : "Struct",
      "underlying" : 143
    }, {
      "local-name" : "Time",
      "name" : "go.elastic.co/apm/model.Time",
      "package" : 5,
      "type" : "Named",
      "underlying" : 53
    }, {
      "local-name" : "MetricsTransaction",
      "name" : "go.elastic.co/apm/model.MetricsTransaction",
      "package" : 5,
      "type" : "Named",
      "underlying" : 146
    }, {
      "fields" : [ {
        "name" : "Type",
        "type" : 30
      }, {
        "name" : "Name",
        "type" : 30
      } ],
      "name" : "struct{Type string \"json:\\\"type,omitempty\\\"\"; Name string \"json:\\\"name,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 146
    }, {
      "local-name" : "MetricsSpan",
      "name" : "go.elastic.co/apm/model.MetricsSpan",
      "package" : 5,
      "type" : "Named",
      "underlying" : 148
    }, {
      "fields" : [ {
        "name" : "Type",
        "type" : 30
      }, {
        "name" : "Subtype",
        "type" : 30
      } ],
      "name" : "struct{Type string \"json:\\\"type,omitempty\\\"\"; Subtype string \"json:\\\"subtype,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 148
    }, {
      "local-name" : "StringMap",
      "name" : "go.elastic.co/apm/model.StringMap",
      "package" : 5,
      "type" : "Named",
      "underlying" : 150
    }, {
      "elem" : 151,
      "name" : "[]go.elastic.co/apm/model.StringMapItem",
      "type" : "Slice",
      "underlying" : 150
    }, {
      "local-name" : "StringMapItem",
      "name" : "go.elastic.co/apm/model.StringMapItem",
      "package" : 5,
      "type" : "Named",
      "underlying" : 152
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 30
      }, {
        "name" : "Value",
        "type" : 30
      } ],
      "name" : "struct{Key string; Value string}",
      "type" : "Struct",
      "underlying" : 152
    }, {
      "elem" : 154,
      "key" : 30,
      "name" : "map[string]go.elastic.co/apm/model.Metric",
      "type" : "Map",
      "underlying" : 153
    }, {
      "local-name" : "Metric",
      "name" : "go.elastic.co/apm/model.Metric",
      "package" : 5,
      "type" : "Named",
      "underlying" : 155
    }, {
      "fields" : [ {
        "name" : "Value",
        "type" : 156
      } ],
      "name" : "struct{Value float64 \"json:\\\"value\\\"\"}",
      "type" : "Struct",
      "underlying" : 155
    }, {
      "name" : "float64",
      "type" : "Basic",
      "underlying" : 156
    }, {
      "local-name" : "ContextSetter",
      "name" : "go.elastic.co/apm/stacktrace.ContextSetter",
      "package" : 8,
      "type" : "Named",
      "underlying" : 158
    }, {
      "methods" : [ {
        "name" : "SetContext",
        "type" : 159
      } ],
      "name" : "interface{SetContext(frame *go.elastic.co/apm/model.StacktraceFrame, pre int, post int) error}",
      "type" : "Interface",
      "underlying" : 158
    }, {
      "name" : "func(frame *go.elastic.co/apm/model.StacktraceFrame, pre int, post int) error",
      "params" : 160,
      "recv" : 10,
      "results" : 69,
      "type" : "Signature",
      "underlying" : 159,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "frame",
        "type" : 161
      }, {
        "name" : "pre",
        "type" : 10
      }, {
        "name" : "post",
        "type" : 10
      } ],
      "name" : "(frame *go.elastic.co/apm/model.StacktraceFrame, pre int, post int)",
      "type" : "Tuple",
      "underlying" : 160
    }, {
      "elem" : 162,
      "name" : "*go.elastic.co/apm/model.StacktraceFrame",
      "type" : "Pointer",
      "underlying" : 161
    }, {
      "local-name" : "StacktraceFrame",
      "name" : "go.elastic.co/apm/model.StacktraceFrame",
      "package" : 5,
      "type" : "Named",
      "underlying" : 163
    }, {
      "fields" : [ {
        "name" : "AbsolutePath",
        "type" : 30
      }, {
        "name" : "File",
        "type" : 30
      }, {
        "name" : "Line",
        "type" : 10
      }, {
        "name" : "Column",
        "type" : 88
      }, {
        "name" : "Module",
        "type" : 30
      }, {
        "name" : "Function",
        "type" : 30
      }, {
        "name" : "LibraryFrame",
        "type" : 11
      }, {
        "name" : "ContextLine",
        "type" : 30
      }, {
        "name" : "PreContext",
        "type" : 89
      }, {
        "name" : "PostContext",
        "type" : 89
      }, {
        "name" : "Vars",
        "type" : 164
      } ],
      "name" : "struct{AbsolutePath string \"json:\\\"abs_path,omitempty\\\"\"; File string \"json:\\\"filename\\\"\"; Line int \"json:\\\"lineno\\\"\"; Column *int \"json:\\\"colno,omitempty\\\"\"; Module string \"json:\\\"module,omitempty\\\"\"; Function string \"json:\\\"function,omitempty\\\"\"; LibraryFrame bool \"json:\\\"library_frame,omitempty\\\"\"; ContextLine string \"json:\\\"context_line,omitempty\\\"\"; PreContext []string \"json:\\\"pre_context,omitempty\\\"\"; PostContext []string \"json:\\\"post_context,omitempty\\\"\"; Vars map[string]interface{} \"json:\\\"vars,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 163
    }, {
      "elem" : 76,
      "key" : 30,
      "name" : "map[string]interface{}",
      "type" : "Map",
      "underlying" : 164
    }, {
      "dir" : "both",
      "elem" : 166,
      "name" : "chan go.elastic.co/apm/apmconfig.Watcher",
      "type" : "Chan",
      "underlying" : 165
    }, {
      "local-name" : "Watcher",
      "name" : "go.elastic.co/apm/apmconfig.Watcher",
      "package" : 9,
      "type" : "Named",
      "underlying" : 167
    }, {
      "methods" : [ {
        "name" : "WatchConfig",
        "type" : 168
      } ],
      "name" : "interface{WatchConfig(context.Context, go.elastic.co/apm/apmconfig.WatchParams) <-chan go.elastic.co/apm/apmconfig.Change}",
      "type" : "Interface",
      "underlying" : 167
    }, {
      "name" : "func(context.Context, go.elastic.co/apm/apmconfig.WatchParams) <-chan go.elastic.co/apm/apmconfig.Change",
      "params" : 169,
      "recv" : 11,
      "results" : 173,
      "type" : "Signature",
      "underlying" : 168,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 48
      }, {
        "name" : "",
        "type" : 170
      } ],
      "name" : "(context.Context, go.elastic.co/apm/apmconfig.WatchParams)",
      "type" : "Tuple",
      "underlying" : 169
    }, {
      "local-name" : "WatchParams",
      "name" : "go.elastic.co/apm/apmconfig.WatchParams",
      "package" : 9,
      "type" : "Named",
      "underlying" : 171
    }, {
      "fields" : [ {
        "name" : "Service",
        "type" : 172
      } ],
      "name" : "struct{Service struct{Name string; Environment string}}",
      "type" : "Struct",
      "underlying" : 171
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 30
      }, {
        "name" : "Environment",
        "type" : 30
      } ],
      "name" : "struct{Name string; Environment string}",
      "type" : "Struct",
      "underlying" : 172
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 174
      } ],
      "name" : "(<-chan go.elastic.co/apm/apmconfig.Change)",
      "type" : "Tuple",
      "underlying" : 173
    }, {
      "dir" : "recv",
      "elem" : 175,
      "name" : "<-chan go.elastic.co/apm/apmconfig.Change",
      "type" : "Chan",
      "underlying" : 174
    }, {
      "local-name" : "Change",
      "name" : "go.elastic.co/apm/apmconfig.Change",
      "package" : 9,
      "type" : "Named",
      "underlying" : 176
    }, {
      "fields" : [ {
        "name" : "Err",
        "type" : 70
      }, {
        "name" : "Attrs",
        "type" : 177
      } ],
      "name" : "struct{Err error; Attrs map[string]string}",
      "type" : "Struct",
      "underlying" : 176
    }, {
      "elem" : 30,
      "key" : 30,
      "name" : "map[string]string",
      "type" : "Map",
      "underlying" : 177
    }, {
      "dir" : "both",
      "elem" : 179,
      "name" : "chan go.elastic.co/apm.tracerEvent",
      "type" : "Chan",
      "underlying" : 178
    }, {
      "local-name" : "tracerEvent",
      "name" : "go.elastic.co/apm.tracerEvent",
      "package" : 0,
      "type" : "Named",
      "underlying" : 180
    }, {
      "fields" : [ {
        "name" : "eventType",
        "type" : 181
      }, {
        "name" : "err",
        "type" : 182
      }, {
        "name" : "tx",
        "type" : 253
      }, {
        "name" : "span",
        "type" : 285
      } ],
      "name" : "struct{eventType go.elastic.co/apm.tracerEventType; err *go.elastic.co/apm.ErrorData; tx struct{*go.elastic.co/apm.Transaction; *go.elastic.co/apm.TransactionData}; span struct{*go.elastic.co/apm.Span; *go.elastic.co/apm.SpanData}}",
      "type" : "Struct",
      "underlying" : 180
    }, {
      "local-name" : "tracerEventType",
      "name" : "go.elastic.co/apm.tracerEventType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 10
    }, {
      "elem" : 183,
      "name" : "*go.elastic.co/apm.ErrorData",
      "type" : "Pointer",
      "underlying" : 182
    }, {
      "local-name" : "ErrorData",
      "name" : "go.elastic.co/apm.ErrorData",
      "package" : 0,
      "type" : "Named",
      "underlying" : 184
    }, {
      "fields" : [ {
        "name" : "tracer",
        "type" : 41
      }, {
        "name" : "stackTraceLimit",
        "type" : 10
      }, {
        "name" : "exception",
        "type" : 185
      }, {
        "name" : "log",
        "type" : 196
      }, {
        "name" : "logStacktrace",
        "type" : 187
      }, {
        "name" : "transactionSampled",
        "type" : 11
      }, {
        "name" : "transactionType",
        "type" : 30
      }, {
        "name" : "ID",
        "type" : 198
      }, {
        "name" : "TraceID",
        "type" : 18
      }, {
        "name" : "TransactionID",
        "type" : 21
      }, {
        "name" : "ParentID",
        "type" : 21
      }, {
        "name" : "Culprit",
        "type" : 30
      }, {
        "name" : "Timestamp",
        "type" : 52
      }, {
        "name" : "Handled",
        "type" : 11
      }, {
        "name" : "Context",
        "type" : 199
      } ],
      "name" : "struct{tracer *go.elastic.co/apm.Tracer; stackTraceLimit int; exception go.elastic.co/apm.exceptionData; log go.elastic.co/apm.ErrorLogRecord; logStacktrace []go.elastic.co/apm/stacktrace.Frame; transactionSampled bool; transactionType string; ID go.elastic.co/apm.ErrorID; TraceID go.elastic.co/apm.TraceID; TransactionID go.elastic.co/apm.SpanID; ParentID go.elastic.co/apm.SpanID; Culprit string; Timestamp time.Time; Handled bool; Context go.elastic.co/apm.Context}",
      "type" : "Struct",
      "underlying" : 184
    }, {
      "local-name" : "exceptionData",
      "name" : "go.elastic.co/apm.exceptionData",
      "package" : 0,
      "type" : "Named",
      "underlying" : 186
    }, {
      "fields" : [ {
        "name" : "message",
        "type" : 30
      }, {
        "name" : "stacktrace",
        "type" : 187
      }, {
        "name" : "cause",
        "type" : 190
      }, {
        "name" : "ErrorDetails",
        "type" : 191
      } ],
      "name" : "struct{message string; stacktrace []go.elastic.co/apm/stacktrace.Frame; cause []go.elastic.co/apm.exceptionData; go.elastic.co/apm.ErrorDetails}",
      "type" : "Struct",
      "underlying" : 186
    }, {
      "elem" : 188,
      "name" : "[]go.elastic.co/apm/stacktrace.Frame",
      "type" : "Slice",
      "underlying" : 187
    }, {
      "local-name" : "Frame",
      "name" : "go.elastic.co/apm/stacktrace.Frame",
      "package" : 8,
      "type" : "Named",
      "underlying" : 189
    }, {
      "fields" : [ {
        "name" : "File",
        "type" : 30
      }, {
        "name" : "Line",
        "type" : 10
      }, {
        "name" : "Function",
        "type" : 30
      } ],
      "name" : "struct{File string; Line int; Function string}",
      "type" : "Struct",
      "underlying" : 189
    }, {
      "elem" : 185,
      "name" : "[]go.elastic.co/apm.exceptionData",
      "type" : "Slice",
      "underlying" : 190
    }, {
      "local-name" : "ErrorDetails",
      "name" : "go.elastic.co/apm.ErrorDetails",
      "package" : 0,
      "type" : "Named",
      "underlying" : 192
    }, {
      "fields" : [ {
        "name" : "attrs",
        "type" : 164
      }, {
        "name" : "Type",
        "type" : 193
      }, {
        "name" : "Code",
        "type" : 194
      }, {
        "name" : "Cause",
        "type" : 195
      } ],
      "name" : "struct{attrs map[string]interface{}; Type struct{Name string; PackagePath string}; Code struct{String string; Number float64}; Cause []error}",
      "type" : "Struct",
      "underlying" : 192
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 30
      }, {
        "name" : "PackagePath",
        "type" : 30
      } ],
      "name" : "struct{Name string; PackagePath string}",
      "type" : "Struct",
      "underlying" : 193
    }, {
      "fields" : [ {
        "name" : "String",
        "type" : 30
      }, {
        "name" : "Number",
        "type" : 156
      } ],
      "name" : "struct{String string; Number float64}",
      "type" : "Struct",
      "underlying" : 194
    }, {
      "elem" : 70,
      "name" : "[]error",
      "type" : "Slice",
      "underlying" : 195
    }, {
      "local-name" : "ErrorLogRecord",
      "name" : "go.elastic.co/apm.ErrorLogRecord",
      "package" : 0,
      "type" : "Named",
      "underlying" : 197
    }, {
      "fields" : [ {
        "name" : "Message",
        "type" : 30
      }, {
        "name" : "MessageFormat",
        "type" : 30
      }, {
        "name" : "Level",
        "type" : 30
      }, {
        "name" : "LoggerName",
        "type" : 30
      }, {
        "name" : "Error",
        "type" : 70
      } ],
      "name" : "struct{Message string; MessageFormat string; Level string; LoggerName string; Error error}",
      "type" : "Struct",
      "underlying" : 197
    }, {
      "local-name" : "ErrorID",
      "name" : "go.elastic.co/apm.ErrorID",
      "package" : 0,
      "type" : "Named",
      "underlying" : 19
    }, {
      "local-name" : "Context",
      "name" : "go.elastic.co/apm.Context",
      "package" : 0,
      "type" : "Named",
      "underlying" : 200
    }, {
      "fields" : [ {
        "name" : "model",
        "type" : 201
      }, {
        "name" : "request",
        "type" : 208
      }, {
        "name" : "requestBody",
        "type" : 217
      }, {
        "name" : "requestSocket",
        "type" : 228
      }, {
        "name" : "response",
        "type" : 231
      }, {
        "name" : "user",
        "type" : 235
      }, {
        "name" : "service",
        "type" : 238
      }, {
        "name" : "serviceFramework",
        "type" : 244
      }, {
        "name" : "captureHeaders",
        "type" : 11
      }, {
        "name" : "captureBodyMask",
        "type" : 9
      } ],
      "name" : "struct{model go.elastic.co/apm/model.Context; request go.elastic.co/apm/model.Request; requestBody go.elastic.co/apm/model.RequestBody; requestSocket go.elastic.co/apm/model.RequestSocket; response go.elastic.co/apm/model.Response; user go.elastic.co/apm/model.User; service go.elastic.co/apm/model.Service; serviceFramework go.elastic.co/apm/model.Framework; captureHeaders bool; captureBodyMask go.elastic.co/apm.CaptureBodyMode}",
      "type" : "Struct",
      "underlying" : 200
    }, {
      "local-name" : "Context",
      "name" : "go.elastic.co/apm/model.Context",
      "package" : 5,
      "type" : "Named",
      "underlying" : 202
    }, {
      "fields" : [ {
        "name" : "Custom",
        "type" : 203
      }, {
        "name" : "Request",
        "type" : 207
      }, {
        "name" : "Response",
        "type" : 230
      }, {
        "name" : "User",
        "type" : 234
      }, {
        "name" : "Tags",
        "type" : 203
      }, {
        "name" : "Service",
        "type" : 237
      } ],
      "name" : "struct{Custom go.elastic.co/apm/model.IfaceMap \"json:\\\"custom,omitempty\\\"\"; Request *go.elastic.co/apm/model.Request \"json:\\\"request,omitempty\\\"\"; Response *go.elastic.co/apm/model.Response \"json:\\\"response,omitempty\\\"\"; User *go.elastic.co/apm/model.User \"json:\\\"user,omitempty\\\"\"; Tags go.elastic.co/apm/model.IfaceMap \"json:\\\"tags,omitempty\\\"\"; Service *go.elastic.co/apm/model.Service \"json:\\\"service,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 202
    }, {
      "local-name" : "IfaceMap",
      "name" : "go.elastic.co/apm/model.IfaceMap",
      "package" : 5,
      "type" : "Named",
      "underlying" : 204
    }, {
      "elem" : 205,
      "name" : "[]go.elastic.co/apm/model.IfaceMapItem",
      "type" : "Slice",
      "underlying" : 204
    }, {
      "local-name" : "IfaceMapItem",
      "name" : "go.elastic.co/apm/model.IfaceMapItem",
      "package" : 5,
      "type" : "Named",
      "underlying" : 206
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 30
      }, {
        "name" : "Value",
        "type" : 76
      } ],
      "name" : "struct{Key string; Value interface{}}",
      "type" : "Struct",
      "underlying" : 206
    }, {
      "elem" : 208,
      "name" : "*go.elastic.co/apm/model.Request",
      "type" : "Pointer",
      "underlying" : 207
    }, {
      "local-name" : "Request",
      "name" : "go.elastic.co/apm/model.Request",
      "package" : 5,
      "type" : "Named",
      "underlying" : 209
    }, {
      "fields" : [ {
        "name" : "URL",
        "type" : 210
      }, {
        "name" : "Method",
        "type" : 30
      }, {
        "name" : "Headers",
        "type" : 212
      }, {
        "name" : "Body",
        "type" : 216
      }, {
        "name" : "HTTPVersion",
        "type" : 30
      }, {
        "name" : "Cookies",
        "type" : 221
      }, {
        "name" : "Env",
        "type" : 177
      }, {
        "name" : "Socket",
        "type" : 227
      } ],
      "name" : "struct{URL go.elastic.co/apm/model.URL \"json:\\\"url\\\"\"; Method string \"json:\\\"method\\\"\"; Headers go.elastic.co/apm/model.Headers \"json:\\\"headers,omitempty\\\"\"; Body *go.elastic.co/apm/model.RequestBody \"json:\\\"body,omitempty\\\"\"; HTTPVersion string \"json:\\\"http_version,omitempty\\\"\"; Cookies go.elastic.co/apm/model.Cookies \"json:\\\"cookies,omitempty\\\"\"; Env map[string]string \"json:\\\"env,omitempty\\\"\"; Socket *go.elastic.co/apm/model.RequestSocket \"json:\\\"socket,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 209
    }, {
      "local-name" : "URL",
      "name" : "go.elastic.co/apm/model.URL",
      "package" : 5,
      "type" : "Named",
      "underlying" : 211
    }, {
      "fields" : [ {
        "name" : "Full",
        "type" : 30
      }, {
        "name" : "Protocol",
        "type" : 30
      }, {
        "name" : "Hostname",
        "type" : 30
      }, {
        "name" : "Port",
        "type" : 30
      }, {
        "name" : "Path",
        "type" : 30
      }, {
        "name" : "Search",
        "type" : 30
      }, {
        "name" : "Hash",
        "type" : 30
      } ],
      "name" : "struct{Full string \"json:\\\"full,omitempty\\\"\"; Protocol string \"json:\\\"protocol,omitempty\\\"\"; Hostname string \"json:\\\"hostname,omitempty\\\"\"; Port string \"json:\\\"port,omitempty\\\"\"; Path string \"json:\\\"pathname,omitempty\\\"\"; Search string \"json:\\\"search,omitempty\\\"\"; Hash string \"json:\\\"hash,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 211
    }, {
      "local-name" : "Headers",
      "name" : "go.elastic.co/apm/model.Headers",
      "package" : 5,
      "type" : "Named",
      "underlying" : 213
    }, {
      "elem" : 214,
      "name" : "[]go.elastic.co/apm/model.Header",
      "type" : "Slice",
      "underlying" : 213
    }, {
      "local-name" : "Header",
      "name" : "go.elastic.co/apm/model.Header",
      "package" : 5,
      "type" : "Named",
      "underlying" : 215
    }, {
      "fields" : [ {
        "name" : "Key",
        "type" : 30
      }, {
        "name" : "Values",
        "type" : 89
      } ],
      "name" : "struct{Key string; Values []string}",
      "type" : "Struct",
      "underlying" : 215
    }, {
      "elem" : 217,
      "name" : "*go.elastic.co/apm/model.RequestBody",
      "type" : "Pointer",
      "underlying" : 216
    }, {
      "local-name" : "RequestBody",
      "name" : "go.elastic.co/apm/model.RequestBody",
      "package" : 5,
      "type" : "Named",
      "underlying" : 218
    }, {
      "fields" : [ {
        "name" : "Raw",
        "type" : 30
      }, {
        "name" : "Form",
        "type" : 219
      } ],
      "name" : "struct{Raw string; Form net/url.Values}",
      "type" : "Struct",
      "underlying" : 218
    }, {
      "local-name" : "Values",
      "name" : "net/url.Values",
      "package" : 10,
      "type" : "Named",
      "underlying" : 220
    }, {
      "elem" : 89,
      "key" : 30,
      "name" : "map[string][]string",
      "type" : "Map",
      "underlying" : 220
    }, {
      "local-name" : "Cookies",
      "name" : "go.elastic.co/apm/model.Cookies",
      "package" : 5,
      "type" : "Named",
      "underlying" : 222
    }, {
      "elem" : 223,
      "name" : "[]*net/http.Cookie",
      "type" : "Slice",
      "underlying" : 222
    }, {
      "elem" : 224,
      "name" : "*net/http.Cookie",
      "type" : "Pointer",
      "underlying" : 223
    }, {
      "local-name" : "Cookie",
      "name" : "net/http.Cookie",
      "package" : 11,
      "type" : "Named",
      "underlying" : 225
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 30
      }, {
        "name" : "Value",
        "type" : 30
      }, {
        "name" : "Path",
        "type" : 30
      }, {
        "name" : "Domain",
        "type" : 30
      }, {
        "name" : "Expires",
        "type" : 52
      }, {
        "name" : "RawExpires",
        "type" : 30
      }, {
        "name" : "MaxAge",
        "type" : 10
      }, {
        "name" : "Secure",
        "type" : 11
      }, {
        "name" : "HttpOnly",
        "type" : 11
      }, {
        "name" : "SameSite",
        "type" : 226
      }, {
        "name" : "Raw",
        "type" : 30
      }, {
        "name" : "Unparsed",
        "type" : 89
      } ],
      "name" : "struct{Name string; Value string; Path string; Domain string; Expires time.Time; RawExpires string; MaxAge int; Secure bool; HttpOnly bool; SameSite net/http.SameSite; Raw string; Unparsed []string}",
      "type" : "Struct",
      "underlying" : 225
    }, {
      "local-name" : "SameSite",
      "name" : "net/http.SameSite",
      "package" : 11,
      "type" : "Named",
      "underlying" : 10
    }, {
      "elem" : 228,
      "name" : "*go.elastic.co/apm/model.RequestSocket",
      "type" : "Pointer",
      "underlying" : 227
    }, {
      "local-name" : "RequestSocket",
      "name" : "go.elastic.co/apm/model.RequestSocket",
      "package" : 5,
      "type" : "Named",
      "underlying" : 229
    }, {
      "fields" : [ {
        "name" : "Encrypted",
        "type" : 11
      }, {
        "name" : "RemoteAddress",
        "type" : 30
      } ],
      "name" : "struct{Encrypted bool \"json:\\\"encrypted,omitempty\\\"\"; RemoteAddress string \"json:\\\"remote_address,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 229
    }, {
      "elem" : 231,
      "name" : "*go.elastic.co/apm/model.Response",
      "type" : "Pointer",
      "underlying" : 230
    }, {
      "local-name" : "Response",
      "name" : "go.elastic.co/apm/model.Response",
      "package" : 5,
      "type" : "Named",
      "underlying" : 232
    }, {
      "fields" : [ {
        "name" : "StatusCode",
        "type" : 10
      }, {
        "name" : "Headers",
        "type" : 212
      }, {
        "name" : "HeadersSent",
        "type" : 233
      }, {
        "name" : "Finished",
        "type" : 233
      } ],
      "name" : "struct{StatusCode int \"json:\\\"status_code,omitempty\\\"\"; Headers go.elastic.co/apm/model.Headers \"json:\\\"headers,omitempty\\\"\"; HeadersSent *bool \"json:\\\"headers_sent,omitempty\\\"\"; Finished *bool \"json:\\\"finished,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 232
    }, {
      "elem" : 11,
      "name" : "*bool",
      "type" : "Pointer",
      "underlying" : 233
    }, {
      "elem" : 235,
      "name" : "*go.elastic.co/apm/model.User",
      "type" : "Pointer",
      "underlying" : 234
    }, {
      "local-name" : "User",
      "name" : "go.elastic.co/apm/model.User",
      "package" : 5,
      "type" : "Named",
      "underlying" : 236
    }, {
      "fields" : [ {
        "name" : "Username",
        "type" : 30
      }, {
        "name" : "ID",
        "type" : 30
      }, {
        "name" : "Email",
        "type" : 30
      } ],
      "name" : "struct{Username string \"json:\\\"username,omitempty\\\"\"; ID string \"json:\\\"id,omitempty\\\"\"; Email string \"json:\\\"email,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 236
    }, {
      "elem" : 238,
      "name" : "*go.elastic.co/apm/model.Service",
      "type" : "Pointer",
      "underlying" : 237
    }, {
      "local-name" : "Service",
      "name" : "go.elastic.co/apm/model.Service",
      "package" : 5,
      "type" : "Named",
      "underlying" : 239
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 30
      }, {
        "name" : "Version",
        "type" : 30
      }, {
        "name" : "Environment",
        "type" : 30
      }, {
        "name" : "Agent",
        "type" : 240
      }, {
        "name" : "Framework",
        "type" : 243
      }, {
        "name" : "Language",
        "type" : 245
      }, {
        "name" : "Runtime",
        "type" : 248
      }, {
        "name" : "Node",
        "type" : 250
      } ],
      "name" : "struct{Name string \"json:\\\"name,omitempty\\\"\"; Version string \"json:\\\"version,omitempty\\\"\"; Environment string \"json:\\\"environment,omitempty\\\"\"; Agent *go.elastic.co/apm/model.Agent \"json:\\\"agent,omitempty\\\"\"; Framework *go.elastic.co/apm/model.Framework \"json:\\\"framework,omitempty\\\"\"; Language *go.elastic.co/apm/model.Language \"json:\\\"language,omitempty\\\"\"; Runtime *go.elastic.co/apm/model.Runtime \"json:\\\"runtime,omitempty\\\"\"; Node *go.elastic.co/apm/model.ServiceNode \"json:\\\"node,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 239
    }, {
      "elem" : 241,
      "name" : "*go.elastic.co/apm/model.Agent",
      "type" : "Pointer",
      "underlying" : 240
    }, {
      "local-name" : "Agent",
      "name" : "go.elastic.co/apm/model.Agent",
      "package" : 5,
      "type" : "Named",
      "underlying" : 242
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 30
      }, {
        "name" : "Version",
        "type" : 30
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\"\"; Version string \"json:\\\"version\\\"\"}",
      "type" : "Struct",
      "underlying" : 242
    }, {
      "elem" : 244,
      "name" : "*go.elastic.co/apm/model.Framework",
      "type" : "Pointer",
      "underlying" : 243
    }, {
      "local-name" : "Framework",
      "name" : "go.elastic.co/apm/model.Framework",
      "package" : 5,
      "type" : "Named",
      "underlying" : 242
    }, {
      "elem" : 246,
      "name" : "*go.elastic.co/apm/model.Language",
      "type" : "Pointer",
      "underlying" : 245
    }, {
      "local-name" : "Language",
      "name" : "go.elastic.co/apm/model.Language",
      "package" : 5,
      "type" : "Named",
      "underlying" : 247
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 30
      }, {
        "name" : "Version",
        "type" : 30
      } ],
      "name" : "struct{Name string \"json:\\\"name\\\"\"; Version string \"json:\\\"version,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 247
    }, {
      "elem" : 249,
      "name" : "*go.elastic.co/apm/model.Runtime",
      "type" : "Pointer",
      "underlying" : 248
    }, {
      "local-name" : "Runtime",
      "name" : "go.elastic.co/apm/model.Runtime",
      "package" : 5,
      "type" : "Named",
      "underlying" : 242
    }, {
      "elem" : 251,
      "name" : "*go.elastic.co/apm/model.ServiceNode",
      "type" : "Pointer",
      "underlying" : 250
    }, {
      "local-name" : "ServiceNode",
      "name" : "go.elastic.co/apm/model.ServiceNode",
      "package" : 5,
      "type" : "Named",
      "underlying" : 252
    }, {
      "fields" : [ {
        "name" : "ConfiguredName",
        "type" : 30
      } ],
      "name" : "struct{ConfiguredName string \"json:\\\"configured_name,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 252
    }, {
      "fields" : [ {
        "name" : "Transaction",
        "type" : 254
      }, {
        "name" : "TransactionData",
        "type" : 259
      } ],
      "name" : "struct{*go.elastic.co/apm.Transaction; *go.elastic.co/apm.TransactionData}",
      "type" : "Struct",
      "underlying" : 253
    }, {
      "elem" : 255,
      "name" : "*go.elastic.co/apm.Transaction",
      "type" : "Pointer",
      "underlying" : 254
    }, {
      "local-name" : "Transaction",
      "name" : "go.elastic.co/apm.Transaction",
      "package" : 0,
      "type" : "Named",
      "underlying" : 256
    }, {
      "fields" : [ {
        "name" : "tracer",
        "type" : 41
      }, {
        "name" : "traceContext",
        "type" : 16
      }, {
        "name" : "mu",
        "type" : 257
      }, {
        "name" : "TransactionData",
        "type" : 259
      } ],
      "name" : "struct{tracer *go.elastic.co/apm.Tracer; traceContext go.elastic.co/apm.TraceContext; mu sync.RWMutex; *go.elastic.co/apm.TransactionData}",
      "type" : "Struct",
      "underlying" : 256
    }, {
      "local-name" : "RWMutex",
      "name" : "sync.RWMutex",
      "package" : 7,
      "type" : "Named",
      "underlying" : 258
    }, {
      "fields" : [ {
        "name" : "w",
        "type" : 137
      }, {
        "name" : "writerSem",
        "type" : 139
      }, {
        "name" : "readerSem",
        "type" : 139
      }, {
        "name" : "readerCount",
        "type" : 105
      }, {
        "name" : "readerWait",
        "type" : 105
      } ],
      "name" : "struct{w sync.Mutex; writerSem uint32; readerSem uint32; readerCount int32; readerWait int32}",
      "type" : "Struct",
      "underlying" : 258
    }, {
      "elem" : 260,
      "name" : "*go.elastic.co/apm.TransactionData",
      "type" : "Pointer",
      "underlying" : 259
    }, {
      "local-name" : "TransactionData",
      "name" : "go.elastic.co/apm.TransactionData",
      "package" : 0,
      "type" : "Named",
      "underlying" : 261
    }, {
      "fields" : [ {
        "name" : "Name",
        "type" : 30
      }, {
        "name" : "Type",
        "type" : 30
      }, {
        "name" : "Duration",
        "type" : 32
      }, {
        "name" : "Context",
        "type" : 199
      }, {
        "name" : "Result",
        "type" : 30
      }, {
        "name" : "maxSpans",
        "type" : 10
      }, {
        "name" : "spanFramesMinDuration",
        "type" : 32
      }, {
        "name" : "stackTraceLimit",
        "type" : 10
      }, {
        "name" : "breakdownMetricsEnabled",
        "type" : 11
      }, {
        "name" : "propagateLegacyHeader",
        "type" : 11
      }, {
        "name" : "timestamp",
        "type" : 52
      }, {
        "name" : "mu",
        "type" : 137
      }, {
        "name" : "spansCreated",
        "type" : 10
      }, {
        "name" : "spansDropped",
        "type" : 10
      }, {
        "name" : "childrenTimer",
        "type" : 262
      }, {
        "name" : "spanTimings",
        "type" : 264
      }, {
        "name" : "rand",
        "type" : 271
      }, {
        "name" : "parentSpan",
        "type" : 21
      } ],
      "name" : "struct{Name string; Type string; Duration time.Duration; Context go.elastic.co/apm.Context; Result string; maxSpans int; spanFramesMinDuration time.Duration; stackTraceLimit int; breakdownMetricsEnabled bool; propagateLegacyHeader bool; timestamp time.Time; mu sync.Mutex; spansCreated int; spansDropped int; childrenTimer go.elastic.co/apm.childrenTimer; spanTimings go.elastic.co/apm.spanTimingsMap; rand *math/rand.Rand; parentSpan go.elastic.co/apm.SpanID}",
      "type" : "Struct",
      "underlying" : 261
    }, {
      "local-name" : "childrenTimer",
      "name" : "go.elastic.co/apm.childrenTimer",
      "package" : 0,
      "type" : "Named",
      "underlying" : 263
    }, {
      "fields" : [ {
        "name" : "active",
        "type" : 10
      }, {
        "name" : "start",
        "type" : 52
      }, {
        "name" : "totalDuration",
        "type" : 32
      } ],
      "name" : "struct{active int; start time.Time; totalDuration time.Duration}",
      "type" : "Struct",
      "underlying" : 263
    }, {
      "local-name" : "spanTimingsMap",
      "name" : "go.elastic.co/apm.spanTimingsMap",
      "package" : 0,
      "type" : "Named",
      "underlying" : 265
    }, {
      "elem" : 266,
      "key" : 269,
      "name" : "map[go.elastic.co/apm.spanTimingsKey]go.elastic.co/apm.spanTiming",
      "type" : "Map",
      "underlying" : 265
    }, {
      "local-name" : "spanTiming",
      "name" : "go.elastic.co/apm.spanTiming",
      "package" : 0,
      "type" : "Named",
      "underlying" : 267
    }, {
      "fields" : [ {
        "name" : "duration",
        "type" : 33
      }, {
        "name" : "count",
        "type" : 268
      } ],
      "name" : "struct{duration int64; count uintptr}",
      "type" : "Struct",
      "underlying" : 267
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 268
    }, {
      "local-name" : "spanTimingsKey",
      "name" : "go.elastic.co/apm.spanTimingsKey",
      "package" : 0,
      "type" : "Named",
      "underlying" : 270
    }, {
      "fields" : [ {
        "name" : "spanType",
        "type" : 30
      }, {
        "name" : "spanSubtype",
        "type" : 30
      } ],
      "name" : "struct{spanType string; spanSubtype string}",
      "type" : "Struct",
      "underlying" : 270
    }, {
      "elem" : 272,
      "name" : "*math/rand.Rand",
      "type" : "Pointer",
      "underlying" : 271
    }, {
      "local-name" : "Rand",
      "name" : "math/rand.Rand",
      "package" : 12,
      "type" : "Named",
      "underlying" : 273
    }, {
      "fields" : [ {
        "name" : "src",
        "type" : 274
      }, {
        "name" : "s64",
        "type" : 280
      }, {
        "name" : "readVal",
        "type" : 33
      }, {
        "name" : "readPos",
        "type" : 284
      } ],
      "name" : "struct{src math/rand.Source; s64 math/rand.Source64; readVal int64; readPos int8}",
      "type" : "Struct",
      "underlying" : 273
    }, {
      "local-name" : "Source",
      "name" : "math/rand.Source",
      "package" : 12,
      "type" : "Named",
      "underlying" : 275
    }, {
      "methods" : [ {
        "name" : "Int63",
        "type" : 276
      }, {
        "name" : "Seed",
        "type" : 278
      } ],
      "name" : "interface{Int63() int64; Seed(seed int64)}",
      "type" : "Interface",
      "underlying" : 275
    }, {
      "name" : "func() int64",
      "params" : 38,
      "recv" : 12,
      "results" : 277,
      "type" : "Signature",
      "underlying" : 276,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 33
      } ],
      "name" : "(int64)",
      "type" : "Tuple",
      "underlying" : 277
    }, {
      "name" : "func(seed int64)",
      "params" : 279,
      "recv" : 13,
      "results" : 38,
      "type" : "Signature",
      "underlying" : 278,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "seed",
        "type" : 33
      } ],
      "name" : "(seed int64)",
      "type" : "Tuple",
      "underlying" : 279
    }, {
      "local-name" : "Source64",
      "name" : "math/rand.Source64",
      "package" : 12,
      "type" : "Named",
      "underlying" : 281
    }, {
      "methods" : [ {
        "name" : "Int63",
        "type" : 276
      }, {
        "name" : "Seed",
        "type" : 278
      }, {
        "name" : "Uint64",
        "type" : 282
      } ],
      "name" : "interface{Uint64() uint64; math/rand.Source}",
      "type" : "Interface",
      "underlying" : 281
    }, {
      "name" : "func() uint64",
      "params" : 38,
      "recv" : 14,
      "results" : 283,
      "type" : "Signature",
      "underlying" : 282,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 54
      } ],
      "name" : "(uint64)",
      "type" : "Tuple",
      "underlying" : 283
    }, {
      "name" : "int8",
      "type" : "Basic",
      "underlying" : 284
    }, {
      "fields" : [ {
        "name" : "Span",
        "type" : 286
      }, {
        "name" : "SpanData",
        "type" : 289
      } ],
      "name" : "struct{*go.elastic.co/apm.Span; *go.elastic.co/apm.SpanData}",
      "type" : "Struct",
      "underlying" : 285
    }, {
      "elem" : 287,
      "name" : "*go.elastic.co/apm.Span",
      "type" : "Pointer",
      "underlying" : 286
    }, {
      "local-name" : "Span",
      "name" : "go.elastic.co/apm.Span",
      "package" : 0,
      "type" : "Named",
      "underlying" : 288
    }, {
      "fields" : [ {
        "name" : "tracer",
        "type" : 41
      }, {
        "name" : "tx",
        "type" : 254
      }, {
        "name" : "parent",
        "type" : 286
      }, {
        "name" : "traceContext",
        "type" : 16
      }, {
        "name" : "transactionID",
        "type" : 21
      }, {
        "name" : "mu",
        "type" : 257
      }, {
        "name" : "SpanData",
        "type" : 289
      } ],
      "name" : "struct{tracer *go.elastic.co/apm.Tracer; tx *go.elastic.co/apm.Transaction; parent *go.elastic.co/apm.Span; traceContext go.elastic.co/apm.TraceContext; transactionID go.elastic.co/apm.SpanID; mu sync.RWMutex; *go.elastic.co/apm.SpanData}",
      "type" : "Struct",
      "underlying" : 288
    }, {
      "elem" : 290,
      "name" : "*go.elastic.co/apm.SpanData",
      "type" : "Pointer",
      "underlying" : 289
    }, {
      "local-name" : "SpanData",
      "name" : "go.elastic.co/apm.SpanData",
      "package" : 0,
      "type" : "Named",
      "underlying" : 291
    }, {
      "fields" : [ {
        "name" : "parentID",
        "type" : 21
      }, {
        "name" : "stackFramesMinDuration",
        "type" : 32
      }, {
        "name" : "stackTraceLimit",
        "type" : 10
      }, {
        "name" : "timestamp",
        "type" : 52
      }, {
        "name" : "childrenTimer",
        "type" : 262
      }, {
        "name" : "Name",
        "type" : 30
      }, {
        "name" : "Type",
        "type" : 30
      }, {
        "name" : "Subtype",
        "type" : 30
      }, {
        "name" : "Action",
        "type" : 30
      }, {
        "name" : "Duration",
        "type" : 32
      }, {
        "name" : "Context",
        "type" : 292
      }, {
        "name" : "stacktrace",
        "type" : 187
      } ],
      "name" : "struct{parentID go.elastic.co/apm.SpanID; stackFramesMinDuration time.Duration; stackTraceLimit int; timestamp time.Time; childrenTimer go.elastic.co/apm.childrenTimer; Name string; Type string; Subtype string; Action string; Duration time.Duration; Context go.elastic.co/apm.SpanContext; stacktrace []go.elastic.co/apm/stacktrace.Frame}",
      "type" : "Struct",
      "underlying" : 291
    }, {
      "local-name" : "SpanContext",
      "name" : "go.elastic.co/apm.SpanContext",
      "package" : 0,
      "type" : "Named",
      "underlying" : 293
    }, {
      "fields" : [ {
        "name" : "model",
        "type" : 294
      }, {
        "name" : "destination",
        "type" : 297
      }, {
        "name" : "destinationService",
        "type" : 300
      }, {
        "name" : "databaseRowsAffected",
        "type" : 33
      }, {
        "name" : "database",
        "type" : 303
      }, {
        "name" : "http",
        "type" : 307
      } ],
      "name" : "struct{model go.elastic.co/apm/model.SpanContext; destination go.elastic.co/apm/model.DestinationSpanContext; destinationService go.elastic.co/apm/model.DestinationServiceSpanContext; databaseRowsAffected int64; database go.elastic.co/apm/model.DatabaseSpanContext; http go.elastic.co/apm/model.HTTPSpanContext}",
      "type" : "Struct",
      "underlying" : 293
    }, {
      "local-name" : "SpanContext",
      "name" : "go.elastic.co/apm/model.SpanContext",
      "package" : 5,
      "type" : "Named",
      "underlying" : 295
    }, {
      "fields" : [ {
        "name" : "Destination",
        "type" : 296
      }, {
        "name" : "Database",
        "type" : 302
      }, {
        "name" : "HTTP",
        "type" : 306
      }, {
        "name" : "Tags",
        "type" : 203
      } ],
      "name" : "struct{Destination *go.elastic.co/apm/model.DestinationSpanContext \"json:\\\"destination,omitempty\\\"\"; Database *go.elastic.co/apm/model.DatabaseSpanContext \"json:\\\"db,omitempty\\\"\"; HTTP *go.elastic.co/apm/model.HTTPSpanContext \"json:\\\"http,omitempty\\\"\"; Tags go.elastic.co/apm/model.IfaceMap \"json:\\\"tags,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 295
    }, {
      "elem" : 297,
      "name" : "*go.elastic.co/apm/model.DestinationSpanContext",
      "type" : "Pointer",
      "underlying" : 296
    }, {
      "local-name" : "DestinationSpanContext",
      "name" : "go.elastic.co/apm/model.DestinationSpanContext",
      "package" : 5,
      "type" : "Named",
      "underlying" : 298
    }, {
      "fields" : [ {
        "name" : "Address",
        "type" : 30
      }, {
        "name" : "Port",
        "type" : 10
      }, {
        "name" : "Service",
        "type" : 299
      } ],
      "name" : "struct{Address string \"json:\\\"address,omitempty\\\"\"; Port int \"json:\\\"port,omitempty\\\"\"; Service *go.elastic.co/apm/model.DestinationServiceSpanContext \"json:\\\"service,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 298
    }, {
      "elem" : 300,
      "name" : "*go.elastic.co/apm/model.DestinationServiceSpanContext",
      "type" : "Pointer",
      "underlying" : 299
    }, {
      "local-name" : "DestinationServiceSpanContext",
      "name" : "go.elastic.co/apm/model.DestinationServiceSpanContext",
      "package" : 5,
      "type" : "Named",
      "underlying" : 301
    }, {
      "fields" : [ {
        "name" : "Type",
        "type" : 30
      }, {
        "name" : "Name",
        "type" : 30
      }, {
        "name" : "Resource",
        "type" : 30
      } ],
      "name" : "struct{Type string \"json:\\\"type,omitempty\\\"\"; Name string \"json:\\\"name,omitempty\\\"\"; Resource string \"json:\\\"resource,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 301
    }, {
      "elem" : 303,
      "name" : "*go.elastic.co/apm/model.DatabaseSpanContext",
      "type" : "Pointer",
      "underlying" : 302
    }, {
      "local-name" : "DatabaseSpanContext",
      "name" : "go.elastic.co/apm/model.DatabaseSpanContext",
      "package" : 5,
      "type" : "Named",
      "underlying" : 304
    }, {
      "fields" : [ {
        "name" : "Instance",
        "type" : 30
      }, {
        "name" : "Statement",
        "type" : 30
      }, {
        "name" : "RowsAffected",
        "type" : 305
      }, {
        "name" : "Type",
        "type" : 30
      }, {
        "name" : "User",
        "type" : 30
      } ],
      "name" : "struct{Instance string \"json:\\\"instance,omitempty\\\"\"; Statement string \"json:\\\"statement,omitempty\\\"\"; RowsAffected *int64 \"json:\\\"rows_affected,omitempty\\\"\"; Type string \"json:\\\"type,omitempty\\\"\"; User string \"json:\\\"user,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 304
    }, {
      "elem" : 33,
      "name" : "*int64",
      "type" : "Pointer",
      "underlying" : 305
    }, {
      "elem" : 307,
      "name" : "*go.elastic.co/apm/model.HTTPSpanContext",
      "type" : "Pointer",
      "underlying" : 306
    }, {
      "local-name" : "HTTPSpanContext",
      "name" : "go.elastic.co/apm/model.HTTPSpanContext",
      "package" : 5,
      "type" : "Named",
      "underlying" : 308
    }, {
      "fields" : [ {
        "name" : "URL",
        "type" : 309
      }, {
        "name" : "StatusCode",
        "type" : 10
      } ],
      "name" : "struct{URL *net/url.URL; StatusCode int \"json:\\\"status_code,omitempty\\\"\"}",
      "type" : "Struct",
      "underlying" : 308
    }, {
      "elem" : 310,
      "name" : "*net/url.URL",
      "type" : "Pointer",
      "underlying" : 309
    }, {
      "local-name" : "URL",
      "name" : "net/url.URL",
      "package" : 10,
      "type" : "Named",
      "underlying" : 311
    }, {
      "fields" : [ {
        "name" : "Scheme",
        "type" : 30
      }, {
        "name" : "Opaque",
        "type" : 30
      }, {
        "name" : "User",
        "type" : 312
      }, {
        "name" : "Host",
        "type" : 30
      }, {
        "name" : "Path",
        "type" : 30
      }, {
        "name" : "RawPath",
        "type" : 30
      }, {
        "name" : "ForceQuery",
        "type" : 11
      }, {
        "name" : "RawQuery",
        "type" : 30
      }, {
        "name" : "Fragment",
        "type" : 30
      } ],
      "name" : "struct{Scheme string; Opaque string; User *net/url.Userinfo; Host string; Path string; RawPath string; ForceQuery bool; RawQuery string; Fragment string}",
      "type" : "Struct",
      "underlying" : 311
    }, {
      "elem" : 313,
      "name" : "*net/url.Userinfo",
      "type" : "Pointer",
      "underlying" : 312
    }, {
      "local-name" : "Userinfo",
      "name" : "net/url.Userinfo",
      "package" : 10,
      "type" : "Named",
      "underlying" : 314
    }, {
      "fields" : [ {
        "name" : "username",
        "type" : 30
      }, {
        "name" : "password",
        "type" : 30
      }, {
        "name" : "passwordSet",
        "type" : 11
      } ],
      "name" : "struct{username string; password string; passwordSet bool}",
      "type" : "Struct",
      "underlying" : 314
    }, {
      "elem" : 316,
      "name" : "*go.elastic.co/apm.breakdownMetrics",
      "type" : "Pointer",
      "underlying" : 315
    }, {
      "local-name" : "breakdownMetrics",
      "name" : "go.elastic.co/apm.breakdownMetrics",
      "package" : 0,
      "type" : "Named",
      "underlying" : 317
    }, {
      "fields" : [ {
        "name" : "enabled",
        "type" : 11
      }, {
        "name" : "mu",
        "type" : 257
      }, {
        "name" : "active",
        "type" : 318
      }, {
        "name" : "inactive",
        "type" : 318
      } ],
      "name" : "struct{enabled bool; mu sync.RWMutex; active *go.elastic.co/apm.breakdownMetricsMap; inactive *go.elastic.co/apm.breakdownMetricsMap}",
      "type" : "Struct",
      "underlying" : 317
    }, {
      "elem" : 319,
      "name" : "*go.elastic.co/apm.breakdownMetricsMap",
      "type" : "Pointer",
      "underlying" : 318
    }, {
      "local-name" : "breakdownMetricsMap",
      "name" : "go.elastic.co/apm.breakdownMetricsMap",
      "package" : 0,
      "type" : "Named",
      "underlying" : 320
    }, {
      "fields" : [ {
        "name" : "mu",
        "type" : 257
      }, {
        "name" : "entries",
        "type" : 10
      }, {
        "name" : "m",
        "type" : 321
      }, {
        "name" : "space",
        "type" : 333
      } ],
      "name" : "struct{mu sync.RWMutex; entries int; m map[uint64][]*go.elastic.co/apm.breakdownMetricsMapEntry; space []go.elastic.co/apm.breakdownMetricsMapEntry}",
      "type" : "Struct",
      "underlying" : 320
    }, {
      "elem" : 322,
      "key" : 54,
      "name" : "map[uint64][]*go.elastic.co/apm.breakdownMetricsMapEntry",
      "type" : "Map",
      "underlying" : 321
    }, {
      "elem" : 323,
      "name" : "[]*go.elastic.co/apm.breakdownMetricsMapEntry",
      "type" : "Slice",
      "underlying" : 322
    }, {
      "elem" : 324,
      "name" : "*go.elastic.co/apm.breakdownMetricsMapEntry",
      "type" : "Pointer",
      "underlying" : 323
    }, {
      "local-name" : "breakdownMetricsMapEntry",
      "name" : "go.elastic.co/apm.breakdownMetricsMapEntry",
      "package" : 0,
      "type" : "Named",
      "underlying" : 325
    }, {
      "fields" : [ {
        "name" : "breakdownTiming",
        "type" : 326
      }, {
        "name" : "breakdownMetricsKey",
        "type" : 331
      } ],
      "name" : "struct{go.elastic.co/apm.breakdownTiming; go.elastic.co/apm.breakdownMetricsKey}",
      "type" : "Struct",
      "underlying" : 325
    }, {
      "local-name" : "breakdownTiming",
      "name" : "go.elastic.co/apm.breakdownTiming",
      "package" : 0,
      "type" : "Named",
      "underlying" : 327
    }, {
      "fields" : [ {
        "name" : "transaction",
        "type" : 266
      }, {
        "name" : "_",
        "type" : 328
      }, {
        "name" : "span",
        "type" : 266
      }, {
        "name" : "breakdownCount",
        "type" : 268
      } ],
      "name" : "struct{transaction go.elastic.co/apm.spanTiming; _ go.elastic.co/apm.pad32; span go.elastic.co/apm.spanTiming; breakdownCount uintptr}",
      "type" : "Struct",
      "underlying" : 327
    }, {
      "local-name" : "pad32",
      "name" : "go.elastic.co/apm.pad32",
      "package" : 0,
      "type" : "Named",
      "underlying" : 329
    }, {
      "fields" : [ {
        "name" : "_",
        "type" : 330
      } ],
      "name" : "struct{_ [0]uintptr}",
      "type" : "Struct",
      "underlying" : 329
    }, {
      "elem" : 268,
      "name" : "[0]uintptr",
      "type" : "Array",
      "underlying" : 330
    }, {
      "local-name" : "breakdownMetricsKey",
      "name" : "go.elastic.co/apm.breakdownMetricsKey",
      "package" : 0,
      "type" : "Named",
      "underlying" : 332
    }, {
      "fields" : [ {
        "name" : "transactionType",
        "type" : 30
      }, {
        "name" : "transactionName",
        "type" : 30
      }, {
        "name" : "spanTimingsKey",
        "type" : 269
      } ],
      "name" : "struct{transactionType string; transactionName string; go.elastic.co/apm.spanTimingsKey}",
      "type" : "Struct",
      "underlying" : 332
    }, {
      "elem" : 324,
      "name" : "[]go.elastic.co/apm.breakdownMetricsMapEntry",
      "type" : "Slice",
      "underlying" : 333
    }, {
      "local-name" : "profileSender",
      "name" : "go.elastic.co/apm.profileSender",
      "package" : 0,
      "type" : "Named",
      "underlying" : 335
    }, {
      "methods" : [ {
        "name" : "SendProfile",
        "type" : 336
      } ],
      "name" : "interface{SendProfile(ctx context.Context, metadata io.Reader, profile ...io.Reader) error}",
      "type" : "Interface",
      "underlying" : 335
    }, {
      "name" : "func(ctx context.Context, metadata io.Reader, profile ...io.Reader) error",
      "params" : 337,
      "recv" : 15,
      "results" : 69,
      "type" : "Signature",
      "underlying" : 336,
      "variadic" : true
    }, {
      "fields" : [ {
        "name" : "ctx",
        "type" : 48
      }, {
        "name" : "metadata",
        "type" : 78
      }, {
        "name" : "profile",
        "type" : 338
      } ],
      "name" : "(ctx context.Context, metadata io.Reader, profile []io.Reader)",
      "type" : "Tuple",
      "underlying" : 337
    }, {
      "elem" : 78,
      "name" : "[]io.Reader",
      "type" : "Slice",
      "underlying" : 338
    }, {
      "local-name" : "TracerStats",
      "name" : "go.elastic.co/apm.TracerStats",
      "package" : 0,
      "type" : "Named",
      "underlying" : 340
    }, {
      "fields" : [ {
        "name" : "Errors",
        "type" : 341
      }, {
        "name" : "ErrorsSent",
        "type" : 54
      }, {
        "name" : "ErrorsDropped",
        "type" : 54
      }, {
        "name" : "TransactionsSent",
        "type" : 54
      }, {
        "name" : "TransactionsDropped",
        "type" : 54
      }, {
        "name" : "SpansSent",
        "type" : 54
      }, {
        "name" : "SpansDropped",
        "type" : 54
      } ],
      "name" : "struct{Errors go.elastic.co/apm.TracerStatsErrors; ErrorsSent uint64; ErrorsDropped uint64; TransactionsSent uint64; TransactionsDropped uint64; SpansSent uint64; SpansDropped uint64}",
      "type" : "Struct",
      "underlying" : 340
    }, {
      "local-name" : "TracerStatsErrors",
      "name" : "go.elastic.co/apm.TracerStatsErrors",
      "package" : 0,
      "type" : "Named",
      "underlying" : 342
    }, {
      "fields" : [ {
        "name" : "SetContext",
        "type" : 54
      }, {
        "name" : "SendStream",
        "type" : 54
      } ],
      "name" : "struct{SetContext uint64; SendStream uint64}",
      "type" : "Struct",
      "underlying" : 342
    }, {
      "local-name" : "Pool",
      "name" : "sync.Pool",
      "package" : 7,
      "type" : "Named",
      "underlying" : 344
    }, {
      "fields" : [ {
        "name" : "noCopy",
        "type" : 345
      }, {
        "name" : "local",
        "type" : 346
      }, {
        "name" : "localSize",
        "type" : 268
      }, {
        "name" : "victim",
        "type" : 346
      }, {
        "name" : "victimSize",
        "type" : 268
      }, {
        "name" : "New",
        "type" : 347
      } ],
      "name" : "struct{noCopy sync.noCopy; local unsafe.Pointer; localSize uintptr; victim unsafe.Pointer; victimSize uintptr; New func() interface{}}",
      "type" : "Struct",
      "underlying" : 344
    }, {
      "local-name" : "noCopy",
      "name" : "sync.noCopy",
      "package" : 7,
      "type" : "Named",
      "underlying" : 40
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 13,
      "type" : "Basic",
      "underlying" : 346
    }, {
      "name" : "func() interface{}",
      "params" : 38,
      "recv" : -1,
      "results" : 77,
      "type" : "Signature",
      "underlying" : 347,
      "variadic" : false
    }, {
      "name" : "func() *go.elastic.co/apm.instrumentationConfig",
      "params" : 38,
      "recv" : -1,
      "results" : 349,
      "type" : "Signature",
      "underlying" : 348,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 4
      } ],
      "name" : "(*go.elastic.co/apm.instrumentationConfig)",
      "type" : "Tuple",
      "underlying" : 349
    }, {
      "name" : "func(addr *unsafe.Pointer, old unsafe.Pointer, new unsafe.Pointer) (swapped bool)",
      "params" : 351,
      "recv" : -1,
      "results" : 353,
      "type" : "Signature",
      "underlying" : 350,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "addr",
        "type" : 352
      }, {
        "name" : "old",
        "type" : 346
      }, {
        "name" : "new",
        "type" : 346
      } ],
      "name" : "(addr *unsafe.Pointer, old unsafe.Pointer, new unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 351
    }, {
      "elem" : 346,
      "name" : "*unsafe.Pointer",
      "type" : "Pointer",
      "underlying" : 352
    }, {
      "fields" : [ {
        "name" : "swapped",
        "type" : 11
      } ],
      "name" : "(swapped bool)",
      "type" : "Tuple",
      "underlying" : 353
    }, {
      "elem" : 4,
      "name" : "**go.elastic.co/apm.instrumentationConfig",
      "type" : "Pointer",
      "underlying" : 354
    } ],
    "variables" : [ {
      "name" : "",
      "package" : 0,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 3,
      "type" : 48,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 3,
      "type" : 48,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : -1,
      "type" : 70,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 3,
      "type" : 48,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 3,
      "type" : 48,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 4,
      "type" : 78,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 2,
      "type" : 44,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 121,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 124,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 8,
      "type" : 157,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 9,
      "type" : 166,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 12,
      "type" : 274,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 12,
      "type" : 274,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 12,
      "type" : 280,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 334,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "t",
      "package" : 0,
      "type" : 41,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "f",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "oldConfig",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "newConfig",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "instrumentationConfigInternal",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}