{
  "usage" : {
    "file" : "ring.go",
    "label1" : "delegate",
    "label2" : "atomic",
    "line" : "107",
    "module" : "github.com/cilium/cilium",
    "pkg" : "github.com/cilium/cilium/pkg/hubble/container",
    "project" : "cilium/cilium",
    "snippet" : "slot := unsafe.Pointer(&r.data[dataIdx])",
    "version" : "project"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 2, 0, 1 ],
      "exit" : false,
      "out-vars" : [ 2, 0, 1 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 2, 0, 1 ],
      "exit" : false,
      "out-vars" : [ 4, 2 ],
      "decl-vars" : [ 4 ],
      "line-start" : 107,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "slot"
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 29,
            "kind" : "type",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 5,
              "value" : "unsafe"
            },
            "type" : "identifier",
            "value" : {
              "go-type" : 29,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "Pointer"
            }
          },
          "go-type" : 29,
          "kind" : "expression",
          "target" : {
            "go-type" : 30,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "go-type" : 3,
              "index" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "dataIdx",
                  "variable" : 1
                }
              },
              "kind" : "expression",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "data",
                  "variable" : 3
                },
                "go-type" : 20,
                "kind" : "expression",
                "target" : {
                  "go-type" : 16,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "r",
                    "variable" : 0
                  }
                },
                "type" : "selector"
              },
              "type" : "index"
            },
            "type" : "unary"
          },
          "type" : "cast"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 107,
      "code" : "slot := unsafe.Pointer(&r.data[dataIdx])",
      "entry" : false,
      "use-vars" : [ 1, 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 4, 2 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 108,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "contained" : {
                "go-type" : 29,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 5,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 29,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 33,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 33,
            "kind" : "expression",
            "target" : {
              "go-type" : 29,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "slot",
                "variable" : 4
              }
            },
            "type" : "cast"
          }, {
            "coerced-to" : {
              "go-type" : 29,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 5,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 29,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 29,
            "kind" : "expression",
            "target" : {
              "go-type" : 3,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "e",
                "variable" : 2
              }
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 31,
            "kind" : "expression",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 6,
              "value" : "atomic"
            },
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "StorePointer"
            }
          },
          "go-type" : 15,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 108,
      "code" : "atomic.StorePointer((*unsafe.Pointer)(slot), unsafe.Pointer(e))",
      "entry" : false,
      "use-vars" : [ 2, 4 ]
    } ],
    "code" : "// dataLoadAtomic performs an atomic store as `r.data[dataIdx] = e`.\n// `dataIdx` is the array index with the cycle counter already masked out.\n// This ensures that the point load/store itself is a data race.\nfunc (r *Ring) dataStoreAtomic(dataIdx uint64, e *v1.Event) {\n\tslot := unsafe.Pointer(&r.data[dataIdx])\n\tatomic.StorePointer((*unsafe.Pointer)(slot), unsafe.Pointer(e))\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "dataStoreAtomic",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "StorePointer",
      "package" : 6,
      "type" : 31,
      "exported" : true
    } ],
    "line-end" : 109,
    "line-start" : 106,
    "names" : [ "dataStoreAtomic" ],
    "package" : 0,
    "packages" : [ {
      "name" : "container",
      "path" : "github.com/cilium/cilium/pkg/hubble/container"
    }, {
      "name" : "v1",
      "path" : "github.com/cilium/cilium/pkg/hubble/api/v1"
    }, {
      "name" : "timestamp",
      "path" : "github.com/golang/protobuf/ptypes/timestamp"
    }, {
      "name" : "lock",
      "path" : "github.com/cilium/cilium/pkg/lock"
    }, {
      "name" : "sync",
      "path" : "sync"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "atomic",
      "path" : "sync/atomic"
    } ],
    "params" : [ 1, 2 ],
    "receivers" : [ 0 ],
    "results" : [ ],
    "type" : "function",
    "types" : [ {
      "name" : "func(dataIdx uint64, e *github.com/cilium/cilium/pkg/hubble/api/v1.Event)",
      "params" : 1,
      "recv" : 0,
      "results" : 15,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "dataIdx",
        "type" : 2
      }, {
        "name" : "e",
        "type" : 3
      } ],
      "name" : "(dataIdx uint64, e *github.com/cilium/cilium/pkg/hubble/api/v1.Event)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 2
    }, {
      "elem" : 4,
      "name" : "*github.com/cilium/cilium/pkg/hubble/api/v1.Event",
      "type" : "Pointer",
      "underlying" : 3
    }, {
      "local-name" : "Event",
      "name" : "github.com/cilium/cilium/pkg/hubble/api/v1.Event",
      "package" : 1,
      "type" : "Named",
      "underlying" : 5
    }, {
      "fields" : [ {
        "name" : "Timestamp",
        "type" : 6
      }, {
        "name" : "Event",
        "type" : 14
      } ],
      "name" : "struct{Timestamp *github.com/golang/protobuf/ptypes/timestamp.Timestamp; Event interface{}}",
      "type" : "Struct",
      "underlying" : 5
    }, {
      "elem" : 7,
      "name" : "*github.com/golang/protobuf/ptypes/timestamp.Timestamp",
      "type" : "Pointer",
      "underlying" : 6
    }, {
      "local-name" : "Timestamp",
      "name" : "github.com/golang/protobuf/ptypes/timestamp.Timestamp",
      "package" : 2,
      "type" : "Named",
      "underlying" : 8
    }, {
      "fields" : [ {
        "name" : "Seconds",
        "type" : 9
      }, {
        "name" : "Nanos",
        "type" : 10
      }, {
        "name" : "XXX_NoUnkeyedLiteral",
        "type" : 11
      }, {
        "name" : "XXX_unrecognized",
        "type" : 12
      }, {
        "name" : "XXX_sizecache",
        "type" : 10
      } ],
      "name" : "struct{Seconds int64 \"protobuf:\\\"varint,1,opt,name=seconds,proto3\\\" json:\\\"seconds,omitempty\\\"\"; Nanos int32 \"protobuf:\\\"varint,2,opt,name=nanos,proto3\\\" json:\\\"nanos,omitempty\\\"\"; XXX_NoUnkeyedLiteral struct{} \"json:\\\"-\\\"\"; XXX_unrecognized []byte \"json:\\\"-\\\"\"; XXX_sizecache int32 \"json:\\\"-\\\"\"}",
      "type" : "Struct",
      "underlying" : 8
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 9
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 10
    }, {
      "fields" : [ ],
      "name" : "struct{}",
      "type" : "Struct",
      "underlying" : 11
    }, {
      "elem" : 13,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 12
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 14
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 15
    }, {
      "elem" : 17,
      "name" : "*github.com/cilium/cilium/pkg/hubble/container.Ring",
      "type" : "Pointer",
      "underlying" : 16
    }, {
      "local-name" : "Ring",
      "name" : "github.com/cilium/cilium/pkg/hubble/container.Ring",
      "package" : 0,
      "type" : "Named",
      "underlying" : 18
    }, {
      "fields" : [ {
        "name" : "mask",
        "type" : 2
      }, {
        "name" : "write",
        "type" : 2
      }, {
        "name" : "cycleExp",
        "type" : 19
      }, {
        "name" : "cycleMask",
        "type" : 2
      }, {
        "name" : "halfCycle",
        "type" : 2
      }, {
        "name" : "dataLen",
        "type" : 2
      }, {
        "name" : "data",
        "type" : 20
      }, {
        "name" : "notifyMu",
        "type" : 21
      }, {
        "name" : "notifyCh",
        "type" : 28
      } ],
      "name" : "struct{mask uint64; write uint64; cycleExp uint8; cycleMask uint64; halfCycle uint64; dataLen uint64; data []*github.com/cilium/cilium/pkg/hubble/api/v1.Event; notifyMu github.com/cilium/cilium/pkg/lock.Mutex; notifyCh chan struct{}}",
      "type" : "Struct",
      "underlying" : 18
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 19
    }, {
      "elem" : 3,
      "name" : "[]*github.com/cilium/cilium/pkg/hubble/api/v1.Event",
      "type" : "Slice",
      "underlying" : 20
    }, {
      "local-name" : "Mutex",
      "name" : "github.com/cilium/cilium/pkg/lock.Mutex",
      "package" : 3,
      "type" : "Named",
      "underlying" : 22
    }, {
      "fields" : [ {
        "name" : "internalMutex",
        "type" : 23
      } ],
      "name" : "struct{github.com/cilium/cilium/pkg/lock.internalMutex}",
      "type" : "Struct",
      "underlying" : 22
    }, {
      "local-name" : "internalMutex",
      "name" : "github.com/cilium/cilium/pkg/lock.internalMutex",
      "package" : 3,
      "type" : "Named",
      "underlying" : 24
    }, {
      "fields" : [ {
        "name" : "Mutex",
        "type" : 25
      } ],
      "name" : "struct{sync.Mutex}",
      "type" : "Struct",
      "underlying" : 24
    }, {
      "local-name" : "Mutex",
      "name" : "sync.Mutex",
      "package" : 4,
      "type" : "Named",
      "underlying" : 26
    }, {
      "fields" : [ {
        "name" : "state",
        "type" : 10
      }, {
        "name" : "sema",
        "type" : 27
      } ],
      "name" : "struct{state int32; sema uint32}",
      "type" : "Struct",
      "underlying" : 26
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 27
    }, {
      "dir" : "both",
      "elem" : 11,
      "name" : "chan struct{}",
      "type" : "Chan",
      "underlying" : 28
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 5,
      "type" : "Basic",
      "underlying" : 29
    }, {
      "elem" : 3,
      "name" : "**github.com/cilium/cilium/pkg/hubble/api/v1.Event",
      "type" : "Pointer",
      "underlying" : 30
    }, {
      "name" : "func(addr *unsafe.Pointer, val unsafe.Pointer)",
      "params" : 32,
      "recv" : -1,
      "results" : 15,
      "type" : "Signature",
      "underlying" : 31,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "addr",
        "type" : 33
      }, {
        "name" : "val",
        "type" : 29
      } ],
      "name" : "(addr *unsafe.Pointer, val unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 32
    }, {
      "elem" : 29,
      "name" : "*unsafe.Pointer",
      "type" : "Pointer",
      "underlying" : 33
    } ],
    "variables" : [ {
      "name" : "r",
      "package" : 0,
      "type" : 16,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "dataIdx",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "e",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "data",
      "package" : 0,
      "type" : 20,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "slot",
      "package" : 0,
      "type" : 29,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}