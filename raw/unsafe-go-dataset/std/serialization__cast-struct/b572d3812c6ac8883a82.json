{
  "usage" : {
    "file" : "sockcmsg_unix.go",
    "label1" : "cast-struct",
    "label2" : "serialization",
    "line" : "67",
    "module" : "std",
    "pkg" : "syscall",
    "project" : "kubernetes/kubernetes",
    "snippet" : "h := (*Cmsghdr)(unsafe.Pointer(&b[0]))",
    "version" : "std"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 2, 0 ],
      "decl-vars" : [ 2 ],
      "line-start" : 65,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "datalen"
          }
        } ],
        "right" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "left" : {
            "arguments" : [ {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "fds",
                "variable" : 0
              }
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 7,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Builtin",
                "kind" : "ident",
                "value" : "len"
              }
            },
            "go-type" : 3,
            "kind" : "expression",
            "type" : "call"
          },
          "operator" : "*",
          "right" : {
            "go-type" : 3,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "4"
            }
          },
          "type" : "binary"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 65,
      "code" : "datalen := len(fds) * 4",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4 ],
      "in-vars" : [ 0, 2 ],
      "exit" : false,
      "out-vars" : [ 2, 0, 3 ],
      "decl-vars" : [ 3 ],
      "line-start" : 66,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "b"
          }
        } ],
        "right" : [ {
          "argument" : {
            "element" : {
              "go-type" : 6,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 6,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "byte"
              }
            },
            "go-type" : 5,
            "kind" : "type",
            "type" : "slice"
          },
          "go-type" : 5,
          "kind" : "expression",
          "rest" : [ {
            "arguments" : [ {
              "go-type" : 3,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "datalen",
                "variable" : 2
              }
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 10,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "CmsgSpace"
              }
            },
            "go-type" : 3,
            "kind" : "expression",
            "type" : "call"
          } ],
          "type" : "make"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 66,
      "code" : "b := make([]byte, CmsgSpace(datalen))",
      "entry" : false,
      "use-vars" : [ 2 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5 ],
      "in-vars" : [ 3, 2, 0 ],
      "exit" : false,
      "out-vars" : [ 3, 2, 4, 0 ],
      "decl-vars" : [ 4 ],
      "line-start" : 67,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "h"
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 13,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 13,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Cmsghdr"
              }
            },
            "go-type" : 12,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 12,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 17,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 1,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 17,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 17,
            "kind" : "expression",
            "target" : {
              "go-type" : 18,
              "kind" : "expression",
              "operator" : "&",
              "target" : {
                "go-type" : 6,
                "index" : {
                  "go-type" : 3,
                  "kind" : "constant",
                  "value" : {
                    "type" : "INT",
                    "value" : "0"
                  }
                },
                "kind" : "expression",
                "target" : {
                  "go-type" : 5,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "b",
                    "variable" : 3
                  }
                },
                "type" : "index"
              },
              "type" : "unary"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 67,
      "code" : "h := (*Cmsghdr)(unsafe.Pointer(&b[0]))",
      "entry" : false,
      "use-vars" : [ 3 ]
    }, {
      "update-vars" : [ 4 ],
      "successors" : [ 6 ],
      "in-vars" : [ 3, 2, 4, 0 ],
      "exit" : false,
      "out-vars" : [ 2, 4, 0, 3 ],
      "decl-vars" : [ ],
      "line-start" : 68,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Level",
            "variable" : 5
          },
          "go-type" : 16,
          "kind" : "expression",
          "target" : {
            "go-type" : 12,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "h",
              "variable" : 4
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 16,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "1"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 68,
      "code" : "h.Level = SOL_SOCKET",
      "entry" : false,
      "use-vars" : [ 4 ]
    }, {
      "update-vars" : [ 4 ],
      "successors" : [ 7 ],
      "in-vars" : [ 2, 4, 0, 3 ],
      "exit" : false,
      "out-vars" : [ 4, 0, 3, 2 ],
      "decl-vars" : [ ],
      "line-start" : 69,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Type",
            "variable" : 6
          },
          "go-type" : 16,
          "kind" : "expression",
          "target" : {
            "go-type" : 12,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "h",
              "variable" : 4
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 16,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "1"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 69,
      "code" : "h.Type = SCM_RIGHTS",
      "entry" : false,
      "use-vars" : [ 4 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 8 ],
      "in-vars" : [ 3, 2, 4, 0 ],
      "exit" : false,
      "out-vars" : [ 3, 0 ],
      "decl-vars" : [ ],
      "line-start" : 70,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "arguments" : [ {
              "go-type" : 3,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "datalen",
                "variable" : 2
              }
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 10,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "CmsgLen"
              }
            },
            "go-type" : 3,
            "kind" : "expression",
            "type" : "call"
          } ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "SetLen"
            },
            "go-type" : 20,
            "kind" : "expression",
            "target" : {
              "go-type" : 12,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "h",
                "variable" : 4
              }
            },
            "type" : "selector"
          },
          "go-type" : 19,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 70,
      "code" : "h.SetLen(CmsgLen(datalen))",
      "entry" : false,
      "use-vars" : [ 4, 2 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 9, 10 ],
      "in-vars" : [ 3, 0 ],
      "exit" : false,
      "out-vars" : [ 3, 8, 0 ],
      "decl-vars" : [ 8, 7 ],
      "line-start" : 71,
      "ast" : {
        "is-assign" : false,
        "key" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "i"
          }
        },
        "kind" : "statement",
        "target" : {
          "go-type" : 2,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "fds",
            "variable" : 0
          }
        },
        "type" : "range",
        "value" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "fd"
          }
        }
      },
      "assign-vars" : [ ],
      "line-end" : 73,
      "code" : "for i, fd := range fds {\n\t*(*int32)(h.data(4 * uintptr(i))) = int32(fd)\n}",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 8 ],
      "in-vars" : [ 3, 8, 0 ],
      "exit" : false,
      "out-vars" : [ 3, 0 ],
      "decl-vars" : [ ],
      "line-start" : 72,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 16,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "contained" : {
                "go-type" : 16,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 16,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "int32"
                }
              },
              "go-type" : 22,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 22,
            "kind" : "expression",
            "target" : {
              "arguments" : [ {
                "go-type" : 25,
                "kind" : "expression",
                "left" : {
                  "go-type" : 25,
                  "kind" : "constant",
                  "value" : {
                    "type" : "INT",
                    "value" : "4"
                  }
                },
                "operator" : "*",
                "right" : {
                  "coerced-to" : {
                    "go-type" : 25,
                    "kind" : "type",
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 25,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "uintptr"
                    }
                  },
                  "go-type" : 25,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 3,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "i",
                      "variable" : 7
                    }
                  },
                  "type" : "cast"
                },
                "type" : "binary"
              } ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "data"
                },
                "go-type" : 23,
                "kind" : "expression",
                "target" : {
                  "go-type" : 12,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "h",
                    "variable" : 4
                  }
                },
                "type" : "selector"
              },
              "go-type" : 17,
              "kind" : "expression",
              "type" : "call"
            },
            "type" : "cast"
          },
          "type" : "star"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 16,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 16,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "int32"
            }
          },
          "go-type" : 16,
          "kind" : "expression",
          "target" : {
            "go-type" : 3,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "fd",
              "variable" : 8
            }
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 72,
      "code" : "*(*int32)(h.data(4 * uintptr(i))) = int32(fd)",
      "entry" : false,
      "use-vars" : [ 8 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 3 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 74,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 5,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "b",
            "variable" : 3
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 74,
      "code" : "return b",
      "entry" : false,
      "use-vars" : [ 3 ]
    } ],
    "code" : "// UnixRights encodes a set of open file descriptors into a socket\n// control message for sending to another process.\nfunc UnixRights(fds ...int) []byte {\n\tdatalen := len(fds) * 4\n\tb := make([]byte, CmsgSpace(datalen))\n\th := (*Cmsghdr)(unsafe.Pointer(&b[0]))\n\th.Level = SOL_SOCKET\n\th.Type = SCM_RIGHTS\n\th.SetLen(CmsgLen(datalen))\n\tfor i, fd := range fds {\n\t\t*(*int32)(h.data(4 * uintptr(i))) = int32(fd)\n\t}\n\treturn b\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "UnixRights",
      "package" : 0,
      "type" : 0,
      "exported" : true
    }, {
      "name" : "CmsgSpace",
      "package" : 0,
      "type" : 10,
      "exported" : true
    }, {
      "name" : "SetLen",
      "package" : 0,
      "type" : 20,
      "exported" : true
    }, {
      "name" : "CmsgLen",
      "package" : 0,
      "type" : 10,
      "exported" : true
    }, {
      "name" : "data",
      "package" : 0,
      "type" : 23,
      "exported" : false
    } ],
    "line-end" : 75,
    "line-start" : 64,
    "names" : [ "UnixRights" ],
    "package" : 0,
    "packages" : [ {
      "name" : "syscall",
      "path" : "syscall"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 0 ],
    "receivers" : [ ],
    "results" : [ 1 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(fds ...int) []byte",
      "params" : 1,
      "recv" : -1,
      "results" : 4,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : true
    }, {
      "fields" : [ {
        "name" : "fds",
        "type" : 2
      } ],
      "name" : "(fds []int)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "[]int",
      "type" : "Slice",
      "underlying" : 2
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 3
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 5
      } ],
      "name" : "([]byte)",
      "type" : "Tuple",
      "underlying" : 4
    }, {
      "elem" : 6,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 5
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 6
    }, {
      "name" : "func([]int) int",
      "params" : 8,
      "recv" : -1,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 7,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 2
      } ],
      "name" : "([]int)",
      "type" : "Tuple",
      "underlying" : 8
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 3
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 9
    }, {
      "name" : "func(datalen int) int",
      "params" : 11,
      "recv" : -1,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 10,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "datalen",
        "type" : 3
      } ],
      "name" : "(datalen int)",
      "type" : "Tuple",
      "underlying" : 11
    }, {
      "elem" : 13,
      "name" : "*syscall.Cmsghdr",
      "type" : "Pointer",
      "underlying" : 12
    }, {
      "local-name" : "Cmsghdr",
      "name" : "syscall.Cmsghdr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 14
    }, {
      "fields" : [ {
        "name" : "Len",
        "type" : 15
      }, {
        "name" : "Level",
        "type" : 16
      }, {
        "name" : "Type",
        "type" : 16
      } ],
      "name" : "struct{Len uint64; Level int32; Type int32}",
      "type" : "Struct",
      "underlying" : 14
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 15
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 16
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 17
    }, {
      "elem" : 6,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 18
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 19
    }, {
      "name" : "func(length int)",
      "params" : 21,
      "recv" : -1,
      "results" : 19,
      "type" : "Signature",
      "underlying" : 20,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "length",
        "type" : 3
      } ],
      "name" : "(length int)",
      "type" : "Tuple",
      "underlying" : 21
    }, {
      "elem" : 16,
      "name" : "*int32",
      "type" : "Pointer",
      "underlying" : 22
    }, {
      "name" : "func(offset uintptr) unsafe.Pointer",
      "params" : 24,
      "recv" : -1,
      "results" : 26,
      "type" : "Signature",
      "underlying" : 23,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "offset",
        "type" : 25
      } ],
      "name" : "(offset uintptr)",
      "type" : "Tuple",
      "underlying" : 24
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 25
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 17
      } ],
      "name" : "(unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 26
    } ],
    "variables" : [ {
      "name" : "fds",
      "package" : 0,
      "type" : 2,
      "exported" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "datalen",
      "package" : 0,
      "type" : 3,
      "exported" : false
    }, {
      "name" : "b",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "h",
      "package" : 0,
      "type" : 12,
      "exported" : false
    }, {
      "name" : "Level",
      "package" : 0,
      "type" : 16,
      "exported" : true
    }, {
      "name" : "Type",
      "package" : 0,
      "type" : 16,
      "exported" : true
    }, {
      "name" : "i",
      "package" : 0,
      "type" : 3,
      "exported" : false
    }, {
      "name" : "fd",
      "package" : 0,
      "type" : 3,
      "exported" : false
    } ]
  },
  "go-version" : "1.14.3"
}