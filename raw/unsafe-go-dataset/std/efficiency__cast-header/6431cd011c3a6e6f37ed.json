{
  "usage" : {
    "file" : "type.go",
    "label1" : "cast-header",
    "label2" : "efficiency",
    "line" : "475",
    "module" : "std",
    "pkg" : "runtime",
    "project" : "kubernetes/kubernetes",
    "snippet" : "hdr := (*stringStruct)(unsafe.Pointer(&s))",
    "version" : "std"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 0, 1 ],
      "exit" : false,
      "out-vars" : [ 0, 1 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3, 4 ],
      "in-vars" : [ 0, 1 ],
      "exit" : false,
      "out-vars" : [ 1, 0 ],
      "decl-vars" : [ ],
      "line-start" : 468,
      "ast" : {
        "condition" : {
          "go-type" : 8,
          "kind" : "expression",
          "left" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "bytes",
              "variable" : 2
            },
            "go-type" : 6,
            "kind" : "expression",
            "target" : {
              "go-type" : 4,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "n",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "operator" : "==",
          "right" : {
            "go-type" : 9,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 470,
      "code" : "if n.bytes == nil {\n\treturn \"\"\n}",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 469,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "constant",
          "value" : {
            "type" : "STRING",
            "value" : ""
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 469,
      "code" : "return \"\"",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5 ],
      "in-vars" : [ 0, 1 ],
      "exit" : false,
      "out-vars" : [ 4, 0, 1 ],
      "decl-vars" : [ 4 ],
      "line-start" : 471,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "nl"
          }
        } ],
        "right" : [ {
          "arguments" : [ ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "nameLen"
            },
            "go-type" : 11,
            "kind" : "expression",
            "target" : {
              "go-type" : 4,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "n",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "go-type" : 10,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 471,
      "code" : "nl := n.nameLen()",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6, 7 ],
      "in-vars" : [ 4, 0, 1 ],
      "exit" : false,
      "out-vars" : [ 4, 0, 1 ],
      "decl-vars" : [ ],
      "line-start" : 472,
      "ast" : {
        "condition" : {
          "go-type" : 8,
          "kind" : "expression",
          "left" : {
            "go-type" : 10,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "nl",
              "variable" : 4
            }
          },
          "operator" : "==",
          "right" : {
            "go-type" : 10,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 474,
      "code" : "if nl == 0 {\n\treturn \"\"\n}",
      "entry" : false,
      "use-vars" : [ 4 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 473,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "constant",
          "value" : {
            "type" : "STRING",
            "value" : ""
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 473,
      "code" : "return \"\"",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 8 ],
      "in-vars" : [ 4, 0, 1 ],
      "exit" : false,
      "out-vars" : [ 4, 0, 5, 1 ],
      "decl-vars" : [ 5 ],
      "line-start" : 475,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "hdr"
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 15,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 15,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "stringStruct"
              }
            },
            "go-type" : 14,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 14,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 17,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 1,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 17,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 17,
            "kind" : "expression",
            "target" : {
              "go-type" : 18,
              "kind" : "expression",
              "operator" : "&",
              "target" : {
                "go-type" : 3,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "s",
                  "variable" : 1
                }
              },
              "type" : "unary"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 475,
      "code" : "hdr := (*stringStruct)(unsafe.Pointer(&s))",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ 5 ],
      "successors" : [ 9 ],
      "in-vars" : [ 4, 0, 5, 1 ],
      "exit" : false,
      "out-vars" : [ 4, 5, 1 ],
      "decl-vars" : [ ],
      "line-start" : 476,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "str",
            "variable" : 6
          },
          "go-type" : 17,
          "kind" : "expression",
          "target" : {
            "go-type" : 14,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "hdr",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 17,
            "kind" : "type",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 1,
              "value" : "unsafe"
            },
            "type" : "identifier",
            "value" : {
              "go-type" : 17,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "Pointer"
            }
          },
          "go-type" : 17,
          "kind" : "expression",
          "target" : {
            "arguments" : [ {
              "go-type" : 10,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "3"
              }
            } ],
            "ellipsis" : false,
            "function" : {
              "field" : {
                "function" : 2,
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "data"
              },
              "go-type" : 19,
              "kind" : "expression",
              "target" : {
                "go-type" : 4,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "n",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "go-type" : 6,
            "kind" : "expression",
            "type" : "call"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 476,
      "code" : "hdr.str = unsafe.Pointer(n.data(3))",
      "entry" : false,
      "use-vars" : [ 5, 0 ]
    }, {
      "update-vars" : [ 5 ],
      "successors" : [ 10 ],
      "in-vars" : [ 4, 5, 1 ],
      "exit" : false,
      "out-vars" : [ 1 ],
      "decl-vars" : [ ],
      "line-start" : 477,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "len",
            "variable" : 8
          },
          "go-type" : 10,
          "kind" : "expression",
          "target" : {
            "go-type" : 14,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "hdr",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 10,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "nl",
            "variable" : 4
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 477,
      "code" : "hdr.len = nl",
      "entry" : false,
      "use-vars" : [ 5, 4 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 1 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 478,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "s",
            "variable" : 1
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 478,
      "code" : "return s",
      "entry" : false,
      "use-vars" : [ 1 ]
    } ],
    "code" : "func (n name) name() (s string) {\n\tif n.bytes == nil {\n\t\treturn \"\"\n\t}\n\tnl := n.nameLen()\n\tif nl == 0 {\n\t\treturn \"\"\n\t}\n\thdr := (*stringStruct)(unsafe.Pointer(&s))\n\thdr.str = unsafe.Pointer(n.data(3))\n\thdr.len = nl\n\treturn s\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "name",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "nameLen",
      "package" : 0,
      "type" : 13,
      "exported" : false
    }, {
      "name" : "data",
      "package" : 0,
      "type" : 22,
      "exported" : false
    } ],
    "line-end" : 479,
    "line-start" : 467,
    "names" : [ "name" ],
    "package" : 0,
    "packages" : [ {
      "name" : "runtime",
      "path" : "runtime"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ ],
    "receivers" : [ 0 ],
    "results" : [ 1 ],
    "type" : "function",
    "types" : [ {
      "name" : "(runtime.name) func() (s string)",
      "params" : 1,
      "recv" : 0,
      "results" : 2,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "s",
        "type" : 3
      } ],
      "name" : "(s string)",
      "type" : "Tuple",
      "underlying" : 2
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 3
    }, {
      "local-name" : "name",
      "name" : "runtime.name",
      "package" : 0,
      "type" : "Named",
      "underlying" : 5
    }, {
      "fields" : [ {
        "name" : "bytes",
        "type" : 6
      } ],
      "name" : "struct{bytes *byte}",
      "type" : "Struct",
      "underlying" : 5
    }, {
      "elem" : 7,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 6
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 7
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 8
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 9
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 10
    }, {
      "name" : "func() int",
      "params" : 1,
      "recv" : -1,
      "results" : 12,
      "type" : "Signature",
      "underlying" : 11,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 10
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 12
    }, {
      "name" : "(runtime.name) func() int",
      "params" : 1,
      "recv" : 3,
      "results" : 12,
      "type" : "Signature",
      "underlying" : 13,
      "variadic" : false
    }, {
      "elem" : 15,
      "name" : "*runtime.stringStruct",
      "type" : "Pointer",
      "underlying" : 14
    }, {
      "local-name" : "stringStruct",
      "name" : "runtime.stringStruct",
      "package" : 0,
      "type" : "Named",
      "underlying" : 16
    }, {
      "fields" : [ {
        "name" : "str",
        "type" : 17
      }, {
        "name" : "len",
        "type" : 10
      } ],
      "name" : "struct{str unsafe.Pointer; len int}",
      "type" : "Struct",
      "underlying" : 16
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 17
    }, {
      "elem" : 3,
      "name" : "*string",
      "type" : "Pointer",
      "underlying" : 18
    }, {
      "name" : "func(off int) *byte",
      "params" : 20,
      "recv" : -1,
      "results" : 21,
      "type" : "Signature",
      "underlying" : 19,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "off",
        "type" : 10
      } ],
      "name" : "(off int)",
      "type" : "Tuple",
      "underlying" : 20
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 6
      } ],
      "name" : "(*byte)",
      "type" : "Tuple",
      "underlying" : 21
    }, {
      "name" : "(runtime.name) func(off int) *byte",
      "params" : 20,
      "recv" : 7,
      "results" : 21,
      "type" : "Signature",
      "underlying" : 22,
      "variadic" : false
    } ],
    "variables" : [ {
      "name" : "n",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "s",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "bytes",
      "package" : 0,
      "type" : 6,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "n",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "nl",
      "package" : 0,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "hdr",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "str",
      "package" : 0,
      "type" : 17,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "n",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "len",
      "package" : 0,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}