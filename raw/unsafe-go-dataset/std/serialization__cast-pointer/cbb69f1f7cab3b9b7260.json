{
  "usage" : {
    "file" : "syscall_linux.go",
    "label1" : "cast-pointer",
    "label2" : "serialization",
    "line" : "839",
    "module" : "golang.org/x/sys",
    "pkg" : "golang.org/x/sys/unix",
    "project" : "mattermost/mattermost-server",
    "snippet" : "return unsafe.Pointer(&sa.raw), SizeofSockaddrTIPC, nil",
    "version" : "v0.0.0-20200515095857-1151b9dac4a9"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 3 ],
      "exit" : false,
      "out-vars" : [ 3 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3, 4 ],
      "in-vars" : [ 3 ],
      "exit" : false,
      "out-vars" : [ 3 ],
      "decl-vars" : [ ],
      "line-start" : 830,
      "ast" : {
        "condition" : {
          "go-type" : 28,
          "kind" : "expression",
          "left" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Addr",
              "variable" : 7
            },
            "go-type" : 15,
            "kind" : "expression",
            "target" : {
              "go-type" : 11,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "sa",
                "variable" : 3
              }
            },
            "type" : "selector"
          },
          "operator" : "==",
          "right" : {
            "go-type" : 29,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 832,
      "code" : "if sa.Addr == nil {\n\treturn nil, 0, EINVAL\n}",
      "entry" : false,
      "use-vars" : [ 3 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 831,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        }, {
          "go-type" : 4,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "0"
          }
        }, {
          "go-type" : 30,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "22"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 831,
      "code" : "return nil, 0, EINVAL",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 3 ],
      "successors" : [ 5 ],
      "in-vars" : [ 3 ],
      "exit" : false,
      "out-vars" : [ 3 ],
      "decl-vars" : [ ],
      "line-start" : 834,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Family",
            "variable" : 9
          },
          "go-type" : 26,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "raw",
              "variable" : 8
            },
            "go-type" : 24,
            "kind" : "expression",
            "target" : {
              "go-type" : 11,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "sa",
                "variable" : 3
              }
            },
            "type" : "selector"
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 26,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "30"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 834,
      "code" : "sa.raw.Family = AF_TIPC",
      "entry" : false,
      "use-vars" : [ 3 ]
    }, {
      "update-vars" : [ 3 ],
      "successors" : [ 6 ],
      "in-vars" : [ 3 ],
      "exit" : false,
      "out-vars" : [ 3 ],
      "decl-vars" : [ ],
      "line-start" : 835,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Scope",
            "variable" : 10
          },
          "go-type" : 27,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "raw",
              "variable" : 8
            },
            "go-type" : 24,
            "kind" : "expression",
            "target" : {
              "go-type" : 11,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "sa",
                "variable" : 3
              }
            },
            "type" : "selector"
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 27,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 27,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "int8"
            }
          },
          "go-type" : 27,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Scope",
              "variable" : 11
            },
            "go-type" : 14,
            "kind" : "expression",
            "target" : {
              "go-type" : 11,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "sa",
                "variable" : 3
              }
            },
            "type" : "selector"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 835,
      "code" : "sa.raw.Scope = int8(sa.Scope)",
      "entry" : false,
      "use-vars" : [ 3 ]
    }, {
      "update-vars" : [ 3 ],
      "successors" : [ 7 ],
      "in-vars" : [ 3 ],
      "exit" : false,
      "out-vars" : [ 3 ],
      "decl-vars" : [ ],
      "line-start" : 836,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Addrtype",
            "variable" : 12
          },
          "go-type" : 23,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "raw",
              "variable" : 8
            },
            "go-type" : 24,
            "kind" : "expression",
            "target" : {
              "go-type" : 11,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "sa",
                "variable" : 3
              }
            },
            "type" : "selector"
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "arguments" : [ ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "tipcAddrtype"
            },
            "go-type" : 32,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Addr",
                "variable" : 7
              },
              "go-type" : 15,
              "kind" : "expression",
              "target" : {
                "go-type" : 11,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "sa",
                  "variable" : 3
                }
              },
              "type" : "selector"
            },
            "type" : "selector"
          },
          "go-type" : 23,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 836,
      "code" : "sa.raw.Addrtype = sa.Addr.tipcAddrtype()",
      "entry" : false,
      "use-vars" : [ 3 ]
    }, {
      "update-vars" : [ 3 ],
      "successors" : [ 8 ],
      "in-vars" : [ 3 ],
      "exit" : false,
      "out-vars" : [ 3 ],
      "decl-vars" : [ ],
      "line-start" : 837,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Addr",
            "variable" : 13
          },
          "go-type" : 19,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "raw",
              "variable" : 8
            },
            "go-type" : 24,
            "kind" : "expression",
            "target" : {
              "go-type" : 11,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "sa",
                "variable" : 3
              }
            },
            "type" : "selector"
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "arguments" : [ ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "function" : 2,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "tipcAddr"
            },
            "go-type" : 33,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Addr",
                "variable" : 7
              },
              "go-type" : 15,
              "kind" : "expression",
              "target" : {
                "go-type" : 11,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "sa",
                  "variable" : 3
                }
              },
              "type" : "selector"
            },
            "type" : "selector"
          },
          "go-type" : 19,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 837,
      "code" : "sa.raw.Addr = sa.Addr.tipcAddr()",
      "entry" : false,
      "use-vars" : [ 3 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 3 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 839,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "coerced-to" : {
            "go-type" : 3,
            "kind" : "type",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 1,
              "value" : "unsafe"
            },
            "type" : "identifier",
            "value" : {
              "go-type" : 3,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "Pointer"
            }
          },
          "go-type" : 3,
          "kind" : "expression",
          "target" : {
            "go-type" : 34,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "raw",
                "variable" : 8
              },
              "go-type" : 24,
              "kind" : "expression",
              "target" : {
                "go-type" : 11,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "sa",
                  "variable" : 3
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          },
          "type" : "cast"
        }, {
          "go-type" : 4,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "16"
          }
        }, {
          "go-type" : 29,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 839,
      "code" : "return unsafe.Pointer(&sa.raw), SizeofSockaddrTIPC, nil",
      "entry" : false,
      "use-vars" : [ 3 ]
    } ],
    "code" : "func (sa *SockaddrTIPC) sockaddr() (unsafe.Pointer, _Socklen, error) {\n\tif sa.Addr == nil {\n\t\treturn nil, 0, EINVAL\n\t}\n\n\tsa.raw.Family = AF_TIPC\n\tsa.raw.Scope = int8(sa.Scope)\n\tsa.raw.Addrtype = sa.Addr.tipcAddrtype()\n\tsa.raw.Addr = sa.Addr.tipcAddr()\n\n\treturn unsafe.Pointer(&sa.raw), SizeofSockaddrTIPC, nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "sockaddr",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "tipcAddrtype",
      "package" : 0,
      "type" : 21,
      "exported" : false
    }, {
      "name" : "tipcAddr",
      "package" : 0,
      "type" : 17,
      "exported" : false
    } ],
    "line-end" : 840,
    "line-start" : 829,
    "names" : [ "sockaddr" ],
    "package" : 0,
    "packages" : [ {
      "name" : "unix",
      "path" : "golang.org/x/sys/unix"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "syscall",
      "path" : "syscall"
    } ],
    "params" : [ ],
    "receivers" : [ 3 ],
    "results" : [ 4, 5, 6 ],
    "type" : "function",
    "types" : [ {
      "name" : "(*golang.org/x/sys/unix.SockaddrTIPC) func() (unsafe.Pointer, golang.org/x/sys/unix._Socklen, error)",
      "params" : 1,
      "recv" : 3,
      "results" : 2,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 3
      }, {
        "name" : "",
        "type" : 4
      }, {
        "name" : "",
        "type" : 6
      } ],
      "name" : "(unsafe.Pointer, golang.org/x/sys/unix._Socklen, error)",
      "type" : "Tuple",
      "underlying" : 2
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 3
    }, {
      "local-name" : "_Socklen",
      "name" : "golang.org/x/sys/unix._Socklen",
      "package" : 0,
      "type" : "Named",
      "underlying" : 5
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 5
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 7
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 8
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 7
    }, {
      "name" : "(error) func() string",
      "params" : 1,
      "recv" : 0,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 8,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 10
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 9
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 10
    }, {
      "elem" : 12,
      "name" : "*golang.org/x/sys/unix.SockaddrTIPC",
      "type" : "Pointer",
      "underlying" : 11
    }, {
      "local-name" : "SockaddrTIPC",
      "name" : "golang.org/x/sys/unix.SockaddrTIPC",
      "package" : 0,
      "type" : "Named",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "Scope",
        "type" : 14
      }, {
        "name" : "Addr",
        "type" : 15
      }, {
        "name" : "raw",
        "type" : 24
      } ],
      "name" : "struct{Scope int; Addr golang.org/x/sys/unix.TIPCAddr; raw golang.org/x/sys/unix.RawSockaddrTIPC}",
      "type" : "Struct",
      "underlying" : 13
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 14
    }, {
      "local-name" : "TIPCAddr",
      "name" : "golang.org/x/sys/unix.TIPCAddr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 16
    }, {
      "methods" : [ {
        "name" : "tipcAddr",
        "type" : 17
      }, {
        "name" : "tipcAddrtype",
        "type" : 21
      } ],
      "name" : "interface{tipcAddr() [12]byte; tipcAddrtype() uint8}",
      "type" : "Interface",
      "underlying" : 16
    }, {
      "name" : "(golang.org/x/sys/unix.TIPCAddr) func() [12]byte",
      "params" : 1,
      "recv" : 1,
      "results" : 18,
      "type" : "Signature",
      "underlying" : 17,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 19
      } ],
      "name" : "([12]byte)",
      "type" : "Tuple",
      "underlying" : 18
    }, {
      "elem" : 20,
      "name" : "[12]byte",
      "type" : "Array",
      "underlying" : 19
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 20
    }, {
      "name" : "(golang.org/x/sys/unix.TIPCAddr) func() uint8",
      "params" : 1,
      "recv" : 2,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 21,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 23
      } ],
      "name" : "(uint8)",
      "type" : "Tuple",
      "underlying" : 22
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 23
    }, {
      "local-name" : "RawSockaddrTIPC",
      "name" : "golang.org/x/sys/unix.RawSockaddrTIPC",
      "package" : 0,
      "type" : "Named",
      "underlying" : 25
    }, {
      "fields" : [ {
        "name" : "Family",
        "type" : 26
      }, {
        "name" : "Addrtype",
        "type" : 23
      }, {
        "name" : "Scope",
        "type" : 27
      }, {
        "name" : "Addr",
        "type" : 19
      } ],
      "name" : "struct{Family uint16; Addrtype uint8; Scope int8; Addr [12]byte}",
      "type" : "Struct",
      "underlying" : 25
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 26
    }, {
      "name" : "int8",
      "type" : "Basic",
      "underlying" : 27
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 28
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 29
    }, {
      "local-name" : "Errno",
      "name" : "syscall.Errno",
      "package" : 2,
      "type" : "Named",
      "underlying" : 31
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 31
    }, {
      "name" : "func() uint8",
      "params" : 1,
      "recv" : -1,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 32,
      "variadic" : false
    }, {
      "name" : "func() [12]byte",
      "params" : 1,
      "recv" : -1,
      "results" : 18,
      "type" : "Signature",
      "underlying" : 33,
      "variadic" : false
    }, {
      "elem" : 24,
      "name" : "*golang.org/x/sys/unix.RawSockaddrTIPC",
      "type" : "Pointer",
      "underlying" : 34
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 6,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 15,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "",
      "package" : 0,
      "type" : 15,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "sa",
      "package" : 0,
      "type" : 11,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res1]",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res2]",
      "package" : 0,
      "type" : 6,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Addr",
      "package" : 0,
      "type" : 15,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "raw",
      "package" : 0,
      "type" : 24,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Family",
      "package" : 0,
      "type" : 26,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Scope",
      "package" : 0,
      "type" : 27,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Scope",
      "package" : 0,
      "type" : 14,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Addrtype",
      "package" : 0,
      "type" : 23,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Addr",
      "package" : 0,
      "type" : 19,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}