{
  "usage" : {
    "file" : "type.go",
    "label1" : "cast-basic",
    "label2" : "ffi",
    "line" : "691",
    "module" : "std",
    "pkg" : "reflect",
    "project" : "kubernetes/kubernetes",
    "snippet" : "return resolveTextOff(unsafe.Pointer(t), int32(off))",
    "version" : "std"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 1, 0 ],
      "exit" : false,
      "out-vars" : [ 1, 0 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 1, 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 691,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 5,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 1,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 5,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 5,
            "kind" : "expression",
            "target" : {
              "go-type" : 0,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "t",
                "variable" : 0
              }
            },
            "type" : "cast"
          }, {
            "coerced-to" : {
              "go-type" : 3,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 3,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "int32"
              }
            },
            "go-type" : 3,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "off",
                "variable" : 1
              }
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 6,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "resolveTextOff"
            }
          },
          "go-type" : 5,
          "kind" : "expression",
          "type" : "call"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 691,
      "code" : "return resolveTextOff(unsafe.Pointer(t), int32(off))",
      "entry" : false,
      "use-vars" : [ 0, 1 ]
    } ],
    "code" : "func (t *rtype) textOff(off textOff) unsafe.Pointer {\n\treturn resolveTextOff(unsafe.Pointer(t), int32(off))\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "textOff",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "resolveTextOff",
      "package" : 0,
      "type" : 6,
      "exported" : false
    } ],
    "line-end" : 692,
    "line-start" : 690,
    "names" : [ "textOff" ],
    "package" : 0,
    "packages" : [ {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 1 ],
    "receivers" : [ 0 ],
    "results" : [ 2 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(off reflect.textOff) unsafe.Pointer",
      "params" : 1,
      "recv" : 0,
      "results" : 4,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "off",
        "type" : 2
      } ],
      "name" : "(off reflect.textOff)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "local-name" : "textOff",
      "name" : "reflect.textOff",
      "package" : 0,
      "type" : "Named",
      "underlying" : 3
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 3
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 5
      } ],
      "name" : "(unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 4
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 5
    }, {
      "name" : "func(rtype unsafe.Pointer, off int32) unsafe.Pointer",
      "params" : 7,
      "recv" : -1,
      "results" : 4,
      "type" : "Signature",
      "underlying" : 6,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "rtype",
        "type" : 5
      }, {
        "name" : "off",
        "type" : 3
      } ],
      "name" : "(rtype unsafe.Pointer, off int32)",
      "type" : "Tuple",
      "underlying" : 7
    } ],
    "variables" : [ {
      "name" : "t",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "off",
      "package" : 0,
      "type" : 2,
      "exported" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 5,
      "exported" : false
    } ]
  },
  "go-version" : "1.14.3"
}