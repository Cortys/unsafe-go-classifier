{
  "usage" : {
    "file" : "syscall_linux.go",
    "label1" : "delegate",
    "label2" : "ffi",
    "line" : "95",
    "module" : "golang.org/x/sys",
    "pkg" : "golang.org/x/sys/unix",
    "project" : "rancher/rancher",
    "snippet" : "err := ioctl(fd, RTC_SET_TIME, uintptr(unsafe.Pointer(value)))",
    "version" : "v0.0.0-20200122134326-e047566fdf82"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 2, 1 ],
      "exit" : false,
      "out-vars" : [ 2, 1 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 2, 1 ],
      "exit" : false,
      "out-vars" : [ 4, 2 ],
      "decl-vars" : [ 4 ],
      "line-start" : 95,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "err"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "fd",
              "variable" : 1
            }
          }, {
            "go-type" : 16,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "1076129802"
            }
          }, {
            "coerced-to" : {
              "go-type" : 17,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 17,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uintptr"
              }
            },
            "go-type" : 17,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 19,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 1,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 19,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 19,
              "kind" : "expression",
              "target" : {
                "go-type" : 3,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "value",
                  "variable" : 2
                }
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 14,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "ioctl"
            }
          },
          "go-type" : 8,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 95,
      "code" : "err := ioctl(fd, RTC_SET_TIME, uintptr(unsafe.Pointer(value)))",
      "entry" : false,
      "use-vars" : [ 2, 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4 ],
      "in-vars" : [ 2, 4 ],
      "exit" : false,
      "out-vars" : [ 4 ],
      "decl-vars" : [ ],
      "line-start" : 96,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 3,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "value",
              "variable" : 2
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 20,
            "kind" : "expression",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 2,
              "value" : "runtime"
            },
            "type" : "identifier",
            "value" : {
              "function" : 2,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "KeepAlive"
            }
          },
          "go-type" : 11,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 96,
      "code" : "runtime.KeepAlive(value)",
      "entry" : false,
      "use-vars" : [ 2 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 4 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 97,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 8,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "err",
            "variable" : 4
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 97,
      "code" : "return err",
      "entry" : false,
      "use-vars" : [ 4 ]
    } ],
    "code" : "func IoctlSetRTCTime(fd int, value *RTCTime) error {\n\terr := ioctl(fd, RTC_SET_TIME, uintptr(unsafe.Pointer(value)))\n\truntime.KeepAlive(value)\n\treturn err\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "IoctlSetRTCTime",
      "package" : 0,
      "type" : 0,
      "exported" : true
    }, {
      "name" : "ioctl",
      "package" : 0,
      "type" : 14,
      "exported" : false
    }, {
      "name" : "KeepAlive",
      "package" : 2,
      "type" : 20,
      "exported" : true
    } ],
    "line-end" : 98,
    "line-start" : 94,
    "names" : [ "IoctlSetRTCTime" ],
    "package" : 0,
    "packages" : [ {
      "name" : "unix",
      "path" : "golang.org/x/sys/unix"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "runtime",
      "path" : "runtime"
    } ],
    "params" : [ 1, 2 ],
    "receivers" : [ ],
    "results" : [ 3 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(fd int, value *golang.org/x/sys/unix.RTCTime) error",
      "params" : 1,
      "recv" : -1,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "fd",
        "type" : 2
      }, {
        "name" : "value",
        "type" : 3
      } ],
      "name" : "(fd int, value *golang.org/x/sys/unix.RTCTime)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 2
    }, {
      "elem" : 4,
      "name" : "*golang.org/x/sys/unix.RTCTime",
      "type" : "Pointer",
      "underlying" : 3
    }, {
      "local-name" : "RTCTime",
      "name" : "golang.org/x/sys/unix.RTCTime",
      "package" : 0,
      "type" : "Named",
      "underlying" : 5
    }, {
      "fields" : [ {
        "name" : "Sec",
        "type" : 6
      }, {
        "name" : "Min",
        "type" : 6
      }, {
        "name" : "Hour",
        "type" : 6
      }, {
        "name" : "Mday",
        "type" : 6
      }, {
        "name" : "Mon",
        "type" : 6
      }, {
        "name" : "Year",
        "type" : 6
      }, {
        "name" : "Wday",
        "type" : 6
      }, {
        "name" : "Yday",
        "type" : 6
      }, {
        "name" : "Isdst",
        "type" : 6
      } ],
      "name" : "struct{Sec int32; Min int32; Hour int32; Mday int32; Mon int32; Year int32; Wday int32; Yday int32; Isdst int32}",
      "type" : "Struct",
      "underlying" : 5
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 6
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 8
      } ],
      "name" : "(error)",
      "type" : "Tuple",
      "underlying" : 7
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 9
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 10
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 9
    }, {
      "name" : "func() string",
      "params" : 11,
      "recv" : 0,
      "results" : 12,
      "type" : "Signature",
      "underlying" : 10,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 11
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 13
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 12
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "name" : "func(fd int, req uint, arg uintptr) (err error)",
      "params" : 15,
      "recv" : -1,
      "results" : 18,
      "type" : "Signature",
      "underlying" : 14,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "fd",
        "type" : 2
      }, {
        "name" : "req",
        "type" : 16
      }, {
        "name" : "arg",
        "type" : 17
      } ],
      "name" : "(fd int, req uint, arg uintptr)",
      "type" : "Tuple",
      "underlying" : 15
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 16
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 17
    }, {
      "fields" : [ {
        "name" : "err",
        "type" : 8
      } ],
      "name" : "(err error)",
      "type" : "Tuple",
      "underlying" : 18
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 19
    }, {
      "name" : "func(x interface{})",
      "params" : 21,
      "recv" : -1,
      "results" : 11,
      "type" : "Signature",
      "underlying" : 20,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "x",
        "type" : 22
      } ],
      "name" : "(x interface{})",
      "type" : "Tuple",
      "underlying" : 21
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 22
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "fd",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "value",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}