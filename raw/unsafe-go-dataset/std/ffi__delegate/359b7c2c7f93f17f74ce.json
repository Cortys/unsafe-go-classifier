{
  "usage" : {
    "file" : "syscall_linux.go",
    "label1" : "delegate",
    "label2" : "ffi",
    "line" : "816",
    "module" : "std",
    "pkg" : "syscall",
    "project" : "kubernetes/kubernetes",
    "snippet" : "return ptrace(PTRACE_GETREGS, pid, 0, uintptr(unsafe.Pointer(regsout)))",
    "version" : "std"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 2, 1 ],
      "exit" : false,
      "out-vars" : [ 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 2, 1 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 816,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "arguments" : [ {
            "go-type" : 2,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "12"
            }
          }, {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "pid",
              "variable" : 1
            }
          }, {
            "go-type" : 16,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          }, {
            "coerced-to" : {
              "go-type" : 16,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 16,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uintptr"
              }
            },
            "go-type" : 16,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 17,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 1,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 17,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 17,
              "kind" : "expression",
              "target" : {
                "go-type" : 3,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "regsout",
                  "variable" : 2
                }
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 14,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "ptrace"
            }
          },
          "go-type" : 8,
          "kind" : "expression",
          "type" : "call"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 816,
      "code" : "return ptrace(PTRACE_GETREGS, pid, 0, uintptr(unsafe.Pointer(regsout)))",
      "entry" : false,
      "use-vars" : [ 2, 1 ]
    } ],
    "code" : "func PtraceGetRegs(pid int, regsout *PtraceRegs) (err error) {\n\treturn ptrace(PTRACE_GETREGS, pid, 0, uintptr(unsafe.Pointer(regsout)))\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "PtraceGetRegs",
      "package" : 0,
      "type" : 0,
      "exported" : true
    }, {
      "name" : "ptrace",
      "package" : 0,
      "type" : 14,
      "exported" : false
    } ],
    "line-end" : 817,
    "line-start" : 815,
    "names" : [ "PtraceGetRegs" ],
    "package" : 0,
    "packages" : [ {
      "name" : "syscall",
      "path" : "syscall"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 1, 2 ],
    "receivers" : [ ],
    "results" : [ 3 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(pid int, regsout *syscall.PtraceRegs) (err error)",
      "params" : 1,
      "recv" : -1,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pid",
        "type" : 2
      }, {
        "name" : "regsout",
        "type" : 3
      } ],
      "name" : "(pid int, regsout *syscall.PtraceRegs)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 2
    }, {
      "elem" : 4,
      "name" : "*syscall.PtraceRegs",
      "type" : "Pointer",
      "underlying" : 3
    }, {
      "local-name" : "PtraceRegs",
      "name" : "syscall.PtraceRegs",
      "package" : 0,
      "type" : "Named",
      "underlying" : 5
    }, {
      "fields" : [ {
        "name" : "R15",
        "type" : 6
      }, {
        "name" : "R14",
        "type" : 6
      }, {
        "name" : "R13",
        "type" : 6
      }, {
        "name" : "R12",
        "type" : 6
      }, {
        "name" : "Rbp",
        "type" : 6
      }, {
        "name" : "Rbx",
        "type" : 6
      }, {
        "name" : "R11",
        "type" : 6
      }, {
        "name" : "R10",
        "type" : 6
      }, {
        "name" : "R9",
        "type" : 6
      }, {
        "name" : "R8",
        "type" : 6
      }, {
        "name" : "Rax",
        "type" : 6
      }, {
        "name" : "Rcx",
        "type" : 6
      }, {
        "name" : "Rdx",
        "type" : 6
      }, {
        "name" : "Rsi",
        "type" : 6
      }, {
        "name" : "Rdi",
        "type" : 6
      }, {
        "name" : "Orig_rax",
        "type" : 6
      }, {
        "name" : "Rip",
        "type" : 6
      }, {
        "name" : "Cs",
        "type" : 6
      }, {
        "name" : "Eflags",
        "type" : 6
      }, {
        "name" : "Rsp",
        "type" : 6
      }, {
        "name" : "Ss",
        "type" : 6
      }, {
        "name" : "Fs_base",
        "type" : 6
      }, {
        "name" : "Gs_base",
        "type" : 6
      }, {
        "name" : "Ds",
        "type" : 6
      }, {
        "name" : "Es",
        "type" : 6
      }, {
        "name" : "Fs",
        "type" : 6
      }, {
        "name" : "Gs",
        "type" : 6
      } ],
      "name" : "struct{R15 uint64; R14 uint64; R13 uint64; R12 uint64; Rbp uint64; Rbx uint64; R11 uint64; R10 uint64; R9 uint64; R8 uint64; Rax uint64; Rcx uint64; Rdx uint64; Rsi uint64; Rdi uint64; Orig_rax uint64; Rip uint64; Cs uint64; Eflags uint64; Rsp uint64; Ss uint64; Fs_base uint64; Gs_base uint64; Ds uint64; Es uint64; Fs uint64; Gs uint64}",
      "type" : "Struct",
      "underlying" : 5
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 6
    }, {
      "fields" : [ {
        "name" : "err",
        "type" : 8
      } ],
      "name" : "(err error)",
      "type" : "Tuple",
      "underlying" : 7
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 9
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 10
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 9
    }, {
      "name" : "func() string",
      "params" : 11,
      "recv" : 0,
      "results" : 12,
      "type" : "Signature",
      "underlying" : 10,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 11
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 13
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 12
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "name" : "func(request int, pid int, addr uintptr, data uintptr) (err error)",
      "params" : 15,
      "recv" : -1,
      "results" : 7,
      "type" : "Signature",
      "underlying" : 14,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "request",
        "type" : 2
      }, {
        "name" : "pid",
        "type" : 2
      }, {
        "name" : "addr",
        "type" : 16
      }, {
        "name" : "data",
        "type" : 16
      } ],
      "name" : "(request int, pid int, addr uintptr, data uintptr)",
      "type" : "Tuple",
      "underlying" : 15
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 16
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 17
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "pid",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "regsout",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "err",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    } ]
  },
  "go-version" : "1.14.3"
}