{
  "usage" : {
    "file" : "trace.go",
    "label1" : "delegate",
    "label2" : "ffi",
    "line" : "326",
    "module" : "std",
    "pkg" : "runtime",
    "project" : "kubernetes/kubernetes",
    "snippet" : "raceacquire(unsafe.Pointer(&trace.shutdownSema))",
    "version" : "std"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 0, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 1, 2, 0 ],
      "exit" : false,
      "out-vars" : [ 2, 0, 1 ],
      "decl-vars" : [ ],
      "line-start" : 276,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 40,
            "kind" : "constant",
            "value" : {
              "type" : "STRING",
              "value" : "stop tracing"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 172,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "stopTheWorld"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 276,
      "code" : "stopTheWorld(\"stop tracing\")",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4 ],
      "in-vars" : [ 1, 2, 0 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 279,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 176,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "bufLock",
                "variable" : 3
              },
              "go-type" : 3,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "trace",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 174,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "lock"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 279,
      "code" : "lock(&trace.bufLock)",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5, 8 ],
      "in-vars" : [ 1, 2, 0 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 281,
      "ast" : {
        "condition" : {
          "go-type" : 16,
          "kind" : "expression",
          "operator" : "!",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "enabled",
              "variable" : 4
            },
            "go-type" : 16,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "trace",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "type" : "unary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 285,
      "code" : "if !trace.enabled {\n\tunlock(&trace.bufLock)\n\tstartTheWorld()\n\treturn\n}",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 282,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 176,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "bufLock",
                "variable" : 3
              },
              "go-type" : 3,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "trace",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 174,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "unlock"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 282,
      "code" : "unlock(&trace.bufLock)",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 7 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 283,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 0,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "startTheWorld"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 283,
      "code" : "startTheWorld()",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 284,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ ]
      },
      "assign-vars" : [ ],
      "line-end" : 284,
      "code" : "return",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 9 ],
      "in-vars" : [ 0, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 287,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 0,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "traceGoSched"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 287,
      "code" : "traceGoSched()",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 10, 14 ],
      "in-vars" : [ 2, 0, 1 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 5, 2 ],
      "decl-vars" : [ 5, 8 ],
      "line-start" : 291,
      "ast" : {
        "is-assign" : false,
        "key" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "_"
          }
        },
        "kind" : "statement",
        "target" : {
          "go-type" : 123,
          "type" : "slice",
          "three" : false,
          "high" : {
            "arguments" : [ {
              "go-type" : 123,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "allp",
                "variable" : 1
              }
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 177,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Builtin",
                "kind" : "ident",
                "value" : "cap"
              }
            },
            "go-type" : 77,
            "kind" : "expression",
            "type" : "call"
          },
          "max" : null,
          "kind" : "expression",
          "low" : null,
          "target" : {
            "go-type" : 123,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "allp",
              "variable" : 1
            }
          }
        },
        "type" : "range",
        "value" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "p"
          }
        }
      },
      "assign-vars" : [ ],
      "line-end" : 297,
      "code" : "for _, p := range allp[:cap(allp)] {\n\tbuf := p.tracebuf\n\tif buf != 0 {\n\t\ttraceFullQueue(buf)\n\t\tp.tracebuf = 0\n\t}\n}",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 11 ],
      "in-vars" : [ 0, 1, 5, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 7, 1, 5, 2 ],
      "decl-vars" : [ 7 ],
      "line-start" : 292,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "buf"
          }
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "tracebuf",
            "variable" : 6
          },
          "go-type" : 113,
          "kind" : "expression",
          "target" : {
            "go-type" : 124,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "p",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 292,
      "code" : "buf := p.tracebuf",
      "entry" : false,
      "use-vars" : [ 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 9, 12 ],
      "in-vars" : [ 0, 7, 1, 5, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 7, 1, 5, 2 ],
      "decl-vars" : [ ],
      "line-start" : 293,
      "ast" : {
        "condition" : {
          "go-type" : 180,
          "kind" : "expression",
          "left" : {
            "go-type" : 113,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "buf",
              "variable" : 7
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 113,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 296,
      "code" : "if buf != 0 {\n\ttraceFullQueue(buf)\n\tp.tracebuf = 0\n}",
      "entry" : false,
      "use-vars" : [ 7 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 13 ],
      "in-vars" : [ 7, 1, 5, 2, 0 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 5, 2 ],
      "decl-vars" : [ ],
      "line-start" : 294,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 113,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "buf",
              "variable" : 7
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 181,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "traceFullQueue"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 294,
      "code" : "traceFullQueue(buf)",
      "entry" : false,
      "use-vars" : [ 7 ]
    }, {
      "update-vars" : [ 5 ],
      "successors" : [ 9 ],
      "in-vars" : [ 0, 1, 5, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 295,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "tracebuf",
            "variable" : 6
          },
          "go-type" : 113,
          "kind" : "expression",
          "target" : {
            "go-type" : 124,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "p",
              "variable" : 5
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 113,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "0"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 295,
      "code" : "p.tracebuf = 0",
      "entry" : false,
      "use-vars" : [ 5 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 15, 19 ],
      "in-vars" : [ 2, 0, 1 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 298,
      "ast" : {
        "condition" : {
          "go-type" : 180,
          "kind" : "expression",
          "left" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "buf",
              "variable" : 9
            },
            "go-type" : 113,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "trace",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 113,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 304,
      "code" : "if trace.buf != 0 {\n\tbuf := trace.buf\n\ttrace.buf = 0\n\tif buf.ptr().pos != 0 {\n\t\ttraceFullQueue(buf)\n\t}\n}",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 16 ],
      "in-vars" : [ 2, 0, 1 ],
      "exit" : false,
      "out-vars" : [ 0, 10, 1, 2 ],
      "decl-vars" : [ 10 ],
      "line-start" : 299,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "buf"
          }
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "buf",
            "variable" : 9
          },
          "go-type" : 113,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "trace",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 299,
      "code" : "buf := trace.buf",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ 0 ],
      "successors" : [ 17 ],
      "in-vars" : [ 0, 10, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 10, 1, 2, 0 ],
      "decl-vars" : [ ],
      "line-start" : 300,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "buf",
            "variable" : 9
          },
          "go-type" : 113,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "trace",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 113,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "0"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 300,
      "code" : "trace.buf = 0",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 18, 19 ],
      "in-vars" : [ 0, 10, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 10, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 301,
      "ast" : {
        "condition" : {
          "go-type" : 180,
          "kind" : "expression",
          "left" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "pos",
              "variable" : 11
            },
            "go-type" : 77,
            "kind" : "expression",
            "target" : {
              "arguments" : [ ],
              "ellipsis" : false,
              "function" : {
                "field" : {
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "ptr"
                },
                "go-type" : 190,
                "kind" : "expression",
                "target" : {
                  "go-type" : 113,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "buf",
                    "variable" : 10
                  }
                },
                "type" : "selector"
              },
              "go-type" : 183,
              "kind" : "expression",
              "type" : "call"
            },
            "type" : "selector"
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 77,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 303,
      "code" : "if buf.ptr().pos != 0 {\n\ttraceFullQueue(buf)\n}",
      "entry" : false,
      "use-vars" : [ 10 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 19 ],
      "in-vars" : [ 0, 10, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 302,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 113,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "buf",
              "variable" : 10
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 181,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "traceFullQueue"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 302,
      "code" : "traceFullQueue(buf)",
      "entry" : false,
      "use-vars" : [ 10 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 20, 25 ],
      "in-vars" : [ 1, 2, 0 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 306,
      "ast" : {
        "condition" : null,
        "kind" : "statement",
        "type" : "for"
      },
      "assign-vars" : [ ],
      "line-end" : 314,
      "code" : "for {\n\ttrace.ticksEnd = cputicks()\n\ttrace.timeEnd = nanotime()\n\n\tif trace.timeEnd != trace.timeStart {\n\t\tbreak\n\t}\n\tosyield()\n}",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 0 ],
      "successors" : [ 21 ],
      "in-vars" : [ 0, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 1, 2, 0 ],
      "decl-vars" : [ ],
      "line-start" : 307,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "ticksEnd",
            "variable" : 12
          },
          "go-type" : 39,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "trace",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "arguments" : [ ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 192,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "cputicks"
            }
          },
          "go-type" : 39,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 307,
      "code" : "trace.ticksEnd = cputicks()",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ 0 ],
      "successors" : [ 22 ],
      "in-vars" : [ 0, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 308,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "timeEnd",
            "variable" : 13
          },
          "go-type" : 39,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "trace",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "arguments" : [ ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 192,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "nanotime"
            }
          },
          "go-type" : 39,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 308,
      "code" : "trace.timeEnd = nanotime()",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 23, 24 ],
      "in-vars" : [ 0, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 310,
      "ast" : {
        "condition" : {
          "go-type" : 180,
          "kind" : "expression",
          "left" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "timeEnd",
              "variable" : 13
            },
            "go-type" : 39,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "trace",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "operator" : "!=",
          "right" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "timeStart",
              "variable" : 14
            },
            "go-type" : 39,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "trace",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 312,
      "code" : "if trace.timeEnd != trace.timeStart {\n\tbreak\n}",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 25 ],
      "in-vars" : [ 0, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 2, 0, 1 ],
      "decl-vars" : [ ],
      "line-start" : 311,
      "ast" : {
        "kind" : "statement",
        "label" : null,
        "type" : "break"
      },
      "assign-vars" : [ ],
      "line-end" : 311,
      "code" : "break",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 19 ],
      "in-vars" : [ 0, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 313,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 0,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "osyield"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 313,
      "code" : "osyield()",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 0 ],
      "successors" : [ 26 ],
      "in-vars" : [ 0, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 316,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "enabled",
            "variable" : 4
          },
          "go-type" : 16,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "trace",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 16,
          "kind" : "constant",
          "value" : {
            "type" : "BOOL",
            "value" : "false"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 316,
      "code" : "trace.enabled = false",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ 0 ],
      "successors" : [ 27 ],
      "in-vars" : [ 0, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 2, 0, 1 ],
      "decl-vars" : [ ],
      "line-start" : 317,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "shutdown",
            "variable" : 15
          },
          "go-type" : 16,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "trace",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 16,
          "kind" : "constant",
          "value" : {
            "type" : "BOOL",
            "value" : "true"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 317,
      "code" : "trace.shutdown = true",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 28 ],
      "in-vars" : [ 2, 0, 1 ],
      "exit" : false,
      "out-vars" : [ 1, 2, 0 ],
      "decl-vars" : [ ],
      "line-start" : 318,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 176,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "bufLock",
                "variable" : 3
              },
              "go-type" : 3,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "trace",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 174,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "unlock"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 318,
      "code" : "unlock(&trace.bufLock)",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 29 ],
      "in-vars" : [ 1, 2, 0 ],
      "exit" : false,
      "out-vars" : [ 2, 0, 1 ],
      "decl-vars" : [ ],
      "line-start" : 320,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 0,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "startTheWorld"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 320,
      "code" : "startTheWorld()",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 30 ],
      "in-vars" : [ 0, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 324,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 196,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "shutdownSema",
                "variable" : 16
              },
              "go-type" : 32,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "trace",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 194,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "semacquire"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 324,
      "code" : "semacquire(&trace.shutdownSema)",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 31, 32 ],
      "in-vars" : [ 0, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 325,
      "ast" : {
        "condition" : {
          "go-type" : 180,
          "kind" : "constant",
          "value" : {
            "type" : "BOOL",
            "value" : "false"
          }
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 327,
      "code" : "if raceenabled {\n\traceacquire(unsafe.Pointer(&trace.shutdownSema))\n}",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 32 ],
      "in-vars" : [ 0, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 2, 0, 1 ],
      "decl-vars" : [ ],
      "line-start" : 326,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 14,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 1,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 14,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 14,
            "kind" : "expression",
            "target" : {
              "go-type" : 196,
              "kind" : "expression",
              "operator" : "&",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "shutdownSema",
                  "variable" : 16
                },
                "go-type" : 32,
                "kind" : "expression",
                "target" : {
                  "go-type" : 2,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "trace",
                    "variable" : 0
                  }
                },
                "type" : "selector"
              },
              "type" : "unary"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 197,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "raceacquire"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 326,
      "code" : "raceacquire(unsafe.Pointer(&trace.shutdownSema))",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 33 ],
      "in-vars" : [ 0, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 330,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 176,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "lock",
                "variable" : 17
              },
              "go-type" : 3,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "trace",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 174,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "lock"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 330,
      "code" : "lock(&trace.lock)",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 34, 36 ],
      "in-vars" : [ 0, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 18, 1, 2 ],
      "decl-vars" : [ 18, 19 ],
      "line-start" : 331,
      "ast" : {
        "is-assign" : false,
        "key" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "_"
          }
        },
        "kind" : "statement",
        "target" : {
          "go-type" : 123,
          "type" : "slice",
          "three" : false,
          "high" : {
            "arguments" : [ {
              "go-type" : 123,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "allp",
                "variable" : 1
              }
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 177,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Builtin",
                "kind" : "ident",
                "value" : "cap"
              }
            },
            "go-type" : 77,
            "kind" : "expression",
            "type" : "call"
          },
          "max" : null,
          "kind" : "expression",
          "low" : null,
          "target" : {
            "go-type" : 123,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "allp",
              "variable" : 1
            }
          }
        },
        "type" : "range",
        "value" : {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "p"
          }
        }
      },
      "assign-vars" : [ ],
      "line-end" : 335,
      "code" : "for _, p := range allp[:cap(allp)] {\n\tif p.tracebuf != 0 {\n\t\tthrow(\"trace: non-empty trace buffer in proc\")\n\t}\n}",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 33, 35 ],
      "in-vars" : [ 1, 2, 0, 18 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 332,
      "ast" : {
        "condition" : {
          "go-type" : 180,
          "kind" : "expression",
          "left" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "tracebuf",
              "variable" : 6
            },
            "go-type" : 113,
            "kind" : "expression",
            "target" : {
              "go-type" : 124,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "p",
                "variable" : 18
              }
            },
            "type" : "selector"
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 113,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 334,
      "code" : "if p.tracebuf != 0 {\n\tthrow(\"trace: non-empty trace buffer in proc\")\n}",
      "entry" : false,
      "use-vars" : [ 18 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 33 ],
      "in-vars" : [ 0, 1, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 2 ],
      "decl-vars" : [ ],
      "line-start" : 333,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 40,
            "kind" : "constant",
            "value" : {
              "type" : "STRING",
              "value" : "trace: non-empty trace buffer in proc"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 199,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "throw"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 333,
      "code" : "throw(\"trace: non-empty trace buffer in proc\")",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 37, 38 ],
      "in-vars" : [ 2, 0 ],
      "exit" : false,
      "out-vars" : [ 2, 0 ],
      "decl-vars" : [ ],
      "line-start" : 336,
      "ast" : {
        "condition" : {
          "go-type" : 180,
          "kind" : "expression",
          "left" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "buf",
              "variable" : 9
            },
            "go-type" : 113,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "trace",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 113,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 338,
      "code" : "if trace.buf != 0 {\n\tthrow(\"trace: non-empty global trace buffer\")\n}",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 38 ],
      "in-vars" : [ 0, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 2 ],
      "decl-vars" : [ ],
      "line-start" : 337,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 40,
            "kind" : "constant",
            "value" : {
              "type" : "STRING",
              "value" : "trace: non-empty global trace buffer"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 199,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "throw"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 337,
      "code" : "throw(\"trace: non-empty global trace buffer\")",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 39, 40 ],
      "in-vars" : [ 0, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 2 ],
      "decl-vars" : [ ],
      "line-start" : 339,
      "ast" : {
        "condition" : {
          "go-type" : 180,
          "kind" : "expression",
          "left" : {
            "go-type" : 180,
            "kind" : "expression",
            "left" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "fullHead",
                "variable" : 20
              },
              "go-type" : 113,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "trace",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "operator" : "!=",
            "right" : {
              "go-type" : 113,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "0"
              }
            },
            "type" : "binary"
          },
          "operator" : "||",
          "right" : {
            "go-type" : 180,
            "kind" : "expression",
            "left" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "fullTail",
                "variable" : 21
              },
              "go-type" : 113,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "trace",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "operator" : "!=",
            "right" : {
              "go-type" : 113,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "0"
              }
            },
            "type" : "binary"
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 341,
      "code" : "if trace.fullHead != 0 || trace.fullTail != 0 {\n\tthrow(\"trace: non-empty full trace buffer\")\n}",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 40 ],
      "in-vars" : [ 0, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 2 ],
      "decl-vars" : [ ],
      "line-start" : 340,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 40,
            "kind" : "constant",
            "value" : {
              "type" : "STRING",
              "value" : "trace: non-empty full trace buffer"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 199,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "throw"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 340,
      "code" : "throw(\"trace: non-empty full trace buffer\")",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 41, 42 ],
      "in-vars" : [ 0, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 2 ],
      "decl-vars" : [ ],
      "line-start" : 342,
      "ast" : {
        "condition" : {
          "go-type" : 180,
          "kind" : "expression",
          "left" : {
            "go-type" : 180,
            "kind" : "expression",
            "left" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "reading",
                "variable" : 22
              },
              "go-type" : 113,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "trace",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "operator" : "!=",
            "right" : {
              "go-type" : 113,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "0"
              }
            },
            "type" : "binary"
          },
          "operator" : "||",
          "right" : {
            "go-type" : 180,
            "kind" : "expression",
            "left" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "reader",
                "variable" : 23
              },
              "go-type" : 29,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "trace",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "operator" : "!=",
            "right" : {
              "go-type" : 29,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "0"
              }
            },
            "type" : "binary"
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 344,
      "code" : "if trace.reading != 0 || trace.reader != 0 {\n\tthrow(\"trace: reading after shutdown\")\n}",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 42 ],
      "in-vars" : [ 0, 2 ],
      "exit" : false,
      "out-vars" : [ 0, 2 ],
      "decl-vars" : [ ],
      "line-start" : 343,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 40,
            "kind" : "constant",
            "value" : {
              "type" : "STRING",
              "value" : "trace: reading after shutdown"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 199,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "throw"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 343,
      "code" : "throw(\"trace: reading after shutdown\")",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 43, 46 ],
      "in-vars" : [ 2, 0 ],
      "exit" : false,
      "out-vars" : [ 0, 2 ],
      "decl-vars" : [ ],
      "line-start" : 345,
      "ast" : {
        "condition" : {
          "go-type" : 180,
          "kind" : "expression",
          "left" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "empty",
              "variable" : 24
            },
            "go-type" : 113,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "trace",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 113,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "for"
      },
      "assign-vars" : [ ],
      "line-end" : 349,
      "code" : "for trace.empty != 0 {\n\tbuf := trace.empty\n\ttrace.empty = buf.ptr().link\n\tsysFree(unsafe.Pointer(buf), unsafe.Sizeof(*buf.ptr()), &memstats.other_sys)\n}",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 44 ],
      "in-vars" : [ 0, 2 ],
      "exit" : false,
      "out-vars" : [ 25, 2, 0 ],
      "decl-vars" : [ 25 ],
      "line-start" : 346,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "buf"
          }
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "empty",
            "variable" : 24
          },
          "go-type" : 113,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "trace",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 346,
      "code" : "buf := trace.empty",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ 0 ],
      "successors" : [ 45 ],
      "in-vars" : [ 0, 25, 2 ],
      "exit" : false,
      "out-vars" : [ 25, 2, 0 ],
      "decl-vars" : [ ],
      "line-start" : 347,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "empty",
            "variable" : 24
          },
          "go-type" : 113,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "trace",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "link",
            "variable" : 26
          },
          "go-type" : 113,
          "kind" : "expression",
          "target" : {
            "arguments" : [ ],
            "ellipsis" : false,
            "function" : {
              "field" : {
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "ptr"
              },
              "go-type" : 190,
              "kind" : "expression",
              "target" : {
                "go-type" : 113,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "buf",
                  "variable" : 25
                }
              },
              "type" : "selector"
            },
            "go-type" : 183,
            "kind" : "expression",
            "type" : "call"
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 347,
      "code" : "trace.empty = buf.ptr().link",
      "entry" : false,
      "use-vars" : [ 25, 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 42 ],
      "in-vars" : [ 0, 25, 2 ],
      "exit" : false,
      "out-vars" : [ 2, 0 ],
      "decl-vars" : [ ],
      "line-start" : 348,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 14,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 1,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 14,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 14,
            "kind" : "expression",
            "target" : {
              "go-type" : 113,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "buf",
                "variable" : 25
              }
            },
            "type" : "cast"
          }, {
            "go-type" : 5,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "65536"
            }
          }, {
            "go-type" : 203,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "other_sys",
                "variable" : 27
              },
              "go-type" : 31,
              "kind" : "expression",
              "target" : {
                "go-type" : 166,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "memstats",
                  "variable" : 2
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 201,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "sysFree"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 348,
      "code" : "sysFree(unsafe.Pointer(buf), unsafe.Sizeof(*buf.ptr()), &memstats.other_sys)",
      "entry" : false,
      "use-vars" : [ 2, 25 ]
    }, {
      "update-vars" : [ 0 ],
      "successors" : [ 47 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 350,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "strings",
            "variable" : 28
          },
          "go-type" : 121,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "trace",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 204,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 350,
      "code" : "trace.strings = nil",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ 0 ],
      "successors" : [ 48 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 351,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "shutdown",
            "variable" : 15
          },
          "go-type" : 16,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "trace",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 16,
          "kind" : "constant",
          "value" : {
            "type" : "BOOL",
            "value" : "false"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 351,
      "code" : "trace.shutdown = false",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 352,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 176,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "lock",
                "variable" : 17
              },
              "go-type" : 3,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "trace",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 174,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "unlock"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 352,
      "code" : "unlock(&trace.lock)",
      "entry" : false,
      "use-vars" : [ 0 ]
    } ],
    "code" : "// StopTrace stops tracing, if it was previously enabled.\n// StopTrace only returns after all the reads for the trace have completed.\nfunc StopTrace() {\n\n\tstopTheWorld(\"stop tracing\")\n\n\tlock(&trace.bufLock)\n\n\tif !trace.enabled {\n\t\tunlock(&trace.bufLock)\n\t\tstartTheWorld()\n\t\treturn\n\t}\n\n\ttraceGoSched()\n\n\tfor _, p := range allp[:cap(allp)] {\n\t\tbuf := p.tracebuf\n\t\tif buf != 0 {\n\t\t\ttraceFullQueue(buf)\n\t\t\tp.tracebuf = 0\n\t\t}\n\t}\n\tif trace.buf != 0 {\n\t\tbuf := trace.buf\n\t\ttrace.buf = 0\n\t\tif buf.ptr().pos != 0 {\n\t\t\ttraceFullQueue(buf)\n\t\t}\n\t}\n\n\tfor {\n\t\ttrace.ticksEnd = cputicks()\n\t\ttrace.timeEnd = nanotime()\n\n\t\tif trace.timeEnd != trace.timeStart {\n\t\t\tbreak\n\t\t}\n\t\tosyield()\n\t}\n\n\ttrace.enabled = false\n\ttrace.shutdown = true\n\tunlock(&trace.bufLock)\n\n\tstartTheWorld()\n\n\tsemacquire(&trace.shutdownSema)\n\tif raceenabled {\n\t\traceacquire(unsafe.Pointer(&trace.shutdownSema))\n\t}\n\n\tlock(&trace.lock)\n\tfor _, p := range allp[:cap(allp)] {\n\t\tif p.tracebuf != 0 {\n\t\t\tthrow(\"trace: non-empty trace buffer in proc\")\n\t\t}\n\t}\n\tif trace.buf != 0 {\n\t\tthrow(\"trace: non-empty global trace buffer\")\n\t}\n\tif trace.fullHead != 0 || trace.fullTail != 0 {\n\t\tthrow(\"trace: non-empty full trace buffer\")\n\t}\n\tif trace.reading != 0 || trace.reader != 0 {\n\t\tthrow(\"trace: reading after shutdown\")\n\t}\n\tfor trace.empty != 0 {\n\t\tbuf := trace.empty\n\t\ttrace.empty = buf.ptr().link\n\t\tsysFree(unsafe.Pointer(buf), unsafe.Sizeof(*buf.ptr()), &memstats.other_sys)\n\t}\n\ttrace.strings = nil\n\ttrace.shutdown = false\n\tunlock(&trace.lock)\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "StopTrace",
      "package" : 0,
      "type" : 0,
      "exported" : true
    }, {
      "name" : "stopTheWorld",
      "package" : 0,
      "type" : 172,
      "exported" : false
    }, {
      "name" : "lock",
      "package" : 0,
      "type" : 174,
      "exported" : false
    }, {
      "name" : "unlock",
      "package" : 0,
      "type" : 174,
      "exported" : false
    }, {
      "name" : "startTheWorld",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "traceGoSched",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "traceFullQueue",
      "package" : 0,
      "type" : 181,
      "exported" : false
    }, {
      "name" : "ptr",
      "package" : 0,
      "type" : 190,
      "exported" : false
    }, {
      "name" : "cputicks",
      "package" : 0,
      "type" : 192,
      "exported" : false
    }, {
      "name" : "nanotime",
      "package" : 0,
      "type" : 192,
      "exported" : false
    }, {
      "name" : "osyield",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "semacquire",
      "package" : 0,
      "type" : 194,
      "exported" : false
    }, {
      "name" : "raceacquire",
      "package" : 0,
      "type" : 197,
      "exported" : false
    }, {
      "name" : "throw",
      "package" : 0,
      "type" : 199,
      "exported" : false
    }, {
      "name" : "sysFree",
      "package" : 0,
      "type" : 201,
      "exported" : false
    } ],
    "line-end" : 353,
    "line-start" : 273,
    "names" : [ "StopTrace" ],
    "package" : 0,
    "packages" : [ {
      "name" : "runtime",
      "path" : "runtime"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "sys",
      "path" : "runtime/internal/sys"
    }, {
      "name" : "cpu",
      "path" : "internal/cpu"
    } ],
    "params" : [ ],
    "receivers" : [ ],
    "results" : [ ],
    "type" : "function",
    "types" : [ {
      "name" : "func()",
      "params" : 1,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "lock",
        "type" : 3
      }, {
        "name" : "lockOwner",
        "type" : 6
      }, {
        "name" : "enabled",
        "type" : 16
      }, {
        "name" : "shutdown",
        "type" : 16
      }, {
        "name" : "headerWritten",
        "type" : 16
      }, {
        "name" : "footerWritten",
        "type" : 16
      }, {
        "name" : "shutdownSema",
        "type" : 32
      }, {
        "name" : "seqStart",
        "type" : 31
      }, {
        "name" : "ticksStart",
        "type" : 39
      }, {
        "name" : "ticksEnd",
        "type" : 39
      }, {
        "name" : "timeStart",
        "type" : 39
      }, {
        "name" : "timeEnd",
        "type" : 39
      }, {
        "name" : "seqGC",
        "type" : 31
      }, {
        "name" : "reading",
        "type" : 113
      }, {
        "name" : "empty",
        "type" : 113
      }, {
        "name" : "fullHead",
        "type" : 113
      }, {
        "name" : "fullTail",
        "type" : 113
      }, {
        "name" : "reader",
        "type" : 29
      }, {
        "name" : "stackTab",
        "type" : 114
      }, {
        "name" : "stringsLock",
        "type" : 3
      }, {
        "name" : "strings",
        "type" : 121
      }, {
        "name" : "stringSeq",
        "type" : 31
      }, {
        "name" : "markWorkerLabels",
        "type" : 122
      }, {
        "name" : "bufLock",
        "type" : 3
      }, {
        "name" : "buf",
        "type" : 113
      } ],
      "name" : "struct{lock runtime.mutex; lockOwner *runtime.g; enabled bool; shutdown bool; headerWritten bool; footerWritten bool; shutdownSema uint32; seqStart uint64; ticksStart int64; ticksEnd int64; timeStart int64; timeEnd int64; seqGC uint64; reading runtime.traceBufPtr; empty runtime.traceBufPtr; fullHead runtime.traceBufPtr; fullTail runtime.traceBufPtr; reader runtime.guintptr; stackTab runtime.traceStackTable; stringsLock runtime.mutex; strings map[string]uint64; stringSeq uint64; markWorkerLabels [3]uint64; bufLock runtime.mutex; buf runtime.traceBufPtr}",
      "type" : "Struct",
      "underlying" : 2
    }, {
      "local-name" : "mutex",
      "name" : "runtime.mutex",
      "package" : 0,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 5
      } ],
      "name" : "struct{key uintptr}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 5
    }, {
      "elem" : 7,
      "name" : "*runtime.g",
      "type" : "Pointer",
      "underlying" : 6
    }, {
      "local-name" : "g",
      "name" : "runtime.g",
      "package" : 0,
      "type" : "Named",
      "underlying" : 8
    }, {
      "fields" : [ {
        "name" : "stack",
        "type" : 9
      }, {
        "name" : "stackguard0",
        "type" : 5
      }, {
        "name" : "stackguard1",
        "type" : 5
      }, {
        "name" : "_panic",
        "type" : 11
      }, {
        "name" : "_defer",
        "type" : 17
      }, {
        "name" : "m",
        "type" : 24
      }, {
        "name" : "sched",
        "type" : 27
      }, {
        "name" : "syscallsp",
        "type" : 5
      }, {
        "name" : "syscallpc",
        "type" : 5
      }, {
        "name" : "stktopsp",
        "type" : 5
      }, {
        "name" : "param",
        "type" : 14
      }, {
        "name" : "atomicstatus",
        "type" : 32
      }, {
        "name" : "stackLock",
        "type" : 32
      }, {
        "name" : "goid",
        "type" : 39
      }, {
        "name" : "schedlink",
        "type" : 29
      }, {
        "name" : "waitsince",
        "type" : 39
      }, {
        "name" : "waitreason",
        "type" : 83
      }, {
        "name" : "preempt",
        "type" : 16
      }, {
        "name" : "preemptStop",
        "type" : 16
      }, {
        "name" : "preemptShrink",
        "type" : 16
      }, {
        "name" : "asyncSafePoint",
        "type" : 16
      }, {
        "name" : "paniconfault",
        "type" : 16
      }, {
        "name" : "gcscandone",
        "type" : 16
      }, {
        "name" : "throwsplit",
        "type" : 16
      }, {
        "name" : "activeStackChans",
        "type" : 16
      }, {
        "name" : "raceignore",
        "type" : 41
      }, {
        "name" : "sysblocktraced",
        "type" : 16
      }, {
        "name" : "sysexitticks",
        "type" : 39
      }, {
        "name" : "traceseq",
        "type" : 31
      }, {
        "name" : "tracelastp",
        "type" : 38
      }, {
        "name" : "lockedm",
        "type" : 47
      }, {
        "name" : "sig",
        "type" : 32
      }, {
        "name" : "writebuf",
        "type" : 84
      }, {
        "name" : "sigcode0",
        "type" : 5
      }, {
        "name" : "sigcode1",
        "type" : 5
      }, {
        "name" : "sigpc",
        "type" : 5
      }, {
        "name" : "gopc",
        "type" : 5
      }, {
        "name" : "ancestors",
        "type" : 85
      }, {
        "name" : "startpc",
        "type" : 5
      }, {
        "name" : "racectx",
        "type" : 5
      }, {
        "name" : "waiting",
        "type" : 90
      }, {
        "name" : "cgoCtxt",
        "type" : 89
      }, {
        "name" : "labels",
        "type" : 14
      }, {
        "name" : "timer",
        "type" : 108
      }, {
        "name" : "selectDone",
        "type" : 32
      }, {
        "name" : "gcAssistBytes",
        "type" : 39
      } ],
      "name" : "struct{stack runtime.stack; stackguard0 uintptr; stackguard1 uintptr; _panic *runtime._panic; _defer *runtime._defer; m *runtime.m; sched runtime.gobuf; syscallsp uintptr; syscallpc uintptr; stktopsp uintptr; param unsafe.Pointer; atomicstatus uint32; stackLock uint32; goid int64; schedlink runtime.guintptr; waitsince int64; waitreason runtime.waitReason; preempt bool; preemptStop bool; preemptShrink bool; asyncSafePoint bool; paniconfault bool; gcscandone bool; throwsplit bool; activeStackChans bool; raceignore int8; sysblocktraced bool; sysexitticks int64; traceseq uint64; tracelastp runtime.puintptr; lockedm runtime.muintptr; sig uint32; writebuf []byte; sigcode0 uintptr; sigcode1 uintptr; sigpc uintptr; gopc uintptr; ancestors *[]runtime.ancestorInfo; startpc uintptr; racectx uintptr; waiting *runtime.sudog; cgoCtxt []uintptr; labels unsafe.Pointer; timer *runtime.timer; selectDone uint32; gcAssistBytes int64}",
      "type" : "Struct",
      "underlying" : 8
    }, {
      "local-name" : "stack",
      "name" : "runtime.stack",
      "package" : 0,
      "type" : "Named",
      "underlying" : 10
    }, {
      "fields" : [ {
        "name" : "lo",
        "type" : 5
      }, {
        "name" : "hi",
        "type" : 5
      } ],
      "name" : "struct{lo uintptr; hi uintptr}",
      "type" : "Struct",
      "underlying" : 10
    }, {
      "elem" : 12,
      "name" : "*runtime._panic",
      "type" : "Pointer",
      "underlying" : 11
    }, {
      "local-name" : "_panic",
      "name" : "runtime._panic",
      "package" : 0,
      "type" : "Named",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "argp",
        "type" : 14
      }, {
        "name" : "arg",
        "type" : 15
      }, {
        "name" : "link",
        "type" : 11
      }, {
        "name" : "pc",
        "type" : 5
      }, {
        "name" : "sp",
        "type" : 14
      }, {
        "name" : "recovered",
        "type" : 16
      }, {
        "name" : "aborted",
        "type" : 16
      }, {
        "name" : "goexit",
        "type" : 16
      } ],
      "name" : "struct{argp unsafe.Pointer; arg interface{}; link *runtime._panic; pc uintptr; sp unsafe.Pointer; recovered bool; aborted bool; goexit bool}",
      "type" : "Struct",
      "underlying" : 13
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 14
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 15
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 16
    }, {
      "elem" : 18,
      "name" : "*runtime._defer",
      "type" : "Pointer",
      "underlying" : 17
    }, {
      "local-name" : "_defer",
      "name" : "runtime._defer",
      "package" : 0,
      "type" : "Named",
      "underlying" : 19
    }, {
      "fields" : [ {
        "name" : "siz",
        "type" : 20
      }, {
        "name" : "started",
        "type" : 16
      }, {
        "name" : "heap",
        "type" : 16
      }, {
        "name" : "openDefer",
        "type" : 16
      }, {
        "name" : "sp",
        "type" : 5
      }, {
        "name" : "pc",
        "type" : 5
      }, {
        "name" : "fn",
        "type" : 21
      }, {
        "name" : "_panic",
        "type" : 11
      }, {
        "name" : "link",
        "type" : 17
      }, {
        "name" : "fd",
        "type" : 14
      }, {
        "name" : "varp",
        "type" : 5
      }, {
        "name" : "framepc",
        "type" : 5
      } ],
      "name" : "struct{siz int32; started bool; heap bool; openDefer bool; sp uintptr; pc uintptr; fn *runtime.funcval; _panic *runtime._panic; link *runtime._defer; fd unsafe.Pointer; varp uintptr; framepc uintptr}",
      "type" : "Struct",
      "underlying" : 19
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 20
    }, {
      "elem" : 22,
      "name" : "*runtime.funcval",
      "type" : "Pointer",
      "underlying" : 21
    }, {
      "local-name" : "funcval",
      "name" : "runtime.funcval",
      "package" : 0,
      "type" : "Named",
      "underlying" : 23
    }, {
      "fields" : [ {
        "name" : "fn",
        "type" : 5
      } ],
      "name" : "struct{fn uintptr}",
      "type" : "Struct",
      "underlying" : 23
    }, {
      "elem" : 25,
      "name" : "*runtime.m",
      "type" : "Pointer",
      "underlying" : 24
    }, {
      "local-name" : "m",
      "name" : "runtime.m",
      "package" : 0,
      "type" : "Named",
      "underlying" : 26
    }, {
      "fields" : [ {
        "name" : "g0",
        "type" : 6
      }, {
        "name" : "morebuf",
        "type" : 27
      }, {
        "name" : "divmod",
        "type" : 32
      }, {
        "name" : "procid",
        "type" : 31
      }, {
        "name" : "gsignal",
        "type" : 6
      }, {
        "name" : "goSigStack",
        "type" : 33
      }, {
        "name" : "sigmask",
        "type" : 35
      }, {
        "name" : "tls",
        "type" : 37
      }, {
        "name" : "mstartfn",
        "type" : 0
      }, {
        "name" : "curg",
        "type" : 6
      }, {
        "name" : "caughtsig",
        "type" : 29
      }, {
        "name" : "p",
        "type" : 38
      }, {
        "name" : "nextp",
        "type" : 38
      }, {
        "name" : "oldp",
        "type" : 38
      }, {
        "name" : "id",
        "type" : 39
      }, {
        "name" : "mallocing",
        "type" : 20
      }, {
        "name" : "throwing",
        "type" : 20
      }, {
        "name" : "preemptoff",
        "type" : 40
      }, {
        "name" : "locks",
        "type" : 20
      }, {
        "name" : "dying",
        "type" : 20
      }, {
        "name" : "profilehz",
        "type" : 20
      }, {
        "name" : "spinning",
        "type" : 16
      }, {
        "name" : "blocked",
        "type" : 16
      }, {
        "name" : "newSigstack",
        "type" : 16
      }, {
        "name" : "printlock",
        "type" : 41
      }, {
        "name" : "incgo",
        "type" : 16
      }, {
        "name" : "freeWait",
        "type" : 32
      }, {
        "name" : "fastrand",
        "type" : 36
      }, {
        "name" : "needextram",
        "type" : 16
      }, {
        "name" : "traceback",
        "type" : 42
      }, {
        "name" : "ncgocall",
        "type" : 31
      }, {
        "name" : "ncgo",
        "type" : 20
      }, {
        "name" : "cgoCallersUse",
        "type" : 32
      }, {
        "name" : "cgoCallers",
        "type" : 43
      }, {
        "name" : "park",
        "type" : 46
      }, {
        "name" : "alllink",
        "type" : 24
      }, {
        "name" : "schedlink",
        "type" : 47
      }, {
        "name" : "mcache",
        "type" : 48
      }, {
        "name" : "lockedg",
        "type" : 29
      }, {
        "name" : "createstack",
        "type" : 45
      }, {
        "name" : "lockedExt",
        "type" : 32
      }, {
        "name" : "lockedInt",
        "type" : 32
      }, {
        "name" : "nextwaitm",
        "type" : 47
      }, {
        "name" : "waitunlockf",
        "type" : 74
      }, {
        "name" : "waitlock",
        "type" : 14
      }, {
        "name" : "waittraceev",
        "type" : 69
      }, {
        "name" : "waittraceskip",
        "type" : 77
      }, {
        "name" : "startingtrace",
        "type" : 16
      }, {
        "name" : "syscalltick",
        "type" : 32
      }, {
        "name" : "freelink",
        "type" : 24
      }, {
        "name" : "libcall",
        "type" : 78
      }, {
        "name" : "libcallpc",
        "type" : 5
      }, {
        "name" : "libcallsp",
        "type" : 5
      }, {
        "name" : "libcallg",
        "type" : 29
      }, {
        "name" : "syscall",
        "type" : 78
      }, {
        "name" : "vdsoSP",
        "type" : 5
      }, {
        "name" : "vdsoPC",
        "type" : 5
      }, {
        "name" : "preemptGen",
        "type" : 32
      }, {
        "name" : "signalPending",
        "type" : 32
      }, {
        "name" : "dlogPerM",
        "type" : 80
      }, {
        "name" : "mOS",
        "type" : 82
      } ],
      "name" : "struct{g0 *runtime.g; morebuf runtime.gobuf; divmod uint32; procid uint64; gsignal *runtime.g; goSigStack runtime.gsignalStack; sigmask runtime.sigset; tls [6]uintptr; mstartfn func(); curg *runtime.g; caughtsig runtime.guintptr; p runtime.puintptr; nextp runtime.puintptr; oldp runtime.puintptr; id int64; mallocing int32; throwing int32; preemptoff string; locks int32; dying int32; profilehz int32; spinning bool; blocked bool; newSigstack bool; printlock int8; incgo bool; freeWait uint32; fastrand [2]uint32; needextram bool; traceback uint8; ncgocall uint64; ncgo int32; cgoCallersUse uint32; cgoCallers *runtime.cgoCallers; park runtime.note; alllink *runtime.m; schedlink runtime.muintptr; mcache *runtime.mcache; lockedg runtime.guintptr; createstack [32]uintptr; lockedExt uint32; lockedInt uint32; nextwaitm runtime.muintptr; waitunlockf func(*runtime.g, unsafe.Pointer) bool; waitlock unsafe.Pointer; waittraceev byte; waittraceskip int; startingtrace bool; syscalltick uint32; freelink *runtime.m; libcall runtime.libcall; libcallpc uintptr; libcallsp uintptr; libcallg runtime.guintptr; syscall runtime.libcall; vdsoSP uintptr; vdsoPC uintptr; preemptGen uint32; signalPending uint32; runtime.dlogPerM; runtime.mOS}",
      "type" : "Struct",
      "underlying" : 26
    }, {
      "local-name" : "gobuf",
      "name" : "runtime.gobuf",
      "package" : 0,
      "type" : "Named",
      "underlying" : 28
    }, {
      "fields" : [ {
        "name" : "sp",
        "type" : 5
      }, {
        "name" : "pc",
        "type" : 5
      }, {
        "name" : "g",
        "type" : 29
      }, {
        "name" : "ctxt",
        "type" : 14
      }, {
        "name" : "ret",
        "type" : 30
      }, {
        "name" : "lr",
        "type" : 5
      }, {
        "name" : "bp",
        "type" : 5
      } ],
      "name" : "struct{sp uintptr; pc uintptr; g runtime.guintptr; ctxt unsafe.Pointer; ret runtime/internal/sys.Uintreg; lr uintptr; bp uintptr}",
      "type" : "Struct",
      "underlying" : 28
    }, {
      "local-name" : "guintptr",
      "name" : "runtime.guintptr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 5
    }, {
      "local-name" : "Uintreg",
      "name" : "runtime/internal/sys.Uintreg",
      "package" : 2,
      "type" : "Named",
      "underlying" : 31
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 31
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 32
    }, {
      "local-name" : "gsignalStack",
      "name" : "runtime.gsignalStack",
      "package" : 0,
      "type" : "Named",
      "underlying" : 34
    }, {
      "fields" : [ {
        "name" : "stack",
        "type" : 9
      }, {
        "name" : "stackguard0",
        "type" : 5
      }, {
        "name" : "stackguard1",
        "type" : 5
      }, {
        "name" : "stktopsp",
        "type" : 5
      } ],
      "name" : "struct{stack runtime.stack; stackguard0 uintptr; stackguard1 uintptr; stktopsp uintptr}",
      "type" : "Struct",
      "underlying" : 34
    }, {
      "local-name" : "sigset",
      "name" : "runtime.sigset",
      "package" : 0,
      "type" : "Named",
      "underlying" : 36
    }, {
      "elem" : 32,
      "name" : "[2]uint32",
      "type" : "Array",
      "underlying" : 36
    }, {
      "elem" : 5,
      "name" : "[6]uintptr",
      "type" : "Array",
      "underlying" : 37
    }, {
      "local-name" : "puintptr",
      "name" : "runtime.puintptr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 5
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 39
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 40
    }, {
      "name" : "int8",
      "type" : "Basic",
      "underlying" : 41
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 42
    }, {
      "elem" : 44,
      "name" : "*runtime.cgoCallers",
      "type" : "Pointer",
      "underlying" : 43
    }, {
      "local-name" : "cgoCallers",
      "name" : "runtime.cgoCallers",
      "package" : 0,
      "type" : "Named",
      "underlying" : 45
    }, {
      "elem" : 5,
      "name" : "[32]uintptr",
      "type" : "Array",
      "underlying" : 45
    }, {
      "local-name" : "note",
      "name" : "runtime.note",
      "package" : 0,
      "type" : "Named",
      "underlying" : 4
    }, {
      "local-name" : "muintptr",
      "name" : "runtime.muintptr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 49,
      "name" : "*runtime.mcache",
      "type" : "Pointer",
      "underlying" : 48
    }, {
      "local-name" : "mcache",
      "name" : "runtime.mcache",
      "package" : 0,
      "type" : "Named",
      "underlying" : 50
    }, {
      "fields" : [ {
        "name" : "next_sample",
        "type" : 5
      }, {
        "name" : "local_scan",
        "type" : 5
      }, {
        "name" : "tiny",
        "type" : 5
      }, {
        "name" : "tinyoffset",
        "type" : 5
      }, {
        "name" : "local_tinyallocs",
        "type" : 5
      }, {
        "name" : "alloc",
        "type" : 51
      }, {
        "name" : "stackcache",
        "type" : 70
      }, {
        "name" : "local_largefree",
        "type" : 5
      }, {
        "name" : "local_nlargefree",
        "type" : 5
      }, {
        "name" : "local_nsmallfree",
        "type" : 73
      }, {
        "name" : "flushGen",
        "type" : 32
      } ],
      "name" : "struct{next_sample uintptr; local_scan uintptr; tiny uintptr; tinyoffset uintptr; local_tinyallocs uintptr; alloc [134]*runtime.mspan; stackcache [4]runtime.stackfreelist; local_largefree uintptr; local_nlargefree uintptr; local_nsmallfree [67]uintptr; flushGen uint32}",
      "type" : "Struct",
      "underlying" : 50
    }, {
      "elem" : 52,
      "name" : "[134]*runtime.mspan",
      "type" : "Array",
      "underlying" : 51
    }, {
      "elem" : 53,
      "name" : "*runtime.mspan",
      "type" : "Pointer",
      "underlying" : 52
    }, {
      "local-name" : "mspan",
      "name" : "runtime.mspan",
      "package" : 0,
      "type" : "Named",
      "underlying" : 54
    }, {
      "fields" : [ {
        "name" : "next",
        "type" : 52
      }, {
        "name" : "prev",
        "type" : 52
      }, {
        "name" : "list",
        "type" : 55
      }, {
        "name" : "startAddr",
        "type" : 5
      }, {
        "name" : "npages",
        "type" : 5
      }, {
        "name" : "manualFreeList",
        "type" : 58
      }, {
        "name" : "freeindex",
        "type" : 5
      }, {
        "name" : "nelems",
        "type" : 5
      }, {
        "name" : "allocCache",
        "type" : 31
      }, {
        "name" : "allocBits",
        "type" : 59
      }, {
        "name" : "gcmarkBits",
        "type" : 59
      }, {
        "name" : "sweepgen",
        "type" : 32
      }, {
        "name" : "divMul",
        "type" : 61
      }, {
        "name" : "baseMask",
        "type" : 61
      }, {
        "name" : "allocCount",
        "type" : 61
      }, {
        "name" : "spanclass",
        "type" : 62
      }, {
        "name" : "state",
        "type" : 63
      }, {
        "name" : "needzero",
        "type" : 42
      }, {
        "name" : "divShift",
        "type" : 42
      }, {
        "name" : "divShift2",
        "type" : 42
      }, {
        "name" : "elemsize",
        "type" : 5
      }, {
        "name" : "limit",
        "type" : 5
      }, {
        "name" : "speciallock",
        "type" : 3
      }, {
        "name" : "specials",
        "type" : 66
      } ],
      "name" : "struct{next *runtime.mspan; prev *runtime.mspan; list *runtime.mSpanList; startAddr uintptr; npages uintptr; manualFreeList runtime.gclinkptr; freeindex uintptr; nelems uintptr; allocCache uint64; allocBits *runtime.gcBits; gcmarkBits *runtime.gcBits; sweepgen uint32; divMul uint16; baseMask uint16; allocCount uint16; spanclass runtime.spanClass; state runtime.mSpanStateBox; needzero uint8; divShift uint8; divShift2 uint8; elemsize uintptr; limit uintptr; speciallock runtime.mutex; specials *runtime.special}",
      "type" : "Struct",
      "underlying" : 54
    }, {
      "elem" : 56,
      "name" : "*runtime.mSpanList",
      "type" : "Pointer",
      "underlying" : 55
    }, {
      "local-name" : "mSpanList",
      "name" : "runtime.mSpanList",
      "package" : 0,
      "type" : "Named",
      "underlying" : 57
    }, {
      "fields" : [ {
        "name" : "first",
        "type" : 52
      }, {
        "name" : "last",
        "type" : 52
      } ],
      "name" : "struct{first *runtime.mspan; last *runtime.mspan}",
      "type" : "Struct",
      "underlying" : 57
    }, {
      "local-name" : "gclinkptr",
      "name" : "runtime.gclinkptr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 60,
      "name" : "*runtime.gcBits",
      "type" : "Pointer",
      "underlying" : 59
    }, {
      "local-name" : "gcBits",
      "name" : "runtime.gcBits",
      "package" : 0,
      "type" : "Named",
      "underlying" : 42
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 61
    }, {
      "local-name" : "spanClass",
      "name" : "runtime.spanClass",
      "package" : 0,
      "type" : "Named",
      "underlying" : 42
    }, {
      "local-name" : "mSpanStateBox",
      "name" : "runtime.mSpanStateBox",
      "package" : 0,
      "type" : "Named",
      "underlying" : 64
    }, {
      "fields" : [ {
        "name" : "s",
        "type" : 65
      } ],
      "name" : "struct{s runtime.mSpanState}",
      "type" : "Struct",
      "underlying" : 64
    }, {
      "local-name" : "mSpanState",
      "name" : "runtime.mSpanState",
      "package" : 0,
      "type" : "Named",
      "underlying" : 42
    }, {
      "elem" : 67,
      "name" : "*runtime.special",
      "type" : "Pointer",
      "underlying" : 66
    }, {
      "local-name" : "special",
      "name" : "runtime.special",
      "package" : 0,
      "type" : "Named",
      "underlying" : 68
    }, {
      "fields" : [ {
        "name" : "next",
        "type" : 66
      }, {
        "name" : "offset",
        "type" : 61
      }, {
        "name" : "kind",
        "type" : 69
      } ],
      "name" : "struct{next *runtime.special; offset uint16; kind byte}",
      "type" : "Struct",
      "underlying" : 68
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 69
    }, {
      "elem" : 71,
      "name" : "[4]runtime.stackfreelist",
      "type" : "Array",
      "underlying" : 70
    }, {
      "local-name" : "stackfreelist",
      "name" : "runtime.stackfreelist",
      "package" : 0,
      "type" : "Named",
      "underlying" : 72
    }, {
      "fields" : [ {
        "name" : "list",
        "type" : 58
      }, {
        "name" : "size",
        "type" : 5
      } ],
      "name" : "struct{list runtime.gclinkptr; size uintptr}",
      "type" : "Struct",
      "underlying" : 72
    }, {
      "elem" : 5,
      "name" : "[67]uintptr",
      "type" : "Array",
      "underlying" : 73
    }, {
      "name" : "func(*runtime.g, unsafe.Pointer) bool",
      "params" : 75,
      "recv" : -1,
      "results" : 76,
      "type" : "Signature",
      "underlying" : 74,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 6
      }, {
        "name" : "",
        "type" : 14
      } ],
      "name" : "(*runtime.g, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 75
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 16
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 76
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 77
    }, {
      "local-name" : "libcall",
      "name" : "runtime.libcall",
      "package" : 0,
      "type" : "Named",
      "underlying" : 79
    }, {
      "fields" : [ {
        "name" : "fn",
        "type" : 5
      }, {
        "name" : "n",
        "type" : 5
      }, {
        "name" : "args",
        "type" : 5
      }, {
        "name" : "r1",
        "type" : 5
      }, {
        "name" : "r2",
        "type" : 5
      }, {
        "name" : "err",
        "type" : 5
      } ],
      "name" : "struct{fn uintptr; n uintptr; args uintptr; r1 uintptr; r2 uintptr; err uintptr}",
      "type" : "Struct",
      "underlying" : 79
    }, {
      "local-name" : "dlogPerM",
      "name" : "runtime.dlogPerM",
      "package" : 0,
      "type" : "Named",
      "underlying" : 81
    }, {
      "fields" : [ ],
      "name" : "struct{}",
      "type" : "Struct",
      "underlying" : 81
    }, {
      "local-name" : "mOS",
      "name" : "runtime.mOS",
      "package" : 0,
      "type" : "Named",
      "underlying" : 81
    }, {
      "local-name" : "waitReason",
      "name" : "runtime.waitReason",
      "package" : 0,
      "type" : "Named",
      "underlying" : 42
    }, {
      "elem" : 69,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 84
    }, {
      "elem" : 86,
      "name" : "*[]runtime.ancestorInfo",
      "type" : "Pointer",
      "underlying" : 85
    }, {
      "elem" : 87,
      "name" : "[]runtime.ancestorInfo",
      "type" : "Slice",
      "underlying" : 86
    }, {
      "local-name" : "ancestorInfo",
      "name" : "runtime.ancestorInfo",
      "package" : 0,
      "type" : "Named",
      "underlying" : 88
    }, {
      "fields" : [ {
        "name" : "pcs",
        "type" : 89
      }, {
        "name" : "goid",
        "type" : 39
      }, {
        "name" : "gopc",
        "type" : 5
      } ],
      "name" : "struct{pcs []uintptr; goid int64; gopc uintptr}",
      "type" : "Struct",
      "underlying" : 88
    }, {
      "elem" : 5,
      "name" : "[]uintptr",
      "type" : "Slice",
      "underlying" : 89
    }, {
      "elem" : 91,
      "name" : "*runtime.sudog",
      "type" : "Pointer",
      "underlying" : 90
    }, {
      "local-name" : "sudog",
      "name" : "runtime.sudog",
      "package" : 0,
      "type" : "Named",
      "underlying" : 92
    }, {
      "fields" : [ {
        "name" : "g",
        "type" : 6
      }, {
        "name" : "isSelect",
        "type" : 16
      }, {
        "name" : "next",
        "type" : 90
      }, {
        "name" : "prev",
        "type" : 90
      }, {
        "name" : "elem",
        "type" : 14
      }, {
        "name" : "acquiretime",
        "type" : 39
      }, {
        "name" : "releasetime",
        "type" : 39
      }, {
        "name" : "ticket",
        "type" : 32
      }, {
        "name" : "parent",
        "type" : 90
      }, {
        "name" : "waitlink",
        "type" : 90
      }, {
        "name" : "waittail",
        "type" : 90
      }, {
        "name" : "c",
        "type" : 93
      } ],
      "name" : "struct{g *runtime.g; isSelect bool; next *runtime.sudog; prev *runtime.sudog; elem unsafe.Pointer; acquiretime int64; releasetime int64; ticket uint32; parent *runtime.sudog; waitlink *runtime.sudog; waittail *runtime.sudog; c *runtime.hchan}",
      "type" : "Struct",
      "underlying" : 92
    }, {
      "elem" : 94,
      "name" : "*runtime.hchan",
      "type" : "Pointer",
      "underlying" : 93
    }, {
      "local-name" : "hchan",
      "name" : "runtime.hchan",
      "package" : 0,
      "type" : "Named",
      "underlying" : 95
    }, {
      "fields" : [ {
        "name" : "qcount",
        "type" : 96
      }, {
        "name" : "dataqsiz",
        "type" : 96
      }, {
        "name" : "buf",
        "type" : 14
      }, {
        "name" : "elemsize",
        "type" : 61
      }, {
        "name" : "closed",
        "type" : 32
      }, {
        "name" : "elemtype",
        "type" : 97
      }, {
        "name" : "sendx",
        "type" : 96
      }, {
        "name" : "recvx",
        "type" : 96
      }, {
        "name" : "recvq",
        "type" : 106
      }, {
        "name" : "sendq",
        "type" : 106
      }, {
        "name" : "lock",
        "type" : 3
      } ],
      "name" : "struct{qcount uint; dataqsiz uint; buf unsafe.Pointer; elemsize uint16; closed uint32; elemtype *runtime._type; sendx uint; recvx uint; recvq runtime.waitq; sendq runtime.waitq; lock runtime.mutex}",
      "type" : "Struct",
      "underlying" : 95
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 96
    }, {
      "elem" : 98,
      "name" : "*runtime._type",
      "type" : "Pointer",
      "underlying" : 97
    }, {
      "local-name" : "_type",
      "name" : "runtime._type",
      "package" : 0,
      "type" : "Named",
      "underlying" : 99
    }, {
      "fields" : [ {
        "name" : "size",
        "type" : 5
      }, {
        "name" : "ptrdata",
        "type" : 5
      }, {
        "name" : "hash",
        "type" : 32
      }, {
        "name" : "tflag",
        "type" : 100
      }, {
        "name" : "align",
        "type" : 42
      }, {
        "name" : "fieldAlign",
        "type" : 42
      }, {
        "name" : "kind",
        "type" : 42
      }, {
        "name" : "equal",
        "type" : 101
      }, {
        "name" : "gcdata",
        "type" : 103
      }, {
        "name" : "str",
        "type" : 104
      }, {
        "name" : "ptrToThis",
        "type" : 105
      } ],
      "name" : "struct{size uintptr; ptrdata uintptr; hash uint32; tflag runtime.tflag; align uint8; fieldAlign uint8; kind uint8; equal func(unsafe.Pointer, unsafe.Pointer) bool; gcdata *byte; str runtime.nameOff; ptrToThis runtime.typeOff}",
      "type" : "Struct",
      "underlying" : 99
    }, {
      "local-name" : "tflag",
      "name" : "runtime.tflag",
      "package" : 0,
      "type" : "Named",
      "underlying" : 42
    }, {
      "name" : "func(unsafe.Pointer, unsafe.Pointer) bool",
      "params" : 102,
      "recv" : -1,
      "results" : 76,
      "type" : "Signature",
      "underlying" : 101,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 14
      }, {
        "name" : "",
        "type" : 14
      } ],
      "name" : "(unsafe.Pointer, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 102
    }, {
      "elem" : 69,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 103
    }, {
      "local-name" : "nameOff",
      "name" : "runtime.nameOff",
      "package" : 0,
      "type" : "Named",
      "underlying" : 20
    }, {
      "local-name" : "typeOff",
      "name" : "runtime.typeOff",
      "package" : 0,
      "type" : "Named",
      "underlying" : 20
    }, {
      "local-name" : "waitq",
      "name" : "runtime.waitq",
      "package" : 0,
      "type" : "Named",
      "underlying" : 107
    }, {
      "fields" : [ {
        "name" : "first",
        "type" : 90
      }, {
        "name" : "last",
        "type" : 90
      } ],
      "name" : "struct{first *runtime.sudog; last *runtime.sudog}",
      "type" : "Struct",
      "underlying" : 107
    }, {
      "elem" : 109,
      "name" : "*runtime.timer",
      "type" : "Pointer",
      "underlying" : 108
    }, {
      "local-name" : "timer",
      "name" : "runtime.timer",
      "package" : 0,
      "type" : "Named",
      "underlying" : 110
    }, {
      "fields" : [ {
        "name" : "pp",
        "type" : 38
      }, {
        "name" : "when",
        "type" : 39
      }, {
        "name" : "period",
        "type" : 39
      }, {
        "name" : "f",
        "type" : 111
      }, {
        "name" : "arg",
        "type" : 15
      }, {
        "name" : "seq",
        "type" : 5
      }, {
        "name" : "nextwhen",
        "type" : 39
      }, {
        "name" : "status",
        "type" : 32
      } ],
      "name" : "struct{pp runtime.puintptr; when int64; period int64; f func(interface{}, uintptr); arg interface{}; seq uintptr; nextwhen int64; status uint32}",
      "type" : "Struct",
      "underlying" : 110
    }, {
      "name" : "func(interface{}, uintptr)",
      "params" : 112,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 111,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 15
      }, {
        "name" : "",
        "type" : 5
      } ],
      "name" : "(interface{}, uintptr)",
      "type" : "Tuple",
      "underlying" : 112
    }, {
      "local-name" : "traceBufPtr",
      "name" : "runtime.traceBufPtr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 5
    }, {
      "local-name" : "traceStackTable",
      "name" : "runtime.traceStackTable",
      "package" : 0,
      "type" : "Named",
      "underlying" : 115
    }, {
      "fields" : [ {
        "name" : "lock",
        "type" : 3
      }, {
        "name" : "seq",
        "type" : 32
      }, {
        "name" : "mem",
        "type" : 116
      }, {
        "name" : "tab",
        "type" : 119
      } ],
      "name" : "struct{lock runtime.mutex; seq uint32; mem runtime.traceAlloc; tab [8192]runtime.traceStackPtr}",
      "type" : "Struct",
      "underlying" : 115
    }, {
      "local-name" : "traceAlloc",
      "name" : "runtime.traceAlloc",
      "package" : 0,
      "type" : "Named",
      "underlying" : 117
    }, {
      "fields" : [ {
        "name" : "head",
        "type" : 118
      }, {
        "name" : "off",
        "type" : 5
      } ],
      "name" : "struct{head runtime.traceAllocBlockPtr; off uintptr}",
      "type" : "Struct",
      "underlying" : 117
    }, {
      "local-name" : "traceAllocBlockPtr",
      "name" : "runtime.traceAllocBlockPtr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 120,
      "name" : "[8192]runtime.traceStackPtr",
      "type" : "Array",
      "underlying" : 119
    }, {
      "local-name" : "traceStackPtr",
      "name" : "runtime.traceStackPtr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 5
    }, {
      "elem" : 31,
      "key" : 40,
      "name" : "map[string]uint64",
      "type" : "Map",
      "underlying" : 121
    }, {
      "elem" : 31,
      "name" : "[3]uint64",
      "type" : "Array",
      "underlying" : 122
    }, {
      "elem" : 124,
      "name" : "[]*runtime.p",
      "type" : "Slice",
      "underlying" : 123
    }, {
      "elem" : 125,
      "name" : "*runtime.p",
      "type" : "Pointer",
      "underlying" : 124
    }, {
      "local-name" : "p",
      "name" : "runtime.p",
      "package" : 0,
      "type" : "Named",
      "underlying" : 126
    }, {
      "fields" : [ {
        "name" : "id",
        "type" : 20
      }, {
        "name" : "status",
        "type" : 32
      }, {
        "name" : "link",
        "type" : 38
      }, {
        "name" : "schedtick",
        "type" : 32
      }, {
        "name" : "syscalltick",
        "type" : 32
      }, {
        "name" : "sysmontick",
        "type" : 127
      }, {
        "name" : "m",
        "type" : 47
      }, {
        "name" : "mcache",
        "type" : 48
      }, {
        "name" : "pcache",
        "type" : 129
      }, {
        "name" : "raceprocctx",
        "type" : 5
      }, {
        "name" : "deferpool",
        "type" : 131
      }, {
        "name" : "deferpoolbuf",
        "type" : 133
      }, {
        "name" : "goidcache",
        "type" : 31
      }, {
        "name" : "goidcacheend",
        "type" : 31
      }, {
        "name" : "runqhead",
        "type" : 32
      }, {
        "name" : "runqtail",
        "type" : 32
      }, {
        "name" : "runq",
        "type" : 135
      }, {
        "name" : "runnext",
        "type" : 29
      }, {
        "name" : "gFree",
        "type" : 136
      }, {
        "name" : "sudogcache",
        "type" : 139
      }, {
        "name" : "sudogbuf",
        "type" : 140
      }, {
        "name" : "mspancache",
        "type" : 141
      }, {
        "name" : "tracebuf",
        "type" : 113
      }, {
        "name" : "traceSweep",
        "type" : 16
      }, {
        "name" : "traceSwept",
        "type" : 5
      }, {
        "name" : "traceReclaimed",
        "type" : 5
      }, {
        "name" : "palloc",
        "type" : 143
      }, {
        "name" : "_",
        "type" : 32
      }, {
        "name" : "timer0When",
        "type" : 31
      }, {
        "name" : "gcAssistTime",
        "type" : 39
      }, {
        "name" : "gcFractionalMarkTime",
        "type" : 39
      }, {
        "name" : "gcBgMarkWorker",
        "type" : 29
      }, {
        "name" : "gcMarkWorkerMode",
        "type" : 147
      }, {
        "name" : "gcMarkWorkerStartTime",
        "type" : 39
      }, {
        "name" : "gcw",
        "type" : 148
      }, {
        "name" : "wbBuf",
        "type" : 159
      }, {
        "name" : "runSafePointFn",
        "type" : 32
      }, {
        "name" : "timersLock",
        "type" : 3
      }, {
        "name" : "timers",
        "type" : 162
      }, {
        "name" : "numTimers",
        "type" : 32
      }, {
        "name" : "adjustTimers",
        "type" : 32
      }, {
        "name" : "deletedTimers",
        "type" : 32
      }, {
        "name" : "timerRaceCtx",
        "type" : 5
      }, {
        "name" : "preempt",
        "type" : 16
      }, {
        "name" : "pad",
        "type" : 163
      } ],
      "name" : "struct{id int32; status uint32; link runtime.puintptr; schedtick uint32; syscalltick uint32; sysmontick runtime.sysmontick; m runtime.muintptr; mcache *runtime.mcache; pcache runtime.pageCache; raceprocctx uintptr; deferpool [5][]*runtime._defer; deferpoolbuf [5][32]*runtime._defer; goidcache uint64; goidcacheend uint64; runqhead uint32; runqtail uint32; runq [256]runtime.guintptr; runnext runtime.guintptr; gFree struct{runtime.gList; n int32}; sudogcache []*runtime.sudog; sudogbuf [128]*runtime.sudog; mspancache struct{len int; buf [128]*runtime.mspan}; tracebuf runtime.traceBufPtr; traceSweep bool; traceSwept uintptr; traceReclaimed uintptr; palloc runtime.persistentAlloc; _ uint32; timer0When uint64; gcAssistTime int64; gcFractionalMarkTime int64; gcBgMarkWorker runtime.guintptr; gcMarkWorkerMode runtime.gcMarkWorkerMode; gcMarkWorkerStartTime int64; gcw runtime.gcWork; wbBuf runtime.wbBuf; runSafePointFn uint32; timersLock runtime.mutex; timers []*runtime.timer; numTimers uint32; adjustTimers uint32; deletedTimers uint32; timerRaceCtx uintptr; preempt bool; pad internal/cpu.CacheLinePad}",
      "type" : "Struct",
      "underlying" : 126
    }, {
      "local-name" : "sysmontick",
      "name" : "runtime.sysmontick",
      "package" : 0,
      "type" : "Named",
      "underlying" : 128
    }, {
      "fields" : [ {
        "name" : "schedtick",
        "type" : 32
      }, {
        "name" : "schedwhen",
        "type" : 39
      }, {
        "name" : "syscalltick",
        "type" : 32
      }, {
        "name" : "syscallwhen",
        "type" : 39
      } ],
      "name" : "struct{schedtick uint32; schedwhen int64; syscalltick uint32; syscallwhen int64}",
      "type" : "Struct",
      "underlying" : 128
    }, {
      "local-name" : "pageCache",
      "name" : "runtime.pageCache",
      "package" : 0,
      "type" : "Named",
      "underlying" : 130
    }, {
      "fields" : [ {
        "name" : "base",
        "type" : 5
      }, {
        "name" : "cache",
        "type" : 31
      }, {
        "name" : "scav",
        "type" : 31
      } ],
      "name" : "struct{base uintptr; cache uint64; scav uint64}",
      "type" : "Struct",
      "underlying" : 130
    }, {
      "elem" : 132,
      "name" : "[5][]*runtime._defer",
      "type" : "Array",
      "underlying" : 131
    }, {
      "elem" : 17,
      "name" : "[]*runtime._defer",
      "type" : "Slice",
      "underlying" : 132
    }, {
      "elem" : 134,
      "name" : "[5][32]*runtime._defer",
      "type" : "Array",
      "underlying" : 133
    }, {
      "elem" : 17,
      "name" : "[32]*runtime._defer",
      "type" : "Array",
      "underlying" : 134
    }, {
      "elem" : 29,
      "name" : "[256]runtime.guintptr",
      "type" : "Array",
      "underlying" : 135
    }, {
      "fields" : [ {
        "name" : "gList",
        "type" : 137
      }, {
        "name" : "n",
        "type" : 20
      } ],
      "name" : "struct{runtime.gList; n int32}",
      "type" : "Struct",
      "underlying" : 136
    }, {
      "local-name" : "gList",
      "name" : "runtime.gList",
      "package" : 0,
      "type" : "Named",
      "underlying" : 138
    }, {
      "fields" : [ {
        "name" : "head",
        "type" : 29
      } ],
      "name" : "struct{head runtime.guintptr}",
      "type" : "Struct",
      "underlying" : 138
    }, {
      "elem" : 90,
      "name" : "[]*runtime.sudog",
      "type" : "Slice",
      "underlying" : 139
    }, {
      "elem" : 90,
      "name" : "[128]*runtime.sudog",
      "type" : "Array",
      "underlying" : 140
    }, {
      "fields" : [ {
        "name" : "len",
        "type" : 77
      }, {
        "name" : "buf",
        "type" : 142
      } ],
      "name" : "struct{len int; buf [128]*runtime.mspan}",
      "type" : "Struct",
      "underlying" : 141
    }, {
      "elem" : 52,
      "name" : "[128]*runtime.mspan",
      "type" : "Array",
      "underlying" : 142
    }, {
      "local-name" : "persistentAlloc",
      "name" : "runtime.persistentAlloc",
      "package" : 0,
      "type" : "Named",
      "underlying" : 144
    }, {
      "fields" : [ {
        "name" : "base",
        "type" : 145
      }, {
        "name" : "off",
        "type" : 5
      } ],
      "name" : "struct{base *runtime.notInHeap; off uintptr}",
      "type" : "Struct",
      "underlying" : 144
    }, {
      "elem" : 146,
      "name" : "*runtime.notInHeap",
      "type" : "Pointer",
      "underlying" : 145
    }, {
      "local-name" : "notInHeap",
      "name" : "runtime.notInHeap",
      "package" : 0,
      "type" : "Named",
      "underlying" : 81
    }, {
      "local-name" : "gcMarkWorkerMode",
      "name" : "runtime.gcMarkWorkerMode",
      "package" : 0,
      "type" : "Named",
      "underlying" : 77
    }, {
      "local-name" : "gcWork",
      "name" : "runtime.gcWork",
      "package" : 0,
      "type" : "Named",
      "underlying" : 149
    }, {
      "fields" : [ {
        "name" : "wbuf1",
        "type" : 150
      }, {
        "name" : "wbuf2",
        "type" : 150
      }, {
        "name" : "bytesMarked",
        "type" : 31
      }, {
        "name" : "scanWork",
        "type" : 39
      }, {
        "name" : "flushedWork",
        "type" : 16
      }, {
        "name" : "pauseGen",
        "type" : 32
      }, {
        "name" : "putGen",
        "type" : 32
      }, {
        "name" : "pauseStack",
        "type" : 158
      } ],
      "name" : "struct{wbuf1 *runtime.workbuf; wbuf2 *runtime.workbuf; bytesMarked uint64; scanWork int64; flushedWork bool; pauseGen uint32; putGen uint32; pauseStack [16]uintptr}",
      "type" : "Struct",
      "underlying" : 149
    }, {
      "elem" : 151,
      "name" : "*runtime.workbuf",
      "type" : "Pointer",
      "underlying" : 150
    }, {
      "local-name" : "workbuf",
      "name" : "runtime.workbuf",
      "package" : 0,
      "type" : "Named",
      "underlying" : 152
    }, {
      "fields" : [ {
        "name" : "workbufhdr",
        "type" : 153
      }, {
        "name" : "obj",
        "type" : 157
      } ],
      "name" : "struct{runtime.workbufhdr; obj [253]uintptr}",
      "type" : "Struct",
      "underlying" : 152
    }, {
      "local-name" : "workbufhdr",
      "name" : "runtime.workbufhdr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 154
    }, {
      "fields" : [ {
        "name" : "node",
        "type" : 155
      }, {
        "name" : "nobj",
        "type" : 77
      } ],
      "name" : "struct{node runtime.lfnode; nobj int}",
      "type" : "Struct",
      "underlying" : 154
    }, {
      "local-name" : "lfnode",
      "name" : "runtime.lfnode",
      "package" : 0,
      "type" : "Named",
      "underlying" : 156
    }, {
      "fields" : [ {
        "name" : "next",
        "type" : 31
      }, {
        "name" : "pushcnt",
        "type" : 5
      } ],
      "name" : "struct{next uint64; pushcnt uintptr}",
      "type" : "Struct",
      "underlying" : 156
    }, {
      "elem" : 5,
      "name" : "[253]uintptr",
      "type" : "Array",
      "underlying" : 157
    }, {
      "elem" : 5,
      "name" : "[16]uintptr",
      "type" : "Array",
      "underlying" : 158
    }, {
      "local-name" : "wbBuf",
      "name" : "runtime.wbBuf",
      "package" : 0,
      "type" : "Named",
      "underlying" : 160
    }, {
      "fields" : [ {
        "name" : "next",
        "type" : 5
      }, {
        "name" : "end",
        "type" : 5
      }, {
        "name" : "buf",
        "type" : 161
      }, {
        "name" : "debugGen",
        "type" : 32
      } ],
      "name" : "struct{next uintptr; end uintptr; buf [512]uintptr; debugGen uint32}",
      "type" : "Struct",
      "underlying" : 160
    }, {
      "elem" : 5,
      "name" : "[512]uintptr",
      "type" : "Array",
      "underlying" : 161
    }, {
      "elem" : 108,
      "name" : "[]*runtime.timer",
      "type" : "Slice",
      "underlying" : 162
    }, {
      "local-name" : "CacheLinePad",
      "name" : "internal/cpu.CacheLinePad",
      "package" : 3,
      "type" : "Named",
      "underlying" : 164
    }, {
      "fields" : [ {
        "name" : "_",
        "type" : 165
      } ],
      "name" : "struct{_ [64]byte}",
      "type" : "Struct",
      "underlying" : 164
    }, {
      "elem" : 69,
      "name" : "[64]byte",
      "type" : "Array",
      "underlying" : 165
    }, {
      "local-name" : "mstats",
      "name" : "runtime.mstats",
      "package" : 0,
      "type" : "Named",
      "underlying" : 167
    }, {
      "fields" : [ {
        "name" : "alloc",
        "type" : 31
      }, {
        "name" : "total_alloc",
        "type" : 31
      }, {
        "name" : "sys",
        "type" : 31
      }, {
        "name" : "nlookup",
        "type" : 31
      }, {
        "name" : "nmalloc",
        "type" : 31
      }, {
        "name" : "nfree",
        "type" : 31
      }, {
        "name" : "heap_alloc",
        "type" : 31
      }, {
        "name" : "heap_sys",
        "type" : 31
      }, {
        "name" : "heap_idle",
        "type" : 31
      }, {
        "name" : "heap_inuse",
        "type" : 31
      }, {
        "name" : "heap_released",
        "type" : 31
      }, {
        "name" : "heap_objects",
        "type" : 31
      }, {
        "name" : "stacks_inuse",
        "type" : 31
      }, {
        "name" : "stacks_sys",
        "type" : 31
      }, {
        "name" : "mspan_inuse",
        "type" : 31
      }, {
        "name" : "mspan_sys",
        "type" : 31
      }, {
        "name" : "mcache_inuse",
        "type" : 31
      }, {
        "name" : "mcache_sys",
        "type" : 31
      }, {
        "name" : "buckhash_sys",
        "type" : 31
      }, {
        "name" : "gc_sys",
        "type" : 31
      }, {
        "name" : "other_sys",
        "type" : 31
      }, {
        "name" : "next_gc",
        "type" : 31
      }, {
        "name" : "last_gc_unix",
        "type" : 31
      }, {
        "name" : "pause_total_ns",
        "type" : 31
      }, {
        "name" : "pause_ns",
        "type" : 168
      }, {
        "name" : "pause_end",
        "type" : 168
      }, {
        "name" : "numgc",
        "type" : 32
      }, {
        "name" : "numforcedgc",
        "type" : 32
      }, {
        "name" : "gc_cpu_fraction",
        "type" : 169
      }, {
        "name" : "enablegc",
        "type" : 16
      }, {
        "name" : "debuggc",
        "type" : 16
      }, {
        "name" : "by_size",
        "type" : 170
      }, {
        "name" : "last_gc_nanotime",
        "type" : 31
      }, {
        "name" : "tinyallocs",
        "type" : 31
      }, {
        "name" : "last_next_gc",
        "type" : 31
      }, {
        "name" : "last_heap_inuse",
        "type" : 31
      }, {
        "name" : "triggerRatio",
        "type" : 169
      }, {
        "name" : "gc_trigger",
        "type" : 31
      }, {
        "name" : "heap_live",
        "type" : 31
      }, {
        "name" : "heap_scan",
        "type" : 31
      }, {
        "name" : "heap_marked",
        "type" : 31
      } ],
      "name" : "struct{alloc uint64; total_alloc uint64; sys uint64; nlookup uint64; nmalloc uint64; nfree uint64; heap_alloc uint64; heap_sys uint64; heap_idle uint64; heap_inuse uint64; heap_released uint64; heap_objects uint64; stacks_inuse uint64; stacks_sys uint64; mspan_inuse uint64; mspan_sys uint64; mcache_inuse uint64; mcache_sys uint64; buckhash_sys uint64; gc_sys uint64; other_sys uint64; next_gc uint64; last_gc_unix uint64; pause_total_ns uint64; pause_ns [256]uint64; pause_end [256]uint64; numgc uint32; numforcedgc uint32; gc_cpu_fraction float64; enablegc bool; debuggc bool; by_size [67]struct{size uint32; nmalloc uint64; nfree uint64}; last_gc_nanotime uint64; tinyallocs uint64; last_next_gc uint64; last_heap_inuse uint64; triggerRatio float64; gc_trigger uint64; heap_live uint64; heap_scan uint64; heap_marked uint64}",
      "type" : "Struct",
      "underlying" : 167
    }, {
      "elem" : 31,
      "name" : "[256]uint64",
      "type" : "Array",
      "underlying" : 168
    }, {
      "name" : "float64",
      "type" : "Basic",
      "underlying" : 169
    }, {
      "elem" : 171,
      "name" : "[67]struct{size uint32; nmalloc uint64; nfree uint64}",
      "type" : "Array",
      "underlying" : 170
    }, {
      "fields" : [ {
        "name" : "size",
        "type" : 32
      }, {
        "name" : "nmalloc",
        "type" : 31
      }, {
        "name" : "nfree",
        "type" : 31
      } ],
      "name" : "struct{size uint32; nmalloc uint64; nfree uint64}",
      "type" : "Struct",
      "underlying" : 171
    }, {
      "name" : "func(reason string)",
      "params" : 173,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 172,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "reason",
        "type" : 40
      } ],
      "name" : "(reason string)",
      "type" : "Tuple",
      "underlying" : 173
    }, {
      "name" : "func(l *runtime.mutex)",
      "params" : 175,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 174,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "l",
        "type" : 176
      } ],
      "name" : "(l *runtime.mutex)",
      "type" : "Tuple",
      "underlying" : 175
    }, {
      "elem" : 3,
      "name" : "*runtime.mutex",
      "type" : "Pointer",
      "underlying" : 176
    }, {
      "name" : "func([]*runtime.p) int",
      "params" : 178,
      "recv" : -1,
      "results" : 179,
      "type" : "Signature",
      "underlying" : 177,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 123
      } ],
      "name" : "([]*runtime.p)",
      "type" : "Tuple",
      "underlying" : 178
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 77
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 179
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 180
    }, {
      "name" : "func(buf runtime.traceBufPtr)",
      "params" : 182,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 181,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "buf",
        "type" : 113
      } ],
      "name" : "(buf runtime.traceBufPtr)",
      "type" : "Tuple",
      "underlying" : 182
    }, {
      "elem" : 184,
      "name" : "*runtime.traceBuf",
      "type" : "Pointer",
      "underlying" : 183
    }, {
      "local-name" : "traceBuf",
      "name" : "runtime.traceBuf",
      "package" : 0,
      "type" : "Named",
      "underlying" : 185
    }, {
      "fields" : [ {
        "name" : "traceBufHeader",
        "type" : 186
      }, {
        "name" : "arr",
        "type" : 189
      } ],
      "name" : "struct{runtime.traceBufHeader; arr [64488]byte}",
      "type" : "Struct",
      "underlying" : 185
    }, {
      "local-name" : "traceBufHeader",
      "name" : "runtime.traceBufHeader",
      "package" : 0,
      "type" : "Named",
      "underlying" : 187
    }, {
      "fields" : [ {
        "name" : "link",
        "type" : 113
      }, {
        "name" : "lastTicks",
        "type" : 31
      }, {
        "name" : "pos",
        "type" : 77
      }, {
        "name" : "stk",
        "type" : 188
      } ],
      "name" : "struct{link runtime.traceBufPtr; lastTicks uint64; pos int; stk [128]uintptr}",
      "type" : "Struct",
      "underlying" : 187
    }, {
      "elem" : 5,
      "name" : "[128]uintptr",
      "type" : "Array",
      "underlying" : 188
    }, {
      "elem" : 69,
      "name" : "[64488]byte",
      "type" : "Array",
      "underlying" : 189
    }, {
      "name" : "func() *runtime.traceBuf",
      "params" : 1,
      "recv" : -1,
      "results" : 191,
      "type" : "Signature",
      "underlying" : 190,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 183
      } ],
      "name" : "(*runtime.traceBuf)",
      "type" : "Tuple",
      "underlying" : 191
    }, {
      "name" : "func() int64",
      "params" : 1,
      "recv" : -1,
      "results" : 193,
      "type" : "Signature",
      "underlying" : 192,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 39
      } ],
      "name" : "(int64)",
      "type" : "Tuple",
      "underlying" : 193
    }, {
      "name" : "func(addr *uint32)",
      "params" : 195,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 194,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "addr",
        "type" : 196
      } ],
      "name" : "(addr *uint32)",
      "type" : "Tuple",
      "underlying" : 195
    }, {
      "elem" : 32,
      "name" : "*uint32",
      "type" : "Pointer",
      "underlying" : 196
    }, {
      "name" : "func(addr unsafe.Pointer)",
      "params" : 198,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 197,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "addr",
        "type" : 14
      } ],
      "name" : "(addr unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 198
    }, {
      "name" : "func(s string)",
      "params" : 200,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 199,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "s",
        "type" : 40
      } ],
      "name" : "(s string)",
      "type" : "Tuple",
      "underlying" : 200
    }, {
      "name" : "func(v unsafe.Pointer, n uintptr, sysStat *uint64)",
      "params" : 202,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 201,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "v",
        "type" : 14
      }, {
        "name" : "n",
        "type" : 5
      }, {
        "name" : "sysStat",
        "type" : 203
      } ],
      "name" : "(v unsafe.Pointer, n uintptr, sysStat *uint64)",
      "type" : "Tuple",
      "underlying" : 202
    }, {
      "elem" : 31,
      "name" : "*uint64",
      "type" : "Pointer",
      "underlying" : 203
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 204
    } ],
    "variables" : [ {
      "name" : "trace",
      "package" : 0,
      "type" : 2,
      "exported" : false
    }, {
      "name" : "allp",
      "package" : 0,
      "type" : 123,
      "exported" : false
    }, {
      "name" : "memstats",
      "package" : 0,
      "type" : 166,
      "exported" : false
    }, {
      "name" : "bufLock",
      "package" : 0,
      "type" : 3,
      "exported" : false
    }, {
      "name" : "enabled",
      "package" : 0,
      "type" : 16,
      "exported" : false
    }, {
      "name" : "p",
      "package" : 0,
      "type" : 124,
      "exported" : false
    }, {
      "name" : "tracebuf",
      "package" : 0,
      "type" : 113,
      "exported" : false
    }, {
      "name" : "buf",
      "package" : 0,
      "type" : 113,
      "exported" : false
    }, {
      "name" : "_",
      "package" : 0,
      "type" : 77,
      "exported" : false
    }, {
      "name" : "buf",
      "package" : 0,
      "type" : 113,
      "exported" : false
    }, {
      "name" : "buf",
      "package" : 0,
      "type" : 113,
      "exported" : false
    }, {
      "name" : "pos",
      "package" : 0,
      "type" : 77,
      "exported" : false
    }, {
      "name" : "ticksEnd",
      "package" : 0,
      "type" : 39,
      "exported" : false
    }, {
      "name" : "timeEnd",
      "package" : 0,
      "type" : 39,
      "exported" : false
    }, {
      "name" : "timeStart",
      "package" : 0,
      "type" : 39,
      "exported" : false
    }, {
      "name" : "shutdown",
      "package" : 0,
      "type" : 16,
      "exported" : false
    }, {
      "name" : "shutdownSema",
      "package" : 0,
      "type" : 32,
      "exported" : false
    }, {
      "name" : "lock",
      "package" : 0,
      "type" : 3,
      "exported" : false
    }, {
      "name" : "p",
      "package" : 0,
      "type" : 124,
      "exported" : false
    }, {
      "name" : "_",
      "package" : 0,
      "type" : 77,
      "exported" : false
    }, {
      "name" : "fullHead",
      "package" : 0,
      "type" : 113,
      "exported" : false
    }, {
      "name" : "fullTail",
      "package" : 0,
      "type" : 113,
      "exported" : false
    }, {
      "name" : "reading",
      "package" : 0,
      "type" : 113,
      "exported" : false
    }, {
      "name" : "reader",
      "package" : 0,
      "type" : 29,
      "exported" : false
    }, {
      "name" : "empty",
      "package" : 0,
      "type" : 113,
      "exported" : false
    }, {
      "name" : "buf",
      "package" : 0,
      "type" : 113,
      "exported" : false
    }, {
      "name" : "link",
      "package" : 0,
      "type" : 113,
      "exported" : false
    }, {
      "name" : "other_sys",
      "package" : 0,
      "type" : 31,
      "exported" : false
    }, {
      "name" : "strings",
      "package" : 0,
      "type" : 121,
      "exported" : false
    } ]
  },
  "go-version" : "1.14.3"
}