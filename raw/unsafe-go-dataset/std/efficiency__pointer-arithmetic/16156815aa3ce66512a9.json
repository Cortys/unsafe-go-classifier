{
  "usage" : {
    "file" : "syscall_linux.go",
    "label1" : "pointer-arithmetic",
    "label2" : "efficiency",
    "line" : "2050",
    "module" : "golang.org/x/sys",
    "pkg" : "golang.org/x/sys/unix",
    "project" : "mattermost/mattermost-server",
    "snippet" : "return (*[1 << 30]byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&fh.fileHandle.Type)) + 4))[:n:n]",
    "version" : "v0.0.0-20200515095857-1151b9dac4a9"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 2, 0 ],
      "decl-vars" : [ 2 ],
      "line-start" : 2046,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "n"
          }
        } ],
        "right" : [ {
          "arguments" : [ ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Size"
            },
            "go-type" : 14,
            "kind" : "expression",
            "target" : {
              "go-type" : 5,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "fh",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "go-type" : 13,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 2046,
      "code" : "n := fh.Size()",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4, 5 ],
      "in-vars" : [ 0, 2 ],
      "exit" : false,
      "out-vars" : [ 2, 0 ],
      "decl-vars" : [ ],
      "line-start" : 2047,
      "ast" : {
        "condition" : {
          "go-type" : 16,
          "kind" : "expression",
          "left" : {
            "go-type" : 13,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "n",
              "variable" : 2
            }
          },
          "operator" : "==",
          "right" : {
            "go-type" : 13,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 2049,
      "code" : "if n == 0 {\n\treturn nil\n}",
      "entry" : false,
      "use-vars" : [ 2 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 2048,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 17,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 2048,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 2, 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 2050,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "type" : "slice",
          "three" : true,
          "high" : {
            "go-type" : 13,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "n",
              "variable" : 2
            }
          },
          "max" : {
            "go-type" : 13,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "n",
              "variable" : 2
            }
          },
          "kind" : "expression",
          "low" : null,
          "target" : {
            "coerced-to" : {
              "contained" : {
                "element" : {
                  "go-type" : 4,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 4,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "byte"
                  }
                },
                "go-type" : 19,
                "kind" : "type",
                "length" : {
                  "go-type" : 20,
                  "kind" : "constant",
                  "value" : {
                    "type" : "INT",
                    "value" : "1073741824"
                  }
                },
                "type" : "array"
              },
              "go-type" : 18,
              "kind" : "type",
              "type" : "pointer"
            },
            "go-type" : 18,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 21,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 1,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 21,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 21,
              "kind" : "expression",
              "target" : {
                "go-type" : 22,
                "kind" : "expression",
                "left" : {
                  "coerced-to" : {
                    "go-type" : 22,
                    "kind" : "type",
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 22,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "uintptr"
                    }
                  },
                  "go-type" : 22,
                  "kind" : "expression",
                  "target" : {
                    "coerced-to" : {
                      "go-type" : 21,
                      "kind" : "type",
                      "qualifier" : {
                        "ident-kind" : "PkgName",
                        "kind" : "ident",
                        "package" : 1,
                        "value" : "unsafe"
                      },
                      "type" : "identifier",
                      "value" : {
                        "go-type" : 21,
                        "ident-kind" : "TypeName",
                        "kind" : "ident",
                        "value" : "Pointer"
                      }
                    },
                    "go-type" : 21,
                    "kind" : "expression",
                    "target" : {
                      "go-type" : 23,
                      "kind" : "expression",
                      "operator" : "&",
                      "target" : {
                        "field" : {
                          "ident-kind" : "Var",
                          "kind" : "ident",
                          "value" : "Type",
                          "variable" : 4
                        },
                        "go-type" : 12,
                        "kind" : "expression",
                        "target" : {
                          "field" : {
                            "ident-kind" : "Var",
                            "kind" : "ident",
                            "value" : "fileHandle",
                            "variable" : 3
                          },
                          "go-type" : 8,
                          "kind" : "expression",
                          "target" : {
                            "go-type" : 5,
                            "kind" : "expression",
                            "type" : "identifier",
                            "value" : {
                              "ident-kind" : "Var",
                              "kind" : "ident",
                              "value" : "fh",
                              "variable" : 0
                            }
                          },
                          "type" : "selector"
                        },
                        "type" : "selector"
                      },
                      "type" : "unary"
                    },
                    "type" : "cast"
                  },
                  "type" : "cast"
                },
                "operator" : "+",
                "right" : {
                  "go-type" : 22,
                  "kind" : "constant",
                  "value" : {
                    "type" : "INT",
                    "value" : "4"
                  }
                },
                "type" : "binary"
              },
              "type" : "cast"
            },
            "type" : "cast"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 2050,
      "code" : "return (*[1 << 30]byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&fh.fileHandle.Type)) + 4))[:n:n]",
      "entry" : false,
      "use-vars" : [ 0, 2 ]
    } ],
    "code" : "func (fh *FileHandle) Bytes() []byte {\n\tn := fh.Size()\n\tif n == 0 {\n\t\treturn nil\n\t}\n\treturn (*[1 << 30]byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&fh.fileHandle.Type)) + 4))[:n:n]\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "Bytes",
      "package" : 0,
      "type" : 0,
      "exported" : true
    }, {
      "name" : "Size",
      "package" : 0,
      "type" : 14,
      "exported" : true
    } ],
    "line-end" : 2051,
    "line-start" : 2045,
    "names" : [ "Bytes" ],
    "package" : 0,
    "packages" : [ {
      "name" : "unix",
      "path" : "golang.org/x/sys/unix"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ ],
    "receivers" : [ 0 ],
    "results" : [ 1 ],
    "type" : "function",
    "types" : [ {
      "name" : "func() []byte",
      "params" : 1,
      "recv" : 0,
      "results" : 2,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 3
      } ],
      "name" : "([]byte)",
      "type" : "Tuple",
      "underlying" : 2
    }, {
      "elem" : 4,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 3
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 4
    }, {
      "elem" : 6,
      "name" : "*golang.org/x/sys/unix.FileHandle",
      "type" : "Pointer",
      "underlying" : 5
    }, {
      "local-name" : "FileHandle",
      "name" : "golang.org/x/sys/unix.FileHandle",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "fields" : [ {
        "name" : "fileHandle",
        "type" : 8
      } ],
      "name" : "struct{*golang.org/x/sys/unix.fileHandle}",
      "type" : "Struct",
      "underlying" : 7
    }, {
      "elem" : 9,
      "name" : "*golang.org/x/sys/unix.fileHandle",
      "type" : "Pointer",
      "underlying" : 8
    }, {
      "local-name" : "fileHandle",
      "name" : "golang.org/x/sys/unix.fileHandle",
      "package" : 0,
      "type" : "Named",
      "underlying" : 10
    }, {
      "fields" : [ {
        "name" : "Bytes",
        "type" : 11
      }, {
        "name" : "Type",
        "type" : 12
      } ],
      "name" : "struct{Bytes uint32; Type int32}",
      "type" : "Struct",
      "underlying" : 10
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 11
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 12
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "name" : "func() int",
      "params" : 1,
      "recv" : -1,
      "results" : 15,
      "type" : "Signature",
      "underlying" : 14,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 13
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 15
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 16
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 17
    }, {
      "elem" : 19,
      "name" : "*[1073741824]byte",
      "type" : "Pointer",
      "underlying" : 18
    }, {
      "elem" : 4,
      "name" : "[1073741824]byte",
      "type" : "Array",
      "underlying" : 19
    }, {
      "name" : "untyped int",
      "type" : "Basic",
      "underlying" : 20
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 21
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 22
    }, {
      "elem" : 12,
      "name" : "*int32",
      "type" : "Pointer",
      "underlying" : 23
    } ],
    "variables" : [ {
      "name" : "fh",
      "package" : 0,
      "type" : 5,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "n",
      "package" : 0,
      "type" : 13,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "fileHandle",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : true,
      "field" : true
    }, {
      "name" : "Type",
      "package" : 0,
      "type" : 12,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}