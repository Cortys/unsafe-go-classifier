{
  "usage" : {
    "file" : "syscall_linux.go",
    "label1" : "cast-bytes",
    "label2" : "serialization",
    "line" : "499",
    "module" : "golang.org/x/sys",
    "pkg" : "golang.org/x/sys/unix",
    "project" : "elastic/beats",
    "snippet" : "psm := (*[2]byte)(unsafe.Pointer(&sa.raw.Psm))",
    "version" : "v0.0.0-20200106162015-b016eb3dc98e"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 1 ],
      "exit" : false,
      "out-vars" : [ 1 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 1 ],
      "successors" : [ 3 ],
      "in-vars" : [ 1 ],
      "exit" : false,
      "out-vars" : [ 1 ],
      "decl-vars" : [ ],
      "line-start" : 498,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Family",
            "variable" : 6
          },
          "go-type" : 14,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "raw",
              "variable" : 5
            },
            "go-type" : 17,
            "kind" : "expression",
            "target" : {
              "go-type" : 11,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "sa",
                "variable" : 1
              }
            },
            "type" : "selector"
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 14,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "31"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 498,
      "code" : "sa.raw.Family = AF_BLUETOOTH",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4 ],
      "in-vars" : [ 1 ],
      "exit" : false,
      "out-vars" : [ 1, 8 ],
      "decl-vars" : [ 8 ],
      "line-start" : 499,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "psm"
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "element" : {
                "go-type" : 20,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 20,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "byte"
                }
              },
              "go-type" : 22,
              "kind" : "type",
              "length" : {
                "go-type" : 23,
                "kind" : "constant",
                "value" : {
                  "type" : "INT",
                  "value" : "2"
                }
              },
              "type" : "array"
            },
            "go-type" : 21,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 21,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 3,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 1,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 3,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 3,
            "kind" : "expression",
            "target" : {
              "go-type" : 24,
              "kind" : "expression",
              "operator" : "&",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "Psm",
                  "variable" : 7
                },
                "go-type" : 14,
                "kind" : "expression",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "raw",
                    "variable" : 5
                  },
                  "go-type" : 17,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 11,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "sa",
                      "variable" : 1
                    }
                  },
                  "type" : "selector"
                },
                "type" : "selector"
              },
              "type" : "unary"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 499,
      "code" : "psm := (*[2]byte)(unsafe.Pointer(&sa.raw.Psm))",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ 8 ],
      "successors" : [ 5 ],
      "in-vars" : [ 8, 1 ],
      "exit" : false,
      "out-vars" : [ 8, 1 ],
      "decl-vars" : [ ],
      "line-start" : 500,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 20,
          "index" : {
            "go-type" : 25,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "kind" : "expression",
          "target" : {
            "go-type" : 21,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "psm",
              "variable" : 8
            }
          },
          "type" : "index"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 20,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 20,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "byte"
            }
          },
          "go-type" : 20,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "PSM",
              "variable" : 9
            },
            "go-type" : 14,
            "kind" : "expression",
            "target" : {
              "go-type" : 11,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "sa",
                "variable" : 1
              }
            },
            "type" : "selector"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 500,
      "code" : "psm[0] = byte(sa.PSM)",
      "entry" : false,
      "use-vars" : [ 1, 8 ]
    }, {
      "update-vars" : [ 8 ],
      "successors" : [ 7 ],
      "in-vars" : [ 1, 8 ],
      "exit" : false,
      "out-vars" : [ 1 ],
      "decl-vars" : [ ],
      "line-start" : 501,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 20,
          "index" : {
            "go-type" : 25,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "1"
            }
          },
          "kind" : "expression",
          "target" : {
            "go-type" : 21,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "psm",
              "variable" : 8
            }
          },
          "type" : "index"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 20,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 20,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "byte"
            }
          },
          "go-type" : 20,
          "kind" : "expression",
          "target" : {
            "go-type" : 14,
            "kind" : "expression",
            "left" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "PSM",
                "variable" : 9
              },
              "go-type" : 14,
              "kind" : "expression",
              "target" : {
                "go-type" : 11,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "sa",
                  "variable" : 1
                }
              },
              "type" : "selector"
            },
            "operator" : ">>",
            "right" : {
              "go-type" : 23,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "8"
              }
            },
            "type" : "binary"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 501,
      "code" : "psm[1] = byte(sa.PSM >> 8)",
      "entry" : false,
      "use-vars" : [ 8, 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 9, 10 ],
      "in-vars" : [ 1, 10 ],
      "exit" : false,
      "out-vars" : [ 1, 10 ],
      "decl-vars" : [ ],
      "line-start" : 502,
      "ast" : {
        "condition" : {
          "go-type" : 26,
          "kind" : "expression",
          "left" : {
            "go-type" : 25,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "i",
              "variable" : 10
            }
          },
          "operator" : "<",
          "right" : {
            "go-type" : 25,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "6"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "for"
      },
      "assign-vars" : [ ],
      "line-end" : 504,
      "code" : "for i := 0; i < len(sa.Addr); i++ {\n\tsa.raw.Bdaddr[i] = sa.Addr[len(sa.Addr)-1-i]\n}",
      "entry" : false,
      "use-vars" : [ 10, 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6 ],
      "in-vars" : [ 1 ],
      "exit" : false,
      "out-vars" : [ 1, 10 ],
      "decl-vars" : [ 10 ],
      "line-start" : 502,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "i"
          }
        } ],
        "right" : [ {
          "go-type" : 25,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "0"
          }
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 502,
      "code" : "i := 0",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 10 ],
      "successors" : [ 6 ],
      "in-vars" : [ 10, 1 ],
      "exit" : false,
      "out-vars" : [ 1, 10 ],
      "decl-vars" : [ ],
      "line-start" : 502,
      "ast" : {
        "kind" : "statement",
        "operation" : "++",
        "target" : {
          "go-type" : 25,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "i",
            "variable" : 10
          }
        },
        "type" : "crement"
      },
      "assign-vars" : [ 10 ],
      "line-end" : 502,
      "code" : "i++",
      "entry" : false,
      "use-vars" : [ 10 ]
    }, {
      "update-vars" : [ 1 ],
      "successors" : [ 8 ],
      "in-vars" : [ 1, 10 ],
      "exit" : false,
      "out-vars" : [ 1, 10 ],
      "decl-vars" : [ ],
      "line-start" : 503,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 16,
          "index" : {
            "go-type" : 25,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "i",
              "variable" : 10
            }
          },
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Bdaddr",
              "variable" : 11
            },
            "go-type" : 15,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "raw",
                "variable" : 5
              },
              "go-type" : 17,
              "kind" : "expression",
              "target" : {
                "go-type" : 11,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "sa",
                  "variable" : 1
                }
              },
              "type" : "selector"
            },
            "type" : "selector"
          },
          "type" : "index"
        } ],
        "right" : [ {
          "go-type" : 16,
          "index" : {
            "go-type" : 25,
            "kind" : "expression",
            "left" : {
              "go-type" : 25,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "5"
              }
            },
            "operator" : "-",
            "right" : {
              "go-type" : 25,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "i",
                "variable" : 10
              }
            },
            "type" : "binary"
          },
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Addr",
              "variable" : 12
            },
            "go-type" : 15,
            "kind" : "expression",
            "target" : {
              "go-type" : 11,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "sa",
                "variable" : 1
              }
            },
            "type" : "selector"
          },
          "type" : "index"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 503,
      "code" : "sa.raw.Bdaddr[i] = sa.Addr[len(sa.Addr)-1-i]",
      "entry" : false,
      "use-vars" : [ 10, 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 11 ],
      "in-vars" : [ 1 ],
      "exit" : false,
      "out-vars" : [ 1, 14 ],
      "decl-vars" : [ 14 ],
      "line-start" : 505,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "cid"
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "element" : {
                "go-type" : 20,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 20,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "byte"
                }
              },
              "go-type" : 22,
              "kind" : "type",
              "length" : {
                "go-type" : 23,
                "kind" : "constant",
                "value" : {
                  "type" : "INT",
                  "value" : "2"
                }
              },
              "type" : "array"
            },
            "go-type" : 21,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 21,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 3,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 1,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 3,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 3,
            "kind" : "expression",
            "target" : {
              "go-type" : 24,
              "kind" : "expression",
              "operator" : "&",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "Cid",
                  "variable" : 13
                },
                "go-type" : 14,
                "kind" : "expression",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "raw",
                    "variable" : 5
                  },
                  "go-type" : 17,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 11,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "sa",
                      "variable" : 1
                    }
                  },
                  "type" : "selector"
                },
                "type" : "selector"
              },
              "type" : "unary"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 505,
      "code" : "cid := (*[2]byte)(unsafe.Pointer(&sa.raw.Cid))",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ 14 ],
      "successors" : [ 12 ],
      "in-vars" : [ 14, 1 ],
      "exit" : false,
      "out-vars" : [ 14, 1 ],
      "decl-vars" : [ ],
      "line-start" : 506,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 20,
          "index" : {
            "go-type" : 25,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "kind" : "expression",
          "target" : {
            "go-type" : 21,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "cid",
              "variable" : 14
            }
          },
          "type" : "index"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 20,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 20,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "byte"
            }
          },
          "go-type" : 20,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "CID",
              "variable" : 15
            },
            "go-type" : 14,
            "kind" : "expression",
            "target" : {
              "go-type" : 11,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "sa",
                "variable" : 1
              }
            },
            "type" : "selector"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 506,
      "code" : "cid[0] = byte(sa.CID)",
      "entry" : false,
      "use-vars" : [ 1, 14 ]
    }, {
      "update-vars" : [ 14 ],
      "successors" : [ 13 ],
      "in-vars" : [ 14, 1 ],
      "exit" : false,
      "out-vars" : [ 1 ],
      "decl-vars" : [ ],
      "line-start" : 507,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 20,
          "index" : {
            "go-type" : 25,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "1"
            }
          },
          "kind" : "expression",
          "target" : {
            "go-type" : 21,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "cid",
              "variable" : 14
            }
          },
          "type" : "index"
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 20,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 20,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "byte"
            }
          },
          "go-type" : 20,
          "kind" : "expression",
          "target" : {
            "go-type" : 14,
            "kind" : "expression",
            "left" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "CID",
                "variable" : 15
              },
              "go-type" : 14,
              "kind" : "expression",
              "target" : {
                "go-type" : 11,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "sa",
                  "variable" : 1
                }
              },
              "type" : "selector"
            },
            "operator" : ">>",
            "right" : {
              "go-type" : 23,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "8"
              }
            },
            "type" : "binary"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 507,
      "code" : "cid[1] = byte(sa.CID >> 8)",
      "entry" : false,
      "use-vars" : [ 1, 14 ]
    }, {
      "update-vars" : [ 1 ],
      "successors" : [ 14 ],
      "in-vars" : [ 1 ],
      "exit" : false,
      "out-vars" : [ 1 ],
      "decl-vars" : [ ],
      "line-start" : 508,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "Bdaddr_type",
            "variable" : 16
          },
          "go-type" : 16,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "raw",
              "variable" : 5
            },
            "go-type" : 17,
            "kind" : "expression",
            "target" : {
              "go-type" : 11,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "sa",
                "variable" : 1
              }
            },
            "type" : "selector"
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "AddrType",
            "variable" : 17
          },
          "go-type" : 16,
          "kind" : "expression",
          "target" : {
            "go-type" : 11,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "sa",
              "variable" : 1
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 508,
      "code" : "sa.raw.Bdaddr_type = sa.AddrType",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 1 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 509,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "coerced-to" : {
            "go-type" : 3,
            "kind" : "type",
            "qualifier" : {
              "ident-kind" : "PkgName",
              "kind" : "ident",
              "package" : 1,
              "value" : "unsafe"
            },
            "type" : "identifier",
            "value" : {
              "go-type" : 3,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "Pointer"
            }
          },
          "go-type" : 3,
          "kind" : "expression",
          "target" : {
            "go-type" : 27,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "raw",
                "variable" : 5
              },
              "go-type" : 17,
              "kind" : "expression",
              "target" : {
                "go-type" : 11,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "sa",
                  "variable" : 1
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          },
          "type" : "cast"
        }, {
          "go-type" : 4,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "14"
          }
        }, {
          "go-type" : 28,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 509,
      "code" : "return unsafe.Pointer(&sa.raw), SizeofSockaddrL2, nil",
      "entry" : false,
      "use-vars" : [ 1 ]
    } ],
    "code" : "func (sa *SockaddrL2) sockaddr() (unsafe.Pointer, _Socklen, error) {\n\tsa.raw.Family = AF_BLUETOOTH\n\tpsm := (*[2]byte)(unsafe.Pointer(&sa.raw.Psm))\n\tpsm[0] = byte(sa.PSM)\n\tpsm[1] = byte(sa.PSM >> 8)\n\tfor i := 0; i < len(sa.Addr); i++ {\n\t\tsa.raw.Bdaddr[i] = sa.Addr[len(sa.Addr)-1-i]\n\t}\n\tcid := (*[2]byte)(unsafe.Pointer(&sa.raw.Cid))\n\tcid[0] = byte(sa.CID)\n\tcid[1] = byte(sa.CID >> 8)\n\tsa.raw.Bdaddr_type = sa.AddrType\n\treturn unsafe.Pointer(&sa.raw), SizeofSockaddrL2, nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "sockaddr",
      "package" : 0,
      "type" : 0,
      "exported" : false
    } ],
    "line-end" : 510,
    "line-start" : 497,
    "names" : [ "sockaddr" ],
    "package" : 0,
    "packages" : [ {
      "name" : "unix",
      "path" : "golang.org/x/sys/unix"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ ],
    "receivers" : [ 1 ],
    "results" : [ 2, 3, 4 ],
    "type" : "function",
    "types" : [ {
      "name" : "func() (unsafe.Pointer, golang.org/x/sys/unix._Socklen, error)",
      "params" : 1,
      "recv" : 1,
      "results" : 2,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 3
      }, {
        "name" : "",
        "type" : 4
      }, {
        "name" : "",
        "type" : 6
      } ],
      "name" : "(unsafe.Pointer, golang.org/x/sys/unix._Socklen, error)",
      "type" : "Tuple",
      "underlying" : 2
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 3
    }, {
      "local-name" : "_Socklen",
      "name" : "golang.org/x/sys/unix._Socklen",
      "package" : 0,
      "type" : "Named",
      "underlying" : 5
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 5
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 7
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 8
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 7
    }, {
      "name" : "func() string",
      "params" : 1,
      "recv" : 0,
      "results" : 9,
      "type" : "Signature",
      "underlying" : 8,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 10
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 9
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 10
    }, {
      "elem" : 12,
      "name" : "*golang.org/x/sys/unix.SockaddrL2",
      "type" : "Pointer",
      "underlying" : 11
    }, {
      "local-name" : "SockaddrL2",
      "name" : "golang.org/x/sys/unix.SockaddrL2",
      "package" : 0,
      "type" : "Named",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "PSM",
        "type" : 14
      }, {
        "name" : "CID",
        "type" : 14
      }, {
        "name" : "Addr",
        "type" : 15
      }, {
        "name" : "AddrType",
        "type" : 16
      }, {
        "name" : "raw",
        "type" : 17
      } ],
      "name" : "struct{PSM uint16; CID uint16; Addr [6]uint8; AddrType uint8; raw golang.org/x/sys/unix.RawSockaddrL2}",
      "type" : "Struct",
      "underlying" : 13
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 14
    }, {
      "elem" : 16,
      "name" : "[6]uint8",
      "type" : "Array",
      "underlying" : 15
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 16
    }, {
      "local-name" : "RawSockaddrL2",
      "name" : "golang.org/x/sys/unix.RawSockaddrL2",
      "package" : 0,
      "type" : "Named",
      "underlying" : 18
    }, {
      "fields" : [ {
        "name" : "Family",
        "type" : 14
      }, {
        "name" : "Psm",
        "type" : 14
      }, {
        "name" : "Bdaddr",
        "type" : 15
      }, {
        "name" : "Cid",
        "type" : 14
      }, {
        "name" : "Bdaddr_type",
        "type" : 16
      }, {
        "name" : "_",
        "type" : 19
      } ],
      "name" : "struct{Family uint16; Psm uint16; Bdaddr [6]uint8; Cid uint16; Bdaddr_type uint8; _ [1]byte}",
      "type" : "Struct",
      "underlying" : 18
    }, {
      "elem" : 20,
      "name" : "[1]byte",
      "type" : "Array",
      "underlying" : 19
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 20
    }, {
      "elem" : 22,
      "name" : "*[2]byte",
      "type" : "Pointer",
      "underlying" : 21
    }, {
      "elem" : 20,
      "name" : "[2]byte",
      "type" : "Array",
      "underlying" : 22
    }, {
      "name" : "untyped int",
      "type" : "Basic",
      "underlying" : 23
    }, {
      "elem" : 14,
      "name" : "*uint16",
      "type" : "Pointer",
      "underlying" : 24
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 25
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 26
    }, {
      "elem" : 17,
      "name" : "*golang.org/x/sys/unix.RawSockaddrL2",
      "type" : "Pointer",
      "underlying" : 27
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 28
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 6,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "sa",
      "package" : 0,
      "type" : 11,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res1]",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res2]",
      "package" : 0,
      "type" : 6,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "raw",
      "package" : 0,
      "type" : 17,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Family",
      "package" : 0,
      "type" : 14,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Psm",
      "package" : 0,
      "type" : 14,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "psm",
      "package" : 0,
      "type" : 21,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "PSM",
      "package" : 0,
      "type" : 14,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "i",
      "package" : 0,
      "type" : 25,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "Bdaddr",
      "package" : 0,
      "type" : 15,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Addr",
      "package" : 0,
      "type" : 15,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Cid",
      "package" : 0,
      "type" : 14,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "cid",
      "package" : 0,
      "type" : 21,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "CID",
      "package" : 0,
      "type" : 14,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "Bdaddr_type",
      "package" : 0,
      "type" : 16,
      "exported" : true,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "AddrType",
      "package" : 0,
      "type" : 16,
      "exported" : true,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}