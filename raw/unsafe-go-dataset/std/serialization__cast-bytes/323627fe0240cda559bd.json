{
  "usage" : {
    "file" : "sockcmsg_unix.go",
    "label1" : "cast-bytes",
    "label2" : "serialization",
    "line" : "55",
    "module" : "golang.org/x/sys",
    "pkg" : "golang.org/x/sys/unix",
    "project" : "mattermost/mattermost-server",
    "snippet" : "h := (*Cmsghdr)(unsafe.Pointer(&b[0]))",
    "version" : "v0.0.0-20200515095857-1151b9dac4a9"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 1 ],
      "exit" : false,
      "out-vars" : [ 1 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 1 ],
      "exit" : false,
      "out-vars" : [ 5, 1 ],
      "decl-vars" : [ 5 ],
      "line-start" : 55,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "h"
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 6,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 6,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Cmsghdr"
              }
            },
            "go-type" : 5,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 5,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 16,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 1,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 16,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 16,
            "kind" : "expression",
            "target" : {
              "go-type" : 17,
              "kind" : "expression",
              "operator" : "&",
              "target" : {
                "go-type" : 3,
                "index" : {
                  "go-type" : 18,
                  "kind" : "constant",
                  "value" : {
                    "type" : "INT",
                    "value" : "0"
                  }
                },
                "kind" : "expression",
                "target" : {
                  "go-type" : 2,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "b",
                    "variable" : 1
                  }
                },
                "type" : "index"
              },
              "type" : "unary"
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 55,
      "code" : "h := (*Cmsghdr)(unsafe.Pointer(&b[0]))",
      "entry" : false,
      "use-vars" : [ 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4, 5 ],
      "in-vars" : [ 5, 1 ],
      "exit" : false,
      "out-vars" : [ 5, 1 ],
      "decl-vars" : [ ],
      "line-start" : 56,
      "ast" : {
        "condition" : {
          "go-type" : 19,
          "kind" : "expression",
          "left" : {
            "go-type" : 19,
            "kind" : "expression",
            "left" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "Len",
                "variable" : 6
              },
              "go-type" : 8,
              "kind" : "expression",
              "target" : {
                "go-type" : 5,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "h",
                  "variable" : 5
                }
              },
              "type" : "selector"
            },
            "operator" : "<",
            "right" : {
              "go-type" : 8,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "16"
              }
            },
            "type" : "binary"
          },
          "operator" : "||",
          "right" : {
            "go-type" : 19,
            "kind" : "expression",
            "left" : {
              "coerced-to" : {
                "go-type" : 8,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 8,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uint64"
                }
              },
              "go-type" : 8,
              "kind" : "expression",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "Len",
                  "variable" : 6
                },
                "go-type" : 8,
                "kind" : "expression",
                "target" : {
                  "go-type" : 5,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "h",
                    "variable" : 5
                  }
                },
                "type" : "selector"
              },
              "type" : "cast"
            },
            "operator" : ">",
            "right" : {
              "coerced-to" : {
                "go-type" : 8,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 8,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uint64"
                }
              },
              "go-type" : 8,
              "kind" : "expression",
              "target" : {
                "arguments" : [ {
                  "go-type" : 2,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "b",
                    "variable" : 1
                  }
                } ],
                "ellipsis" : false,
                "function" : {
                  "go-type" : 20,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Builtin",
                    "kind" : "ident",
                    "value" : "len"
                  }
                },
                "go-type" : 18,
                "kind" : "expression",
                "type" : "call"
              },
              "type" : "cast"
            },
            "type" : "binary"
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 58,
      "code" : "if h.Len < SizeofCmsghdr || uint64(h.Len) > uint64(len(b)) {\n\treturn nil, nil, EINVAL\n}",
      "entry" : false,
      "use-vars" : [ 5, 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 57,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 23,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        }, {
          "go-type" : 23,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        }, {
          "go-type" : 24,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "22"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 57,
      "code" : "return nil, nil, EINVAL",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 1, 5 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 59,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 5,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "h",
            "variable" : 5
          }
        }, {
          "go-type" : 2,
          "type" : "slice",
          "three" : false,
          "high" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "Len",
              "variable" : 6
            },
            "go-type" : 8,
            "kind" : "expression",
            "target" : {
              "go-type" : 5,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "h",
                "variable" : 5
              }
            },
            "type" : "selector"
          },
          "max" : null,
          "kind" : "expression",
          "low" : {
            "arguments" : [ {
              "go-type" : 18,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "16"
              }
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 26,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "cmsgAlignOf"
              }
            },
            "go-type" : 18,
            "kind" : "expression",
            "type" : "call"
          },
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "b",
              "variable" : 1
            }
          }
        }, {
          "go-type" : 23,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 59,
      "code" : "return h, b[cmsgAlignOf(SizeofCmsghdr):h.Len], nil",
      "entry" : false,
      "use-vars" : [ 5, 1 ]
    } ],
    "code" : "func socketControlMessageHeaderAndData(b []byte) (*Cmsghdr, []byte, error) {\n\th := (*Cmsghdr)(unsafe.Pointer(&b[0]))\n\tif h.Len < SizeofCmsghdr || uint64(h.Len) > uint64(len(b)) {\n\t\treturn nil, nil, EINVAL\n\t}\n\treturn h, b[cmsgAlignOf(SizeofCmsghdr):h.Len], nil\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "socketControlMessageHeaderAndData",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "cmsgAlignOf",
      "package" : 0,
      "type" : 26,
      "exported" : false
    } ],
    "line-end" : 60,
    "line-start" : 54,
    "names" : [ "socketControlMessageHeaderAndData" ],
    "package" : 0,
    "packages" : [ {
      "name" : "unix",
      "path" : "golang.org/x/sys/unix"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "syscall",
      "path" : "syscall"
    } ],
    "params" : [ 1 ],
    "receivers" : [ ],
    "results" : [ 2, 3, 4 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(b []byte) (*golang.org/x/sys/unix.Cmsghdr, []byte, error)",
      "params" : 1,
      "recv" : -1,
      "results" : 4,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "b",
        "type" : 2
      } ],
      "name" : "(b []byte)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 2
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 3
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 5
      }, {
        "name" : "",
        "type" : 2
      }, {
        "name" : "",
        "type" : 10
      } ],
      "name" : "(*golang.org/x/sys/unix.Cmsghdr, []byte, error)",
      "type" : "Tuple",
      "underlying" : 4
    }, {
      "elem" : 6,
      "name" : "*golang.org/x/sys/unix.Cmsghdr",
      "type" : "Pointer",
      "underlying" : 5
    }, {
      "local-name" : "Cmsghdr",
      "name" : "golang.org/x/sys/unix.Cmsghdr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "fields" : [ {
        "name" : "Len",
        "type" : 8
      }, {
        "name" : "Level",
        "type" : 9
      }, {
        "name" : "Type",
        "type" : 9
      } ],
      "name" : "struct{Len uint64; Level int32; Type int32}",
      "type" : "Struct",
      "underlying" : 7
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 8
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 9
    }, {
      "local-name" : "error",
      "name" : "error",
      "package" : -1,
      "type" : "Named",
      "underlying" : 11
    }, {
      "methods" : [ {
        "name" : "Error",
        "type" : 12
      } ],
      "name" : "interface{Error() string}",
      "type" : "Interface",
      "underlying" : 11
    }, {
      "name" : "func() string",
      "params" : 13,
      "recv" : 0,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 12,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 15
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 14
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 15
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 16
    }, {
      "elem" : 3,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 17
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 18
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 19
    }, {
      "name" : "func([]byte) int",
      "params" : 21,
      "recv" : -1,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 20,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 2
      } ],
      "name" : "([]byte)",
      "type" : "Tuple",
      "underlying" : 21
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 18
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 22
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 23
    }, {
      "local-name" : "Errno",
      "name" : "syscall.Errno",
      "package" : 2,
      "type" : "Named",
      "underlying" : 25
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 25
    }, {
      "name" : "func(salen int) int",
      "params" : 27,
      "recv" : -1,
      "results" : 22,
      "type" : "Signature",
      "underlying" : 26,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "salen",
        "type" : 18
      } ],
      "name" : "(salen int)",
      "type" : "Tuple",
      "underlying" : 27
    } ],
    "variables" : [ {
      "name" : "",
      "package" : -1,
      "type" : 10,
      "exported" : false
    }, {
      "name" : "b",
      "package" : 0,
      "type" : 2,
      "exported" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "[res1]",
      "package" : 0,
      "type" : 2,
      "exported" : false
    }, {
      "name" : "[res2]",
      "package" : 0,
      "type" : 10,
      "exported" : false
    }, {
      "name" : "h",
      "package" : 0,
      "type" : 5,
      "exported" : false
    }, {
      "name" : "Len",
      "package" : 0,
      "type" : 8,
      "exported" : true
    } ]
  },
  "go-version" : "1.14.3"
}