{
  "usage" : {
    "file" : "heapdump.go",
    "label1" : "cast-basic",
    "label2" : "layout",
    "line" : "354",
    "module" : "std",
    "pkg" : "runtime",
    "project" : "kubernetes/kubernetes",
    "snippet" : "dumpint(uint64(uintptr(unsafe.Pointer(gp.m))))",
    "version" : "std"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ 1, 2, 3 ],
      "line-start" : 332,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "kind" : "decl",
          "specs" : [ {
            "comments" : [ ],
            "declared-type" : {
              "go-type" : 7,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 7,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uintptr"
              }
            },
            "kind" : "spec",
            "names" : [ {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "sp"
            }, {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "pc"
            }, {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "lr"
            } ],
            "type" : "var",
            "values" : [ ]
          } ],
          "type" : "var"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 332,
      "code" : "var sp, pc, lr uintptr",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4, 7 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 333,
      "ast" : {
        "condition" : {
          "go-type" : 114,
          "kind" : "expression",
          "left" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "syscallsp",
              "variable" : 4
            },
            "go-type" : 7,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "gp",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 7,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 341,
      "code" : "if gp.syscallsp != 0 {\n\tsp = gp.syscallsp\n\tpc = gp.syscallpc\n\tlr = 0\n} else {\n\tsp = gp.sched.sp\n\tpc = gp.sched.pc\n\tlr = gp.sched.lr\n}",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ 3 ],
      "successors" : [ 5 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0, 3 ],
      "decl-vars" : [ ],
      "line-start" : 334,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 7,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "sp",
            "variable" : 3
          }
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "syscallsp",
            "variable" : 4
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "gp",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 3 ],
      "line-end" : 334,
      "code" : "sp = gp.syscallsp",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ 1 ],
      "successors" : [ 6 ],
      "in-vars" : [ 0, 3 ],
      "exit" : false,
      "out-vars" : [ 1, 0, 3 ],
      "decl-vars" : [ ],
      "line-start" : 335,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 7,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "pc",
            "variable" : 1
          }
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "syscallpc",
            "variable" : 5
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "gp",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 1 ],
      "line-end" : 335,
      "code" : "pc = gp.syscallpc",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ 2 ],
      "successors" : [ 10 ],
      "in-vars" : [ 3, 1, 0 ],
      "exit" : false,
      "out-vars" : [ 1, 0, 2, 3 ],
      "decl-vars" : [ ],
      "line-start" : 336,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 7,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "lr",
            "variable" : 2
          }
        } ],
        "right" : [ {
          "go-type" : 7,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "0"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 2 ],
      "line-end" : 336,
      "code" : "lr = 0",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 3 ],
      "successors" : [ 8 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0, 3 ],
      "decl-vars" : [ ],
      "line-start" : 338,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 7,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "sp",
            "variable" : 3
          }
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "sp",
            "variable" : 7
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "sched",
              "variable" : 6
            },
            "go-type" : 24,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "gp",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 3 ],
      "line-end" : 338,
      "code" : "sp = gp.sched.sp",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ 1 ],
      "successors" : [ 9 ],
      "in-vars" : [ 0, 3 ],
      "exit" : false,
      "out-vars" : [ 1, 0, 3 ],
      "decl-vars" : [ ],
      "line-start" : 339,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 7,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "pc",
            "variable" : 1
          }
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "pc",
            "variable" : 8
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "sched",
              "variable" : 6
            },
            "go-type" : 24,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "gp",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 1 ],
      "line-end" : 339,
      "code" : "pc = gp.sched.pc",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ 2 ],
      "successors" : [ 10 ],
      "in-vars" : [ 1, 0, 3 ],
      "exit" : false,
      "out-vars" : [ 2, 3, 1, 0 ],
      "decl-vars" : [ ],
      "line-start" : 340,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 7,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "lr",
            "variable" : 2
          }
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "lr",
            "variable" : 9
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "sched",
              "variable" : 6
            },
            "go-type" : 24,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "gp",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 2 ],
      "line-end" : 340,
      "code" : "lr = gp.sched.lr",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 11 ],
      "in-vars" : [ 0, 2, 3, 1 ],
      "exit" : false,
      "out-vars" : [ 1, 0, 2, 3 ],
      "decl-vars" : [ ],
      "line-start" : 343,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 28,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "4"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 343,
      "code" : "dumpint(tagGoroutine)",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 12 ],
      "in-vars" : [ 1, 0, 2, 3 ],
      "exit" : false,
      "out-vars" : [ 1, 0, 2, 3 ],
      "decl-vars" : [ ],
      "line-start" : 344,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 7,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 7,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 11,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 11,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "go-type" : 2,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "gp",
                    "variable" : 0
                  }
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 344,
      "code" : "dumpint(uint64(uintptr(unsafe.Pointer(gp))))",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 13 ],
      "in-vars" : [ 1, 0, 2, 3 ],
      "exit" : false,
      "out-vars" : [ 3, 1, 0, 2 ],
      "decl-vars" : [ ],
      "line-start" : 345,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "go-type" : 7,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "sp",
                "variable" : 3
              }
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 345,
      "code" : "dumpint(uint64(sp))",
      "entry" : false,
      "use-vars" : [ 3 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 14 ],
      "in-vars" : [ 0, 2, 3, 1 ],
      "exit" : false,
      "out-vars" : [ 3, 1, 0, 2 ],
      "decl-vars" : [ ],
      "line-start" : 346,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "goid",
                "variable" : 10
              },
              "go-type" : 38,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "gp",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 346,
      "code" : "dumpint(uint64(gp.goid))",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 15 ],
      "in-vars" : [ 1, 0, 2, 3 ],
      "exit" : false,
      "out-vars" : [ 1, 0, 2, 3 ],
      "decl-vars" : [ ],
      "line-start" : 347,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "gopc",
                "variable" : 11
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "gp",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 347,
      "code" : "dumpint(uint64(gp.gopc))",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 16 ],
      "in-vars" : [ 1, 0, 2, 3 ],
      "exit" : false,
      "out-vars" : [ 0, 2, 3, 1 ],
      "decl-vars" : [ ],
      "line-start" : 348,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "arguments" : [ {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "gp",
                  "variable" : 0
                }
              } ],
              "ellipsis" : false,
              "function" : {
                "go-type" : 117,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "function" : 2,
                  "ident-kind" : "Func",
                  "kind" : "ident",
                  "value" : "readgstatus"
                }
              },
              "go-type" : 29,
              "kind" : "expression",
              "type" : "call"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 348,
      "code" : "dumpint(uint64(readgstatus(gp)))",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 17 ],
      "in-vars" : [ 3, 1, 0, 2 ],
      "exit" : false,
      "out-vars" : [ 3, 1, 0, 2 ],
      "decl-vars" : [ ],
      "line-start" : 349,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "arguments" : [ {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "gp",
                "variable" : 0
              }
            }, {
              "go-type" : 13,
              "kind" : "constant",
              "value" : {
                "type" : "BOOL",
                "value" : "false"
              }
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 121,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "function" : 4,
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "isSystemGoroutine"
              }
            },
            "go-type" : 13,
            "kind" : "expression",
            "type" : "call"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 119,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 3,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpbool"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 349,
      "code" : "dumpbool(isSystemGoroutine(gp, false))",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 18 ],
      "in-vars" : [ 0, 2, 3, 1 ],
      "exit" : false,
      "out-vars" : [ 1, 0, 2, 3 ],
      "decl-vars" : [ ],
      "line-start" : 350,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 13,
            "kind" : "constant",
            "value" : {
              "type" : "BOOL",
              "value" : "false"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 119,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 3,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpbool"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 350,
      "code" : "dumpbool(false)",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 19 ],
      "in-vars" : [ 1, 0, 2, 3 ],
      "exit" : false,
      "out-vars" : [ 1, 0, 2, 3 ],
      "decl-vars" : [ ],
      "line-start" : 351,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "waitsince",
                "variable" : 12
              },
              "go-type" : 38,
              "kind" : "expression",
              "target" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "gp",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 351,
      "code" : "dumpint(uint64(gp.waitsince))",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 20 ],
      "in-vars" : [ 1, 0, 2, 3 ],
      "exit" : false,
      "out-vars" : [ 1, 0, 2, 3 ],
      "decl-vars" : [ ],
      "line-start" : 352,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "arguments" : [ ],
            "ellipsis" : false,
            "function" : {
              "field" : {
                "function" : 6,
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "String"
              },
              "go-type" : 125,
              "kind" : "expression",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "waitreason",
                  "variable" : 13
                },
                "go-type" : 84,
                "kind" : "expression",
                "target" : {
                  "go-type" : 2,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "gp",
                    "variable" : 0
                  }
                },
                "type" : "selector"
              },
              "type" : "selector"
            },
            "go-type" : 39,
            "kind" : "expression",
            "type" : "call"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 123,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 5,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpstr"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 352,
      "code" : "dumpstr(gp.waitreason.String())",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 21 ],
      "in-vars" : [ 1, 0, 2, 3 ],
      "exit" : false,
      "out-vars" : [ 1, 0, 2, 3 ],
      "decl-vars" : [ ],
      "line-start" : 353,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 7,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 7,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "ctxt",
                  "variable" : 14
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "sched",
                    "variable" : 6
                  },
                  "go-type" : 24,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "gp",
                      "variable" : 0
                    }
                  },
                  "type" : "selector"
                },
                "type" : "selector"
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 353,
      "code" : "dumpint(uint64(uintptr(gp.sched.ctxt)))",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 22 ],
      "in-vars" : [ 3, 1, 0, 2 ],
      "exit" : false,
      "out-vars" : [ 1, 0, 2, 3 ],
      "decl-vars" : [ ],
      "line-start" : 354,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 7,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 7,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 11,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 11,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "m",
                    "variable" : 15
                  },
                  "go-type" : 21,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "gp",
                      "variable" : 0
                    }
                  },
                  "type" : "selector"
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 354,
      "code" : "dumpint(uint64(uintptr(unsafe.Pointer(gp.m))))",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 23 ],
      "in-vars" : [ 1, 0, 2, 3 ],
      "exit" : false,
      "out-vars" : [ 2, 3, 1, 0 ],
      "decl-vars" : [ ],
      "line-start" : 355,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 7,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 7,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 11,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 11,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "_defer",
                    "variable" : 16
                  },
                  "go-type" : 14,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "gp",
                      "variable" : 0
                    }
                  },
                  "type" : "selector"
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 355,
      "code" : "dumpint(uint64(uintptr(unsafe.Pointer(gp._defer))))",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 24 ],
      "in-vars" : [ 2, 3, 1, 0 ],
      "exit" : false,
      "out-vars" : [ 2, 3, 1, 0 ],
      "decl-vars" : [ ],
      "line-start" : 356,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 7,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 7,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 11,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 11,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "_panic",
                    "variable" : 17
                  },
                  "go-type" : 8,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 2,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "gp",
                      "variable" : 0
                    }
                  },
                  "type" : "selector"
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 356,
      "code" : "dumpint(uint64(uintptr(unsafe.Pointer(gp._panic))))",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 25 ],
      "in-vars" : [ 2, 3, 1, 0 ],
      "exit" : false,
      "out-vars" : [ 2, 3, 1, 0, 18 ],
      "decl-vars" : [ 18 ],
      "line-start" : 359,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "kind" : "decl",
          "specs" : [ {
            "comments" : [ ],
            "declared-type" : {
              "go-type" : 127,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 127,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "childInfo"
              }
            },
            "kind" : "spec",
            "names" : [ {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "child"
            } ],
            "type" : "var",
            "values" : [ ]
          } ],
          "type" : "var"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 359,
      "code" : "// dump stack\nvar child childInfo",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 18 ],
      "successors" : [ 26 ],
      "in-vars" : [ 18, 2, 3, 1, 0 ],
      "exit" : false,
      "out-vars" : [ 2, 3, 1, 0, 18 ],
      "decl-vars" : [ ],
      "line-start" : 360,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "n",
            "variable" : 20
          },
          "go-type" : 17,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "args",
              "variable" : 19
            },
            "go-type" : 129,
            "kind" : "expression",
            "target" : {
              "go-type" : 127,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "child",
                "variable" : 18
              }
            },
            "type" : "selector"
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 17,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "-1"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 360,
      "code" : "child.args.n = -1",
      "entry" : false,
      "use-vars" : [ 18 ]
    }, {
      "update-vars" : [ 18 ],
      "successors" : [ 27 ],
      "in-vars" : [ 0, 18, 2, 3, 1 ],
      "exit" : false,
      "out-vars" : [ 1, 0, 18, 2, 3 ],
      "decl-vars" : [ ],
      "line-start" : 361,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "arglen",
            "variable" : 21
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 127,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "child",
              "variable" : 18
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 7,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "0"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 361,
      "code" : "child.arglen = 0",
      "entry" : false,
      "use-vars" : [ 18 ]
    }, {
      "update-vars" : [ 18 ],
      "successors" : [ 28 ],
      "in-vars" : [ 1, 0, 18, 2, 3 ],
      "exit" : false,
      "out-vars" : [ 1, 0, 18, 2, 3 ],
      "decl-vars" : [ ],
      "line-start" : 362,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "sp",
            "variable" : 22
          },
          "go-type" : 131,
          "kind" : "expression",
          "target" : {
            "go-type" : 127,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "child",
              "variable" : 18
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 132,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 362,
      "code" : "child.sp = nil",
      "entry" : false,
      "use-vars" : [ 18 ]
    }, {
      "update-vars" : [ 18 ],
      "successors" : [ 29 ],
      "in-vars" : [ 1, 0, 18, 2, 3 ],
      "exit" : false,
      "out-vars" : [ 1, 0, 18, 2, 3 ],
      "decl-vars" : [ ],
      "line-start" : 363,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "depth",
            "variable" : 23
          },
          "go-type" : 7,
          "kind" : "expression",
          "target" : {
            "go-type" : 127,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "child",
              "variable" : 18
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 7,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "0"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 363,
      "code" : "child.depth = 0",
      "entry" : false,
      "use-vars" : [ 18 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 31 ],
      "in-vars" : [ 1, 0, 18, 2, 3 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 364,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 7,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "pc",
              "variable" : 1
            }
          }, {
            "go-type" : 7,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "sp",
              "variable" : 3
            }
          }, {
            "go-type" : 7,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "lr",
              "variable" : 2
            }
          }, {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "gp",
              "variable" : 0
            }
          }, {
            "go-type" : 78,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          }, {
            "go-type" : 132,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          }, {
            "go-type" : 78,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "2147483647"
            }
          }, {
            "go-type" : 183,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 8,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpframe"
            }
          }, {
            "arguments" : [ {
              "coerced-to" : {
                "go-type" : 11,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 1,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 11,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 11,
              "kind" : "expression",
              "target" : {
                "go-type" : 188,
                "kind" : "expression",
                "operator" : "&",
                "target" : {
                  "go-type" : 127,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "child",
                    "variable" : 18
                  }
                },
                "type" : "unary"
              },
              "type" : "cast"
            } ],
            "ellipsis" : false,
            "function" : {
              "go-type" : 185,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "function" : 9,
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "noescape"
              }
            },
            "go-type" : 11,
            "kind" : "expression",
            "type" : "call"
          }, {
            "go-type" : 97,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 133,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 7,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "gentraceback"
            }
          },
          "go-type" : 78,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 364,
      "code" : "gentraceback(pc, sp, lr, gp, 0, nil, 0x7fffffff, dumpframe, noescape(unsafe.Pointer(&child)), 0)",
      "entry" : false,
      "use-vars" : [ 18, 1, 3, 2, 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 33, 44 ],
      "in-vars" : [ 0, 24 ],
      "exit" : false,
      "out-vars" : [ 0, 24 ],
      "decl-vars" : [ ],
      "line-start" : 367,
      "ast" : {
        "condition" : {
          "go-type" : 114,
          "kind" : "expression",
          "left" : {
            "go-type" : 14,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "d",
              "variable" : 24
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 132,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "for"
      },
      "assign-vars" : [ ],
      "line-end" : 381,
      "code" : "for d := gp._defer; d != nil; d = d.link {\n\tdumpint(tagDefer)\n\tdumpint(uint64(uintptr(unsafe.Pointer(d))))\n\tdumpint(uint64(uintptr(unsafe.Pointer(gp))))\n\tdumpint(uint64(d.sp))\n\tdumpint(uint64(d.pc))\n\tdumpint(uint64(uintptr(unsafe.Pointer(d.fn))))\n\tif d.fn == nil {\n\n\t\tdumpint(uint64(0))\n\t} else {\n\t\tdumpint(uint64(uintptr(unsafe.Pointer(d.fn.fn))))\n\t}\n\tdumpint(uint64(uintptr(unsafe.Pointer(d.link))))\n}",
      "entry" : false,
      "use-vars" : [ 24 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 30 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 24, 0 ],
      "decl-vars" : [ 24 ],
      "line-start" : 367,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "d"
          }
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "_defer",
            "variable" : 16
          },
          "go-type" : 14,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "gp",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 367,
      "code" : "d := gp._defer",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ 24 ],
      "successors" : [ 30 ],
      "in-vars" : [ 0, 24 ],
      "exit" : false,
      "out-vars" : [ 0, 24 ],
      "decl-vars" : [ ],
      "line-start" : 367,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 14,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "d",
            "variable" : 24
          }
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "link",
            "variable" : 25
          },
          "go-type" : 14,
          "kind" : "expression",
          "target" : {
            "go-type" : 14,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "d",
              "variable" : 24
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 24 ],
      "line-end" : 367,
      "code" : "d = d.link",
      "entry" : false,
      "use-vars" : [ 24 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 34 ],
      "in-vars" : [ 0, 24 ],
      "exit" : false,
      "out-vars" : [ 24, 0 ],
      "decl-vars" : [ ],
      "line-start" : 368,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 28,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "14"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 368,
      "code" : "dumpint(tagDefer)",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 35 ],
      "in-vars" : [ 0, 24 ],
      "exit" : false,
      "out-vars" : [ 0, 24 ],
      "decl-vars" : [ ],
      "line-start" : 369,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 7,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 7,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 11,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 11,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "go-type" : 14,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "d",
                    "variable" : 24
                  }
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 369,
      "code" : "dumpint(uint64(uintptr(unsafe.Pointer(d))))",
      "entry" : false,
      "use-vars" : [ 24 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 36 ],
      "in-vars" : [ 0, 24 ],
      "exit" : false,
      "out-vars" : [ 0, 24 ],
      "decl-vars" : [ ],
      "line-start" : 370,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 7,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 7,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 11,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 11,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "go-type" : 2,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "gp",
                    "variable" : 0
                  }
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 370,
      "code" : "dumpint(uint64(uintptr(unsafe.Pointer(gp))))",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 37 ],
      "in-vars" : [ 0, 24 ],
      "exit" : false,
      "out-vars" : [ 0, 24 ],
      "decl-vars" : [ ],
      "line-start" : 371,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "sp",
                "variable" : 26
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "go-type" : 14,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "d",
                  "variable" : 24
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 371,
      "code" : "dumpint(uint64(d.sp))",
      "entry" : false,
      "use-vars" : [ 24 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 38 ],
      "in-vars" : [ 0, 24 ],
      "exit" : false,
      "out-vars" : [ 0, 24 ],
      "decl-vars" : [ ],
      "line-start" : 372,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "pc",
                "variable" : 27
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "go-type" : 14,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "d",
                  "variable" : 24
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 372,
      "code" : "dumpint(uint64(d.pc))",
      "entry" : false,
      "use-vars" : [ 24 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 39 ],
      "in-vars" : [ 0, 24 ],
      "exit" : false,
      "out-vars" : [ 0, 24 ],
      "decl-vars" : [ ],
      "line-start" : 373,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 7,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 7,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 11,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 11,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "fn",
                    "variable" : 28
                  },
                  "go-type" : 18,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 14,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "d",
                      "variable" : 24
                    }
                  },
                  "type" : "selector"
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 373,
      "code" : "dumpint(uint64(uintptr(unsafe.Pointer(d.fn))))",
      "entry" : false,
      "use-vars" : [ 24 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 40, 41 ],
      "in-vars" : [ 0, 24 ],
      "exit" : false,
      "out-vars" : [ 0, 24 ],
      "decl-vars" : [ ],
      "line-start" : 374,
      "ast" : {
        "condition" : {
          "go-type" : 114,
          "kind" : "expression",
          "left" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "fn",
              "variable" : 28
            },
            "go-type" : 18,
            "kind" : "expression",
            "target" : {
              "go-type" : 14,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "d",
                "variable" : 24
              }
            },
            "type" : "selector"
          },
          "operator" : "==",
          "right" : {
            "go-type" : 132,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 379,
      "code" : "if d.fn == nil {\n\n\tdumpint(uint64(0))\n} else {\n\tdumpint(uint64(uintptr(unsafe.Pointer(d.fn.fn))))\n}",
      "entry" : false,
      "use-vars" : [ 24 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 42 ],
      "in-vars" : [ 0, 24 ],
      "exit" : false,
      "out-vars" : [ 0, 24 ],
      "decl-vars" : [ ],
      "line-start" : 376,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 28,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 376,
      "code" : "dumpint(uint64(0))",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 42 ],
      "in-vars" : [ 0, 24 ],
      "exit" : false,
      "out-vars" : [ 0, 24 ],
      "decl-vars" : [ ],
      "line-start" : 378,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 7,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 7,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 11,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 11,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "fn",
                    "variable" : 29
                  },
                  "go-type" : 7,
                  "kind" : "expression",
                  "target" : {
                    "field" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "fn",
                      "variable" : 28
                    },
                    "go-type" : 18,
                    "kind" : "expression",
                    "target" : {
                      "go-type" : 14,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "d",
                        "variable" : 24
                      }
                    },
                    "type" : "selector"
                  },
                  "type" : "selector"
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 378,
      "code" : "dumpint(uint64(uintptr(unsafe.Pointer(d.fn.fn))))",
      "entry" : false,
      "use-vars" : [ 24 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 32 ],
      "in-vars" : [ 0, 24 ],
      "exit" : false,
      "out-vars" : [ 0, 24 ],
      "decl-vars" : [ ],
      "line-start" : 380,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 7,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 7,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 11,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 11,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "link",
                    "variable" : 25
                  },
                  "go-type" : 14,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 14,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "d",
                      "variable" : 24
                    }
                  },
                  "type" : "selector"
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 380,
      "code" : "dumpint(uint64(uintptr(unsafe.Pointer(d.link))))",
      "entry" : false,
      "use-vars" : [ 24 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 46, 1 ],
      "in-vars" : [ 0, 30 ],
      "exit" : false,
      "out-vars" : [ 0, 30 ],
      "decl-vars" : [ ],
      "line-start" : 382,
      "ast" : {
        "condition" : {
          "go-type" : 114,
          "kind" : "expression",
          "left" : {
            "go-type" : 8,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "p",
              "variable" : 30
            }
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 132,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "for"
      },
      "assign-vars" : [ ],
      "line-end" : 391,
      "code" : "for p := gp._panic; p != nil; p = p.link {\n\tdumpint(tagPanic)\n\tdumpint(uint64(uintptr(unsafe.Pointer(p))))\n\tdumpint(uint64(uintptr(unsafe.Pointer(gp))))\n\teface := efaceOf(&p.arg)\n\tdumpint(uint64(uintptr(unsafe.Pointer(eface._type))))\n\tdumpint(uint64(uintptr(unsafe.Pointer(eface.data))))\n\tdumpint(0)\n\tdumpint(uint64(uintptr(unsafe.Pointer(p.link))))\n}",
      "entry" : false,
      "use-vars" : [ 30 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 43 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0, 30 ],
      "decl-vars" : [ 30 ],
      "line-start" : 382,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "p"
          }
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "_panic",
            "variable" : 17
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "gp",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 382,
      "code" : "p := gp._panic",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ 30 ],
      "successors" : [ 43 ],
      "in-vars" : [ 30, 0 ],
      "exit" : false,
      "out-vars" : [ 0, 30 ],
      "decl-vars" : [ ],
      "line-start" : 382,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 8,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "p",
            "variable" : 30
          }
        } ],
        "right" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "link",
            "variable" : 31
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 8,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "p",
              "variable" : 30
            }
          },
          "type" : "selector"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ 30 ],
      "line-end" : 382,
      "code" : "p = p.link",
      "entry" : false,
      "use-vars" : [ 30 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 47 ],
      "in-vars" : [ 0, 30 ],
      "exit" : false,
      "out-vars" : [ 0, 30 ],
      "decl-vars" : [ ],
      "line-start" : 383,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 28,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "15"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 383,
      "code" : "dumpint(tagPanic)",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 48 ],
      "in-vars" : [ 0, 30 ],
      "exit" : false,
      "out-vars" : [ 0, 30 ],
      "decl-vars" : [ ],
      "line-start" : 384,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 7,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 7,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 11,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 11,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "go-type" : 8,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "p",
                    "variable" : 30
                  }
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 384,
      "code" : "dumpint(uint64(uintptr(unsafe.Pointer(p))))",
      "entry" : false,
      "use-vars" : [ 30 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 49 ],
      "in-vars" : [ 0, 30 ],
      "exit" : false,
      "out-vars" : [ 0, 30 ],
      "decl-vars" : [ ],
      "line-start" : 385,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 7,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 7,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 11,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 11,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "go-type" : 2,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "gp",
                    "variable" : 0
                  }
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 385,
      "code" : "dumpint(uint64(uintptr(unsafe.Pointer(gp))))",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 50 ],
      "in-vars" : [ 0, 30 ],
      "exit" : false,
      "out-vars" : [ 0, 30, 33 ],
      "decl-vars" : [ 33 ],
      "line-start" : 386,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "eface"
          }
        } ],
        "right" : [ {
          "arguments" : [ {
            "go-type" : 194,
            "kind" : "expression",
            "operator" : "&",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "arg",
                "variable" : 32
              },
              "go-type" : 12,
              "kind" : "expression",
              "target" : {
                "go-type" : 8,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "p",
                  "variable" : 30
                }
              },
              "type" : "selector"
            },
            "type" : "unary"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 192,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 10,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "efaceOf"
            }
          },
          "go-type" : 189,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 386,
      "code" : "eface := efaceOf(&p.arg)",
      "entry" : false,
      "use-vars" : [ 30 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 51 ],
      "in-vars" : [ 30, 33, 0 ],
      "exit" : false,
      "out-vars" : [ 33, 0, 30 ],
      "decl-vars" : [ ],
      "line-start" : 387,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 7,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 7,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 11,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 11,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "_type",
                    "variable" : 34
                  },
                  "go-type" : 98,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 189,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "eface",
                      "variable" : 33
                    }
                  },
                  "type" : "selector"
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 387,
      "code" : "dumpint(uint64(uintptr(unsafe.Pointer(eface._type))))",
      "entry" : false,
      "use-vars" : [ 33 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 52 ],
      "in-vars" : [ 0, 30, 33 ],
      "exit" : false,
      "out-vars" : [ 0, 30 ],
      "decl-vars" : [ ],
      "line-start" : 388,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 7,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 7,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 11,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 11,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "data",
                    "variable" : 35
                  },
                  "go-type" : 11,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 189,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "eface",
                      "variable" : 33
                    }
                  },
                  "type" : "selector"
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 388,
      "code" : "dumpint(uint64(uintptr(unsafe.Pointer(eface.data))))",
      "entry" : false,
      "use-vars" : [ 33 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 53 ],
      "in-vars" : [ 0, 30 ],
      "exit" : false,
      "out-vars" : [ 0, 30 ],
      "decl-vars" : [ ],
      "line-start" : 389,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 28,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 389,
      "code" : "dumpint(0)",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 45 ],
      "in-vars" : [ 30, 0 ],
      "exit" : false,
      "out-vars" : [ 0, 30 ],
      "decl-vars" : [ ],
      "line-start" : 390,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "coerced-to" : {
              "go-type" : 28,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 28,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint64"
              }
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 7,
                "kind" : "type",
                "type" : "identifier",
                "value" : {
                  "go-type" : 7,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "uintptr"
                }
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 11,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 11,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 11,
                "kind" : "expression",
                "target" : {
                  "field" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "link",
                    "variable" : 31
                  },
                  "go-type" : 8,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 8,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "p",
                      "variable" : 30
                    }
                  },
                  "type" : "selector"
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "cast"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 115,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "dumpint"
            }
          },
          "go-type" : 36,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 390,
      "code" : "dumpint(uint64(uintptr(unsafe.Pointer(p.link))))",
      "entry" : false,
      "use-vars" : [ 30 ]
    } ],
    "code" : "func dumpgoroutine(gp *g) {\n\tvar sp, pc, lr uintptr\n\tif gp.syscallsp != 0 {\n\t\tsp = gp.syscallsp\n\t\tpc = gp.syscallpc\n\t\tlr = 0\n\t} else {\n\t\tsp = gp.sched.sp\n\t\tpc = gp.sched.pc\n\t\tlr = gp.sched.lr\n\t}\n\n\tdumpint(tagGoroutine)\n\tdumpint(uint64(uintptr(unsafe.Pointer(gp))))\n\tdumpint(uint64(sp))\n\tdumpint(uint64(gp.goid))\n\tdumpint(uint64(gp.gopc))\n\tdumpint(uint64(readgstatus(gp)))\n\tdumpbool(isSystemGoroutine(gp, false))\n\tdumpbool(false)\n\tdumpint(uint64(gp.waitsince))\n\tdumpstr(gp.waitreason.String())\n\tdumpint(uint64(uintptr(gp.sched.ctxt)))\n\tdumpint(uint64(uintptr(unsafe.Pointer(gp.m))))\n\tdumpint(uint64(uintptr(unsafe.Pointer(gp._defer))))\n\tdumpint(uint64(uintptr(unsafe.Pointer(gp._panic))))\n\n\t// dump stack\n\tvar child childInfo\n\tchild.args.n = -1\n\tchild.arglen = 0\n\tchild.sp = nil\n\tchild.depth = 0\n\tgentraceback(pc, sp, lr, gp, 0, nil, 0x7fffffff, dumpframe, noescape(unsafe.Pointer(&child)), 0)\n\n\tfor d := gp._defer; d != nil; d = d.link {\n\t\tdumpint(tagDefer)\n\t\tdumpint(uint64(uintptr(unsafe.Pointer(d))))\n\t\tdumpint(uint64(uintptr(unsafe.Pointer(gp))))\n\t\tdumpint(uint64(d.sp))\n\t\tdumpint(uint64(d.pc))\n\t\tdumpint(uint64(uintptr(unsafe.Pointer(d.fn))))\n\t\tif d.fn == nil {\n\n\t\t\tdumpint(uint64(0))\n\t\t} else {\n\t\t\tdumpint(uint64(uintptr(unsafe.Pointer(d.fn.fn))))\n\t\t}\n\t\tdumpint(uint64(uintptr(unsafe.Pointer(d.link))))\n\t}\n\tfor p := gp._panic; p != nil; p = p.link {\n\t\tdumpint(tagPanic)\n\t\tdumpint(uint64(uintptr(unsafe.Pointer(p))))\n\t\tdumpint(uint64(uintptr(unsafe.Pointer(gp))))\n\t\teface := efaceOf(&p.arg)\n\t\tdumpint(uint64(uintptr(unsafe.Pointer(eface._type))))\n\t\tdumpint(uint64(uintptr(unsafe.Pointer(eface.data))))\n\t\tdumpint(0)\n\t\tdumpint(uint64(uintptr(unsafe.Pointer(p.link))))\n\t}\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "dumpgoroutine",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "dumpint",
      "package" : 0,
      "type" : 115,
      "exported" : false
    }, {
      "name" : "readgstatus",
      "package" : 0,
      "type" : 117,
      "exported" : false
    }, {
      "name" : "dumpbool",
      "package" : 0,
      "type" : 119,
      "exported" : false
    }, {
      "name" : "isSystemGoroutine",
      "package" : 0,
      "type" : 121,
      "exported" : false
    }, {
      "name" : "dumpstr",
      "package" : 0,
      "type" : 123,
      "exported" : false
    }, {
      "name" : "String",
      "package" : 0,
      "type" : 125,
      "exported" : true
    }, {
      "name" : "gentraceback",
      "package" : 0,
      "type" : 133,
      "exported" : false
    }, {
      "name" : "dumpframe",
      "package" : 0,
      "type" : 183,
      "exported" : false
    }, {
      "name" : "noescape",
      "package" : 0,
      "type" : 185,
      "exported" : false
    }, {
      "name" : "efaceOf",
      "package" : 0,
      "type" : 192,
      "exported" : false
    } ],
    "line-end" : 392,
    "line-start" : 331,
    "names" : [ "dumpgoroutine" ],
    "package" : 0,
    "packages" : [ {
      "name" : "runtime",
      "path" : "runtime"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    }, {
      "name" : "sys",
      "path" : "runtime/internal/sys"
    } ],
    "params" : [ 0 ],
    "receivers" : [ ],
    "results" : [ ],
    "type" : "function",
    "types" : [ {
      "name" : "func(gp *runtime.g)",
      "params" : 1,
      "recv" : -1,
      "results" : 36,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "gp",
        "type" : 2
      } ],
      "name" : "(gp *runtime.g)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*runtime.g",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "local-name" : "g",
      "name" : "runtime.g",
      "package" : 0,
      "type" : "Named",
      "underlying" : 4
    }, {
      "fields" : [ {
        "name" : "stack",
        "type" : 5
      }, {
        "name" : "stackguard0",
        "type" : 7
      }, {
        "name" : "stackguard1",
        "type" : 7
      }, {
        "name" : "_panic",
        "type" : 8
      }, {
        "name" : "_defer",
        "type" : 14
      }, {
        "name" : "m",
        "type" : 21
      }, {
        "name" : "sched",
        "type" : 24
      }, {
        "name" : "syscallsp",
        "type" : 7
      }, {
        "name" : "syscallpc",
        "type" : 7
      }, {
        "name" : "stktopsp",
        "type" : 7
      }, {
        "name" : "param",
        "type" : 11
      }, {
        "name" : "atomicstatus",
        "type" : 29
      }, {
        "name" : "stackLock",
        "type" : 29
      }, {
        "name" : "goid",
        "type" : 38
      }, {
        "name" : "schedlink",
        "type" : 26
      }, {
        "name" : "waitsince",
        "type" : 38
      }, {
        "name" : "waitreason",
        "type" : 84
      }, {
        "name" : "preempt",
        "type" : 13
      }, {
        "name" : "preemptStop",
        "type" : 13
      }, {
        "name" : "preemptShrink",
        "type" : 13
      }, {
        "name" : "asyncSafePoint",
        "type" : 13
      }, {
        "name" : "paniconfault",
        "type" : 13
      }, {
        "name" : "gcscandone",
        "type" : 13
      }, {
        "name" : "throwsplit",
        "type" : 13
      }, {
        "name" : "activeStackChans",
        "type" : 13
      }, {
        "name" : "raceignore",
        "type" : 40
      }, {
        "name" : "sysblocktraced",
        "type" : 13
      }, {
        "name" : "sysexitticks",
        "type" : 38
      }, {
        "name" : "traceseq",
        "type" : 28
      }, {
        "name" : "tracelastp",
        "type" : 37
      }, {
        "name" : "lockedm",
        "type" : 47
      }, {
        "name" : "sig",
        "type" : 29
      }, {
        "name" : "writebuf",
        "type" : 85
      }, {
        "name" : "sigcode0",
        "type" : 7
      }, {
        "name" : "sigcode1",
        "type" : 7
      }, {
        "name" : "sigpc",
        "type" : 7
      }, {
        "name" : "gopc",
        "type" : 7
      }, {
        "name" : "ancestors",
        "type" : 86
      }, {
        "name" : "startpc",
        "type" : 7
      }, {
        "name" : "racectx",
        "type" : 7
      }, {
        "name" : "waiting",
        "type" : 91
      }, {
        "name" : "cgoCtxt",
        "type" : 90
      }, {
        "name" : "labels",
        "type" : 11
      }, {
        "name" : "timer",
        "type" : 109
      }, {
        "name" : "selectDone",
        "type" : 29
      }, {
        "name" : "gcAssistBytes",
        "type" : 38
      } ],
      "name" : "struct{stack runtime.stack; stackguard0 uintptr; stackguard1 uintptr; _panic *runtime._panic; _defer *runtime._defer; m *runtime.m; sched runtime.gobuf; syscallsp uintptr; syscallpc uintptr; stktopsp uintptr; param unsafe.Pointer; atomicstatus uint32; stackLock uint32; goid int64; schedlink runtime.guintptr; waitsince int64; waitreason runtime.waitReason; preempt bool; preemptStop bool; preemptShrink bool; asyncSafePoint bool; paniconfault bool; gcscandone bool; throwsplit bool; activeStackChans bool; raceignore int8; sysblocktraced bool; sysexitticks int64; traceseq uint64; tracelastp runtime.puintptr; lockedm runtime.muintptr; sig uint32; writebuf []byte; sigcode0 uintptr; sigcode1 uintptr; sigpc uintptr; gopc uintptr; ancestors *[]runtime.ancestorInfo; startpc uintptr; racectx uintptr; waiting *runtime.sudog; cgoCtxt []uintptr; labels unsafe.Pointer; timer *runtime.timer; selectDone uint32; gcAssistBytes int64}",
      "type" : "Struct",
      "underlying" : 4
    }, {
      "local-name" : "stack",
      "name" : "runtime.stack",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "fields" : [ {
        "name" : "lo",
        "type" : 7
      }, {
        "name" : "hi",
        "type" : 7
      } ],
      "name" : "struct{lo uintptr; hi uintptr}",
      "type" : "Struct",
      "underlying" : 6
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 7
    }, {
      "elem" : 9,
      "name" : "*runtime._panic",
      "type" : "Pointer",
      "underlying" : 8
    }, {
      "local-name" : "_panic",
      "name" : "runtime._panic",
      "package" : 0,
      "type" : "Named",
      "underlying" : 10
    }, {
      "fields" : [ {
        "name" : "argp",
        "type" : 11
      }, {
        "name" : "arg",
        "type" : 12
      }, {
        "name" : "link",
        "type" : 8
      }, {
        "name" : "pc",
        "type" : 7
      }, {
        "name" : "sp",
        "type" : 11
      }, {
        "name" : "recovered",
        "type" : 13
      }, {
        "name" : "aborted",
        "type" : 13
      }, {
        "name" : "goexit",
        "type" : 13
      } ],
      "name" : "struct{argp unsafe.Pointer; arg interface{}; link *runtime._panic; pc uintptr; sp unsafe.Pointer; recovered bool; aborted bool; goexit bool}",
      "type" : "Struct",
      "underlying" : 10
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 11
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 12
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "elem" : 15,
      "name" : "*runtime._defer",
      "type" : "Pointer",
      "underlying" : 14
    }, {
      "local-name" : "_defer",
      "name" : "runtime._defer",
      "package" : 0,
      "type" : "Named",
      "underlying" : 16
    }, {
      "fields" : [ {
        "name" : "siz",
        "type" : 17
      }, {
        "name" : "started",
        "type" : 13
      }, {
        "name" : "heap",
        "type" : 13
      }, {
        "name" : "openDefer",
        "type" : 13
      }, {
        "name" : "sp",
        "type" : 7
      }, {
        "name" : "pc",
        "type" : 7
      }, {
        "name" : "fn",
        "type" : 18
      }, {
        "name" : "_panic",
        "type" : 8
      }, {
        "name" : "link",
        "type" : 14
      }, {
        "name" : "fd",
        "type" : 11
      }, {
        "name" : "varp",
        "type" : 7
      }, {
        "name" : "framepc",
        "type" : 7
      } ],
      "name" : "struct{siz int32; started bool; heap bool; openDefer bool; sp uintptr; pc uintptr; fn *runtime.funcval; _panic *runtime._panic; link *runtime._defer; fd unsafe.Pointer; varp uintptr; framepc uintptr}",
      "type" : "Struct",
      "underlying" : 16
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 17
    }, {
      "elem" : 19,
      "name" : "*runtime.funcval",
      "type" : "Pointer",
      "underlying" : 18
    }, {
      "local-name" : "funcval",
      "name" : "runtime.funcval",
      "package" : 0,
      "type" : "Named",
      "underlying" : 20
    }, {
      "fields" : [ {
        "name" : "fn",
        "type" : 7
      } ],
      "name" : "struct{fn uintptr}",
      "type" : "Struct",
      "underlying" : 20
    }, {
      "elem" : 22,
      "name" : "*runtime.m",
      "type" : "Pointer",
      "underlying" : 21
    }, {
      "local-name" : "m",
      "name" : "runtime.m",
      "package" : 0,
      "type" : "Named",
      "underlying" : 23
    }, {
      "fields" : [ {
        "name" : "g0",
        "type" : 2
      }, {
        "name" : "morebuf",
        "type" : 24
      }, {
        "name" : "divmod",
        "type" : 29
      }, {
        "name" : "procid",
        "type" : 28
      }, {
        "name" : "gsignal",
        "type" : 2
      }, {
        "name" : "goSigStack",
        "type" : 30
      }, {
        "name" : "sigmask",
        "type" : 32
      }, {
        "name" : "tls",
        "type" : 34
      }, {
        "name" : "mstartfn",
        "type" : 35
      }, {
        "name" : "curg",
        "type" : 2
      }, {
        "name" : "caughtsig",
        "type" : 26
      }, {
        "name" : "p",
        "type" : 37
      }, {
        "name" : "nextp",
        "type" : 37
      }, {
        "name" : "oldp",
        "type" : 37
      }, {
        "name" : "id",
        "type" : 38
      }, {
        "name" : "mallocing",
        "type" : 17
      }, {
        "name" : "throwing",
        "type" : 17
      }, {
        "name" : "preemptoff",
        "type" : 39
      }, {
        "name" : "locks",
        "type" : 17
      }, {
        "name" : "dying",
        "type" : 17
      }, {
        "name" : "profilehz",
        "type" : 17
      }, {
        "name" : "spinning",
        "type" : 13
      }, {
        "name" : "blocked",
        "type" : 13
      }, {
        "name" : "newSigstack",
        "type" : 13
      }, {
        "name" : "printlock",
        "type" : 40
      }, {
        "name" : "incgo",
        "type" : 13
      }, {
        "name" : "freeWait",
        "type" : 29
      }, {
        "name" : "fastrand",
        "type" : 33
      }, {
        "name" : "needextram",
        "type" : 13
      }, {
        "name" : "traceback",
        "type" : 41
      }, {
        "name" : "ncgocall",
        "type" : 28
      }, {
        "name" : "ncgo",
        "type" : 17
      }, {
        "name" : "cgoCallersUse",
        "type" : 29
      }, {
        "name" : "cgoCallers",
        "type" : 42
      }, {
        "name" : "park",
        "type" : 45
      }, {
        "name" : "alllink",
        "type" : 21
      }, {
        "name" : "schedlink",
        "type" : 47
      }, {
        "name" : "mcache",
        "type" : 48
      }, {
        "name" : "lockedg",
        "type" : 26
      }, {
        "name" : "createstack",
        "type" : 44
      }, {
        "name" : "lockedExt",
        "type" : 29
      }, {
        "name" : "lockedInt",
        "type" : 29
      }, {
        "name" : "nextwaitm",
        "type" : 47
      }, {
        "name" : "waitunlockf",
        "type" : 75
      }, {
        "name" : "waitlock",
        "type" : 11
      }, {
        "name" : "waittraceev",
        "type" : 70
      }, {
        "name" : "waittraceskip",
        "type" : 78
      }, {
        "name" : "startingtrace",
        "type" : 13
      }, {
        "name" : "syscalltick",
        "type" : 29
      }, {
        "name" : "freelink",
        "type" : 21
      }, {
        "name" : "libcall",
        "type" : 79
      }, {
        "name" : "libcallpc",
        "type" : 7
      }, {
        "name" : "libcallsp",
        "type" : 7
      }, {
        "name" : "libcallg",
        "type" : 26
      }, {
        "name" : "syscall",
        "type" : 79
      }, {
        "name" : "vdsoSP",
        "type" : 7
      }, {
        "name" : "vdsoPC",
        "type" : 7
      }, {
        "name" : "preemptGen",
        "type" : 29
      }, {
        "name" : "signalPending",
        "type" : 29
      }, {
        "name" : "dlogPerM",
        "type" : 81
      }, {
        "name" : "mOS",
        "type" : 83
      } ],
      "name" : "struct{g0 *runtime.g; morebuf runtime.gobuf; divmod uint32; procid uint64; gsignal *runtime.g; goSigStack runtime.gsignalStack; sigmask runtime.sigset; tls [6]uintptr; mstartfn func(); curg *runtime.g; caughtsig runtime.guintptr; p runtime.puintptr; nextp runtime.puintptr; oldp runtime.puintptr; id int64; mallocing int32; throwing int32; preemptoff string; locks int32; dying int32; profilehz int32; spinning bool; blocked bool; newSigstack bool; printlock int8; incgo bool; freeWait uint32; fastrand [2]uint32; needextram bool; traceback uint8; ncgocall uint64; ncgo int32; cgoCallersUse uint32; cgoCallers *runtime.cgoCallers; park runtime.note; alllink *runtime.m; schedlink runtime.muintptr; mcache *runtime.mcache; lockedg runtime.guintptr; createstack [32]uintptr; lockedExt uint32; lockedInt uint32; nextwaitm runtime.muintptr; waitunlockf func(*runtime.g, unsafe.Pointer) bool; waitlock unsafe.Pointer; waittraceev byte; waittraceskip int; startingtrace bool; syscalltick uint32; freelink *runtime.m; libcall runtime.libcall; libcallpc uintptr; libcallsp uintptr; libcallg runtime.guintptr; syscall runtime.libcall; vdsoSP uintptr; vdsoPC uintptr; preemptGen uint32; signalPending uint32; runtime.dlogPerM; runtime.mOS}",
      "type" : "Struct",
      "underlying" : 23
    }, {
      "local-name" : "gobuf",
      "name" : "runtime.gobuf",
      "package" : 0,
      "type" : "Named",
      "underlying" : 25
    }, {
      "fields" : [ {
        "name" : "sp",
        "type" : 7
      }, {
        "name" : "pc",
        "type" : 7
      }, {
        "name" : "g",
        "type" : 26
      }, {
        "name" : "ctxt",
        "type" : 11
      }, {
        "name" : "ret",
        "type" : 27
      }, {
        "name" : "lr",
        "type" : 7
      }, {
        "name" : "bp",
        "type" : 7
      } ],
      "name" : "struct{sp uintptr; pc uintptr; g runtime.guintptr; ctxt unsafe.Pointer; ret runtime/internal/sys.Uintreg; lr uintptr; bp uintptr}",
      "type" : "Struct",
      "underlying" : 25
    }, {
      "local-name" : "guintptr",
      "name" : "runtime.guintptr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "local-name" : "Uintreg",
      "name" : "runtime/internal/sys.Uintreg",
      "package" : 2,
      "type" : "Named",
      "underlying" : 28
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 28
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 29
    }, {
      "local-name" : "gsignalStack",
      "name" : "runtime.gsignalStack",
      "package" : 0,
      "type" : "Named",
      "underlying" : 31
    }, {
      "fields" : [ {
        "name" : "stack",
        "type" : 5
      }, {
        "name" : "stackguard0",
        "type" : 7
      }, {
        "name" : "stackguard1",
        "type" : 7
      }, {
        "name" : "stktopsp",
        "type" : 7
      } ],
      "name" : "struct{stack runtime.stack; stackguard0 uintptr; stackguard1 uintptr; stktopsp uintptr}",
      "type" : "Struct",
      "underlying" : 31
    }, {
      "local-name" : "sigset",
      "name" : "runtime.sigset",
      "package" : 0,
      "type" : "Named",
      "underlying" : 33
    }, {
      "elem" : 29,
      "name" : "[2]uint32",
      "type" : "Array",
      "underlying" : 33
    }, {
      "elem" : 7,
      "name" : "[6]uintptr",
      "type" : "Array",
      "underlying" : 34
    }, {
      "name" : "func()",
      "params" : 36,
      "recv" : -1,
      "results" : 36,
      "type" : "Signature",
      "underlying" : 35,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 36
    }, {
      "local-name" : "puintptr",
      "name" : "runtime.puintptr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "name" : "int64",
      "type" : "Basic",
      "underlying" : 38
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 39
    }, {
      "name" : "int8",
      "type" : "Basic",
      "underlying" : 40
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 41
    }, {
      "elem" : 43,
      "name" : "*runtime.cgoCallers",
      "type" : "Pointer",
      "underlying" : 42
    }, {
      "local-name" : "cgoCallers",
      "name" : "runtime.cgoCallers",
      "package" : 0,
      "type" : "Named",
      "underlying" : 44
    }, {
      "elem" : 7,
      "name" : "[32]uintptr",
      "type" : "Array",
      "underlying" : 44
    }, {
      "local-name" : "note",
      "name" : "runtime.note",
      "package" : 0,
      "type" : "Named",
      "underlying" : 46
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 7
      } ],
      "name" : "struct{key uintptr}",
      "type" : "Struct",
      "underlying" : 46
    }, {
      "local-name" : "muintptr",
      "name" : "runtime.muintptr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "elem" : 49,
      "name" : "*runtime.mcache",
      "type" : "Pointer",
      "underlying" : 48
    }, {
      "local-name" : "mcache",
      "name" : "runtime.mcache",
      "package" : 0,
      "type" : "Named",
      "underlying" : 50
    }, {
      "fields" : [ {
        "name" : "next_sample",
        "type" : 7
      }, {
        "name" : "local_scan",
        "type" : 7
      }, {
        "name" : "tiny",
        "type" : 7
      }, {
        "name" : "tinyoffset",
        "type" : 7
      }, {
        "name" : "local_tinyallocs",
        "type" : 7
      }, {
        "name" : "alloc",
        "type" : 51
      }, {
        "name" : "stackcache",
        "type" : 71
      }, {
        "name" : "local_largefree",
        "type" : 7
      }, {
        "name" : "local_nlargefree",
        "type" : 7
      }, {
        "name" : "local_nsmallfree",
        "type" : 74
      }, {
        "name" : "flushGen",
        "type" : 29
      } ],
      "name" : "struct{next_sample uintptr; local_scan uintptr; tiny uintptr; tinyoffset uintptr; local_tinyallocs uintptr; alloc [134]*runtime.mspan; stackcache [4]runtime.stackfreelist; local_largefree uintptr; local_nlargefree uintptr; local_nsmallfree [67]uintptr; flushGen uint32}",
      "type" : "Struct",
      "underlying" : 50
    }, {
      "elem" : 52,
      "name" : "[134]*runtime.mspan",
      "type" : "Array",
      "underlying" : 51
    }, {
      "elem" : 53,
      "name" : "*runtime.mspan",
      "type" : "Pointer",
      "underlying" : 52
    }, {
      "local-name" : "mspan",
      "name" : "runtime.mspan",
      "package" : 0,
      "type" : "Named",
      "underlying" : 54
    }, {
      "fields" : [ {
        "name" : "next",
        "type" : 52
      }, {
        "name" : "prev",
        "type" : 52
      }, {
        "name" : "list",
        "type" : 55
      }, {
        "name" : "startAddr",
        "type" : 7
      }, {
        "name" : "npages",
        "type" : 7
      }, {
        "name" : "manualFreeList",
        "type" : 58
      }, {
        "name" : "freeindex",
        "type" : 7
      }, {
        "name" : "nelems",
        "type" : 7
      }, {
        "name" : "allocCache",
        "type" : 28
      }, {
        "name" : "allocBits",
        "type" : 59
      }, {
        "name" : "gcmarkBits",
        "type" : 59
      }, {
        "name" : "sweepgen",
        "type" : 29
      }, {
        "name" : "divMul",
        "type" : 61
      }, {
        "name" : "baseMask",
        "type" : 61
      }, {
        "name" : "allocCount",
        "type" : 61
      }, {
        "name" : "spanclass",
        "type" : 62
      }, {
        "name" : "state",
        "type" : 63
      }, {
        "name" : "needzero",
        "type" : 41
      }, {
        "name" : "divShift",
        "type" : 41
      }, {
        "name" : "divShift2",
        "type" : 41
      }, {
        "name" : "elemsize",
        "type" : 7
      }, {
        "name" : "limit",
        "type" : 7
      }, {
        "name" : "speciallock",
        "type" : 66
      }, {
        "name" : "specials",
        "type" : 67
      } ],
      "name" : "struct{next *runtime.mspan; prev *runtime.mspan; list *runtime.mSpanList; startAddr uintptr; npages uintptr; manualFreeList runtime.gclinkptr; freeindex uintptr; nelems uintptr; allocCache uint64; allocBits *runtime.gcBits; gcmarkBits *runtime.gcBits; sweepgen uint32; divMul uint16; baseMask uint16; allocCount uint16; spanclass runtime.spanClass; state runtime.mSpanStateBox; needzero uint8; divShift uint8; divShift2 uint8; elemsize uintptr; limit uintptr; speciallock runtime.mutex; specials *runtime.special}",
      "type" : "Struct",
      "underlying" : 54
    }, {
      "elem" : 56,
      "name" : "*runtime.mSpanList",
      "type" : "Pointer",
      "underlying" : 55
    }, {
      "local-name" : "mSpanList",
      "name" : "runtime.mSpanList",
      "package" : 0,
      "type" : "Named",
      "underlying" : 57
    }, {
      "fields" : [ {
        "name" : "first",
        "type" : 52
      }, {
        "name" : "last",
        "type" : 52
      } ],
      "name" : "struct{first *runtime.mspan; last *runtime.mspan}",
      "type" : "Struct",
      "underlying" : 57
    }, {
      "local-name" : "gclinkptr",
      "name" : "runtime.gclinkptr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "elem" : 60,
      "name" : "*runtime.gcBits",
      "type" : "Pointer",
      "underlying" : 59
    }, {
      "local-name" : "gcBits",
      "name" : "runtime.gcBits",
      "package" : 0,
      "type" : "Named",
      "underlying" : 41
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 61
    }, {
      "local-name" : "spanClass",
      "name" : "runtime.spanClass",
      "package" : 0,
      "type" : "Named",
      "underlying" : 41
    }, {
      "local-name" : "mSpanStateBox",
      "name" : "runtime.mSpanStateBox",
      "package" : 0,
      "type" : "Named",
      "underlying" : 64
    }, {
      "fields" : [ {
        "name" : "s",
        "type" : 65
      } ],
      "name" : "struct{s runtime.mSpanState}",
      "type" : "Struct",
      "underlying" : 64
    }, {
      "local-name" : "mSpanState",
      "name" : "runtime.mSpanState",
      "package" : 0,
      "type" : "Named",
      "underlying" : 41
    }, {
      "local-name" : "mutex",
      "name" : "runtime.mutex",
      "package" : 0,
      "type" : "Named",
      "underlying" : 46
    }, {
      "elem" : 68,
      "name" : "*runtime.special",
      "type" : "Pointer",
      "underlying" : 67
    }, {
      "local-name" : "special",
      "name" : "runtime.special",
      "package" : 0,
      "type" : "Named",
      "underlying" : 69
    }, {
      "fields" : [ {
        "name" : "next",
        "type" : 67
      }, {
        "name" : "offset",
        "type" : 61
      }, {
        "name" : "kind",
        "type" : 70
      } ],
      "name" : "struct{next *runtime.special; offset uint16; kind byte}",
      "type" : "Struct",
      "underlying" : 69
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 70
    }, {
      "elem" : 72,
      "name" : "[4]runtime.stackfreelist",
      "type" : "Array",
      "underlying" : 71
    }, {
      "local-name" : "stackfreelist",
      "name" : "runtime.stackfreelist",
      "package" : 0,
      "type" : "Named",
      "underlying" : 73
    }, {
      "fields" : [ {
        "name" : "list",
        "type" : 58
      }, {
        "name" : "size",
        "type" : 7
      } ],
      "name" : "struct{list runtime.gclinkptr; size uintptr}",
      "type" : "Struct",
      "underlying" : 73
    }, {
      "elem" : 7,
      "name" : "[67]uintptr",
      "type" : "Array",
      "underlying" : 74
    }, {
      "name" : "func(*runtime.g, unsafe.Pointer) bool",
      "params" : 76,
      "recv" : -1,
      "results" : 77,
      "type" : "Signature",
      "underlying" : 75,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 2
      }, {
        "name" : "",
        "type" : 11
      } ],
      "name" : "(*runtime.g, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 76
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 13
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 77
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 78
    }, {
      "local-name" : "libcall",
      "name" : "runtime.libcall",
      "package" : 0,
      "type" : "Named",
      "underlying" : 80
    }, {
      "fields" : [ {
        "name" : "fn",
        "type" : 7
      }, {
        "name" : "n",
        "type" : 7
      }, {
        "name" : "args",
        "type" : 7
      }, {
        "name" : "r1",
        "type" : 7
      }, {
        "name" : "r2",
        "type" : 7
      }, {
        "name" : "err",
        "type" : 7
      } ],
      "name" : "struct{fn uintptr; n uintptr; args uintptr; r1 uintptr; r2 uintptr; err uintptr}",
      "type" : "Struct",
      "underlying" : 80
    }, {
      "local-name" : "dlogPerM",
      "name" : "runtime.dlogPerM",
      "package" : 0,
      "type" : "Named",
      "underlying" : 82
    }, {
      "fields" : [ ],
      "name" : "struct{}",
      "type" : "Struct",
      "underlying" : 82
    }, {
      "local-name" : "mOS",
      "name" : "runtime.mOS",
      "package" : 0,
      "type" : "Named",
      "underlying" : 82
    }, {
      "local-name" : "waitReason",
      "name" : "runtime.waitReason",
      "package" : 0,
      "type" : "Named",
      "underlying" : 41
    }, {
      "elem" : 70,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 85
    }, {
      "elem" : 87,
      "name" : "*[]runtime.ancestorInfo",
      "type" : "Pointer",
      "underlying" : 86
    }, {
      "elem" : 88,
      "name" : "[]runtime.ancestorInfo",
      "type" : "Slice",
      "underlying" : 87
    }, {
      "local-name" : "ancestorInfo",
      "name" : "runtime.ancestorInfo",
      "package" : 0,
      "type" : "Named",
      "underlying" : 89
    }, {
      "fields" : [ {
        "name" : "pcs",
        "type" : 90
      }, {
        "name" : "goid",
        "type" : 38
      }, {
        "name" : "gopc",
        "type" : 7
      } ],
      "name" : "struct{pcs []uintptr; goid int64; gopc uintptr}",
      "type" : "Struct",
      "underlying" : 89
    }, {
      "elem" : 7,
      "name" : "[]uintptr",
      "type" : "Slice",
      "underlying" : 90
    }, {
      "elem" : 92,
      "name" : "*runtime.sudog",
      "type" : "Pointer",
      "underlying" : 91
    }, {
      "local-name" : "sudog",
      "name" : "runtime.sudog",
      "package" : 0,
      "type" : "Named",
      "underlying" : 93
    }, {
      "fields" : [ {
        "name" : "g",
        "type" : 2
      }, {
        "name" : "isSelect",
        "type" : 13
      }, {
        "name" : "next",
        "type" : 91
      }, {
        "name" : "prev",
        "type" : 91
      }, {
        "name" : "elem",
        "type" : 11
      }, {
        "name" : "acquiretime",
        "type" : 38
      }, {
        "name" : "releasetime",
        "type" : 38
      }, {
        "name" : "ticket",
        "type" : 29
      }, {
        "name" : "parent",
        "type" : 91
      }, {
        "name" : "waitlink",
        "type" : 91
      }, {
        "name" : "waittail",
        "type" : 91
      }, {
        "name" : "c",
        "type" : 94
      } ],
      "name" : "struct{g *runtime.g; isSelect bool; next *runtime.sudog; prev *runtime.sudog; elem unsafe.Pointer; acquiretime int64; releasetime int64; ticket uint32; parent *runtime.sudog; waitlink *runtime.sudog; waittail *runtime.sudog; c *runtime.hchan}",
      "type" : "Struct",
      "underlying" : 93
    }, {
      "elem" : 95,
      "name" : "*runtime.hchan",
      "type" : "Pointer",
      "underlying" : 94
    }, {
      "local-name" : "hchan",
      "name" : "runtime.hchan",
      "package" : 0,
      "type" : "Named",
      "underlying" : 96
    }, {
      "fields" : [ {
        "name" : "qcount",
        "type" : 97
      }, {
        "name" : "dataqsiz",
        "type" : 97
      }, {
        "name" : "buf",
        "type" : 11
      }, {
        "name" : "elemsize",
        "type" : 61
      }, {
        "name" : "closed",
        "type" : 29
      }, {
        "name" : "elemtype",
        "type" : 98
      }, {
        "name" : "sendx",
        "type" : 97
      }, {
        "name" : "recvx",
        "type" : 97
      }, {
        "name" : "recvq",
        "type" : 107
      }, {
        "name" : "sendq",
        "type" : 107
      }, {
        "name" : "lock",
        "type" : 66
      } ],
      "name" : "struct{qcount uint; dataqsiz uint; buf unsafe.Pointer; elemsize uint16; closed uint32; elemtype *runtime._type; sendx uint; recvx uint; recvq runtime.waitq; sendq runtime.waitq; lock runtime.mutex}",
      "type" : "Struct",
      "underlying" : 96
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 97
    }, {
      "elem" : 99,
      "name" : "*runtime._type",
      "type" : "Pointer",
      "underlying" : 98
    }, {
      "local-name" : "_type",
      "name" : "runtime._type",
      "package" : 0,
      "type" : "Named",
      "underlying" : 100
    }, {
      "fields" : [ {
        "name" : "size",
        "type" : 7
      }, {
        "name" : "ptrdata",
        "type" : 7
      }, {
        "name" : "hash",
        "type" : 29
      }, {
        "name" : "tflag",
        "type" : 101
      }, {
        "name" : "align",
        "type" : 41
      }, {
        "name" : "fieldAlign",
        "type" : 41
      }, {
        "name" : "kind",
        "type" : 41
      }, {
        "name" : "equal",
        "type" : 102
      }, {
        "name" : "gcdata",
        "type" : 104
      }, {
        "name" : "str",
        "type" : 105
      }, {
        "name" : "ptrToThis",
        "type" : 106
      } ],
      "name" : "struct{size uintptr; ptrdata uintptr; hash uint32; tflag runtime.tflag; align uint8; fieldAlign uint8; kind uint8; equal func(unsafe.Pointer, unsafe.Pointer) bool; gcdata *byte; str runtime.nameOff; ptrToThis runtime.typeOff}",
      "type" : "Struct",
      "underlying" : 100
    }, {
      "local-name" : "tflag",
      "name" : "runtime.tflag",
      "package" : 0,
      "type" : "Named",
      "underlying" : 41
    }, {
      "name" : "func(unsafe.Pointer, unsafe.Pointer) bool",
      "params" : 103,
      "recv" : -1,
      "results" : 77,
      "type" : "Signature",
      "underlying" : 102,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 11
      }, {
        "name" : "",
        "type" : 11
      } ],
      "name" : "(unsafe.Pointer, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 103
    }, {
      "elem" : 70,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 104
    }, {
      "local-name" : "nameOff",
      "name" : "runtime.nameOff",
      "package" : 0,
      "type" : "Named",
      "underlying" : 17
    }, {
      "local-name" : "typeOff",
      "name" : "runtime.typeOff",
      "package" : 0,
      "type" : "Named",
      "underlying" : 17
    }, {
      "local-name" : "waitq",
      "name" : "runtime.waitq",
      "package" : 0,
      "type" : "Named",
      "underlying" : 108
    }, {
      "fields" : [ {
        "name" : "first",
        "type" : 91
      }, {
        "name" : "last",
        "type" : 91
      } ],
      "name" : "struct{first *runtime.sudog; last *runtime.sudog}",
      "type" : "Struct",
      "underlying" : 108
    }, {
      "elem" : 110,
      "name" : "*runtime.timer",
      "type" : "Pointer",
      "underlying" : 109
    }, {
      "local-name" : "timer",
      "name" : "runtime.timer",
      "package" : 0,
      "type" : "Named",
      "underlying" : 111
    }, {
      "fields" : [ {
        "name" : "pp",
        "type" : 37
      }, {
        "name" : "when",
        "type" : 38
      }, {
        "name" : "period",
        "type" : 38
      }, {
        "name" : "f",
        "type" : 112
      }, {
        "name" : "arg",
        "type" : 12
      }, {
        "name" : "seq",
        "type" : 7
      }, {
        "name" : "nextwhen",
        "type" : 38
      }, {
        "name" : "status",
        "type" : 29
      } ],
      "name" : "struct{pp runtime.puintptr; when int64; period int64; f func(interface{}, uintptr); arg interface{}; seq uintptr; nextwhen int64; status uint32}",
      "type" : "Struct",
      "underlying" : 111
    }, {
      "name" : "func(interface{}, uintptr)",
      "params" : 113,
      "recv" : -1,
      "results" : 36,
      "type" : "Signature",
      "underlying" : 112,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 12
      }, {
        "name" : "",
        "type" : 7
      } ],
      "name" : "(interface{}, uintptr)",
      "type" : "Tuple",
      "underlying" : 113
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 114
    }, {
      "name" : "func(v uint64)",
      "params" : 116,
      "recv" : -1,
      "results" : 36,
      "type" : "Signature",
      "underlying" : 115,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "v",
        "type" : 28
      } ],
      "name" : "(v uint64)",
      "type" : "Tuple",
      "underlying" : 116
    }, {
      "name" : "func(gp *runtime.g) uint32",
      "params" : 1,
      "recv" : -1,
      "results" : 118,
      "type" : "Signature",
      "underlying" : 117,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 29
      } ],
      "name" : "(uint32)",
      "type" : "Tuple",
      "underlying" : 118
    }, {
      "name" : "func(b bool)",
      "params" : 120,
      "recv" : -1,
      "results" : 36,
      "type" : "Signature",
      "underlying" : 119,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "b",
        "type" : 13
      } ],
      "name" : "(b bool)",
      "type" : "Tuple",
      "underlying" : 120
    }, {
      "name" : "func(gp *runtime.g, fixed bool) bool",
      "params" : 122,
      "recv" : -1,
      "results" : 77,
      "type" : "Signature",
      "underlying" : 121,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "gp",
        "type" : 2
      }, {
        "name" : "fixed",
        "type" : 13
      } ],
      "name" : "(gp *runtime.g, fixed bool)",
      "type" : "Tuple",
      "underlying" : 122
    }, {
      "name" : "func(s string)",
      "params" : 124,
      "recv" : -1,
      "results" : 36,
      "type" : "Signature",
      "underlying" : 123,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "s",
        "type" : 39
      } ],
      "name" : "(s string)",
      "type" : "Tuple",
      "underlying" : 124
    }, {
      "name" : "func() string",
      "params" : 36,
      "recv" : -1,
      "results" : 126,
      "type" : "Signature",
      "underlying" : 125,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 39
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 126
    }, {
      "local-name" : "childInfo",
      "name" : "runtime.childInfo",
      "package" : 0,
      "type" : "Named",
      "underlying" : 128
    }, {
      "fields" : [ {
        "name" : "argoff",
        "type" : 7
      }, {
        "name" : "arglen",
        "type" : 7
      }, {
        "name" : "args",
        "type" : 129
      }, {
        "name" : "sp",
        "type" : 131
      }, {
        "name" : "depth",
        "type" : 7
      } ],
      "name" : "struct{argoff uintptr; arglen uintptr; args runtime.bitvector; sp *uint8; depth uintptr}",
      "type" : "Struct",
      "underlying" : 128
    }, {
      "local-name" : "bitvector",
      "name" : "runtime.bitvector",
      "package" : 0,
      "type" : "Named",
      "underlying" : 130
    }, {
      "fields" : [ {
        "name" : "n",
        "type" : 17
      }, {
        "name" : "bytedata",
        "type" : 131
      } ],
      "name" : "struct{n int32; bytedata *uint8}",
      "type" : "Struct",
      "underlying" : 130
    }, {
      "elem" : 41,
      "name" : "*uint8",
      "type" : "Pointer",
      "underlying" : 131
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 132
    }, {
      "name" : "func(pc0 uintptr, sp0 uintptr, lr0 uintptr, gp *runtime.g, skip int, pcbuf *uintptr, max int, callback func(*runtime.stkframe, unsafe.Pointer) bool, v unsafe.Pointer, flags uint) int",
      "params" : 134,
      "recv" : -1,
      "results" : 182,
      "type" : "Signature",
      "underlying" : 133,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "pc0",
        "type" : 7
      }, {
        "name" : "sp0",
        "type" : 7
      }, {
        "name" : "lr0",
        "type" : 7
      }, {
        "name" : "gp",
        "type" : 2
      }, {
        "name" : "skip",
        "type" : 78
      }, {
        "name" : "pcbuf",
        "type" : 135
      }, {
        "name" : "max",
        "type" : 78
      }, {
        "name" : "callback",
        "type" : 136
      }, {
        "name" : "v",
        "type" : 11
      }, {
        "name" : "flags",
        "type" : 97
      } ],
      "name" : "(pc0 uintptr, sp0 uintptr, lr0 uintptr, gp *runtime.g, skip int, pcbuf *uintptr, max int, callback func(*runtime.stkframe, unsafe.Pointer) bool, v unsafe.Pointer, flags uint)",
      "type" : "Tuple",
      "underlying" : 134
    }, {
      "elem" : 7,
      "name" : "*uintptr",
      "type" : "Pointer",
      "underlying" : 135
    }, {
      "name" : "func(*runtime.stkframe, unsafe.Pointer) bool",
      "params" : 137,
      "recv" : -1,
      "results" : 77,
      "type" : "Signature",
      "underlying" : 136,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 138
      }, {
        "name" : "",
        "type" : 11
      } ],
      "name" : "(*runtime.stkframe, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 137
    }, {
      "elem" : 139,
      "name" : "*runtime.stkframe",
      "type" : "Pointer",
      "underlying" : 138
    }, {
      "local-name" : "stkframe",
      "name" : "runtime.stkframe",
      "package" : 0,
      "type" : "Named",
      "underlying" : 140
    }, {
      "fields" : [ {
        "name" : "fn",
        "type" : 141
      }, {
        "name" : "pc",
        "type" : 7
      }, {
        "name" : "continpc",
        "type" : 7
      }, {
        "name" : "lr",
        "type" : 7
      }, {
        "name" : "sp",
        "type" : 7
      }, {
        "name" : "fp",
        "type" : 7
      }, {
        "name" : "varp",
        "type" : 7
      }, {
        "name" : "argp",
        "type" : 7
      }, {
        "name" : "arglen",
        "type" : 7
      }, {
        "name" : "argmap",
        "type" : 181
      } ],
      "name" : "struct{fn runtime.funcInfo; pc uintptr; continpc uintptr; lr uintptr; sp uintptr; fp uintptr; varp uintptr; argp uintptr; arglen uintptr; argmap *runtime.bitvector}",
      "type" : "Struct",
      "underlying" : 140
    }, {
      "local-name" : "funcInfo",
      "name" : "runtime.funcInfo",
      "package" : 0,
      "type" : "Named",
      "underlying" : 142
    }, {
      "fields" : [ {
        "name" : "_func",
        "type" : 143
      }, {
        "name" : "datap",
        "type" : 148
      } ],
      "name" : "struct{*runtime._func; datap *runtime.moduledata}",
      "type" : "Struct",
      "underlying" : 142
    }, {
      "elem" : 144,
      "name" : "*runtime._func",
      "type" : "Pointer",
      "underlying" : 143
    }, {
      "local-name" : "_func",
      "name" : "runtime._func",
      "package" : 0,
      "type" : "Named",
      "underlying" : 145
    }, {
      "fields" : [ {
        "name" : "entry",
        "type" : 7
      }, {
        "name" : "nameoff",
        "type" : 17
      }, {
        "name" : "args",
        "type" : 17
      }, {
        "name" : "deferreturn",
        "type" : 29
      }, {
        "name" : "pcsp",
        "type" : 17
      }, {
        "name" : "pcfile",
        "type" : 17
      }, {
        "name" : "pcln",
        "type" : 17
      }, {
        "name" : "npcdata",
        "type" : 17
      }, {
        "name" : "funcID",
        "type" : 146
      }, {
        "name" : "_",
        "type" : 147
      }, {
        "name" : "nfuncdata",
        "type" : 41
      } ],
      "name" : "struct{entry uintptr; nameoff int32; args int32; deferreturn uint32; pcsp int32; pcfile int32; pcln int32; npcdata int32; funcID runtime.funcID; _ [2]int8; nfuncdata uint8}",
      "type" : "Struct",
      "underlying" : 145
    }, {
      "local-name" : "funcID",
      "name" : "runtime.funcID",
      "package" : 0,
      "type" : "Named",
      "underlying" : 41
    }, {
      "elem" : 40,
      "name" : "[2]int8",
      "type" : "Array",
      "underlying" : 147
    }, {
      "elem" : 149,
      "name" : "*runtime.moduledata",
      "type" : "Pointer",
      "underlying" : 148
    }, {
      "local-name" : "moduledata",
      "name" : "runtime.moduledata",
      "package" : 0,
      "type" : "Named",
      "underlying" : 150
    }, {
      "fields" : [ {
        "name" : "pclntable",
        "type" : 85
      }, {
        "name" : "ftab",
        "type" : 151
      }, {
        "name" : "filetab",
        "type" : 154
      }, {
        "name" : "findfunctab",
        "type" : 7
      }, {
        "name" : "minpc",
        "type" : 7
      }, {
        "name" : "maxpc",
        "type" : 7
      }, {
        "name" : "text",
        "type" : 7
      }, {
        "name" : "etext",
        "type" : 7
      }, {
        "name" : "noptrdata",
        "type" : 7
      }, {
        "name" : "enoptrdata",
        "type" : 7
      }, {
        "name" : "data",
        "type" : 7
      }, {
        "name" : "edata",
        "type" : 7
      }, {
        "name" : "bss",
        "type" : 7
      }, {
        "name" : "ebss",
        "type" : 7
      }, {
        "name" : "noptrbss",
        "type" : 7
      }, {
        "name" : "enoptrbss",
        "type" : 7
      }, {
        "name" : "end",
        "type" : 7
      }, {
        "name" : "gcdata",
        "type" : 7
      }, {
        "name" : "gcbss",
        "type" : 7
      }, {
        "name" : "types",
        "type" : 7
      }, {
        "name" : "etypes",
        "type" : 7
      }, {
        "name" : "textsectmap",
        "type" : 155
      }, {
        "name" : "typelinks",
        "type" : 158
      }, {
        "name" : "itablinks",
        "type" : 159
      }, {
        "name" : "ptab",
        "type" : 173
      }, {
        "name" : "pluginpath",
        "type" : 39
      }, {
        "name" : "pkghashes",
        "type" : 176
      }, {
        "name" : "modulename",
        "type" : 39
      }, {
        "name" : "modulehashes",
        "type" : 176
      }, {
        "name" : "hasmain",
        "type" : 41
      }, {
        "name" : "gcdatamask",
        "type" : 129
      }, {
        "name" : "gcbssmask",
        "type" : 129
      }, {
        "name" : "typemap",
        "type" : 180
      }, {
        "name" : "bad",
        "type" : 13
      }, {
        "name" : "next",
        "type" : 148
      } ],
      "name" : "struct{pclntable []byte; ftab []runtime.functab; filetab []uint32; findfunctab uintptr; minpc uintptr; maxpc uintptr; text uintptr; etext uintptr; noptrdata uintptr; enoptrdata uintptr; data uintptr; edata uintptr; bss uintptr; ebss uintptr; noptrbss uintptr; enoptrbss uintptr; end uintptr; gcdata uintptr; gcbss uintptr; types uintptr; etypes uintptr; textsectmap []runtime.textsect; typelinks []int32; itablinks []*runtime.itab; ptab []runtime.ptabEntry; pluginpath string; pkghashes []runtime.modulehash; modulename string; modulehashes []runtime.modulehash; hasmain uint8; gcdatamask runtime.bitvector; gcbssmask runtime.bitvector; typemap map[runtime.typeOff]*runtime._type; bad bool; next *runtime.moduledata}",
      "type" : "Struct",
      "underlying" : 150
    }, {
      "elem" : 152,
      "name" : "[]runtime.functab",
      "type" : "Slice",
      "underlying" : 151
    }, {
      "local-name" : "functab",
      "name" : "runtime.functab",
      "package" : 0,
      "type" : "Named",
      "underlying" : 153
    }, {
      "fields" : [ {
        "name" : "entry",
        "type" : 7
      }, {
        "name" : "funcoff",
        "type" : 7
      } ],
      "name" : "struct{entry uintptr; funcoff uintptr}",
      "type" : "Struct",
      "underlying" : 153
    }, {
      "elem" : 29,
      "name" : "[]uint32",
      "type" : "Slice",
      "underlying" : 154
    }, {
      "elem" : 156,
      "name" : "[]runtime.textsect",
      "type" : "Slice",
      "underlying" : 155
    }, {
      "local-name" : "textsect",
      "name" : "runtime.textsect",
      "package" : 0,
      "type" : "Named",
      "underlying" : 157
    }, {
      "fields" : [ {
        "name" : "vaddr",
        "type" : 7
      }, {
        "name" : "length",
        "type" : 7
      }, {
        "name" : "baseaddr",
        "type" : 7
      } ],
      "name" : "struct{vaddr uintptr; length uintptr; baseaddr uintptr}",
      "type" : "Struct",
      "underlying" : 157
    }, {
      "elem" : 17,
      "name" : "[]int32",
      "type" : "Slice",
      "underlying" : 158
    }, {
      "elem" : 160,
      "name" : "[]*runtime.itab",
      "type" : "Slice",
      "underlying" : 159
    }, {
      "elem" : 161,
      "name" : "*runtime.itab",
      "type" : "Pointer",
      "underlying" : 160
    }, {
      "local-name" : "itab",
      "name" : "runtime.itab",
      "package" : 0,
      "type" : "Named",
      "underlying" : 162
    }, {
      "fields" : [ {
        "name" : "inter",
        "type" : 163
      }, {
        "name" : "_type",
        "type" : 98
      }, {
        "name" : "hash",
        "type" : 29
      }, {
        "name" : "_",
        "type" : 171
      }, {
        "name" : "fun",
        "type" : 172
      } ],
      "name" : "struct{inter *runtime.interfacetype; _type *runtime._type; hash uint32; _ [4]byte; fun [1]uintptr}",
      "type" : "Struct",
      "underlying" : 162
    }, {
      "elem" : 164,
      "name" : "*runtime.interfacetype",
      "type" : "Pointer",
      "underlying" : 163
    }, {
      "local-name" : "interfacetype",
      "name" : "runtime.interfacetype",
      "package" : 0,
      "type" : "Named",
      "underlying" : 165
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 99
      }, {
        "name" : "pkgpath",
        "type" : 166
      }, {
        "name" : "mhdr",
        "type" : 168
      } ],
      "name" : "struct{typ runtime._type; pkgpath runtime.name; mhdr []runtime.imethod}",
      "type" : "Struct",
      "underlying" : 165
    }, {
      "local-name" : "name",
      "name" : "runtime.name",
      "package" : 0,
      "type" : "Named",
      "underlying" : 167
    }, {
      "fields" : [ {
        "name" : "bytes",
        "type" : 104
      } ],
      "name" : "struct{bytes *byte}",
      "type" : "Struct",
      "underlying" : 167
    }, {
      "elem" : 169,
      "name" : "[]runtime.imethod",
      "type" : "Slice",
      "underlying" : 168
    }, {
      "local-name" : "imethod",
      "name" : "runtime.imethod",
      "package" : 0,
      "type" : "Named",
      "underlying" : 170
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 105
      }, {
        "name" : "ityp",
        "type" : 106
      } ],
      "name" : "struct{name runtime.nameOff; ityp runtime.typeOff}",
      "type" : "Struct",
      "underlying" : 170
    }, {
      "elem" : 70,
      "name" : "[4]byte",
      "type" : "Array",
      "underlying" : 171
    }, {
      "elem" : 7,
      "name" : "[1]uintptr",
      "type" : "Array",
      "underlying" : 172
    }, {
      "elem" : 174,
      "name" : "[]runtime.ptabEntry",
      "type" : "Slice",
      "underlying" : 173
    }, {
      "local-name" : "ptabEntry",
      "name" : "runtime.ptabEntry",
      "package" : 0,
      "type" : "Named",
      "underlying" : 175
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 105
      }, {
        "name" : "typ",
        "type" : 106
      } ],
      "name" : "struct{name runtime.nameOff; typ runtime.typeOff}",
      "type" : "Struct",
      "underlying" : 175
    }, {
      "elem" : 177,
      "name" : "[]runtime.modulehash",
      "type" : "Slice",
      "underlying" : 176
    }, {
      "local-name" : "modulehash",
      "name" : "runtime.modulehash",
      "package" : 0,
      "type" : "Named",
      "underlying" : 178
    }, {
      "fields" : [ {
        "name" : "modulename",
        "type" : 39
      }, {
        "name" : "linktimehash",
        "type" : 39
      }, {
        "name" : "runtimehash",
        "type" : 179
      } ],
      "name" : "struct{modulename string; linktimehash string; runtimehash *string}",
      "type" : "Struct",
      "underlying" : 178
    }, {
      "elem" : 39,
      "name" : "*string",
      "type" : "Pointer",
      "underlying" : 179
    }, {
      "elem" : 98,
      "key" : 106,
      "name" : "map[runtime.typeOff]*runtime._type",
      "type" : "Map",
      "underlying" : 180
    }, {
      "elem" : 129,
      "name" : "*runtime.bitvector",
      "type" : "Pointer",
      "underlying" : 181
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 78
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 182
    }, {
      "name" : "func(s *runtime.stkframe, arg unsafe.Pointer) bool",
      "params" : 184,
      "recv" : -1,
      "results" : 77,
      "type" : "Signature",
      "underlying" : 183,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "s",
        "type" : 138
      }, {
        "name" : "arg",
        "type" : 11
      } ],
      "name" : "(s *runtime.stkframe, arg unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 184
    }, {
      "name" : "func(p unsafe.Pointer) unsafe.Pointer",
      "params" : 186,
      "recv" : -1,
      "results" : 187,
      "type" : "Signature",
      "underlying" : 185,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "p",
        "type" : 11
      } ],
      "name" : "(p unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 186
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 11
      } ],
      "name" : "(unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 187
    }, {
      "elem" : 127,
      "name" : "*runtime.childInfo",
      "type" : "Pointer",
      "underlying" : 188
    }, {
      "elem" : 190,
      "name" : "*runtime.eface",
      "type" : "Pointer",
      "underlying" : 189
    }, {
      "local-name" : "eface",
      "name" : "runtime.eface",
      "package" : 0,
      "type" : "Named",
      "underlying" : 191
    }, {
      "fields" : [ {
        "name" : "_type",
        "type" : 98
      }, {
        "name" : "data",
        "type" : 11
      } ],
      "name" : "struct{_type *runtime._type; data unsafe.Pointer}",
      "type" : "Struct",
      "underlying" : 191
    }, {
      "name" : "func(ep *interface{}) *runtime.eface",
      "params" : 193,
      "recv" : -1,
      "results" : 195,
      "type" : "Signature",
      "underlying" : 192,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "ep",
        "type" : 194
      } ],
      "name" : "(ep *interface{})",
      "type" : "Tuple",
      "underlying" : 193
    }, {
      "elem" : 12,
      "name" : "*interface{}",
      "type" : "Pointer",
      "underlying" : 194
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 189
      } ],
      "name" : "(*runtime.eface)",
      "type" : "Tuple",
      "underlying" : 195
    } ],
    "variables" : [ {
      "name" : "gp",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "pc",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "lr",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "sp",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "syscallsp",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "syscallpc",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "sched",
      "package" : 0,
      "type" : 24,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "sp",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "pc",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "lr",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "goid",
      "package" : 0,
      "type" : 38,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "gopc",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "waitsince",
      "package" : 0,
      "type" : 38,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "waitreason",
      "package" : 0,
      "type" : 84,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ctxt",
      "package" : 0,
      "type" : 11,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "m",
      "package" : 0,
      "type" : 21,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "_defer",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "_panic",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "child",
      "package" : 0,
      "type" : 127,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "args",
      "package" : 0,
      "type" : 129,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "n",
      "package" : 0,
      "type" : 17,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "arglen",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "sp",
      "package" : 0,
      "type" : 131,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "depth",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "d",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "link",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "sp",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "pc",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "fn",
      "package" : 0,
      "type" : 18,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "fn",
      "package" : 0,
      "type" : 7,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "p",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "link",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "arg",
      "package" : 0,
      "type" : 12,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "eface",
      "package" : 0,
      "type" : 189,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "_type",
      "package" : 0,
      "type" : 98,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "data",
      "package" : 0,
      "type" : 11,
      "exported" : false,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}