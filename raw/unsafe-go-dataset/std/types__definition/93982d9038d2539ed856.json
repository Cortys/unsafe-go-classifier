{
  "usage" : {
    "file" : "map.go",
    "label1" : "definition",
    "label2" : "types",
    "line" : "125",
    "module" : "std",
    "pkg" : "runtime",
    "project" : "kubernetes/kubernetes",
    "snippet" : "oldbuckets unsafe.Pointer // previous bucket array of half the size, non-nil only when growing",
    "version" : "std"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 115,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "binds" : [ {
            "name" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "hmap"
            },
            "value" : {
              "fields" : [ {
                "declared-type" : {
                  "go-type" : 2,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 2,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "int"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "count"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 3,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 3,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uint8"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "flags"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 3,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 3,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uint8"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "B"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 4,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 4,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uint16"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "noverflow"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 5,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 5,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uint32"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "hash0"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 6,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 6,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "buckets"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 6,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 6,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "oldbuckets"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 7,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 7,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uintptr"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "nevacuate"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "contained" : {
                    "go-type" : 9,
                    "kind" : "type",
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 9,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "mapextra"
                    }
                  },
                  "go-type" : 8,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "extra"
                } ],
                "tag" : null
              } ],
              "go-type" : 1,
              "kind" : "type",
              "type" : "struct"
            }
          } ],
          "kind" : "decl",
          "type" : "type-alias"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 129,
      "code" : "// A header for a Go map.\ntype hmap struct {\n\t// Note: the format of the hmap is also encoded in cmd/compile/internal/gc/reflect.go.\n\t// Make sure this stays in sync with the compiler's definition.\n\tcount     int // # live cells == size of map.  Must be first (used by len() builtin)\n\tflags     uint8\n\tB         uint8  // log_2 of # of buckets (can hold up to loadFactor * 2^B items)\n\tnoverflow uint16 // approximate number of overflow buckets; see incrnoverflow for details\n\thash0     uint32 // hash seed\n\n\tbuckets    unsafe.Pointer // array of 2^B Buckets. may be nil if count==0.\n\toldbuckets unsafe.Pointer // previous bucket array of half the size, non-nil only when growing\n\tnevacuate  uintptr        // progress counter for evacuation (buckets less than this have been evacuated)\n\n\textra *mapextra // optional fields\n}",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "// A header for a Go map.\ntype hmap struct {\n\t// Note: the format of the hmap is also encoded in cmd/compile/internal/gc/reflect.go.\n\t// Make sure this stays in sync with the compiler's definition.\n\tcount     int // # live cells == size of map.  Must be first (used by len() builtin)\n\tflags     uint8\n\tB         uint8  // log_2 of # of buckets (can hold up to loadFactor * 2^B items)\n\tnoverflow uint16 // approximate number of overflow buckets; see incrnoverflow for details\n\thash0     uint32 // hash seed\n\n\tbuckets    unsafe.Pointer // array of 2^B Buckets. may be nil if count==0.\n\toldbuckets unsafe.Pointer // previous bucket array of half the size, non-nil only when growing\n\tnevacuate  uintptr        // progress counter for evacuation (buckets less than this have been evacuated)\n\n\textra *mapextra // optional fields\n}",
    "defines" : [ 0 ],
    "functions" : [ ],
    "line-end" : 129,
    "line-start" : 115,
    "names" : [ "hmap" ],
    "package" : 0,
    "packages" : [ {
      "name" : "runtime",
      "path" : "runtime"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ ],
    "receivers" : [ ],
    "results" : [ ],
    "type" : "type",
    "types" : [ {
      "local-name" : "hmap",
      "name" : "runtime.hmap",
      "package" : 0,
      "type" : "Named",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "count",
        "type" : 2
      }, {
        "name" : "flags",
        "type" : 3
      }, {
        "name" : "B",
        "type" : 3
      }, {
        "name" : "noverflow",
        "type" : 4
      }, {
        "name" : "hash0",
        "type" : 5
      }, {
        "name" : "buckets",
        "type" : 6
      }, {
        "name" : "oldbuckets",
        "type" : 6
      }, {
        "name" : "nevacuate",
        "type" : 7
      }, {
        "name" : "extra",
        "type" : 8
      } ],
      "name" : "struct{count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets unsafe.Pointer; oldbuckets unsafe.Pointer; nevacuate uintptr; extra *runtime.mapextra}",
      "type" : "Struct",
      "underlying" : 1
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 2
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 3
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 4
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 5
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 6
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 7
    }, {
      "elem" : 9,
      "name" : "*runtime.mapextra",
      "type" : "Pointer",
      "underlying" : 8
    }, {
      "local-name" : "mapextra",
      "name" : "runtime.mapextra",
      "package" : 0,
      "type" : "Named",
      "underlying" : 10
    }, {
      "fields" : [ {
        "name" : "overflow",
        "type" : 11
      }, {
        "name" : "oldoverflow",
        "type" : 11
      }, {
        "name" : "nextOverflow",
        "type" : 13
      } ],
      "name" : "struct{overflow *[]*runtime.bmap; oldoverflow *[]*runtime.bmap; nextOverflow *runtime.bmap}",
      "type" : "Struct",
      "underlying" : 10
    }, {
      "elem" : 12,
      "name" : "*[]*runtime.bmap",
      "type" : "Pointer",
      "underlying" : 11
    }, {
      "elem" : 13,
      "name" : "[]*runtime.bmap",
      "type" : "Slice",
      "underlying" : 12
    }, {
      "elem" : 14,
      "name" : "*runtime.bmap",
      "type" : "Pointer",
      "underlying" : 13
    }, {
      "local-name" : "bmap",
      "name" : "runtime.bmap",
      "package" : 0,
      "type" : "Named",
      "underlying" : 15
    }, {
      "fields" : [ {
        "name" : "tophash",
        "type" : 16
      } ],
      "name" : "struct{tophash [8]uint8}",
      "type" : "Struct",
      "underlying" : 15
    }, {
      "elem" : 3,
      "name" : "[8]uint8",
      "type" : "Array",
      "underlying" : 16
    } ],
    "variables" : [ ]
  },
  "go-version" : "1.14.3"
}