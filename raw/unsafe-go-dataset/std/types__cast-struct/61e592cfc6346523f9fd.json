{
  "usage" : {
    "file" : "symtab.go",
    "label1" : "cast-struct",
    "label2" : "types",
    "line" : "582",
    "module" : "std",
    "pkg" : "runtime",
    "project" : "kubernetes/kubernetes",
    "snippet" : "fi := (*funcinl)(unsafe.Pointer(fn))",
    "version" : "std"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3, 4 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 577,
      "ast" : {
        "condition" : {
          "go-type" : 8,
          "kind" : "expression",
          "left" : {
            "go-type" : 4,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "f",
              "variable" : 0
            }
          },
          "operator" : "==",
          "right" : {
            "go-type" : 9,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Nil",
              "kind" : "ident",
              "value" : "nil"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 579,
      "code" : "if f == nil {\n\treturn \"\"\n}",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 578,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "constant",
          "value" : {
            "type" : "STRING",
            "value" : ""
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 578,
      "code" : "return \"\"",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 2, 0 ],
      "decl-vars" : [ 2 ],
      "line-start" : 580,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "fn"
          }
        } ],
        "right" : [ {
          "arguments" : [ ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "raw"
            },
            "go-type" : 20,
            "kind" : "expression",
            "target" : {
              "go-type" : 4,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "f",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "go-type" : 10,
          "kind" : "expression",
          "type" : "call"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 580,
      "code" : "fn := f.raw()",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6, 8 ],
      "in-vars" : [ 0, 2 ],
      "exit" : false,
      "out-vars" : [ 2, 0 ],
      "decl-vars" : [ ],
      "line-start" : 581,
      "ast" : {
        "condition" : {
          "go-type" : 8,
          "kind" : "expression",
          "left" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "entry",
              "variable" : 3
            },
            "go-type" : 13,
            "kind" : "expression",
            "target" : {
              "go-type" : 10,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "fn",
                "variable" : 2
              }
            },
            "type" : "selector"
          },
          "operator" : "==",
          "right" : {
            "go-type" : 13,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 584,
      "code" : "if fn.entry == 0 {\n\tfi := (*funcinl)(unsafe.Pointer(fn))\n\treturn fi.name\n}",
      "entry" : false,
      "use-vars" : [ 2 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 7 ],
      "in-vars" : [ 2 ],
      "exit" : false,
      "out-vars" : [ 4 ],
      "decl-vars" : [ 4 ],
      "line-start" : 582,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "fi"
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 23,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 23,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "funcinl"
              }
            },
            "go-type" : 22,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 22,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 26,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 1,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 26,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 26,
            "kind" : "expression",
            "target" : {
              "go-type" : 10,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "fn",
                "variable" : 2
              }
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 582,
      "code" : "fi := (*funcinl)(unsafe.Pointer(fn))",
      "entry" : false,
      "use-vars" : [ 2 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 4 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 583,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "name",
            "variable" : 5
          },
          "go-type" : 3,
          "kind" : "expression",
          "target" : {
            "go-type" : 22,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "fi",
              "variable" : 4
            }
          },
          "type" : "selector"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 583,
      "code" : "return fi.name",
      "entry" : false,
      "use-vars" : [ 4 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 585,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "arguments" : [ {
            "arguments" : [ ],
            "ellipsis" : false,
            "function" : {
              "field" : {
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "funcInfo"
              },
              "go-type" : 80,
              "kind" : "expression",
              "target" : {
                "go-type" : 4,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "f",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "go-type" : 29,
            "kind" : "expression",
            "type" : "call"
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 27,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "funcname"
            }
          },
          "go-type" : 3,
          "kind" : "expression",
          "type" : "call"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 585,
      "code" : "return funcname(f.funcInfo())",
      "entry" : false,
      "use-vars" : [ 0 ]
    } ],
    "code" : "// Name returns the name of the function.\nfunc (f *Func) Name() string {\n\tif f == nil {\n\t\treturn \"\"\n\t}\n\tfn := f.raw()\n\tif fn.entry == 0 {\n\t\tfi := (*funcinl)(unsafe.Pointer(fn))\n\t\treturn fi.name\n\t}\n\treturn funcname(f.funcInfo())\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "Name",
      "package" : 0,
      "type" : 0,
      "exported" : true
    }, {
      "name" : "raw",
      "package" : 0,
      "type" : 20,
      "exported" : false
    }, {
      "name" : "funcname",
      "package" : 0,
      "type" : 27,
      "exported" : false
    }, {
      "name" : "funcInfo",
      "package" : 0,
      "type" : 80,
      "exported" : false
    } ],
    "line-end" : 586,
    "line-start" : 576,
    "names" : [ "Name" ],
    "package" : 0,
    "packages" : [ {
      "name" : "runtime",
      "path" : "runtime"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ ],
    "receivers" : [ 0 ],
    "results" : [ 1 ],
    "type" : "function",
    "types" : [ {
      "name" : "func() string",
      "params" : 1,
      "recv" : 0,
      "results" : 2,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 3
      } ],
      "name" : "(string)",
      "type" : "Tuple",
      "underlying" : 2
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 3
    }, {
      "elem" : 5,
      "name" : "*runtime.Func",
      "type" : "Pointer",
      "underlying" : 4
    }, {
      "local-name" : "Func",
      "name" : "runtime.Func",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "fields" : [ {
        "name" : "opaque",
        "type" : 7
      } ],
      "name" : "struct{opaque struct{}}",
      "type" : "Struct",
      "underlying" : 6
    }, {
      "fields" : [ ],
      "name" : "struct{}",
      "type" : "Struct",
      "underlying" : 7
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 8
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 9
    }, {
      "elem" : 11,
      "name" : "*runtime._func",
      "type" : "Pointer",
      "underlying" : 10
    }, {
      "local-name" : "_func",
      "name" : "runtime._func",
      "package" : 0,
      "type" : "Named",
      "underlying" : 12
    }, {
      "fields" : [ {
        "name" : "entry",
        "type" : 13
      }, {
        "name" : "nameoff",
        "type" : 14
      }, {
        "name" : "args",
        "type" : 14
      }, {
        "name" : "deferreturn",
        "type" : 15
      }, {
        "name" : "pcsp",
        "type" : 14
      }, {
        "name" : "pcfile",
        "type" : 14
      }, {
        "name" : "pcln",
        "type" : 14
      }, {
        "name" : "npcdata",
        "type" : 14
      }, {
        "name" : "funcID",
        "type" : 16
      }, {
        "name" : "_",
        "type" : 18
      }, {
        "name" : "nfuncdata",
        "type" : 17
      } ],
      "name" : "struct{entry uintptr; nameoff int32; args int32; deferreturn uint32; pcsp int32; pcfile int32; pcln int32; npcdata int32; funcID runtime.funcID; _ [2]int8; nfuncdata uint8}",
      "type" : "Struct",
      "underlying" : 12
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 14
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 15
    }, {
      "local-name" : "funcID",
      "name" : "runtime.funcID",
      "package" : 0,
      "type" : "Named",
      "underlying" : 17
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 17
    }, {
      "elem" : 19,
      "name" : "[2]int8",
      "type" : "Array",
      "underlying" : 18
    }, {
      "name" : "int8",
      "type" : "Basic",
      "underlying" : 19
    }, {
      "name" : "func() *runtime._func",
      "params" : 1,
      "recv" : -1,
      "results" : 21,
      "type" : "Signature",
      "underlying" : 20,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 10
      } ],
      "name" : "(*runtime._func)",
      "type" : "Tuple",
      "underlying" : 21
    }, {
      "elem" : 23,
      "name" : "*runtime.funcinl",
      "type" : "Pointer",
      "underlying" : 22
    }, {
      "local-name" : "funcinl",
      "name" : "runtime.funcinl",
      "package" : 0,
      "type" : "Named",
      "underlying" : 24
    }, {
      "fields" : [ {
        "name" : "zero",
        "type" : 13
      }, {
        "name" : "entry",
        "type" : 13
      }, {
        "name" : "name",
        "type" : 3
      }, {
        "name" : "file",
        "type" : 3
      }, {
        "name" : "line",
        "type" : 25
      } ],
      "name" : "struct{zero uintptr; entry uintptr; name string; file string; line int}",
      "type" : "Struct",
      "underlying" : 24
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 25
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 26
    }, {
      "name" : "func(f runtime.funcInfo) string",
      "params" : 28,
      "recv" : -1,
      "results" : 2,
      "type" : "Signature",
      "underlying" : 27,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "f",
        "type" : 29
      } ],
      "name" : "(f runtime.funcInfo)",
      "type" : "Tuple",
      "underlying" : 28
    }, {
      "local-name" : "funcInfo",
      "name" : "runtime.funcInfo",
      "package" : 0,
      "type" : "Named",
      "underlying" : 30
    }, {
      "fields" : [ {
        "name" : "_func",
        "type" : 10
      }, {
        "name" : "datap",
        "type" : 31
      } ],
      "name" : "struct{*runtime._func; datap *runtime.moduledata}",
      "type" : "Struct",
      "underlying" : 30
    }, {
      "elem" : 32,
      "name" : "*runtime.moduledata",
      "type" : "Pointer",
      "underlying" : 31
    }, {
      "local-name" : "moduledata",
      "name" : "runtime.moduledata",
      "package" : 0,
      "type" : "Named",
      "underlying" : 33
    }, {
      "fields" : [ {
        "name" : "pclntable",
        "type" : 34
      }, {
        "name" : "ftab",
        "type" : 36
      }, {
        "name" : "filetab",
        "type" : 39
      }, {
        "name" : "findfunctab",
        "type" : 13
      }, {
        "name" : "minpc",
        "type" : 13
      }, {
        "name" : "maxpc",
        "type" : 13
      }, {
        "name" : "text",
        "type" : 13
      }, {
        "name" : "etext",
        "type" : 13
      }, {
        "name" : "noptrdata",
        "type" : 13
      }, {
        "name" : "enoptrdata",
        "type" : 13
      }, {
        "name" : "data",
        "type" : 13
      }, {
        "name" : "edata",
        "type" : 13
      }, {
        "name" : "bss",
        "type" : 13
      }, {
        "name" : "ebss",
        "type" : 13
      }, {
        "name" : "noptrbss",
        "type" : 13
      }, {
        "name" : "enoptrbss",
        "type" : 13
      }, {
        "name" : "end",
        "type" : 13
      }, {
        "name" : "gcdata",
        "type" : 13
      }, {
        "name" : "gcbss",
        "type" : 13
      }, {
        "name" : "types",
        "type" : 13
      }, {
        "name" : "etypes",
        "type" : 13
      }, {
        "name" : "textsectmap",
        "type" : 40
      }, {
        "name" : "typelinks",
        "type" : 43
      }, {
        "name" : "itablinks",
        "type" : 44
      }, {
        "name" : "ptab",
        "type" : 69
      }, {
        "name" : "pluginpath",
        "type" : 3
      }, {
        "name" : "pkghashes",
        "type" : 72
      }, {
        "name" : "modulename",
        "type" : 3
      }, {
        "name" : "modulehashes",
        "type" : 72
      }, {
        "name" : "hasmain",
        "type" : 17
      }, {
        "name" : "gcdatamask",
        "type" : 76
      }, {
        "name" : "gcbssmask",
        "type" : 76
      }, {
        "name" : "typemap",
        "type" : 79
      }, {
        "name" : "bad",
        "type" : 57
      }, {
        "name" : "next",
        "type" : 31
      } ],
      "name" : "struct{pclntable []byte; ftab []runtime.functab; filetab []uint32; findfunctab uintptr; minpc uintptr; maxpc uintptr; text uintptr; etext uintptr; noptrdata uintptr; enoptrdata uintptr; data uintptr; edata uintptr; bss uintptr; ebss uintptr; noptrbss uintptr; enoptrbss uintptr; end uintptr; gcdata uintptr; gcbss uintptr; types uintptr; etypes uintptr; textsectmap []runtime.textsect; typelinks []int32; itablinks []*runtime.itab; ptab []runtime.ptabEntry; pluginpath string; pkghashes []runtime.modulehash; modulename string; modulehashes []runtime.modulehash; hasmain uint8; gcdatamask runtime.bitvector; gcbssmask runtime.bitvector; typemap map[runtime.typeOff]*runtime._type; bad bool; next *runtime.moduledata}",
      "type" : "Struct",
      "underlying" : 33
    }, {
      "elem" : 35,
      "name" : "[]byte",
      "type" : "Slice",
      "underlying" : 34
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 35
    }, {
      "elem" : 37,
      "name" : "[]runtime.functab",
      "type" : "Slice",
      "underlying" : 36
    }, {
      "local-name" : "functab",
      "name" : "runtime.functab",
      "package" : 0,
      "type" : "Named",
      "underlying" : 38
    }, {
      "fields" : [ {
        "name" : "entry",
        "type" : 13
      }, {
        "name" : "funcoff",
        "type" : 13
      } ],
      "name" : "struct{entry uintptr; funcoff uintptr}",
      "type" : "Struct",
      "underlying" : 38
    }, {
      "elem" : 15,
      "name" : "[]uint32",
      "type" : "Slice",
      "underlying" : 39
    }, {
      "elem" : 41,
      "name" : "[]runtime.textsect",
      "type" : "Slice",
      "underlying" : 40
    }, {
      "local-name" : "textsect",
      "name" : "runtime.textsect",
      "package" : 0,
      "type" : "Named",
      "underlying" : 42
    }, {
      "fields" : [ {
        "name" : "vaddr",
        "type" : 13
      }, {
        "name" : "length",
        "type" : 13
      }, {
        "name" : "baseaddr",
        "type" : 13
      } ],
      "name" : "struct{vaddr uintptr; length uintptr; baseaddr uintptr}",
      "type" : "Struct",
      "underlying" : 42
    }, {
      "elem" : 14,
      "name" : "[]int32",
      "type" : "Slice",
      "underlying" : 43
    }, {
      "elem" : 45,
      "name" : "[]*runtime.itab",
      "type" : "Slice",
      "underlying" : 44
    }, {
      "elem" : 46,
      "name" : "*runtime.itab",
      "type" : "Pointer",
      "underlying" : 45
    }, {
      "local-name" : "itab",
      "name" : "runtime.itab",
      "package" : 0,
      "type" : "Named",
      "underlying" : 47
    }, {
      "fields" : [ {
        "name" : "inter",
        "type" : 48
      }, {
        "name" : "_type",
        "type" : 66
      }, {
        "name" : "hash",
        "type" : 15
      }, {
        "name" : "_",
        "type" : 67
      }, {
        "name" : "fun",
        "type" : 68
      } ],
      "name" : "struct{inter *runtime.interfacetype; _type *runtime._type; hash uint32; _ [4]byte; fun [1]uintptr}",
      "type" : "Struct",
      "underlying" : 47
    }, {
      "elem" : 49,
      "name" : "*runtime.interfacetype",
      "type" : "Pointer",
      "underlying" : 48
    }, {
      "local-name" : "interfacetype",
      "name" : "runtime.interfacetype",
      "package" : 0,
      "type" : "Named",
      "underlying" : 50
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 51
      }, {
        "name" : "pkgpath",
        "type" : 61
      }, {
        "name" : "mhdr",
        "type" : 63
      } ],
      "name" : "struct{typ runtime._type; pkgpath runtime.name; mhdr []runtime.imethod}",
      "type" : "Struct",
      "underlying" : 50
    }, {
      "local-name" : "_type",
      "name" : "runtime._type",
      "package" : 0,
      "type" : "Named",
      "underlying" : 52
    }, {
      "fields" : [ {
        "name" : "size",
        "type" : 13
      }, {
        "name" : "ptrdata",
        "type" : 13
      }, {
        "name" : "hash",
        "type" : 15
      }, {
        "name" : "tflag",
        "type" : 53
      }, {
        "name" : "align",
        "type" : 17
      }, {
        "name" : "fieldAlign",
        "type" : 17
      }, {
        "name" : "kind",
        "type" : 17
      }, {
        "name" : "equal",
        "type" : 54
      }, {
        "name" : "gcdata",
        "type" : 58
      }, {
        "name" : "str",
        "type" : 59
      }, {
        "name" : "ptrToThis",
        "type" : 60
      } ],
      "name" : "struct{size uintptr; ptrdata uintptr; hash uint32; tflag runtime.tflag; align uint8; fieldAlign uint8; kind uint8; equal func(unsafe.Pointer, unsafe.Pointer) bool; gcdata *byte; str runtime.nameOff; ptrToThis runtime.typeOff}",
      "type" : "Struct",
      "underlying" : 52
    }, {
      "local-name" : "tflag",
      "name" : "runtime.tflag",
      "package" : 0,
      "type" : "Named",
      "underlying" : 17
    }, {
      "name" : "func(unsafe.Pointer, unsafe.Pointer) bool",
      "params" : 55,
      "recv" : -1,
      "results" : 56,
      "type" : "Signature",
      "underlying" : 54,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 26
      }, {
        "name" : "",
        "type" : 26
      } ],
      "name" : "(unsafe.Pointer, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 55
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 57
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 56
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 57
    }, {
      "elem" : 35,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 58
    }, {
      "local-name" : "nameOff",
      "name" : "runtime.nameOff",
      "package" : 0,
      "type" : "Named",
      "underlying" : 14
    }, {
      "local-name" : "typeOff",
      "name" : "runtime.typeOff",
      "package" : 0,
      "type" : "Named",
      "underlying" : 14
    }, {
      "local-name" : "name",
      "name" : "runtime.name",
      "package" : 0,
      "type" : "Named",
      "underlying" : 62
    }, {
      "fields" : [ {
        "name" : "bytes",
        "type" : 58
      } ],
      "name" : "struct{bytes *byte}",
      "type" : "Struct",
      "underlying" : 62
    }, {
      "elem" : 64,
      "name" : "[]runtime.imethod",
      "type" : "Slice",
      "underlying" : 63
    }, {
      "local-name" : "imethod",
      "name" : "runtime.imethod",
      "package" : 0,
      "type" : "Named",
      "underlying" : 65
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 59
      }, {
        "name" : "ityp",
        "type" : 60
      } ],
      "name" : "struct{name runtime.nameOff; ityp runtime.typeOff}",
      "type" : "Struct",
      "underlying" : 65
    }, {
      "elem" : 51,
      "name" : "*runtime._type",
      "type" : "Pointer",
      "underlying" : 66
    }, {
      "elem" : 35,
      "name" : "[4]byte",
      "type" : "Array",
      "underlying" : 67
    }, {
      "elem" : 13,
      "name" : "[1]uintptr",
      "type" : "Array",
      "underlying" : 68
    }, {
      "elem" : 70,
      "name" : "[]runtime.ptabEntry",
      "type" : "Slice",
      "underlying" : 69
    }, {
      "local-name" : "ptabEntry",
      "name" : "runtime.ptabEntry",
      "package" : 0,
      "type" : "Named",
      "underlying" : 71
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 59
      }, {
        "name" : "typ",
        "type" : 60
      } ],
      "name" : "struct{name runtime.nameOff; typ runtime.typeOff}",
      "type" : "Struct",
      "underlying" : 71
    }, {
      "elem" : 73,
      "name" : "[]runtime.modulehash",
      "type" : "Slice",
      "underlying" : 72
    }, {
      "local-name" : "modulehash",
      "name" : "runtime.modulehash",
      "package" : 0,
      "type" : "Named",
      "underlying" : 74
    }, {
      "fields" : [ {
        "name" : "modulename",
        "type" : 3
      }, {
        "name" : "linktimehash",
        "type" : 3
      }, {
        "name" : "runtimehash",
        "type" : 75
      } ],
      "name" : "struct{modulename string; linktimehash string; runtimehash *string}",
      "type" : "Struct",
      "underlying" : 74
    }, {
      "elem" : 3,
      "name" : "*string",
      "type" : "Pointer",
      "underlying" : 75
    }, {
      "local-name" : "bitvector",
      "name" : "runtime.bitvector",
      "package" : 0,
      "type" : "Named",
      "underlying" : 77
    }, {
      "fields" : [ {
        "name" : "n",
        "type" : 14
      }, {
        "name" : "bytedata",
        "type" : 78
      } ],
      "name" : "struct{n int32; bytedata *uint8}",
      "type" : "Struct",
      "underlying" : 77
    }, {
      "elem" : 17,
      "name" : "*uint8",
      "type" : "Pointer",
      "underlying" : 78
    }, {
      "elem" : 66,
      "key" : 60,
      "name" : "map[runtime.typeOff]*runtime._type",
      "type" : "Map",
      "underlying" : 79
    }, {
      "name" : "func() runtime.funcInfo",
      "params" : 1,
      "recv" : -1,
      "results" : 81,
      "type" : "Signature",
      "underlying" : 80,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 29
      } ],
      "name" : "(runtime.funcInfo)",
      "type" : "Tuple",
      "underlying" : 81
    } ],
    "variables" : [ {
      "name" : "f",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "fn",
      "package" : 0,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "entry",
      "package" : 0,
      "type" : 13,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "fi",
      "package" : 0,
      "type" : 22,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "name",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}