{
  "usage" : {
    "file" : "type.go",
    "label1" : "cast-struct",
    "label2" : "types",
    "line" : "588",
    "module" : "std",
    "pkg" : "internal/reflectlite",
    "project" : "kubernetes/kubernetes",
    "snippet" : "tt := (*arrayType)(unsafe.Pointer(t))",
    "version" : "std"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3, 4 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 585,
      "ast" : {
        "condition" : {
          "go-type" : 4,
          "kind" : "expression",
          "left" : {
            "arguments" : [ ],
            "ellipsis" : false,
            "function" : {
              "field" : {
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "Kind"
              },
              "go-type" : 7,
              "kind" : "expression",
              "target" : {
                "go-type" : 0,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "t",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "go-type" : 5,
            "kind" : "expression",
            "type" : "call"
          },
          "operator" : "!=",
          "right" : {
            "go-type" : 5,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "17"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 587,
      "code" : "if t.Kind() != Array {\n\tpanic(\"reflect: Len of non-array type\")\n}",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 586,
      "ast" : {
        "kind" : "statement",
        "type" : "expression",
        "value" : {
          "arguments" : [ {
            "go-type" : 12,
            "kind" : "constant",
            "value" : {
              "type" : "STRING",
              "value" : "reflect: Len of non-array type"
            }
          } ],
          "ellipsis" : false,
          "function" : {
            "go-type" : 9,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Builtin",
              "kind" : "ident",
              "value" : "panic"
            }
          },
          "go-type" : 1,
          "kind" : "expression",
          "type" : "call"
        }
      },
      "assign-vars" : [ ],
      "line-end" : 586,
      "code" : "panic(\"reflect: Len of non-array type\")",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 2 ],
      "decl-vars" : [ 2 ],
      "line-start" : 588,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "tt"
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 14,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 14,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "arrayType"
              }
            },
            "go-type" : 13,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 13,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 9,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 1,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 9,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 9,
            "kind" : "expression",
            "target" : {
              "go-type" : 0,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "t",
                "variable" : 0
              }
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 588,
      "code" : "tt := (*arrayType)(unsafe.Pointer(t))",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 2 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 589,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "coerced-to" : {
            "go-type" : 3,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 3,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "int"
            }
          },
          "go-type" : 3,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "len",
              "variable" : 3
            },
            "go-type" : 3,
            "kind" : "expression",
            "target" : {
              "go-type" : 13,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "tt",
                "variable" : 2
              }
            },
            "type" : "selector"
          },
          "type" : "cast"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 589,
      "code" : "return int(tt.len)",
      "entry" : false,
      "use-vars" : [ 2 ]
    } ],
    "code" : "func (t *rtype) Len() int {\n\tif t.Kind() != Array {\n\t\tpanic(\"reflect: Len of non-array type\")\n\t}\n\ttt := (*arrayType)(unsafe.Pointer(t))\n\treturn int(tt.len)\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "Len",
      "package" : 0,
      "type" : 0,
      "exported" : true
    }, {
      "name" : "Kind",
      "package" : 0,
      "type" : 7,
      "exported" : true
    } ],
    "line-end" : 590,
    "line-start" : 584,
    "names" : [ "Len" ],
    "package" : 0,
    "packages" : [ {
      "name" : "reflectlite",
      "path" : "internal/reflectlite"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ ],
    "receivers" : [ 0 ],
    "results" : [ 1 ],
    "type" : "function",
    "types" : [ {
      "name" : "func() int",
      "params" : 1,
      "recv" : 0,
      "results" : 2,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 3
      } ],
      "name" : "(int)",
      "type" : "Tuple",
      "underlying" : 2
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 3
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 4
    }, {
      "local-name" : "Kind",
      "name" : "internal/reflectlite.Kind",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 6
    }, {
      "name" : "func() internal/reflectlite.Kind",
      "params" : 1,
      "recv" : -1,
      "results" : 8,
      "type" : "Signature",
      "underlying" : 7,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 5
      } ],
      "name" : "(internal/reflectlite.Kind)",
      "type" : "Tuple",
      "underlying" : 8
    }, {
      "name" : "func(interface{})",
      "params" : 10,
      "recv" : -1,
      "results" : 1,
      "type" : "Signature",
      "underlying" : 9,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 11
      } ],
      "name" : "(interface{})",
      "type" : "Tuple",
      "underlying" : 10
    }, {
      "methods" : [ ],
      "name" : "interface{}",
      "type" : "Interface",
      "underlying" : 11
    }, {
      "name" : "string",
      "type" : "Basic",
      "underlying" : 12
    }, {
      "elem" : 14,
      "name" : "*internal/reflectlite.arrayType",
      "type" : "Pointer",
      "underlying" : 13
    }, {
      "local-name" : "arrayType",
      "name" : "internal/reflectlite.arrayType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 15
    }, {
      "fields" : [ {
        "name" : "rtype",
        "type" : 1
      }, {
        "name" : "elem",
        "type" : 0
      }, {
        "name" : "slice",
        "type" : 0
      }, {
        "name" : "len",
        "type" : 3
      } ],
      "name" : "struct{internal/reflectlite.rtype; elem *internal/reflectlite.rtype; slice *internal/reflectlite.rtype; len uintptr}",
      "type" : "Struct",
      "underlying" : 15
    } ],
    "variables" : [ {
      "name" : "t",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 3,
      "exported" : false
    }, {
      "name" : "tt",
      "package" : 0,
      "type" : 13,
      "exported" : false
    }, {
      "name" : "len",
      "package" : 0,
      "type" : 3,
      "exported" : false
    } ]
  },
  "go-version" : "1.14.3"
}