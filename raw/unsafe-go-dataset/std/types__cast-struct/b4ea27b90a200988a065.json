{
  "usage" : {
    "file" : "type.go",
    "label1" : "cast-struct",
    "label2" : "types",
    "line" : "428",
    "module" : "std",
    "pkg" : "internal/reflectlite",
    "project" : "kubernetes/kubernetes",
    "snippet" : "return &(*structTypeUncommon)(unsafe.Pointer(t)).u",
    "version" : "std"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 3, 4 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 423,
      "ast" : {
        "condition" : {
          "go-type" : 24,
          "kind" : "expression",
          "left" : {
            "go-type" : 14,
            "kind" : "expression",
            "left" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "tflag",
                "variable" : 2
              },
              "go-type" : 14,
              "kind" : "expression",
              "target" : {
                "go-type" : 10,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "t",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "operator" : "&",
            "right" : {
              "go-type" : 14,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "1"
              }
            },
            "type" : "binary"
          },
          "operator" : "==",
          "right" : {
            "go-type" : 14,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "0"
            }
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 425,
      "code" : "if t.tflag&tflagUncommon == 0 {\n\treturn nil\n}",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 424,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 25,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 424,
      "code" : "return nil",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 5, 7, 10, 13, 16, 19, 22, 25, 28 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 426,
      "ast" : {
        "condition" : {
          "arguments" : [ ],
          "ellipsis" : false,
          "function" : {
            "field" : {
              "function" : 1,
              "ident-kind" : "Func",
              "kind" : "ident",
              "value" : "Kind"
            },
            "go-type" : 28,
            "kind" : "expression",
            "target" : {
              "go-type" : 10,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "t",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "go-type" : 26,
          "kind" : "expression",
          "type" : "call"
        },
        "kind" : "statement",
        "type" : "switch"
      },
      "assign-vars" : [ ],
      "line-end" : 477,
      "code" : "switch t.Kind() {\ncase Struct:\n\treturn &(*structTypeUncommon)(unsafe.Pointer(t)).u\ncase Ptr:\n\ttype u struct {\n\t\tptrType\n\t\tu uncommonType\n\t}\n\treturn &(*u)(unsafe.Pointer(t)).u\ncase Func:\n\ttype u struct {\n\t\tfuncType\n\t\tu uncommonType\n\t}\n\treturn &(*u)(unsafe.Pointer(t)).u\ncase Slice:\n\ttype u struct {\n\t\tsliceType\n\t\tu uncommonType\n\t}\n\treturn &(*u)(unsafe.Pointer(t)).u\ncase Array:\n\ttype u struct {\n\t\tarrayType\n\t\tu uncommonType\n\t}\n\treturn &(*u)(unsafe.Pointer(t)).u\ncase Chan:\n\ttype u struct {\n\t\tchanType\n\t\tu uncommonType\n\t}\n\treturn &(*u)(unsafe.Pointer(t)).u\ncase Map:\n\ttype u struct {\n\t\tmapType\n\t\tu uncommonType\n\t}\n\treturn &(*u)(unsafe.Pointer(t)).u\ncase Interface:\n\ttype u struct {\n\t\tinterfaceType\n\t\tu uncommonType\n\t}\n\treturn &(*u)(unsafe.Pointer(t)).u\ndefault:\n\ttype u struct {\n\t\trtype\n\t\tu uncommonType\n\t}\n\treturn &(*u)(unsafe.Pointer(t)).u\n}",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 427,
      "ast" : {
        "expressions" : [ {
          "go-type" : 26,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "25"
          }
        } ],
        "kind" : "statement",
        "type" : "case-clause"
      },
      "assign-vars" : [ ],
      "line-end" : 428,
      "code" : "case Struct:\n\treturn &(*structTypeUncommon)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 428,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "u",
              "variable" : 3
            },
            "go-type" : 4,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "contained" : {
                  "go-type" : 31,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 31,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "structTypeUncommon"
                  }
                },
                "go-type" : 30,
                "kind" : "type",
                "type" : "pointer"
              },
              "go-type" : 30,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 18,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 18,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 18,
                "kind" : "expression",
                "target" : {
                  "go-type" : 10,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "t",
                    "variable" : 0
                  }
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "selector"
          },
          "type" : "unary"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 428,
      "code" : "return &(*structTypeUncommon)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 8 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 429,
      "ast" : {
        "expressions" : [ {
          "go-type" : 26,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "22"
          }
        } ],
        "kind" : "statement",
        "type" : "case-clause"
      },
      "assign-vars" : [ ],
      "line-end" : 434,
      "code" : "case Ptr:\n\ttype u struct {\n\t\tptrType\n\t\tu uncommonType\n\t}\n\treturn &(*u)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 9 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 430,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "binds" : [ {
            "name" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "u"
            },
            "value" : {
              "fields" : [ {
                "declared-type" : {
                  "go-type" : 41,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 41,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "ptrType"
                  }
                },
                "kind" : "field",
                "names" : [ ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 4,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 4,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uncommonType"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "u"
                } ],
                "tag" : null
              } ],
              "go-type" : 40,
              "kind" : "type",
              "type" : "struct"
            }
          } ],
          "kind" : "decl",
          "type" : "type-alias"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 433,
      "code" : "type u struct {\n\tptrType\n\tu uncommonType\n}",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 434,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "u",
              "variable" : 4
            },
            "go-type" : 4,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "contained" : {
                  "go-type" : 44,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 44,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "u"
                  }
                },
                "go-type" : 43,
                "kind" : "type",
                "type" : "pointer"
              },
              "go-type" : 43,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 18,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 18,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 18,
                "kind" : "expression",
                "target" : {
                  "go-type" : 10,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "t",
                    "variable" : 0
                  }
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "selector"
          },
          "type" : "unary"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 434,
      "code" : "return &(*u)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 11 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 435,
      "ast" : {
        "expressions" : [ {
          "go-type" : 26,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "19"
          }
        } ],
        "kind" : "statement",
        "type" : "case-clause"
      },
      "assign-vars" : [ ],
      "line-end" : 440,
      "code" : "case Func:\n\ttype u struct {\n\t\tfuncType\n\t\tu uncommonType\n\t}\n\treturn &(*u)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 12 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 436,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "binds" : [ {
            "name" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "u"
            },
            "value" : {
              "fields" : [ {
                "declared-type" : {
                  "go-type" : 46,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 46,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "funcType"
                  }
                },
                "kind" : "field",
                "names" : [ ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 4,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 4,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uncommonType"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "u"
                } ],
                "tag" : null
              } ],
              "go-type" : 45,
              "kind" : "type",
              "type" : "struct"
            }
          } ],
          "kind" : "decl",
          "type" : "type-alias"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 439,
      "code" : "type u struct {\n\tfuncType\n\tu uncommonType\n}",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 440,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "u",
              "variable" : 5
            },
            "go-type" : 4,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "contained" : {
                  "go-type" : 44,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 44,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "u"
                  }
                },
                "go-type" : 43,
                "kind" : "type",
                "type" : "pointer"
              },
              "go-type" : 43,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 18,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 18,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 18,
                "kind" : "expression",
                "target" : {
                  "go-type" : 10,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "t",
                    "variable" : 0
                  }
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "selector"
          },
          "type" : "unary"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 440,
      "code" : "return &(*u)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 14 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 441,
      "ast" : {
        "expressions" : [ {
          "go-type" : 26,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "23"
          }
        } ],
        "kind" : "statement",
        "type" : "case-clause"
      },
      "assign-vars" : [ ],
      "line-end" : 446,
      "code" : "case Slice:\n\ttype u struct {\n\t\tsliceType\n\t\tu uncommonType\n\t}\n\treturn &(*u)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 15 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 442,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "binds" : [ {
            "name" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "u"
            },
            "value" : {
              "fields" : [ {
                "declared-type" : {
                  "go-type" : 49,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 49,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "sliceType"
                  }
                },
                "kind" : "field",
                "names" : [ ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 4,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 4,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uncommonType"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "u"
                } ],
                "tag" : null
              } ],
              "go-type" : 48,
              "kind" : "type",
              "type" : "struct"
            }
          } ],
          "kind" : "decl",
          "type" : "type-alias"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 445,
      "code" : "type u struct {\n\tsliceType\n\tu uncommonType\n}",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 446,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "u",
              "variable" : 6
            },
            "go-type" : 4,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "contained" : {
                  "go-type" : 44,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 44,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "u"
                  }
                },
                "go-type" : 43,
                "kind" : "type",
                "type" : "pointer"
              },
              "go-type" : 43,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 18,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 18,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 18,
                "kind" : "expression",
                "target" : {
                  "go-type" : 10,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "t",
                    "variable" : 0
                  }
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "selector"
          },
          "type" : "unary"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 446,
      "code" : "return &(*u)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 17 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 447,
      "ast" : {
        "expressions" : [ {
          "go-type" : 26,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "17"
          }
        } ],
        "kind" : "statement",
        "type" : "case-clause"
      },
      "assign-vars" : [ ],
      "line-end" : 452,
      "code" : "case Array:\n\ttype u struct {\n\t\tarrayType\n\t\tu uncommonType\n\t}\n\treturn &(*u)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 18 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 448,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "binds" : [ {
            "name" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "u"
            },
            "value" : {
              "fields" : [ {
                "declared-type" : {
                  "go-type" : 51,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 51,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "arrayType"
                  }
                },
                "kind" : "field",
                "names" : [ ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 4,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 4,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uncommonType"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "u"
                } ],
                "tag" : null
              } ],
              "go-type" : 50,
              "kind" : "type",
              "type" : "struct"
            }
          } ],
          "kind" : "decl",
          "type" : "type-alias"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 451,
      "code" : "type u struct {\n\tarrayType\n\tu uncommonType\n}",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 452,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "u",
              "variable" : 7
            },
            "go-type" : 4,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "contained" : {
                  "go-type" : 44,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 44,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "u"
                  }
                },
                "go-type" : 43,
                "kind" : "type",
                "type" : "pointer"
              },
              "go-type" : 43,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 18,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 18,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 18,
                "kind" : "expression",
                "target" : {
                  "go-type" : 10,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "t",
                    "variable" : 0
                  }
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "selector"
          },
          "type" : "unary"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 452,
      "code" : "return &(*u)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 20 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 453,
      "ast" : {
        "expressions" : [ {
          "go-type" : 26,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "18"
          }
        } ],
        "kind" : "statement",
        "type" : "case-clause"
      },
      "assign-vars" : [ ],
      "line-end" : 458,
      "code" : "case Chan:\n\ttype u struct {\n\t\tchanType\n\t\tu uncommonType\n\t}\n\treturn &(*u)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 21 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 454,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "binds" : [ {
            "name" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "u"
            },
            "value" : {
              "fields" : [ {
                "declared-type" : {
                  "go-type" : 54,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 54,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "chanType"
                  }
                },
                "kind" : "field",
                "names" : [ ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 4,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 4,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uncommonType"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "u"
                } ],
                "tag" : null
              } ],
              "go-type" : 53,
              "kind" : "type",
              "type" : "struct"
            }
          } ],
          "kind" : "decl",
          "type" : "type-alias"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 457,
      "code" : "type u struct {\n\tchanType\n\tu uncommonType\n}",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 458,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "u",
              "variable" : 8
            },
            "go-type" : 4,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "contained" : {
                  "go-type" : 44,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 44,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "u"
                  }
                },
                "go-type" : 43,
                "kind" : "type",
                "type" : "pointer"
              },
              "go-type" : 43,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 18,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 18,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 18,
                "kind" : "expression",
                "target" : {
                  "go-type" : 10,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "t",
                    "variable" : 0
                  }
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "selector"
          },
          "type" : "unary"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 458,
      "code" : "return &(*u)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 23 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 459,
      "ast" : {
        "expressions" : [ {
          "go-type" : 26,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "21"
          }
        } ],
        "kind" : "statement",
        "type" : "case-clause"
      },
      "assign-vars" : [ ],
      "line-end" : 464,
      "code" : "case Map:\n\ttype u struct {\n\t\tmapType\n\t\tu uncommonType\n\t}\n\treturn &(*u)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 24 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 460,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "binds" : [ {
            "name" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "u"
            },
            "value" : {
              "fields" : [ {
                "declared-type" : {
                  "go-type" : 57,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 57,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "mapType"
                  }
                },
                "kind" : "field",
                "names" : [ ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 4,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 4,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uncommonType"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "u"
                } ],
                "tag" : null
              } ],
              "go-type" : 56,
              "kind" : "type",
              "type" : "struct"
            }
          } ],
          "kind" : "decl",
          "type" : "type-alias"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 463,
      "code" : "type u struct {\n\tmapType\n\tu uncommonType\n}",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 464,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "u",
              "variable" : 9
            },
            "go-type" : 4,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "contained" : {
                  "go-type" : 44,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 44,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "u"
                  }
                },
                "go-type" : 43,
                "kind" : "type",
                "type" : "pointer"
              },
              "go-type" : 43,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 18,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 18,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 18,
                "kind" : "expression",
                "target" : {
                  "go-type" : 10,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "t",
                    "variable" : 0
                  }
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "selector"
          },
          "type" : "unary"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 464,
      "code" : "return &(*u)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 26 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 465,
      "ast" : {
        "expressions" : [ {
          "go-type" : 26,
          "kind" : "constant",
          "value" : {
            "type" : "INT",
            "value" : "20"
          }
        } ],
        "kind" : "statement",
        "type" : "case-clause"
      },
      "assign-vars" : [ ],
      "line-end" : 470,
      "code" : "case Interface:\n\ttype u struct {\n\t\tinterfaceType\n\t\tu uncommonType\n\t}\n\treturn &(*u)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 27 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 466,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "binds" : [ {
            "name" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "u"
            },
            "value" : {
              "fields" : [ {
                "declared-type" : {
                  "go-type" : 63,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 63,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "interfaceType"
                  }
                },
                "kind" : "field",
                "names" : [ ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 4,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 4,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uncommonType"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "u"
                } ],
                "tag" : null
              } ],
              "go-type" : 62,
              "kind" : "type",
              "type" : "struct"
            }
          } ],
          "kind" : "decl",
          "type" : "type-alias"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 469,
      "code" : "type u struct {\n\tinterfaceType\n\tu uncommonType\n}",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 470,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "u",
              "variable" : 10
            },
            "go-type" : 4,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "contained" : {
                  "go-type" : 44,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 44,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "u"
                  }
                },
                "go-type" : 43,
                "kind" : "type",
                "type" : "pointer"
              },
              "go-type" : 43,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 18,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 18,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 18,
                "kind" : "expression",
                "target" : {
                  "go-type" : 10,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "t",
                    "variable" : 0
                  }
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "selector"
          },
          "type" : "unary"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 470,
      "code" : "return &(*u)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 29 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 471,
      "ast" : {
        "expressions" : [ ],
        "kind" : "statement",
        "type" : "case-clause"
      },
      "assign-vars" : [ ],
      "line-end" : 476,
      "code" : "default:\n\ttype u struct {\n\t\trtype\n\t\tu uncommonType\n\t}\n\treturn &(*u)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 30 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 472,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "binds" : [ {
            "name" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "u"
            },
            "value" : {
              "fields" : [ {
                "declared-type" : {
                  "go-type" : 11,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 11,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "rtype"
                  }
                },
                "kind" : "field",
                "names" : [ ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 4,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 4,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uncommonType"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "u"
                } ],
                "tag" : null
              } ],
              "go-type" : 68,
              "kind" : "type",
              "type" : "struct"
            }
          } ],
          "kind" : "decl",
          "type" : "type-alias"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 475,
      "code" : "type u struct {\n\trtype\n\tu uncommonType\n}",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 476,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 3,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "u",
              "variable" : 11
            },
            "go-type" : 4,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "contained" : {
                  "go-type" : 44,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 44,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "u"
                  }
                },
                "go-type" : 43,
                "kind" : "type",
                "type" : "pointer"
              },
              "go-type" : 43,
              "kind" : "expression",
              "target" : {
                "coerced-to" : {
                  "go-type" : 18,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 18,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "go-type" : 18,
                "kind" : "expression",
                "target" : {
                  "go-type" : 10,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "t",
                    "variable" : 0
                  }
                },
                "type" : "cast"
              },
              "type" : "cast"
            },
            "type" : "selector"
          },
          "type" : "unary"
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 476,
      "code" : "return &(*u)(unsafe.Pointer(t)).u",
      "entry" : false,
      "use-vars" : [ 0 ]
    } ],
    "code" : "func (t *rtype) uncommon() *uncommonType {\n\tif t.tflag&tflagUncommon == 0 {\n\t\treturn nil\n\t}\n\tswitch t.Kind() {\n\tcase Struct:\n\t\treturn &(*structTypeUncommon)(unsafe.Pointer(t)).u\n\tcase Ptr:\n\t\ttype u struct {\n\t\t\tptrType\n\t\t\tu uncommonType\n\t\t}\n\t\treturn &(*u)(unsafe.Pointer(t)).u\n\tcase Func:\n\t\ttype u struct {\n\t\t\tfuncType\n\t\t\tu uncommonType\n\t\t}\n\t\treturn &(*u)(unsafe.Pointer(t)).u\n\tcase Slice:\n\t\ttype u struct {\n\t\t\tsliceType\n\t\t\tu uncommonType\n\t\t}\n\t\treturn &(*u)(unsafe.Pointer(t)).u\n\tcase Array:\n\t\ttype u struct {\n\t\t\tarrayType\n\t\t\tu uncommonType\n\t\t}\n\t\treturn &(*u)(unsafe.Pointer(t)).u\n\tcase Chan:\n\t\ttype u struct {\n\t\t\tchanType\n\t\t\tu uncommonType\n\t\t}\n\t\treturn &(*u)(unsafe.Pointer(t)).u\n\tcase Map:\n\t\ttype u struct {\n\t\t\tmapType\n\t\t\tu uncommonType\n\t\t}\n\t\treturn &(*u)(unsafe.Pointer(t)).u\n\tcase Interface:\n\t\ttype u struct {\n\t\t\tinterfaceType\n\t\t\tu uncommonType\n\t\t}\n\t\treturn &(*u)(unsafe.Pointer(t)).u\n\tdefault:\n\t\ttype u struct {\n\t\t\trtype\n\t\t\tu uncommonType\n\t\t}\n\t\treturn &(*u)(unsafe.Pointer(t)).u\n\t}\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "uncommon",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "Kind",
      "package" : 0,
      "type" : 28,
      "exported" : true
    } ],
    "line-end" : 478,
    "line-start" : 422,
    "names" : [ "uncommon" ],
    "package" : 0,
    "packages" : [ {
      "name" : "reflectlite",
      "path" : "internal/reflectlite"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ ],
    "receivers" : [ 0 ],
    "results" : [ 1 ],
    "type" : "function",
    "types" : [ {
      "name" : "func() *internal/reflectlite.uncommonType",
      "params" : 1,
      "recv" : 0,
      "results" : 2,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 3
      } ],
      "name" : "(*internal/reflectlite.uncommonType)",
      "type" : "Tuple",
      "underlying" : 2
    }, {
      "elem" : 4,
      "name" : "*internal/reflectlite.uncommonType",
      "type" : "Pointer",
      "underlying" : 3
    }, {
      "local-name" : "uncommonType",
      "name" : "internal/reflectlite.uncommonType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 5
    }, {
      "fields" : [ {
        "name" : "pkgPath",
        "type" : 6
      }, {
        "name" : "mcount",
        "type" : 8
      }, {
        "name" : "xcount",
        "type" : 8
      }, {
        "name" : "moff",
        "type" : 9
      }, {
        "name" : "_",
        "type" : 9
      } ],
      "name" : "struct{pkgPath internal/reflectlite.nameOff; mcount uint16; xcount uint16; moff uint32; _ uint32}",
      "type" : "Struct",
      "underlying" : 5
    }, {
      "local-name" : "nameOff",
      "name" : "internal/reflectlite.nameOff",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 7
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 8
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 9
    }, {
      "elem" : 11,
      "name" : "*internal/reflectlite.rtype",
      "type" : "Pointer",
      "underlying" : 10
    }, {
      "local-name" : "rtype",
      "name" : "internal/reflectlite.rtype",
      "package" : 0,
      "type" : "Named",
      "underlying" : 12
    }, {
      "fields" : [ {
        "name" : "size",
        "type" : 13
      }, {
        "name" : "ptrdata",
        "type" : 13
      }, {
        "name" : "hash",
        "type" : 9
      }, {
        "name" : "tflag",
        "type" : 14
      }, {
        "name" : "align",
        "type" : 15
      }, {
        "name" : "fieldAlign",
        "type" : 15
      }, {
        "name" : "kind",
        "type" : 15
      }, {
        "name" : "equal",
        "type" : 16
      }, {
        "name" : "gcdata",
        "type" : 21
      }, {
        "name" : "str",
        "type" : 6
      }, {
        "name" : "ptrToThis",
        "type" : 23
      } ],
      "name" : "struct{size uintptr; ptrdata uintptr; hash uint32; tflag internal/reflectlite.tflag; align uint8; fieldAlign uint8; kind uint8; equal func(unsafe.Pointer, unsafe.Pointer) bool; gcdata *byte; str internal/reflectlite.nameOff; ptrToThis internal/reflectlite.typeOff}",
      "type" : "Struct",
      "underlying" : 12
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 13
    }, {
      "local-name" : "tflag",
      "name" : "internal/reflectlite.tflag",
      "package" : 0,
      "type" : "Named",
      "underlying" : 15
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 15
    }, {
      "name" : "func(unsafe.Pointer, unsafe.Pointer) bool",
      "params" : 17,
      "recv" : -1,
      "results" : 19,
      "type" : "Signature",
      "underlying" : 16,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 18
      }, {
        "name" : "",
        "type" : 18
      } ],
      "name" : "(unsafe.Pointer, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 17
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 18
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 20
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 19
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 20
    }, {
      "elem" : 22,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 21
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 22
    }, {
      "local-name" : "typeOff",
      "name" : "internal/reflectlite.typeOff",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 24
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 25
    }, {
      "local-name" : "Kind",
      "name" : "internal/reflectlite.Kind",
      "package" : 0,
      "type" : "Named",
      "underlying" : 27
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 27
    }, {
      "name" : "func() internal/reflectlite.Kind",
      "params" : 1,
      "recv" : -1,
      "results" : 29,
      "type" : "Signature",
      "underlying" : 28,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 26
      } ],
      "name" : "(internal/reflectlite.Kind)",
      "type" : "Tuple",
      "underlying" : 29
    }, {
      "elem" : 31,
      "name" : "*internal/reflectlite.structTypeUncommon",
      "type" : "Pointer",
      "underlying" : 30
    }, {
      "local-name" : "structTypeUncommon",
      "name" : "internal/reflectlite.structTypeUncommon",
      "package" : 0,
      "type" : "Named",
      "underlying" : 32
    }, {
      "fields" : [ {
        "name" : "structType",
        "type" : 33
      }, {
        "name" : "u",
        "type" : 4
      } ],
      "name" : "struct{internal/reflectlite.structType; u internal/reflectlite.uncommonType}",
      "type" : "Struct",
      "underlying" : 32
    }, {
      "local-name" : "structType",
      "name" : "internal/reflectlite.structType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 34
    }, {
      "fields" : [ {
        "name" : "rtype",
        "type" : 11
      }, {
        "name" : "pkgPath",
        "type" : 35
      }, {
        "name" : "fields",
        "type" : 37
      } ],
      "name" : "struct{internal/reflectlite.rtype; pkgPath internal/reflectlite.name; fields []internal/reflectlite.structField}",
      "type" : "Struct",
      "underlying" : 34
    }, {
      "local-name" : "name",
      "name" : "internal/reflectlite.name",
      "package" : 0,
      "type" : "Named",
      "underlying" : 36
    }, {
      "fields" : [ {
        "name" : "bytes",
        "type" : 21
      } ],
      "name" : "struct{bytes *byte}",
      "type" : "Struct",
      "underlying" : 36
    }, {
      "elem" : 38,
      "name" : "[]internal/reflectlite.structField",
      "type" : "Slice",
      "underlying" : 37
    }, {
      "local-name" : "structField",
      "name" : "internal/reflectlite.structField",
      "package" : 0,
      "type" : "Named",
      "underlying" : 39
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 35
      }, {
        "name" : "typ",
        "type" : 10
      }, {
        "name" : "offsetEmbed",
        "type" : 13
      } ],
      "name" : "struct{name internal/reflectlite.name; typ *internal/reflectlite.rtype; offsetEmbed uintptr}",
      "type" : "Struct",
      "underlying" : 39
    }, {
      "fields" : [ {
        "name" : "ptrType",
        "type" : 41
      }, {
        "name" : "u",
        "type" : 4
      } ],
      "name" : "struct{internal/reflectlite.ptrType; u internal/reflectlite.uncommonType}",
      "type" : "Struct",
      "underlying" : 40
    }, {
      "local-name" : "ptrType",
      "name" : "internal/reflectlite.ptrType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 42
    }, {
      "fields" : [ {
        "name" : "rtype",
        "type" : 11
      }, {
        "name" : "elem",
        "type" : 10
      } ],
      "name" : "struct{internal/reflectlite.rtype; elem *internal/reflectlite.rtype}",
      "type" : "Struct",
      "underlying" : 42
    }, {
      "elem" : 44,
      "name" : "*internal/reflectlite.u",
      "type" : "Pointer",
      "underlying" : 43
    }, {
      "local-name" : "u",
      "name" : "internal/reflectlite.u",
      "package" : 0,
      "type" : "Named",
      "underlying" : 40
    }, {
      "fields" : [ {
        "name" : "funcType",
        "type" : 46
      }, {
        "name" : "u",
        "type" : 4
      } ],
      "name" : "struct{internal/reflectlite.funcType; u internal/reflectlite.uncommonType}",
      "type" : "Struct",
      "underlying" : 45
    }, {
      "local-name" : "funcType",
      "name" : "internal/reflectlite.funcType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 47
    }, {
      "fields" : [ {
        "name" : "rtype",
        "type" : 11
      }, {
        "name" : "inCount",
        "type" : 8
      }, {
        "name" : "outCount",
        "type" : 8
      } ],
      "name" : "struct{internal/reflectlite.rtype; inCount uint16; outCount uint16}",
      "type" : "Struct",
      "underlying" : 47
    }, {
      "fields" : [ {
        "name" : "sliceType",
        "type" : 49
      }, {
        "name" : "u",
        "type" : 4
      } ],
      "name" : "struct{internal/reflectlite.sliceType; u internal/reflectlite.uncommonType}",
      "type" : "Struct",
      "underlying" : 48
    }, {
      "local-name" : "sliceType",
      "name" : "internal/reflectlite.sliceType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 42
    }, {
      "fields" : [ {
        "name" : "arrayType",
        "type" : 51
      }, {
        "name" : "u",
        "type" : 4
      } ],
      "name" : "struct{internal/reflectlite.arrayType; u internal/reflectlite.uncommonType}",
      "type" : "Struct",
      "underlying" : 50
    }, {
      "local-name" : "arrayType",
      "name" : "internal/reflectlite.arrayType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 52
    }, {
      "fields" : [ {
        "name" : "rtype",
        "type" : 11
      }, {
        "name" : "elem",
        "type" : 10
      }, {
        "name" : "slice",
        "type" : 10
      }, {
        "name" : "len",
        "type" : 13
      } ],
      "name" : "struct{internal/reflectlite.rtype; elem *internal/reflectlite.rtype; slice *internal/reflectlite.rtype; len uintptr}",
      "type" : "Struct",
      "underlying" : 52
    }, {
      "fields" : [ {
        "name" : "chanType",
        "type" : 54
      }, {
        "name" : "u",
        "type" : 4
      } ],
      "name" : "struct{internal/reflectlite.chanType; u internal/reflectlite.uncommonType}",
      "type" : "Struct",
      "underlying" : 53
    }, {
      "local-name" : "chanType",
      "name" : "internal/reflectlite.chanType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 55
    }, {
      "fields" : [ {
        "name" : "rtype",
        "type" : 11
      }, {
        "name" : "elem",
        "type" : 10
      }, {
        "name" : "dir",
        "type" : 13
      } ],
      "name" : "struct{internal/reflectlite.rtype; elem *internal/reflectlite.rtype; dir uintptr}",
      "type" : "Struct",
      "underlying" : 55
    }, {
      "fields" : [ {
        "name" : "mapType",
        "type" : 57
      }, {
        "name" : "u",
        "type" : 4
      } ],
      "name" : "struct{internal/reflectlite.mapType; u internal/reflectlite.uncommonType}",
      "type" : "Struct",
      "underlying" : 56
    }, {
      "local-name" : "mapType",
      "name" : "internal/reflectlite.mapType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 58
    }, {
      "fields" : [ {
        "name" : "rtype",
        "type" : 11
      }, {
        "name" : "key",
        "type" : 10
      }, {
        "name" : "elem",
        "type" : 10
      }, {
        "name" : "bucket",
        "type" : 10
      }, {
        "name" : "hasher",
        "type" : 59
      }, {
        "name" : "keysize",
        "type" : 15
      }, {
        "name" : "valuesize",
        "type" : 15
      }, {
        "name" : "bucketsize",
        "type" : 8
      }, {
        "name" : "flags",
        "type" : 9
      } ],
      "name" : "struct{internal/reflectlite.rtype; key *internal/reflectlite.rtype; elem *internal/reflectlite.rtype; bucket *internal/reflectlite.rtype; hasher func(unsafe.Pointer, uintptr) uintptr; keysize uint8; valuesize uint8; bucketsize uint16; flags uint32}",
      "type" : "Struct",
      "underlying" : 58
    }, {
      "name" : "func(unsafe.Pointer, uintptr) uintptr",
      "params" : 60,
      "recv" : -1,
      "results" : 61,
      "type" : "Signature",
      "underlying" : 59,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 18
      }, {
        "name" : "",
        "type" : 13
      } ],
      "name" : "(unsafe.Pointer, uintptr)",
      "type" : "Tuple",
      "underlying" : 60
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 13
      } ],
      "name" : "(uintptr)",
      "type" : "Tuple",
      "underlying" : 61
    }, {
      "fields" : [ {
        "name" : "interfaceType",
        "type" : 63
      }, {
        "name" : "u",
        "type" : 4
      } ],
      "name" : "struct{internal/reflectlite.interfaceType; u internal/reflectlite.uncommonType}",
      "type" : "Struct",
      "underlying" : 62
    }, {
      "local-name" : "interfaceType",
      "name" : "internal/reflectlite.interfaceType",
      "package" : 0,
      "type" : "Named",
      "underlying" : 64
    }, {
      "fields" : [ {
        "name" : "rtype",
        "type" : 11
      }, {
        "name" : "pkgPath",
        "type" : 35
      }, {
        "name" : "methods",
        "type" : 65
      } ],
      "name" : "struct{internal/reflectlite.rtype; pkgPath internal/reflectlite.name; methods []internal/reflectlite.imethod}",
      "type" : "Struct",
      "underlying" : 64
    }, {
      "elem" : 66,
      "name" : "[]internal/reflectlite.imethod",
      "type" : "Slice",
      "underlying" : 65
    }, {
      "local-name" : "imethod",
      "name" : "internal/reflectlite.imethod",
      "package" : 0,
      "type" : "Named",
      "underlying" : 67
    }, {
      "fields" : [ {
        "name" : "name",
        "type" : 6
      }, {
        "name" : "typ",
        "type" : 23
      } ],
      "name" : "struct{name internal/reflectlite.nameOff; typ internal/reflectlite.typeOff}",
      "type" : "Struct",
      "underlying" : 67
    }, {
      "fields" : [ {
        "name" : "rtype",
        "type" : 11
      }, {
        "name" : "u",
        "type" : 4
      } ],
      "name" : "struct{internal/reflectlite.rtype; u internal/reflectlite.uncommonType}",
      "type" : "Struct",
      "underlying" : 68
    } ],
    "variables" : [ {
      "name" : "t",
      "package" : 0,
      "type" : 10,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 3,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "tflag",
      "package" : 0,
      "type" : 14,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "u",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "u",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "u",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "u",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "u",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "u",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "u",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "u",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "u",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}