{
  "usage" : {
    "file" : "value.go",
    "label1" : "definition",
    "label2" : "reflect",
    "line" : "196",
    "module" : "std",
    "pkg" : "reflect",
    "project" : "kubernetes/kubernetes",
    "snippet" : "word unsafe.Pointer",
    "version" : "std"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 187,
      "ast" : {
        "kind" : "statement",
        "target" : {
          "binds" : [ {
            "name" : {
              "ident-kind" : "NoKind",
              "kind" : "ident",
              "value" : "nonEmptyInterface"
            },
            "value" : {
              "fields" : [ {
                "declared-type" : {
                  "contained" : {
                    "fields" : [ {
                      "declared-type" : {
                        "contained" : {
                          "go-type" : 5,
                          "kind" : "type",
                          "type" : "identifier",
                          "value" : {
                            "go-type" : 5,
                            "ident-kind" : "TypeName",
                            "kind" : "ident",
                            "value" : "rtype"
                          }
                        },
                        "go-type" : 4,
                        "kind" : "type",
                        "type" : "pointer"
                      },
                      "kind" : "field",
                      "names" : [ {
                        "ident-kind" : "NoKind",
                        "kind" : "ident",
                        "value" : "ityp"
                      } ],
                      "tag" : null
                    }, {
                      "declared-type" : {
                        "contained" : {
                          "go-type" : 5,
                          "kind" : "type",
                          "type" : "identifier",
                          "value" : {
                            "go-type" : 5,
                            "ident-kind" : "TypeName",
                            "kind" : "ident",
                            "value" : "rtype"
                          }
                        },
                        "go-type" : 4,
                        "kind" : "type",
                        "type" : "pointer"
                      },
                      "kind" : "field",
                      "names" : [ {
                        "ident-kind" : "NoKind",
                        "kind" : "ident",
                        "value" : "typ"
                      } ],
                      "tag" : null
                    }, {
                      "declared-type" : {
                        "go-type" : 8,
                        "kind" : "type",
                        "type" : "identifier",
                        "value" : {
                          "go-type" : 8,
                          "ident-kind" : "TypeName",
                          "kind" : "ident",
                          "value" : "uint32"
                        }
                      },
                      "kind" : "field",
                      "names" : [ {
                        "ident-kind" : "NoKind",
                        "kind" : "ident",
                        "value" : "hash"
                      } ],
                      "tag" : null
                    }, {
                      "declared-type" : {
                        "element" : {
                          "go-type" : 17,
                          "kind" : "type",
                          "type" : "identifier",
                          "value" : {
                            "go-type" : 17,
                            "ident-kind" : "TypeName",
                            "kind" : "ident",
                            "value" : "byte"
                          }
                        },
                        "go-type" : 21,
                        "kind" : "type",
                        "length" : {
                          "go-type" : 23,
                          "kind" : "constant",
                          "value" : {
                            "type" : "INT",
                            "value" : "4"
                          }
                        },
                        "type" : "array"
                      },
                      "kind" : "field",
                      "names" : [ {
                        "ident-kind" : "NoKind",
                        "kind" : "ident",
                        "value" : "_"
                      } ],
                      "tag" : null
                    }, {
                      "declared-type" : {
                        "element" : {
                          "go-type" : 13,
                          "kind" : "type",
                          "qualifier" : {
                            "ident-kind" : "PkgName",
                            "kind" : "ident",
                            "package" : 1,
                            "value" : "unsafe"
                          },
                          "type" : "identifier",
                          "value" : {
                            "go-type" : 13,
                            "ident-kind" : "TypeName",
                            "kind" : "ident",
                            "value" : "Pointer"
                          }
                        },
                        "go-type" : 22,
                        "kind" : "type",
                        "length" : {
                          "go-type" : 23,
                          "kind" : "constant",
                          "value" : {
                            "type" : "INT",
                            "value" : "100000"
                          }
                        },
                        "type" : "array"
                      },
                      "kind" : "field",
                      "names" : [ {
                        "ident-kind" : "NoKind",
                        "kind" : "ident",
                        "value" : "fun"
                      } ],
                      "tag" : null
                    } ],
                    "go-type" : 3,
                    "kind" : "type",
                    "type" : "struct"
                  },
                  "go-type" : 2,
                  "kind" : "type",
                  "type" : "pointer"
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "itab"
                } ],
                "tag" : null
              }, {
                "declared-type" : {
                  "go-type" : 13,
                  "kind" : "type",
                  "qualifier" : {
                    "ident-kind" : "PkgName",
                    "kind" : "ident",
                    "package" : 1,
                    "value" : "unsafe"
                  },
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 13,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "Pointer"
                  }
                },
                "kind" : "field",
                "names" : [ {
                  "ident-kind" : "NoKind",
                  "kind" : "ident",
                  "value" : "word"
                } ],
                "tag" : null
              } ],
              "go-type" : 1,
              "kind" : "type",
              "type" : "struct"
            }
          } ],
          "kind" : "decl",
          "type" : "type-alias"
        },
        "type" : "declaration"
      },
      "assign-vars" : [ ],
      "line-end" : 197,
      "code" : "// nonEmptyInterface is the header for an interface value with methods.\ntype nonEmptyInterface struct {\n\t// see ../runtime/iface.go:/Itab\n\titab *struct {\n\t\tityp *rtype // static interface type\n\t\ttyp  *rtype // dynamic concrete type\n\t\thash uint32 // copy of typ.hash\n\t\t_    [4]byte\n\t\tfun  [100000]unsafe.Pointer // method table\n\t}\n\tword unsafe.Pointer\n}",
      "entry" : false,
      "use-vars" : [ ]
    } ],
    "code" : "// nonEmptyInterface is the header for an interface value with methods.\ntype nonEmptyInterface struct {\n\t// see ../runtime/iface.go:/Itab\n\titab *struct {\n\t\tityp *rtype // static interface type\n\t\ttyp  *rtype // dynamic concrete type\n\t\thash uint32 // copy of typ.hash\n\t\t_    [4]byte\n\t\tfun  [100000]unsafe.Pointer // method table\n\t}\n\tword unsafe.Pointer\n}",
    "defines" : [ 0 ],
    "functions" : [ ],
    "line-end" : 197,
    "line-start" : 187,
    "names" : [ "nonEmptyInterface" ],
    "package" : 0,
    "packages" : [ {
      "name" : "reflect",
      "path" : "reflect"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ ],
    "receivers" : [ ],
    "results" : [ ],
    "type" : "type",
    "types" : [ {
      "local-name" : "nonEmptyInterface",
      "name" : "reflect.nonEmptyInterface",
      "package" : 0,
      "type" : "Named",
      "underlying" : 1
    }, {
      "fields" : [ {
        "name" : "itab",
        "type" : 2
      }, {
        "name" : "word",
        "type" : 13
      } ],
      "name" : "struct{itab *struct{ityp *reflect.rtype; typ *reflect.rtype; hash uint32; _ [4]byte; fun [100000]unsafe.Pointer}; word unsafe.Pointer}",
      "type" : "Struct",
      "underlying" : 1
    }, {
      "elem" : 3,
      "name" : "*struct{ityp *reflect.rtype; typ *reflect.rtype; hash uint32; _ [4]byte; fun [100000]unsafe.Pointer}",
      "type" : "Pointer",
      "underlying" : 2
    }, {
      "fields" : [ {
        "name" : "ityp",
        "type" : 4
      }, {
        "name" : "typ",
        "type" : 4
      }, {
        "name" : "hash",
        "type" : 8
      }, {
        "name" : "_",
        "type" : 21
      }, {
        "name" : "fun",
        "type" : 22
      } ],
      "name" : "struct{ityp *reflect.rtype; typ *reflect.rtype; hash uint32; _ [4]byte; fun [100000]unsafe.Pointer}",
      "type" : "Struct",
      "underlying" : 3
    }, {
      "elem" : 5,
      "name" : "*reflect.rtype",
      "type" : "Pointer",
      "underlying" : 4
    }, {
      "local-name" : "rtype",
      "name" : "reflect.rtype",
      "package" : 0,
      "type" : "Named",
      "underlying" : 6
    }, {
      "fields" : [ {
        "name" : "size",
        "type" : 7
      }, {
        "name" : "ptrdata",
        "type" : 7
      }, {
        "name" : "hash",
        "type" : 8
      }, {
        "name" : "tflag",
        "type" : 9
      }, {
        "name" : "align",
        "type" : 10
      }, {
        "name" : "fieldAlign",
        "type" : 10
      }, {
        "name" : "kind",
        "type" : 10
      }, {
        "name" : "equal",
        "type" : 11
      }, {
        "name" : "gcdata",
        "type" : 16
      }, {
        "name" : "str",
        "type" : 18
      }, {
        "name" : "ptrToThis",
        "type" : 20
      } ],
      "name" : "struct{size uintptr; ptrdata uintptr; hash uint32; tflag reflect.tflag; align uint8; fieldAlign uint8; kind uint8; equal func(unsafe.Pointer, unsafe.Pointer) bool; gcdata *byte; str reflect.nameOff; ptrToThis reflect.typeOff}",
      "type" : "Struct",
      "underlying" : 6
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 7
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 8
    }, {
      "local-name" : "tflag",
      "name" : "reflect.tflag",
      "package" : 0,
      "type" : "Named",
      "underlying" : 10
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 10
    }, {
      "name" : "func(unsafe.Pointer, unsafe.Pointer) bool",
      "params" : 12,
      "recv" : -1,
      "results" : 14,
      "type" : "Signature",
      "underlying" : 11,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 13
      }, {
        "name" : "",
        "type" : 13
      } ],
      "name" : "(unsafe.Pointer, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 12
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 13
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 15
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 14
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 15
    }, {
      "elem" : 17,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 16
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 17
    }, {
      "local-name" : "nameOff",
      "name" : "reflect.nameOff",
      "package" : 0,
      "type" : "Named",
      "underlying" : 19
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 19
    }, {
      "local-name" : "typeOff",
      "name" : "reflect.typeOff",
      "package" : 0,
      "type" : "Named",
      "underlying" : 19
    }, {
      "elem" : 17,
      "name" : "[4]byte",
      "type" : "Array",
      "underlying" : 21
    }, {
      "elem" : 13,
      "name" : "[100000]unsafe.Pointer",
      "type" : "Array",
      "underlying" : 22
    }, {
      "name" : "untyped int",
      "type" : "Basic",
      "underlying" : 23
    } ],
    "variables" : [ ]
  },
  "go-version" : "1.14.3"
}