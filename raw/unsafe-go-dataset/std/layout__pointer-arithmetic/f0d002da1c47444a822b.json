{
  "usage" : {
    "file" : "mbitmap.go",
    "label1" : "pointer-arithmetic",
    "label2" : "layout",
    "line" : "495",
    "module" : "std",
    "pkg" : "runtime",
    "project" : "kubernetes/kubernetes",
    "snippet" : "nbitp := uintptr(unsafe.Pointer(h.bitp)) + n/4",
    "version" : "std"
  },
  "cfg" : {
    "blocks" : [ {
      "update-vars" : [ ],
      "successors" : [ 2 ],
      "in-vars" : [ 0, 1, 3 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 3 ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[entry]",
      "entry" : true,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ ],
      "successors" : [ ],
      "in-vars" : [ ],
      "exit" : true,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : -1,
      "ast" : null,
      "assign-vars" : [ ],
      "line-end" : -1,
      "code" : "[exit]",
      "entry" : false,
      "use-vars" : [ ]
    }, {
      "update-vars" : [ 1 ],
      "successors" : [ 3 ],
      "in-vars" : [ 0, 1, 3 ],
      "exit" : false,
      "out-vars" : [ 0, 1, 3 ],
      "decl-vars" : [ ],
      "line-start" : 494,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : 2,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "n",
            "variable" : 1
          }
        } ],
        "operator" : "+",
        "right" : [ {
          "go-type" : 2,
          "kind" : "expression",
          "left" : {
            "coerced-to" : {
              "go-type" : 2,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 2,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uintptr"
              }
            },
            "go-type" : 2,
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "shift",
                "variable" : 4
              },
              "go-type" : 8,
              "kind" : "expression",
              "target" : {
                "go-type" : 4,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "h",
                  "variable" : 0
                }
              },
              "type" : "selector"
            },
            "type" : "cast"
          },
          "operator" : "/",
          "right" : {
            "go-type" : 2,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "1"
            }
          },
          "type" : "binary"
        } ],
        "type" : "assign-operator"
      },
      "assign-vars" : [ 1 ],
      "line-end" : 494,
      "code" : "n += uintptr(h.shift) / heapBitsShift",
      "entry" : false,
      "use-vars" : [ 0, 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 4 ],
      "in-vars" : [ 0, 1, 3 ],
      "exit" : false,
      "out-vars" : [ 3, 0, 1, 6 ],
      "decl-vars" : [ 6 ],
      "line-start" : 495,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "nbitp"
          }
        } ],
        "right" : [ {
          "go-type" : 2,
          "kind" : "expression",
          "left" : {
            "coerced-to" : {
              "go-type" : 2,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 2,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uintptr"
              }
            },
            "go-type" : 2,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 59,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 1,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 59,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 59,
              "kind" : "expression",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "bitp",
                  "variable" : 5
                },
                "go-type" : 6,
                "kind" : "expression",
                "target" : {
                  "go-type" : 4,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "h",
                    "variable" : 0
                  }
                },
                "type" : "selector"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "operator" : "+",
          "right" : {
            "go-type" : 2,
            "kind" : "expression",
            "left" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "n",
                "variable" : 1
              }
            },
            "operator" : "/",
            "right" : {
              "go-type" : 2,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "4"
              }
            },
            "type" : "binary"
          },
          "type" : "binary"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 495,
      "code" : "nbitp := uintptr(unsafe.Pointer(h.bitp)) + n/4",
      "entry" : false,
      "use-vars" : [ 0, 1 ]
    }, {
      "update-vars" : [ 0 ],
      "successors" : [ 5 ],
      "in-vars" : [ 0, 1, 6, 3 ],
      "exit" : false,
      "out-vars" : [ 6, 3, 0 ],
      "decl-vars" : [ ],
      "line-start" : 496,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "shift",
            "variable" : 4
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 4,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "h",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 8,
          "kind" : "expression",
          "left" : {
            "coerced-to" : {
              "go-type" : 8,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 8,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint32"
              }
            },
            "go-type" : 8,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "left" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "n",
                  "variable" : 1
                }
              },
              "operator" : "%",
              "right" : {
                "go-type" : 2,
                "kind" : "constant",
                "value" : {
                  "type" : "INT",
                  "value" : "4"
                }
              },
              "type" : "binary"
            },
            "type" : "cast"
          },
          "operator" : "*",
          "right" : {
            "go-type" : 8,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "1"
            }
          },
          "type" : "binary"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 496,
      "code" : "h.shift = uint32(n%4) * heapBitsShift",
      "entry" : false,
      "use-vars" : [ 0, 1 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 6, 8 ],
      "in-vars" : [ 6, 3, 0 ],
      "exit" : false,
      "out-vars" : [ 0, 6, 3 ],
      "decl-vars" : [ ],
      "line-start" : 497,
      "ast" : {
        "condition" : {
          "go-type" : 112,
          "kind" : "expression",
          "left" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "nbitp",
              "variable" : 6
            }
          },
          "operator" : "<=",
          "right" : {
            "coerced-to" : {
              "go-type" : 2,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 2,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uintptr"
              }
            },
            "go-type" : 2,
            "kind" : "expression",
            "target" : {
              "coerced-to" : {
                "go-type" : 59,
                "kind" : "type",
                "qualifier" : {
                  "ident-kind" : "PkgName",
                  "kind" : "ident",
                  "package" : 1,
                  "value" : "unsafe"
                },
                "type" : "identifier",
                "value" : {
                  "go-type" : 59,
                  "ident-kind" : "TypeName",
                  "kind" : "ident",
                  "value" : "Pointer"
                }
              },
              "go-type" : 59,
              "kind" : "expression",
              "target" : {
                "field" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "last",
                  "variable" : 7
                },
                "go-type" : 6,
                "kind" : "expression",
                "target" : {
                  "go-type" : 4,
                  "kind" : "expression",
                  "type" : "identifier",
                  "value" : {
                    "ident-kind" : "Var",
                    "kind" : "ident",
                    "value" : "h",
                    "variable" : 0
                  }
                },
                "type" : "selector"
              },
              "type" : "cast"
            },
            "type" : "cast"
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 500,
      "code" : "if nbitp <= uintptr(unsafe.Pointer(h.last)) {\n\th.bitp = (*uint8)(unsafe.Pointer(nbitp))\n\treturn h\n}",
      "entry" : false,
      "use-vars" : [ 0, 6 ]
    }, {
      "update-vars" : [ 0 ],
      "successors" : [ 7 ],
      "in-vars" : [ 0, 6 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 498,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "bitp",
            "variable" : 5
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "go-type" : 4,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "h",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "coerced-to" : {
            "contained" : {
              "go-type" : 7,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 7,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint8"
              }
            },
            "go-type" : 6,
            "kind" : "type",
            "type" : "pointer"
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "coerced-to" : {
              "go-type" : 59,
              "kind" : "type",
              "qualifier" : {
                "ident-kind" : "PkgName",
                "kind" : "ident",
                "package" : 1,
                "value" : "unsafe"
              },
              "type" : "identifier",
              "value" : {
                "go-type" : 59,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "Pointer"
              }
            },
            "go-type" : 59,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "nbitp",
                "variable" : 6
              }
            },
            "type" : "cast"
          },
          "type" : "cast"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 498,
      "code" : "h.bitp = (*uint8)(unsafe.Pointer(nbitp))",
      "entry" : false,
      "use-vars" : [ 6, 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 499,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 4,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "h",
            "variable" : 0
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 499,
      "code" : "return h",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 9 ],
      "in-vars" : [ 0, 6, 3 ],
      "exit" : false,
      "out-vars" : [ 0, 3, 8 ],
      "decl-vars" : [ 8 ],
      "line-start" : 503,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "past"
          }
        } ],
        "right" : [ {
          "go-type" : 2,
          "kind" : "expression",
          "left" : {
            "go-type" : 2,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "nbitp",
              "variable" : 6
            }
          },
          "operator" : "-",
          "right" : {
            "go-type" : 2,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "left" : {
                "coerced-to" : {
                  "go-type" : 2,
                  "kind" : "type",
                  "type" : "identifier",
                  "value" : {
                    "go-type" : 2,
                    "ident-kind" : "TypeName",
                    "kind" : "ident",
                    "value" : "uintptr"
                  }
                },
                "go-type" : 2,
                "kind" : "expression",
                "target" : {
                  "coerced-to" : {
                    "go-type" : 59,
                    "kind" : "type",
                    "qualifier" : {
                      "ident-kind" : "PkgName",
                      "kind" : "ident",
                      "package" : 1,
                      "value" : "unsafe"
                    },
                    "type" : "identifier",
                    "value" : {
                      "go-type" : 59,
                      "ident-kind" : "TypeName",
                      "kind" : "ident",
                      "value" : "Pointer"
                    }
                  },
                  "go-type" : 59,
                  "kind" : "expression",
                  "target" : {
                    "field" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "last",
                      "variable" : 7
                    },
                    "go-type" : 6,
                    "kind" : "expression",
                    "target" : {
                      "go-type" : 4,
                      "kind" : "expression",
                      "type" : "identifier",
                      "value" : {
                        "ident-kind" : "Var",
                        "kind" : "ident",
                        "value" : "h",
                        "variable" : 0
                      }
                    },
                    "type" : "selector"
                  },
                  "type" : "cast"
                },
                "type" : "cast"
              },
              "operator" : "+",
              "right" : {
                "go-type" : 2,
                "kind" : "constant",
                "value" : {
                  "type" : "INT",
                  "value" : "1"
                }
              },
              "type" : "binary"
            },
            "type" : "paren"
          },
          "type" : "binary"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 503,
      "code" : "past := nbitp - (uintptr(unsafe.Pointer(h.last)) + 1)",
      "entry" : false,
      "use-vars" : [ 0, 6 ]
    }, {
      "update-vars" : [ 0 ],
      "successors" : [ 10 ],
      "in-vars" : [ 3, 8, 0 ],
      "exit" : false,
      "out-vars" : [ 0, 3, 8 ],
      "decl-vars" : [ ],
      "line-start" : 504,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "arena",
            "variable" : 9
          },
          "go-type" : 8,
          "kind" : "expression",
          "target" : {
            "go-type" : 4,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "h",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "operator" : "+",
        "right" : [ {
          "go-type" : 8,
          "kind" : "expression",
          "left" : {
            "go-type" : 8,
            "kind" : "constant",
            "value" : {
              "type" : "INT",
              "value" : "1"
            }
          },
          "operator" : "+",
          "right" : {
            "coerced-to" : {
              "go-type" : 8,
              "kind" : "type",
              "type" : "identifier",
              "value" : {
                "go-type" : 8,
                "ident-kind" : "TypeName",
                "kind" : "ident",
                "value" : "uint32"
              }
            },
            "go-type" : 8,
            "kind" : "expression",
            "target" : {
              "go-type" : 2,
              "kind" : "expression",
              "left" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "past",
                  "variable" : 8
                }
              },
              "operator" : "/",
              "right" : {
                "go-type" : 2,
                "kind" : "constant",
                "value" : {
                  "type" : "INT",
                  "value" : "2097152"
                }
              },
              "type" : "binary"
            },
            "type" : "cast"
          },
          "type" : "binary"
        } ],
        "type" : "assign-operator"
      },
      "assign-vars" : [ ],
      "line-end" : 504,
      "code" : "h.arena += 1 + uint32(past/heapArenaBitmapBytes)",
      "entry" : false,
      "use-vars" : [ 8, 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 12 ],
      "in-vars" : [ 8, 0, 3 ],
      "exit" : false,
      "out-vars" : [ 0, 10, 3, 8 ],
      "decl-vars" : [ 10 ],
      "line-start" : 505,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "ai"
          }
        } ],
        "right" : [ {
          "coerced-to" : {
            "go-type" : 77,
            "kind" : "type",
            "type" : "identifier",
            "value" : {
              "go-type" : 77,
              "ident-kind" : "TypeName",
              "kind" : "ident",
              "value" : "arenaIdx"
            }
          },
          "go-type" : 77,
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "arena",
              "variable" : 9
            },
            "go-type" : 8,
            "kind" : "expression",
            "target" : {
              "go-type" : 4,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "h",
                "variable" : 0
              }
            },
            "type" : "selector"
          },
          "type" : "cast"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 505,
      "code" : "ai := arenaIdx(h.arena)",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 13, 16 ],
      "in-vars" : [ 12, 10, 8, 0 ],
      "exit" : false,
      "out-vars" : [ 8, 0, 12, 10 ],
      "decl-vars" : [ ],
      "line-start" : 506,
      "ast" : {
        "condition" : {
          "go-type" : 112,
          "kind" : "expression",
          "left" : {
            "go-type" : 112,
            "kind" : "expression",
            "left" : {
              "go-type" : 63,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "l2",
                "variable" : 12
              }
            },
            "operator" : "!=",
            "right" : {
              "go-type" : 115,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Nil",
                "kind" : "ident",
                "value" : "nil"
              }
            },
            "type" : "binary"
          },
          "operator" : "&&",
          "right" : {
            "go-type" : 112,
            "kind" : "expression",
            "left" : {
              "go-type" : 65,
              "index" : {
                "arguments" : [ ],
                "ellipsis" : false,
                "function" : {
                  "field" : {
                    "ident-kind" : "Func",
                    "kind" : "ident",
                    "value" : "l2"
                  },
                  "go-type" : 113,
                  "kind" : "expression",
                  "target" : {
                    "go-type" : 77,
                    "kind" : "expression",
                    "type" : "identifier",
                    "value" : {
                      "ident-kind" : "Var",
                      "kind" : "ident",
                      "value" : "ai",
                      "variable" : 10
                    }
                  },
                  "type" : "selector"
                },
                "go-type" : 28,
                "kind" : "expression",
                "type" : "call"
              },
              "kind" : "expression",
              "target" : {
                "go-type" : 63,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "l2",
                  "variable" : 12
                }
              },
              "type" : "index"
            },
            "operator" : "!=",
            "right" : {
              "go-type" : 115,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Nil",
                "kind" : "ident",
                "value" : "nil"
              }
            },
            "type" : "binary"
          },
          "type" : "binary"
        },
        "kind" : "statement",
        "type" : "if"
      },
      "assign-vars" : [ ],
      "line-end" : 512,
      "code" : "if l2 := mheap_.arenas[ai.l1()]; l2 != nil && l2[ai.l2()] != nil {\n\ta := l2[ai.l2()]\n\th.bitp = &a.bitmap[past%heapArenaBitmapBytes]\n\th.last = &a.bitmap[len(a.bitmap)-1]\n} else {\n\th.bitp, h.last = nil, nil\n}",
      "entry" : false,
      "use-vars" : [ 12, 10 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 11 ],
      "in-vars" : [ 8, 0, 10, 3 ],
      "exit" : false,
      "out-vars" : [ 0, 12, 10, 8 ],
      "decl-vars" : [ 12 ],
      "line-start" : 506,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "l2"
          }
        } ],
        "right" : [ {
          "go-type" : 63,
          "index" : {
            "arguments" : [ ],
            "ellipsis" : false,
            "function" : {
              "field" : {
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "l1"
              },
              "go-type" : 113,
              "kind" : "expression",
              "target" : {
                "go-type" : 77,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "ai",
                  "variable" : 10
                }
              },
              "type" : "selector"
            },
            "go-type" : 28,
            "kind" : "expression",
            "type" : "call"
          },
          "kind" : "expression",
          "target" : {
            "field" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "arenas",
              "variable" : 11
            },
            "go-type" : 62,
            "kind" : "expression",
            "target" : {
              "go-type" : 9,
              "kind" : "expression",
              "type" : "identifier",
              "value" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "mheap_",
                "variable" : 3
              }
            },
            "type" : "selector"
          },
          "type" : "index"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 506,
      "code" : "l2 := mheap_.arenas[ai.l1()]",
      "entry" : false,
      "use-vars" : [ 3, 10 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 14 ],
      "in-vars" : [ 8, 0, 12, 10 ],
      "exit" : false,
      "out-vars" : [ 0, 13, 8 ],
      "decl-vars" : [ 13 ],
      "line-start" : 507,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "go-type" : -1,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "NoKind",
            "kind" : "ident",
            "value" : "a"
          }
        } ],
        "right" : [ {
          "go-type" : 65,
          "index" : {
            "arguments" : [ ],
            "ellipsis" : false,
            "function" : {
              "field" : {
                "ident-kind" : "Func",
                "kind" : "ident",
                "value" : "l2"
              },
              "go-type" : 113,
              "kind" : "expression",
              "target" : {
                "go-type" : 77,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "ai",
                  "variable" : 10
                }
              },
              "type" : "selector"
            },
            "go-type" : 28,
            "kind" : "expression",
            "type" : "call"
          },
          "kind" : "expression",
          "target" : {
            "go-type" : 63,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "l2",
              "variable" : 12
            }
          },
          "type" : "index"
        } ],
        "type" : "define"
      },
      "assign-vars" : [ ],
      "line-end" : 507,
      "code" : "a := l2[ai.l2()]",
      "entry" : false,
      "use-vars" : [ 12, 10 ]
    }, {
      "update-vars" : [ 0 ],
      "successors" : [ 15 ],
      "in-vars" : [ 8, 0, 13 ],
      "exit" : false,
      "out-vars" : [ 0, 13 ],
      "decl-vars" : [ ],
      "line-start" : 508,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "bitp",
            "variable" : 5
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "go-type" : 4,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "h",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 105,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "go-type" : 55,
            "index" : {
              "go-type" : 2,
              "kind" : "expression",
              "left" : {
                "go-type" : 2,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "past",
                  "variable" : 8
                }
              },
              "operator" : "%",
              "right" : {
                "go-type" : 2,
                "kind" : "constant",
                "value" : {
                  "type" : "INT",
                  "value" : "2097152"
                }
              },
              "type" : "binary"
            },
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "bitmap",
                "variable" : 14
              },
              "go-type" : 68,
              "kind" : "expression",
              "target" : {
                "go-type" : 65,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "a",
                  "variable" : 13
                }
              },
              "type" : "selector"
            },
            "type" : "index"
          },
          "type" : "unary"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 508,
      "code" : "h.bitp = &a.bitmap[past%heapArenaBitmapBytes]",
      "entry" : false,
      "use-vars" : [ 13, 8, 0 ]
    }, {
      "update-vars" : [ 0 ],
      "successors" : [ 17 ],
      "in-vars" : [ 0, 13 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 509,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "last",
            "variable" : 7
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "go-type" : 4,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "h",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 105,
          "kind" : "expression",
          "operator" : "&",
          "target" : {
            "go-type" : 55,
            "index" : {
              "go-type" : 116,
              "kind" : "constant",
              "value" : {
                "type" : "INT",
                "value" : "2097151"
              }
            },
            "kind" : "expression",
            "target" : {
              "field" : {
                "ident-kind" : "Var",
                "kind" : "ident",
                "value" : "bitmap",
                "variable" : 14
              },
              "go-type" : 68,
              "kind" : "expression",
              "target" : {
                "go-type" : 65,
                "kind" : "expression",
                "type" : "identifier",
                "value" : {
                  "ident-kind" : "Var",
                  "kind" : "ident",
                  "value" : "a",
                  "variable" : 13
                }
              },
              "type" : "selector"
            },
            "type" : "index"
          },
          "type" : "unary"
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 509,
      "code" : "h.last = &a.bitmap[len(a.bitmap)-1]",
      "entry" : false,
      "use-vars" : [ 13, 0 ]
    }, {
      "update-vars" : [ 0 ],
      "successors" : [ 17 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ 0 ],
      "decl-vars" : [ ],
      "line-start" : 511,
      "ast" : {
        "kind" : "statement",
        "left" : [ {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "bitp",
            "variable" : 5
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "go-type" : 4,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "h",
              "variable" : 0
            }
          },
          "type" : "selector"
        }, {
          "field" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "last",
            "variable" : 7
          },
          "go-type" : 6,
          "kind" : "expression",
          "target" : {
            "go-type" : 4,
            "kind" : "expression",
            "type" : "identifier",
            "value" : {
              "ident-kind" : "Var",
              "kind" : "ident",
              "value" : "h",
              "variable" : 0
            }
          },
          "type" : "selector"
        } ],
        "right" : [ {
          "go-type" : 115,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        }, {
          "go-type" : 115,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Nil",
            "kind" : "ident",
            "value" : "nil"
          }
        } ],
        "type" : "assign"
      },
      "assign-vars" : [ ],
      "line-end" : 511,
      "code" : "h.bitp, h.last = nil, nil",
      "entry" : false,
      "use-vars" : [ 0 ]
    }, {
      "update-vars" : [ ],
      "successors" : [ 1 ],
      "in-vars" : [ 0 ],
      "exit" : false,
      "out-vars" : [ ],
      "decl-vars" : [ ],
      "line-start" : 513,
      "ast" : {
        "kind" : "statement",
        "type" : "return",
        "values" : [ {
          "go-type" : 4,
          "kind" : "expression",
          "type" : "identifier",
          "value" : {
            "ident-kind" : "Var",
            "kind" : "ident",
            "value" : "h",
            "variable" : 0
          }
        } ]
      },
      "assign-vars" : [ ],
      "line-end" : 513,
      "code" : "return h",
      "entry" : false,
      "use-vars" : [ 0 ]
    } ],
    "code" : "// forward returns the heapBits describing n pointer-sized words ahead of h in memory.\n// That is, if h describes address p, h.forward(n) describes p+n*ptrSize.\n// h.forward(1) is equivalent to h.next(), just slower.\n// Note that forward does not modify h. The caller must record the result.\n// bits returns the heap bits for the current word.\n//go:nosplit\nfunc (h heapBits) forward(n uintptr) heapBits {\n\tn += uintptr(h.shift) / heapBitsShift\n\tnbitp := uintptr(unsafe.Pointer(h.bitp)) + n/4\n\th.shift = uint32(n%4) * heapBitsShift\n\tif nbitp <= uintptr(unsafe.Pointer(h.last)) {\n\t\th.bitp = (*uint8)(unsafe.Pointer(nbitp))\n\t\treturn h\n\t}\n\n\tpast := nbitp - (uintptr(unsafe.Pointer(h.last)) + 1)\n\th.arena += 1 + uint32(past/heapArenaBitmapBytes)\n\tai := arenaIdx(h.arena)\n\tif l2 := mheap_.arenas[ai.l1()]; l2 != nil && l2[ai.l2()] != nil {\n\t\ta := l2[ai.l2()]\n\t\th.bitp = &a.bitmap[past%heapArenaBitmapBytes]\n\t\th.last = &a.bitmap[len(a.bitmap)-1]\n\t} else {\n\t\th.bitp, h.last = nil, nil\n\t}\n\treturn h\n}",
    "defines" : [ 0 ],
    "functions" : [ {
      "name" : "forward",
      "package" : 0,
      "type" : 0,
      "exported" : false
    }, {
      "name" : "l1",
      "package" : 0,
      "type" : 113,
      "exported" : false
    }, {
      "name" : "l2",
      "package" : 0,
      "type" : 113,
      "exported" : false
    } ],
    "line-end" : 514,
    "line-start" : 493,
    "names" : [ "forward" ],
    "package" : 0,
    "packages" : [ {
      "name" : "runtime",
      "path" : "runtime"
    }, {
      "name" : "unsafe",
      "path" : "unsafe"
    } ],
    "params" : [ 1 ],
    "receivers" : [ 0 ],
    "results" : [ 2 ],
    "type" : "function",
    "types" : [ {
      "name" : "func(n uintptr) runtime.heapBits",
      "params" : 1,
      "recv" : 0,
      "results" : 3,
      "type" : "Signature",
      "underlying" : 0,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "n",
        "type" : 2
      } ],
      "name" : "(n uintptr)",
      "type" : "Tuple",
      "underlying" : 1
    }, {
      "name" : "uintptr",
      "type" : "Basic",
      "underlying" : 2
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 4
      } ],
      "name" : "(runtime.heapBits)",
      "type" : "Tuple",
      "underlying" : 3
    }, {
      "local-name" : "heapBits",
      "name" : "runtime.heapBits",
      "package" : 0,
      "type" : "Named",
      "underlying" : 5
    }, {
      "fields" : [ {
        "name" : "bitp",
        "type" : 6
      }, {
        "name" : "shift",
        "type" : 8
      }, {
        "name" : "arena",
        "type" : 8
      }, {
        "name" : "last",
        "type" : 6
      } ],
      "name" : "struct{bitp *uint8; shift uint32; arena uint32; last *uint8}",
      "type" : "Struct",
      "underlying" : 5
    }, {
      "elem" : 7,
      "name" : "*uint8",
      "type" : "Pointer",
      "underlying" : 6
    }, {
      "name" : "uint8",
      "type" : "Basic",
      "underlying" : 7
    }, {
      "name" : "uint32",
      "type" : "Basic",
      "underlying" : 8
    }, {
      "local-name" : "mheap",
      "name" : "runtime.mheap",
      "package" : 0,
      "type" : "Named",
      "underlying" : 10
    }, {
      "fields" : [ {
        "name" : "lock",
        "type" : 11
      }, {
        "name" : "pages",
        "type" : 13
      }, {
        "name" : "sweepgen",
        "type" : 8
      }, {
        "name" : "sweepdone",
        "type" : 8
      }, {
        "name" : "sweepers",
        "type" : 8
      }, {
        "name" : "allspans",
        "type" : 37
      }, {
        "name" : "sweepSpans",
        "type" : 56
      }, {
        "name" : "pagesInUse",
        "type" : 18
      }, {
        "name" : "pagesSwept",
        "type" : 18
      }, {
        "name" : "pagesSweptBasis",
        "type" : 18
      }, {
        "name" : "sweepHeapLiveBasis",
        "type" : 18
      }, {
        "name" : "sweepPagesPerByte",
        "type" : 60
      }, {
        "name" : "scavengeGoal",
        "type" : 18
      }, {
        "name" : "reclaimIndex",
        "type" : 18
      }, {
        "name" : "reclaimCredit",
        "type" : 2
      }, {
        "name" : "largealloc",
        "type" : 18
      }, {
        "name" : "nlargealloc",
        "type" : 18
      }, {
        "name" : "largefree",
        "type" : 18
      }, {
        "name" : "nlargefree",
        "type" : 18
      }, {
        "name" : "nsmallfree",
        "type" : 61
      }, {
        "name" : "arenas",
        "type" : 62
      }, {
        "name" : "heapArenaAlloc",
        "type" : 71
      }, {
        "name" : "arenaHints",
        "type" : 73
      }, {
        "name" : "arena",
        "type" : 71
      }, {
        "name" : "allArenas",
        "type" : 76
      }, {
        "name" : "sweepArenas",
        "type" : 76
      }, {
        "name" : "curArena",
        "type" : 78
      }, {
        "name" : "_",
        "type" : 8
      }, {
        "name" : "central",
        "type" : 79
      }, {
        "name" : "spanalloc",
        "type" : 84
      }, {
        "name" : "cachealloc",
        "type" : 84
      }, {
        "name" : "specialfinalizeralloc",
        "type" : 84
      }, {
        "name" : "specialprofilealloc",
        "type" : 84
      }, {
        "name" : "speciallock",
        "type" : 11
      }, {
        "name" : "arenaHintAlloc",
        "type" : 84
      }, {
        "name" : "unused",
        "type" : 92
      } ],
      "name" : "struct{lock runtime.mutex; pages runtime.pageAlloc; sweepgen uint32; sweepdone uint32; sweepers uint32; allspans []*runtime.mspan; sweepSpans [2]runtime.gcSweepBuf; pagesInUse uint64; pagesSwept uint64; pagesSweptBasis uint64; sweepHeapLiveBasis uint64; sweepPagesPerByte float64; scavengeGoal uint64; reclaimIndex uint64; reclaimCredit uintptr; largealloc uint64; nlargealloc uint64; largefree uint64; nlargefree uint64; nsmallfree [67]uint64; arenas [1]*[4194304]*runtime.heapArena; heapArenaAlloc runtime.linearAlloc; arenaHints *runtime.arenaHint; arena runtime.linearAlloc; allArenas []runtime.arenaIdx; sweepArenas []runtime.arenaIdx; curArena struct{base uintptr; end uintptr}; _ uint32; central [134]struct{mcentral runtime.mcentral; pad [8]byte}; spanalloc runtime.fixalloc; cachealloc runtime.fixalloc; specialfinalizeralloc runtime.fixalloc; specialprofilealloc runtime.fixalloc; speciallock runtime.mutex; arenaHintAlloc runtime.fixalloc; unused *runtime.specialfinalizer}",
      "type" : "Struct",
      "underlying" : 10
    }, {
      "local-name" : "mutex",
      "name" : "runtime.mutex",
      "package" : 0,
      "type" : "Named",
      "underlying" : 12
    }, {
      "fields" : [ {
        "name" : "key",
        "type" : 2
      } ],
      "name" : "struct{key uintptr}",
      "type" : "Struct",
      "underlying" : 12
    }, {
      "local-name" : "pageAlloc",
      "name" : "runtime.pageAlloc",
      "package" : 0,
      "type" : "Named",
      "underlying" : 14
    }, {
      "fields" : [ {
        "name" : "summary",
        "type" : 15
      }, {
        "name" : "chunks",
        "type" : 19
      }, {
        "name" : "searchAddr",
        "type" : 2
      }, {
        "name" : "scavAddr",
        "type" : 2
      }, {
        "name" : "scavReleased",
        "type" : 2
      }, {
        "name" : "start",
        "type" : 27
      }, {
        "name" : "end",
        "type" : 27
      }, {
        "name" : "inUse",
        "type" : 29
      }, {
        "name" : "mheapLock",
        "type" : 35
      }, {
        "name" : "sysStat",
        "type" : 34
      }, {
        "name" : "test",
        "type" : 36
      } ],
      "name" : "struct{summary [5][]runtime.pallocSum; chunks [8192]*[8192]runtime.pallocData; searchAddr uintptr; scavAddr uintptr; scavReleased uintptr; start runtime.chunkIdx; end runtime.chunkIdx; inUse runtime.addrRanges; mheapLock *runtime.mutex; sysStat *uint64; test bool}",
      "type" : "Struct",
      "underlying" : 14
    }, {
      "elem" : 16,
      "name" : "[5][]runtime.pallocSum",
      "type" : "Array",
      "underlying" : 15
    }, {
      "elem" : 17,
      "name" : "[]runtime.pallocSum",
      "type" : "Slice",
      "underlying" : 16
    }, {
      "local-name" : "pallocSum",
      "name" : "runtime.pallocSum",
      "package" : 0,
      "type" : "Named",
      "underlying" : 18
    }, {
      "name" : "uint64",
      "type" : "Basic",
      "underlying" : 18
    }, {
      "elem" : 20,
      "name" : "[8192]*[8192]runtime.pallocData",
      "type" : "Array",
      "underlying" : 19
    }, {
      "elem" : 21,
      "name" : "*[8192]runtime.pallocData",
      "type" : "Pointer",
      "underlying" : 20
    }, {
      "elem" : 22,
      "name" : "[8192]runtime.pallocData",
      "type" : "Array",
      "underlying" : 21
    }, {
      "local-name" : "pallocData",
      "name" : "runtime.pallocData",
      "package" : 0,
      "type" : "Named",
      "underlying" : 23
    }, {
      "fields" : [ {
        "name" : "pallocBits",
        "type" : 24
      }, {
        "name" : "scavenged",
        "type" : 26
      } ],
      "name" : "struct{runtime.pallocBits; scavenged runtime.pageBits}",
      "type" : "Struct",
      "underlying" : 23
    }, {
      "local-name" : "pallocBits",
      "name" : "runtime.pallocBits",
      "package" : 0,
      "type" : "Named",
      "underlying" : 25
    }, {
      "elem" : 18,
      "name" : "[8]uint64",
      "type" : "Array",
      "underlying" : 25
    }, {
      "local-name" : "pageBits",
      "name" : "runtime.pageBits",
      "package" : 0,
      "type" : "Named",
      "underlying" : 25
    }, {
      "local-name" : "chunkIdx",
      "name" : "runtime.chunkIdx",
      "package" : 0,
      "type" : "Named",
      "underlying" : 28
    }, {
      "name" : "uint",
      "type" : "Basic",
      "underlying" : 28
    }, {
      "local-name" : "addrRanges",
      "name" : "runtime.addrRanges",
      "package" : 0,
      "type" : "Named",
      "underlying" : 30
    }, {
      "fields" : [ {
        "name" : "ranges",
        "type" : 31
      }, {
        "name" : "sysStat",
        "type" : 34
      } ],
      "name" : "struct{ranges []runtime.addrRange; sysStat *uint64}",
      "type" : "Struct",
      "underlying" : 30
    }, {
      "elem" : 32,
      "name" : "[]runtime.addrRange",
      "type" : "Slice",
      "underlying" : 31
    }, {
      "local-name" : "addrRange",
      "name" : "runtime.addrRange",
      "package" : 0,
      "type" : "Named",
      "underlying" : 33
    }, {
      "fields" : [ {
        "name" : "base",
        "type" : 2
      }, {
        "name" : "limit",
        "type" : 2
      } ],
      "name" : "struct{base uintptr; limit uintptr}",
      "type" : "Struct",
      "underlying" : 33
    }, {
      "elem" : 18,
      "name" : "*uint64",
      "type" : "Pointer",
      "underlying" : 34
    }, {
      "elem" : 11,
      "name" : "*runtime.mutex",
      "type" : "Pointer",
      "underlying" : 35
    }, {
      "name" : "bool",
      "type" : "Basic",
      "underlying" : 36
    }, {
      "elem" : 38,
      "name" : "[]*runtime.mspan",
      "type" : "Slice",
      "underlying" : 37
    }, {
      "elem" : 39,
      "name" : "*runtime.mspan",
      "type" : "Pointer",
      "underlying" : 38
    }, {
      "local-name" : "mspan",
      "name" : "runtime.mspan",
      "package" : 0,
      "type" : "Named",
      "underlying" : 40
    }, {
      "fields" : [ {
        "name" : "next",
        "type" : 38
      }, {
        "name" : "prev",
        "type" : 38
      }, {
        "name" : "list",
        "type" : 41
      }, {
        "name" : "startAddr",
        "type" : 2
      }, {
        "name" : "npages",
        "type" : 2
      }, {
        "name" : "manualFreeList",
        "type" : 44
      }, {
        "name" : "freeindex",
        "type" : 2
      }, {
        "name" : "nelems",
        "type" : 2
      }, {
        "name" : "allocCache",
        "type" : 18
      }, {
        "name" : "allocBits",
        "type" : 45
      }, {
        "name" : "gcmarkBits",
        "type" : 45
      }, {
        "name" : "sweepgen",
        "type" : 8
      }, {
        "name" : "divMul",
        "type" : 47
      }, {
        "name" : "baseMask",
        "type" : 47
      }, {
        "name" : "allocCount",
        "type" : 47
      }, {
        "name" : "spanclass",
        "type" : 48
      }, {
        "name" : "state",
        "type" : 49
      }, {
        "name" : "needzero",
        "type" : 7
      }, {
        "name" : "divShift",
        "type" : 7
      }, {
        "name" : "divShift2",
        "type" : 7
      }, {
        "name" : "elemsize",
        "type" : 2
      }, {
        "name" : "limit",
        "type" : 2
      }, {
        "name" : "speciallock",
        "type" : 11
      }, {
        "name" : "specials",
        "type" : 52
      } ],
      "name" : "struct{next *runtime.mspan; prev *runtime.mspan; list *runtime.mSpanList; startAddr uintptr; npages uintptr; manualFreeList runtime.gclinkptr; freeindex uintptr; nelems uintptr; allocCache uint64; allocBits *runtime.gcBits; gcmarkBits *runtime.gcBits; sweepgen uint32; divMul uint16; baseMask uint16; allocCount uint16; spanclass runtime.spanClass; state runtime.mSpanStateBox; needzero uint8; divShift uint8; divShift2 uint8; elemsize uintptr; limit uintptr; speciallock runtime.mutex; specials *runtime.special}",
      "type" : "Struct",
      "underlying" : 40
    }, {
      "elem" : 42,
      "name" : "*runtime.mSpanList",
      "type" : "Pointer",
      "underlying" : 41
    }, {
      "local-name" : "mSpanList",
      "name" : "runtime.mSpanList",
      "package" : 0,
      "type" : "Named",
      "underlying" : 43
    }, {
      "fields" : [ {
        "name" : "first",
        "type" : 38
      }, {
        "name" : "last",
        "type" : 38
      } ],
      "name" : "struct{first *runtime.mspan; last *runtime.mspan}",
      "type" : "Struct",
      "underlying" : 43
    }, {
      "local-name" : "gclinkptr",
      "name" : "runtime.gclinkptr",
      "package" : 0,
      "type" : "Named",
      "underlying" : 2
    }, {
      "elem" : 46,
      "name" : "*runtime.gcBits",
      "type" : "Pointer",
      "underlying" : 45
    }, {
      "local-name" : "gcBits",
      "name" : "runtime.gcBits",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "name" : "uint16",
      "type" : "Basic",
      "underlying" : 47
    }, {
      "local-name" : "spanClass",
      "name" : "runtime.spanClass",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "local-name" : "mSpanStateBox",
      "name" : "runtime.mSpanStateBox",
      "package" : 0,
      "type" : "Named",
      "underlying" : 50
    }, {
      "fields" : [ {
        "name" : "s",
        "type" : 51
      } ],
      "name" : "struct{s runtime.mSpanState}",
      "type" : "Struct",
      "underlying" : 50
    }, {
      "local-name" : "mSpanState",
      "name" : "runtime.mSpanState",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "elem" : 53,
      "name" : "*runtime.special",
      "type" : "Pointer",
      "underlying" : 52
    }, {
      "local-name" : "special",
      "name" : "runtime.special",
      "package" : 0,
      "type" : "Named",
      "underlying" : 54
    }, {
      "fields" : [ {
        "name" : "next",
        "type" : 52
      }, {
        "name" : "offset",
        "type" : 47
      }, {
        "name" : "kind",
        "type" : 55
      } ],
      "name" : "struct{next *runtime.special; offset uint16; kind byte}",
      "type" : "Struct",
      "underlying" : 54
    }, {
      "name" : "byte",
      "type" : "Basic",
      "underlying" : 55
    }, {
      "elem" : 57,
      "name" : "[2]runtime.gcSweepBuf",
      "type" : "Array",
      "underlying" : 56
    }, {
      "local-name" : "gcSweepBuf",
      "name" : "runtime.gcSweepBuf",
      "package" : 0,
      "type" : "Named",
      "underlying" : 58
    }, {
      "fields" : [ {
        "name" : "spineLock",
        "type" : 11
      }, {
        "name" : "spine",
        "type" : 59
      }, {
        "name" : "spineLen",
        "type" : 2
      }, {
        "name" : "spineCap",
        "type" : 2
      }, {
        "name" : "index",
        "type" : 8
      } ],
      "name" : "struct{spineLock runtime.mutex; spine unsafe.Pointer; spineLen uintptr; spineCap uintptr; index uint32}",
      "type" : "Struct",
      "underlying" : 58
    }, {
      "local-name" : "Pointer",
      "name" : "unsafe.Pointer",
      "package" : 1,
      "type" : "Basic",
      "underlying" : 59
    }, {
      "name" : "float64",
      "type" : "Basic",
      "underlying" : 60
    }, {
      "elem" : 18,
      "name" : "[67]uint64",
      "type" : "Array",
      "underlying" : 61
    }, {
      "elem" : 63,
      "name" : "[1]*[4194304]*runtime.heapArena",
      "type" : "Array",
      "underlying" : 62
    }, {
      "elem" : 64,
      "name" : "*[4194304]*runtime.heapArena",
      "type" : "Pointer",
      "underlying" : 63
    }, {
      "elem" : 65,
      "name" : "[4194304]*runtime.heapArena",
      "type" : "Array",
      "underlying" : 64
    }, {
      "elem" : 66,
      "name" : "*runtime.heapArena",
      "type" : "Pointer",
      "underlying" : 65
    }, {
      "local-name" : "heapArena",
      "name" : "runtime.heapArena",
      "package" : 0,
      "type" : "Named",
      "underlying" : 67
    }, {
      "fields" : [ {
        "name" : "bitmap",
        "type" : 68
      }, {
        "name" : "spans",
        "type" : 69
      }, {
        "name" : "pageInUse",
        "type" : 70
      }, {
        "name" : "pageMarks",
        "type" : 70
      }, {
        "name" : "zeroedBase",
        "type" : 2
      } ],
      "name" : "struct{bitmap [2097152]byte; spans [8192]*runtime.mspan; pageInUse [1024]uint8; pageMarks [1024]uint8; zeroedBase uintptr}",
      "type" : "Struct",
      "underlying" : 67
    }, {
      "elem" : 55,
      "name" : "[2097152]byte",
      "type" : "Array",
      "underlying" : 68
    }, {
      "elem" : 38,
      "name" : "[8192]*runtime.mspan",
      "type" : "Array",
      "underlying" : 69
    }, {
      "elem" : 7,
      "name" : "[1024]uint8",
      "type" : "Array",
      "underlying" : 70
    }, {
      "local-name" : "linearAlloc",
      "name" : "runtime.linearAlloc",
      "package" : 0,
      "type" : "Named",
      "underlying" : 72
    }, {
      "fields" : [ {
        "name" : "next",
        "type" : 2
      }, {
        "name" : "mapped",
        "type" : 2
      }, {
        "name" : "end",
        "type" : 2
      } ],
      "name" : "struct{next uintptr; mapped uintptr; end uintptr}",
      "type" : "Struct",
      "underlying" : 72
    }, {
      "elem" : 74,
      "name" : "*runtime.arenaHint",
      "type" : "Pointer",
      "underlying" : 73
    }, {
      "local-name" : "arenaHint",
      "name" : "runtime.arenaHint",
      "package" : 0,
      "type" : "Named",
      "underlying" : 75
    }, {
      "fields" : [ {
        "name" : "addr",
        "type" : 2
      }, {
        "name" : "down",
        "type" : 36
      }, {
        "name" : "next",
        "type" : 73
      } ],
      "name" : "struct{addr uintptr; down bool; next *runtime.arenaHint}",
      "type" : "Struct",
      "underlying" : 75
    }, {
      "elem" : 77,
      "name" : "[]runtime.arenaIdx",
      "type" : "Slice",
      "underlying" : 76
    }, {
      "local-name" : "arenaIdx",
      "name" : "runtime.arenaIdx",
      "package" : 0,
      "type" : "Named",
      "underlying" : 28
    }, {
      "fields" : [ {
        "name" : "base",
        "type" : 2
      }, {
        "name" : "end",
        "type" : 2
      } ],
      "name" : "struct{base uintptr; end uintptr}",
      "type" : "Struct",
      "underlying" : 78
    }, {
      "elem" : 80,
      "name" : "[134]struct{mcentral runtime.mcentral; pad [8]byte}",
      "type" : "Array",
      "underlying" : 79
    }, {
      "fields" : [ {
        "name" : "mcentral",
        "type" : 81
      }, {
        "name" : "pad",
        "type" : 83
      } ],
      "name" : "struct{mcentral runtime.mcentral; pad [8]byte}",
      "type" : "Struct",
      "underlying" : 80
    }, {
      "local-name" : "mcentral",
      "name" : "runtime.mcentral",
      "package" : 0,
      "type" : "Named",
      "underlying" : 82
    }, {
      "fields" : [ {
        "name" : "lock",
        "type" : 11
      }, {
        "name" : "spanclass",
        "type" : 48
      }, {
        "name" : "nonempty",
        "type" : 42
      }, {
        "name" : "empty",
        "type" : 42
      }, {
        "name" : "nmalloc",
        "type" : 18
      } ],
      "name" : "struct{lock runtime.mutex; spanclass runtime.spanClass; nonempty runtime.mSpanList; empty runtime.mSpanList; nmalloc uint64}",
      "type" : "Struct",
      "underlying" : 82
    }, {
      "elem" : 55,
      "name" : "[8]byte",
      "type" : "Array",
      "underlying" : 83
    }, {
      "local-name" : "fixalloc",
      "name" : "runtime.fixalloc",
      "package" : 0,
      "type" : "Named",
      "underlying" : 85
    }, {
      "fields" : [ {
        "name" : "size",
        "type" : 2
      }, {
        "name" : "first",
        "type" : 86
      }, {
        "name" : "arg",
        "type" : 59
      }, {
        "name" : "list",
        "type" : 89
      }, {
        "name" : "chunk",
        "type" : 2
      }, {
        "name" : "nchunk",
        "type" : 8
      }, {
        "name" : "inuse",
        "type" : 2
      }, {
        "name" : "stat",
        "type" : 34
      }, {
        "name" : "zero",
        "type" : 36
      } ],
      "name" : "struct{size uintptr; first func(arg unsafe.Pointer, p unsafe.Pointer); arg unsafe.Pointer; list *runtime.mlink; chunk uintptr; nchunk uint32; inuse uintptr; stat *uint64; zero bool}",
      "type" : "Struct",
      "underlying" : 85
    }, {
      "name" : "func(arg unsafe.Pointer, p unsafe.Pointer)",
      "params" : 87,
      "recv" : -1,
      "results" : 88,
      "type" : "Signature",
      "underlying" : 86,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "arg",
        "type" : 59
      }, {
        "name" : "p",
        "type" : 59
      } ],
      "name" : "(arg unsafe.Pointer, p unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 87
    }, {
      "fields" : [ ],
      "name" : "()",
      "type" : "Tuple",
      "underlying" : 88
    }, {
      "elem" : 90,
      "name" : "*runtime.mlink",
      "type" : "Pointer",
      "underlying" : 89
    }, {
      "local-name" : "mlink",
      "name" : "runtime.mlink",
      "package" : 0,
      "type" : "Named",
      "underlying" : 91
    }, {
      "fields" : [ {
        "name" : "next",
        "type" : 89
      } ],
      "name" : "struct{next *runtime.mlink}",
      "type" : "Struct",
      "underlying" : 91
    }, {
      "elem" : 93,
      "name" : "*runtime.specialfinalizer",
      "type" : "Pointer",
      "underlying" : 92
    }, {
      "local-name" : "specialfinalizer",
      "name" : "runtime.specialfinalizer",
      "package" : 0,
      "type" : "Named",
      "underlying" : 94
    }, {
      "fields" : [ {
        "name" : "special",
        "type" : 53
      }, {
        "name" : "fn",
        "type" : 95
      }, {
        "name" : "nret",
        "type" : 2
      }, {
        "name" : "fint",
        "type" : 98
      }, {
        "name" : "ot",
        "type" : 109
      } ],
      "name" : "struct{special runtime.special; fn *runtime.funcval; nret uintptr; fint *runtime._type; ot *runtime.ptrtype}",
      "type" : "Struct",
      "underlying" : 94
    }, {
      "elem" : 96,
      "name" : "*runtime.funcval",
      "type" : "Pointer",
      "underlying" : 95
    }, {
      "local-name" : "funcval",
      "name" : "runtime.funcval",
      "package" : 0,
      "type" : "Named",
      "underlying" : 97
    }, {
      "fields" : [ {
        "name" : "fn",
        "type" : 2
      } ],
      "name" : "struct{fn uintptr}",
      "type" : "Struct",
      "underlying" : 97
    }, {
      "elem" : 99,
      "name" : "*runtime._type",
      "type" : "Pointer",
      "underlying" : 98
    }, {
      "local-name" : "_type",
      "name" : "runtime._type",
      "package" : 0,
      "type" : "Named",
      "underlying" : 100
    }, {
      "fields" : [ {
        "name" : "size",
        "type" : 2
      }, {
        "name" : "ptrdata",
        "type" : 2
      }, {
        "name" : "hash",
        "type" : 8
      }, {
        "name" : "tflag",
        "type" : 101
      }, {
        "name" : "align",
        "type" : 7
      }, {
        "name" : "fieldAlign",
        "type" : 7
      }, {
        "name" : "kind",
        "type" : 7
      }, {
        "name" : "equal",
        "type" : 102
      }, {
        "name" : "gcdata",
        "type" : 105
      }, {
        "name" : "str",
        "type" : 106
      }, {
        "name" : "ptrToThis",
        "type" : 108
      } ],
      "name" : "struct{size uintptr; ptrdata uintptr; hash uint32; tflag runtime.tflag; align uint8; fieldAlign uint8; kind uint8; equal func(unsafe.Pointer, unsafe.Pointer) bool; gcdata *byte; str runtime.nameOff; ptrToThis runtime.typeOff}",
      "type" : "Struct",
      "underlying" : 100
    }, {
      "local-name" : "tflag",
      "name" : "runtime.tflag",
      "package" : 0,
      "type" : "Named",
      "underlying" : 7
    }, {
      "name" : "func(unsafe.Pointer, unsafe.Pointer) bool",
      "params" : 103,
      "recv" : -1,
      "results" : 104,
      "type" : "Signature",
      "underlying" : 102,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 59
      }, {
        "name" : "",
        "type" : 59
      } ],
      "name" : "(unsafe.Pointer, unsafe.Pointer)",
      "type" : "Tuple",
      "underlying" : 103
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 36
      } ],
      "name" : "(bool)",
      "type" : "Tuple",
      "underlying" : 104
    }, {
      "elem" : 55,
      "name" : "*byte",
      "type" : "Pointer",
      "underlying" : 105
    }, {
      "local-name" : "nameOff",
      "name" : "runtime.nameOff",
      "package" : 0,
      "type" : "Named",
      "underlying" : 107
    }, {
      "name" : "int32",
      "type" : "Basic",
      "underlying" : 107
    }, {
      "local-name" : "typeOff",
      "name" : "runtime.typeOff",
      "package" : 0,
      "type" : "Named",
      "underlying" : 107
    }, {
      "elem" : 110,
      "name" : "*runtime.ptrtype",
      "type" : "Pointer",
      "underlying" : 109
    }, {
      "local-name" : "ptrtype",
      "name" : "runtime.ptrtype",
      "package" : 0,
      "type" : "Named",
      "underlying" : 111
    }, {
      "fields" : [ {
        "name" : "typ",
        "type" : 99
      }, {
        "name" : "elem",
        "type" : 98
      } ],
      "name" : "struct{typ runtime._type; elem *runtime._type}",
      "type" : "Struct",
      "underlying" : 111
    }, {
      "name" : "untyped bool",
      "type" : "Basic",
      "underlying" : 112
    }, {
      "name" : "func() uint",
      "params" : 88,
      "recv" : -1,
      "results" : 114,
      "type" : "Signature",
      "underlying" : 113,
      "variadic" : false
    }, {
      "fields" : [ {
        "name" : "",
        "type" : 28
      } ],
      "name" : "(uint)",
      "type" : "Tuple",
      "underlying" : 114
    }, {
      "name" : "untyped nil",
      "type" : "Basic",
      "underlying" : 115
    }, {
      "name" : "int",
      "type" : "Basic",
      "underlying" : 116
    } ],
    "variables" : [ {
      "name" : "h",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "n",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "[res0]",
      "package" : 0,
      "type" : 4,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "mheap_",
      "package" : 0,
      "type" : 9,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "shift",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "bitp",
      "package" : 0,
      "type" : 6,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "nbitp",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "last",
      "package" : 0,
      "type" : 6,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "past",
      "package" : 0,
      "type" : 2,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "arena",
      "package" : 0,
      "type" : 8,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "ai",
      "package" : 0,
      "type" : 77,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "arenas",
      "package" : 0,
      "type" : 62,
      "exported" : false,
      "embedded" : false,
      "field" : true
    }, {
      "name" : "l2",
      "package" : 0,
      "type" : 63,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "a",
      "package" : 0,
      "type" : 65,
      "exported" : false,
      "embedded" : false,
      "field" : false
    }, {
      "name" : "bitmap",
      "package" : 0,
      "type" : 68,
      "exported" : false,
      "embedded" : false,
      "field" : true
    } ]
  },
  "go-version" : "1.14.3"
}